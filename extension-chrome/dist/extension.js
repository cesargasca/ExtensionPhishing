(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){

},{}],2:[function(require,module,exports){
///////////////////////////////////////////
// gmail.js
// Kartik Talwar
// https://github.com/KartikTalwar/gmail.js
//

/*eslint-env es6*/

var Gmail = function(localJQuery) {

    /*
      Use the provided "jQuery" if possible, in order to avoid conflicts with
      other extensions that use $ for other purposes.
    */
    var $;
    if (typeof localJQuery !== "undefined") {
        $ = localJQuery;
    } else if (typeof jQuery !== "undefined") {
        $ = jQuery;
    } else {
        // try load jQuery through node.
        try {
            $ = require("jquery");
        }
        catch(err) {
            // else leave $ undefined, which may be fine for some purposes.
        }
    }

    var window_opener = typeof (window) !== "undefined" ? window.opener : null;
    if (window_opener) {
        try {
            // access to window.opener domain will fail in case of cross-origin access
            var opener_domain = window_opener.document.domain;
            if (opener_domain !== window.document.domain) {
                console.warn("GmailJS: window.opener domain differs from window domain.");
                window_opener = null;
            }
        } catch (error) {
            console.warn("GmailJS: Unable to access window.opener!", error);
            window_opener = null;
        }
    }

    var api = {
        get : {},
        observe : {},
        check : { data: {}},
        tools : {},
        tracker : {},
        dom : {},
        chat : {},
        compose : {},
        helper : {get: {}}
    };

    api.version           = "0.8.0";
    api.tracker.globals   = typeof GLOBALS !== "undefined"
        ? GLOBALS
        : (
            window_opener && window_opener.GLOBALS || []
        );
    api.tracker.view_data = typeof VIEW_DATA !== "undefined"
        ? VIEW_DATA
        : (
            window_opener && window_opener.VIEW_DATA || []
        );
    api.tracker.ik        = api.tracker.globals[9] || "";
    api.tracker.hangouts  = undefined;

    // cache-store for passively pre-fetched/intercepted email-data from load_email_data.
    api.cache = {};
    api.cache.debug_xhr_fetch = false;
    api.cache.emailIdCache = {};
    api.cache.emailLegacyIdCache = {};
    api.cache.threadCache = {};

    api.get.last_active = function() {
        var data = api.tracker.globals[17][15];
        return {
            time : data[1],
            ip : data[3],
            mac_address : data[9],
            time_relative : data[10]
        };
    };


    api.get.loggedin_accounts = function() {
        var i, j, data;
        var users = [];

        var globals17 = api.tracker.globals[17];
        for (i in globals17) {
            // at least for the delegated inboxes, the index of the mla is not stable
            // it was observed to be somewhere between 22 and 24, but we should not depend on it
            data = globals17[i];

            if (data[0] === "mla") {
                for(j in data[1]) {
                    users.push({
                        name : data[1][j][4],
                        email : data[1][j][0],
                        index: data[1][j][3]
                    });
                }

                return users;
            }
        }

        return users;
    };


    api.get.user_email = function() {
        return api.tracker.globals[10];
    };


    api.get.manager_email = function() {
        if (api.helper.get.is_delegated_inbox()) {
            return api.get.delegated_to_email();
        }

        return api.get.user_email();
    };


    api.get.delegated_to_email = function() {
        if (!api.helper.get.is_delegated_inbox()) {
            return null;
        }

        var i, account;
        var userIndexPrefix = "/u/";
        var pathname = window.location.pathname;
        var delegatedToUserIndex = parseInt(pathname.substring(pathname.indexOf(userIndexPrefix) + userIndexPrefix.length), 10);

        var loggedInAccounts = api.get.loggedin_accounts();
        if (loggedInAccounts && loggedInAccounts.length > 0) {
            for (i in loggedInAccounts) {
                account = loggedInAccounts[i];
                if (account.index === delegatedToUserIndex) {
                    return account.email;
                }
            }
        }

        // as a last resort, we query the DOM of the upper right account selection menu
        return $(".gb_rb[href$='" + userIndexPrefix + delegatedToUserIndex + "'] .gb_yb").text().split(" ")[0];
    };

    api.helper.get.is_locale = function(locale) {
        // A locale is a string that begins with 2 letters, either lowercase or uppercase
        // The "lowercase" check distinguishes locales from other 2-letter strings like "US"
        // (the user"s location?).
        if (!locale || ((typeof locale) !== "string") || locale.length < 2) {
            return false;
        }

        if (locale.match(/[0-9]/)) {
            return false;
        }

        var localePrefix = locale.slice(0, 2);
        return localePrefix.toLowerCase() === localePrefix ||
            localePrefix.toUpperCase() === localePrefix;
    };

    api.helper.filter_locale = function(locale) {
        if (!api.helper.get.is_locale(locale)) {
            return null;
        }

        // strip region-denominator
        return locale.substring(0,2).toLowerCase();
    };

    api.helper.array_starts_with = function(list, item) {
        if (list && list.length > 0 && list[0] === item) {
            return true;
        } else {
            return false;
        }
    };

    api.helper.get.array_sublist = function(nestedArray, itemKey) {
        if (nestedArray) {
            for(var i=0; i<nestedArray.length; i++) {
                var list = nestedArray[i];
                if (api.helper.array_starts_with(list, itemKey)) {
                    return list;
                }
            }
        }

        return null;
    };

    api.helper.get.locale_from_url_params = function(value) {
        // check if is URL
        if (value && value.indexOf && (value.indexOf("https://") === 0 || value.indexOf("http://") === 0)) {
            var urlParts = value.split("?");
            if (urlParts.length > 1) {
                var hash = urlParts[1];
                var hashParts = hash.split("&");
                for (var i=0; i < hashParts.length; i++)
                {
                    var kvp = hashParts[i].split("=");
                    if (kvp.length === 2 && kvp[0] === "hl") {
                        return kvp[1];
                    }
                }
            }
        }

        return null;
    };

    api.helper.get.locale_from_globals_item = function(list) {
        if (!list) {
            return null;
        }

        for (var i=0; i<list.length; i++) {
            var item = list[i];
            var locale = api.helper.get.locale_from_url_params(item);
            if (locale) {
                return locale;
            }
        }

        // fallback to user-locale
        return list[8];
    };

    api.get.localization = function() {
        var globals = api.tracker.globals;

        // candidate is globals[17]-subarray which starts with "ui"
        // has historically been observed as [7], [8] and [9]!
        var localeList = api.helper.get.array_sublist(globals[17], "ui");
        if (localeList !== null && localeList.length > 8) {
            let locale = api.helper.get.locale_from_globals_item(localeList);
            locale = api.helper.filter_locale(locale);
            if (locale) {
                return locale;
            }
        }

        // in new gmail, globals[12] may contain a link to an help-article, with a hl= language-code
        if (globals[12] !== null) {
            let locale = api.helper.get.locale_from_url_params(globals[12]);
            locale = api.helper.filter_locale(locale);
            if (locale) {
                return locale;
            }
        }

        return null;
    };

    api.check.is_new_data_layer = function () {
        return window["GM_SPT_ENABLED"] === "true";
    };

    api.check.is_new_gui = function () {
        return window.GM_RFT_ENABLED === "true";
    };

    api.check.is_thread = function() {
        var check_1 = $(".nH .if").children(":eq(1)").children().children(":eq(1)").children();
        var check_2 = api.get.email_ids();

        return check_1.length > 1 || check_2.length > 1;
    };


    api.dom.inbox_content = function() {
        return $("div[role=main]:first");
    };


    api.check.is_preview_pane = function() {
        var dom = api.dom.inbox_content();
        var boxes = dom.find("[gh=tl]");

        var previewPaneFound = false;
        boxes.each(function() {
            if($(this).hasClass("aia")) {
                previewPaneFound = true;
            }
        });

        return previewPaneFound;
    };

    api.check.is_multiple_inbox = function() {
        var dom = api.dom.inboxes();
        return dom.length > 1;
    };


    api.check.is_horizontal_split = function() {
        var dom = api.dom.inbox_content();
        var box = dom.find("[gh=tl]").find(".nn");

        return box.length === 0;
    };


    api.check.is_vertical_split = function() {
        return api.check.is_horizontal_split() === false;
    };


    api.check.is_tabbed_inbox = function() {
        return $(".aKh").length === 1;
    };


    api.check.is_right_side_chat = function() {
        var chat = $(".ApVoH");
        if(chat.length === 0) {
            return false;
        }

        return chat[0].getAttribute("aria-labelledby") === ":wf";
    };

    api.check.should_compose_fullscreen = function(){
        console.warn("gmail.js: This function is known to be unreliable, and may be deprecated in a future release.");
        var bx_scfs = [];
        try {
            bx_scfs = api.tracker.globals[17][4][1][32];
        } catch(er) {
            bx_scfs = ["bx_scfs","false"];
        }
        return (bx_scfs[1] === "true" ) ? true : false;
    };


    api.check.is_google_apps_user =function() {
        var email = api.get.user_email();
        return email.indexOf("gmail.com", email.length - "gmail.com".length) === -1;
    };


    api.get.storage_info = function() {
        var div = $(".md.mj").find("div")[0];
        var used = $(div).find("span")[0].text;
        var total = $(div).find("span")[1].text;
        var percent = parseFloat(used.replace(/[^0-9\.]/g, "")) * 100 / parseFloat(total.replace(/[^0-9\.]/g, ""));

        return {used : used, total : total, percent : Math.floor(percent)};
    };


    api.dom.inboxes = function() {
        var dom = api.dom.inbox_content();
        return dom.find("[gh=tl]");
    };

    api.dom.email_subject = function () {
        var e = $(".hP");

        for(var i=0; i<e.length; i++) {
            if($(e[i]).is(":visible")) {
                return $(e[i]);
            }
        }

        return $();
    };


    api.get.email_subject = function() {
        var subject_dom = api.dom.email_subject();

        return subject_dom.text();
    };


    api.dom.email_body = function() {
        return $(".nH.hx");
    };

    api.dom.toolbar = function() {
        var tb = $("[gh='mtb']");

        while($(tb).children().length === 1){
            tb = $(tb).children().first();
        }

        return tb;
    };

    api.dom.right_toolbar = function() {
        var rtb = $("[gh='tm'] [gh='s']").parent();

        while($(rtb).children().length === 1){
            rtb = $(rtb).children().first();
        }

        return rtb;
    };

    api.check.is_inside_email = function() {
        if(api.get.current_page() !== "email" && !api.check.is_preview_pane()) {
            return false;
        }

        var items = $(".ii.gt .a3s.aXjCH");
        var ids = [];

        for(var i=0; i<items.length; i++) {
            var mail_id = items[i].getAttribute("class").split(" ")[2];
            if(mail_id !== "undefined" && mail_id !== undefined) {
                ids.push(items[i]);
            }
        }

        return ids.length > 0;
    };

    api.check.is_plain_text = function() {
        var settings = api.tracker.globals[17][4][1];

        for (var i = 0; i < settings.length; i++) {
            var plain_text_setting = settings[i];
            if (plain_text_setting[0] === "bx_cm") {
                return plain_text_setting[1] === "0";
            }
        }

        // default to rich text mode, which is more common nowadays
        return false;
    };

    api.dom.email_contents = function() {
        var items = $(".ii.gt div.a3s.aXjCH");
        var ids = [];

        for(var i=0; i<items.length; i++) {
            var mail_id = items[i].getAttribute("class").split(" ")[2];
            var is_editable = items[i].getAttribute("contenteditable");
            if(mail_id !== "undefined" && mail_id !== undefined) {
                if(is_editable !== "true") {
                    ids.push(items[i]);
                }
            }
        }

        return ids;
    };


    api.get.email_ids = function() {
        if(api.check.is_inside_email()) {
            var data = api.get.email_data();
            return Object.keys(data.threads);
        }
        return [];
    };


    api.get.compose_ids = function() {
        var ret = [];
        var dom = $(".M9 [name=draft]");
        for(var i = 0; i < dom.length; i++) {
            if(dom[i].value !== "undefined"){
                ret.push(dom[i].value);
            }
        }
        return ret;
    };

    api.get.thread_id = function() {
        // multiple elements contains this attribute, but only the visible header of the visible email is a H2!
        const elem = document.querySelector("h2[data-legacy-thread-id]");
        if (elem !== null) {
            return elem.dataset.legacyThreadId;
        }
        else {
            // URL-based analysis is unreliable!
            return undefined;
        }
    };

    api.get.email_id = function() {
        console.warn("GmailJS: api.get.email_id() invoked. Please note this function actually returns thread-id, and that email-id and thread-id may not always be used interchangably! Use api.get.thread_id() instead to silence this warning.");
        return api.get.thread_id();
    };

    api.check.is_priority_inbox = function() {
        return $(".qh").length > 0;
    };


    api.check.is_rapportive_installed = function() {
        return $("#rapportive-sidebar").length === 1;
    };


    api.check.is_streak_installed = function() {
        return $("[id^='bentoBox'],[id*=' bentoBox'],[class*=' bentoBox'],[class*='bentoBox']").length > 0;
    };


    api.check.is_anydo_installed = function() {
        return $("[id^='anydo'],[id*=' anydo'],[class*=' anydo'],[class*='anydo']").length > 0;
    };


    api.check.is_boomerang_installed = function() {
        return $("[id^='b4g_'],[id*=' b4g_'],[class*=' b4g_'],[class*='b4g_']").length > 0;
    };


    api.check.is_xobni_installed = function() {
        return $("#xobni_frame").length > 0;
    };


    api.check.is_signal_installed = function() {
        return $("[id^='Signal'],[id*=' Signal'],[class*=' signal'],[class*='signal']").length > 0;
    };


    api.check.are_shortcuts_enabled = function() {
        var flag_name = "bx_hs";
        var flag_value = undefined;

        var check = true; // Flag possibly missing in convo view.

        var array_with_flag = api.tracker.globals[17][4][1];

        for(var i=0; i<array_with_flag.length; i++) {
            var current = array_with_flag[i];

            if(current[0] === flag_name) {
                flag_value = current[1];
                break;
            }
        }

        if(flag_value !== undefined) {
            var values = {
                "0": true,
                "1": false
            };

            check = values[flag_value];
        }

        return check;
    };


    api.dom.get_left_sidebar_links = function() {
        return $("div[role=navigation] [title]");
    };

    api.dom.header = function() {
        return $("#gb");
    };

    api.dom.search_bar = function() {
        return $("[gh=sb]");
    };


    api.get.search_query = function() {
        var dom = api.dom.search_bar();
        return dom.find("input")[0].value;
    };


    api.get.unread_inbox_emails = function() {
        return api.helper.get.navigation_count("inbox");
    };


    api.get.unread_draft_emails = function() {
        return api.helper.get.navigation_count("drafts");
    };


    api.get.unread_spam_emails = function() {
        return api.helper.get.navigation_count("spam");
    };


    api.get.unread_forum_emails = function() {
        return api.helper.get.navigation_count("forums");
    };


    api.get.unread_update_emails = function() {
        return api.helper.get.navigation_count("updates");
    };


    api.get.unread_promotion_emails = function() {
        return api.helper.get.navigation_count("promotions");
    };


    api.get.unread_social_emails = function() {
        return api.helper.get.navigation_count("social_updates");
    };

    api.helper.get.navigation_count = function(i18nName) {
        const title = api.tools.i18n(i18nName);
        const dom = $("div[role=navigation]").find("[title*='" + title + "']");

        if (dom || dom.length > 0) {
            // this check should implicitly always be true, but better safe than sorry?
            if(dom[0].title.indexOf(title) !== -1) {
                const value = parseInt(dom[0].attributes['aria-label'].value.replace(/[^0-9]/g, ""));
                if (!isNaN(value)) {
                    return value;
                }
            }
        }

        return 0;
    };


    api.get.beta = function() {
        var features = {
            "new_nav_bar" : $("#gbz").length === 0
        };

        return features;
    };


    api.get.unread_emails = function() {
        return {
            inbox         : api.get.unread_inbox_emails(),
            drafts        : api.get.unread_draft_emails(),
            spam          : api.get.unread_spam_emails(),
            forum         : api.get.unread_forum_emails(),
            update        : api.get.unread_update_emails(),
            promotions    : api.get.unread_promotion_emails(),
            social        : api.get.unread_social_emails()
        };
    };


    api.tools.error = function(str) {
        if (console) {
            console.error(str);
        } else {
            throw(str);
        }
    };

    api.tools.parse_url = function(url) {
        var regex = /[?&]([^=#]+)=([^&#]*)/g;
        var params = {};
        var match = regex.exec(url);

        while (match) {
            params[match[1]] = match[2];
            match = regex.exec(url);
        }

        return params;
    };

    api.tools.sleep = function(milliseconds) {
        var start = new Date().getTime();
        while(true) {
            if ((new Date().getTime() - start) > milliseconds){
                break;
            }
        }
    };


    api.tools.multitry = function(delay, tries, func, check, counter, retval) {
        if(counter !== undefined && counter >= tries) {
            return retval;
        }

        counter = (counter === undefined) ? 0 : counter;

        var value = func();

        if(check(value)) {
            return value;
        } else {
            api.tools.sleep(delay);
            api.tools.multitry(delay, tries, func, check, counter+1, value);
        }
    };


    api.tools.deparam = function (params, coerce) {

        var each = function (arr, fnc) {
            var data = [];
            for (var i = 0; i < arr.length; i++) {
                data.push(fnc(arr[i]));
            }
            return data;
        };

        var isArray = Array.isArray || function(obj) {
            return Object.prototype.toString.call(obj) === "[object Array]";
        };

        var obj = {},
            coerce_types = {
                "true": !0,
                "false": !1,
                "null": null
            };
        each(params.replace(/\+/g, " ").split("&"), function (v, j) {
            var param = v.split("="),
                key = decodeURIComponent(param[0]),
                val,
                cur = obj,
                i = 0,
                keys = key.split("]["),
                keys_last = keys.length - 1;
            if (/\[/.test(keys[0]) && /\]$/.test(keys[keys_last])) {
                keys[keys_last] = keys[keys_last].replace(/\]$/, "");
                keys = keys.shift().split("[").concat(keys);
                keys_last = keys.length - 1;
            } else {
                keys_last = 0;
            }
            if (param.length === 2) {
                val = decodeURIComponent(param[1]);
                if (coerce) {
                    val = val && !isNaN(val) ? +val : val === "undefined" ? undefined : coerce_types[val] !== undefined ? coerce_types[val] : val;
                }
                if (keys_last) {
                    for (; i <= keys_last; i++) {
                        key = keys[i] === "" ? cur.length : keys[i];
                        cur = cur[key] = i < keys_last ? cur[key] || (keys[i + 1] && isNaN(keys[i + 1]) ? {} : []) : val;
                    }
                } else {
                    if (isArray(obj[key])) {
                        obj[key].push(val);
                    } else if (obj[key] !== undefined) {
                        obj[key] = [obj[key], val];
                    } else {
                        obj[key] = val;
                    }
                }
            } else if (key) {
                obj[key] = coerce ? undefined : "";
            }
        });
        return obj;
    };

    api.tools.get_pathname_from_url = function(url) {
        if (typeof(document) !== "undefined") {
            const a = document.createElement("a");
            a.href = url;
            return a.pathname;
        } else {
            return url;
        }
    };

    api.tools.parse_actions = function(params, xhr) {

        // upload_attachment event - if found, don"t check other observers. See issue #22
        if(params.url.act === "fup" || params.url.act === "fuv" || params.body_is_object) {
            return params.body_is_object && api.observe.bound("upload_attachment") ? { upload_attachment: [ params.body_params ] } : false; // trigger attachment event
        }

        if(params.url.search !== undefined) {
            // console.log(params.url, params.body, params.url_raw);
        }

        var triggered = {}; // store an object of event_name: [response_args] for events triggered by parsing the actions
        var action_map = {
            "tae"         : "add_to_tasks",
            "rc_^i"       : "archive",
            "tr"          : "delete",
            "dm"          : "delete_message_in_thread",
            "dl"          : "delete_forever",
            "dc_"         : "delete_label",
            "dr"          : "discard_draft",
            "el"          : "expand_categories",
            "cffm"        : "filter_messages_like_these",
            "arl"         : "label",
            "mai"         : "mark_as_important",
            "mani"        : "mark_as_not_important",
            "us"          : "mark_as_not_spam",
            "sp"          : "mark_as_spam",
            "mt"          : "move_label",
            "ib"          : "move_to_inbox",
            "ig"          : "mute",
            "rd"          : "read",
            "sd"          : "save_draft",
            "sm"          : "send_message",
            "mo"          : "show_newly_arrived_message",
            "st"          : "star",
            "cs"          : "undo_send",
            "ug"          : "unmute",
            "ur"          : "unread",
            "xst"         : "unstar",
            "new_mail"    : "new_email",
            "poll"        : "poll",
            "refresh"     : "refresh",
            "rtr"         : "restore_message_in_thread",
            "open_email"  : "open_email",
            "toggle_threads"  : "toggle_threads"
        };

        if(typeof params.url.ik === "string") {
            api.tracker.ik = params.url.ik;
        }

        if(typeof params.url.at === "string") {
            api.tracker.at = params.url.at;
        }

        if(typeof params.url.rid === "string") {
            if(params.url.rid.indexOf("mail") !== -1) {
                api.tracker.rid = params.url.rid;
            }
        }

        var action      = decodeURIComponent(params.url.act);
        var sent_params = params.body_params;
        var email_ids   = (typeof sent_params.t === "string") ? [sent_params.t] : sent_params.t;
        var response    = null;

        switch(action) {
        case "cs":
        case "ur":
        case "rd":
        case "tr":
        case "sp":
        case "us":
        case "ib":
        case "dl":
        case "st":
        case "xst":
        case "mai":
        case "mani":
        case "ig":
        case "ug":
        case "dr":
        case "mt":
        case "cffm":
        case "rc_^i":
            response = [email_ids, params.url, params.body];
            break;

        case "arl":
        case "dc_":
            response = [email_ids, params.url, params.body, params.url.acn];
            break;

        case "sd":
            response = [email_ids, params.url, sent_params];
            break;

        case "tae":
        case "sm":
            response = [params.url, params.body, sent_params];
            break;

        case "el":
            response = [params.url, params.body, sent_params.ex === "1"];
            break;

        case "dm":
        case "rtr":
        case "mo":
            response = [sent_params.m, params.url, params.body];
            break;

        }

        if(typeof params.url._reqid === "string" && params.url.view === "tl" && params.url.auto !== undefined) {
            response = [params.url.th, params.url, params.body];
            if(api.observe.bound("new_email")) {
                triggered.new_email = response;
            }
        }

        if((params.url.view === "cv" || params.url.view === "ad") && typeof params.url.th === "string" && typeof params.url.search === "string" && params.url.rid === undefined) {
            response = [params.url.th, params.url, params.body];
            if(api.observe.bound("open_email")) {
                triggered.open_email = response;
            }
        }

        if((params.url.view === "cv" || params.url.view === "ad") && typeof params.url.th === "object" && typeof params.url.search === "string" && params.url.rid !== undefined) {
            response = [params.url.th, params.url, params.body];
            if(api.observe.bound("toggle_threads")) {
                triggered.toggle_threads = response;
            }
        }

        if((params.url.view === "cv" || params.url.view === "ad") && typeof params.url.th === "string" && typeof params.url.search === "string" && params.url.rid !== undefined) {
            if(params.url.msgs !== undefined) {
                response = [params.url.th, params.url, params.body];
                if(api.observe.bound("toggle_threads")) {
                    triggered.toggle_threads = response;
                }
            }
        }

        if(typeof params.url.SID === "string" && typeof params.url.zx === "string" && params.body.indexOf("req0_") !== -1) {
            api.tracker.SID = params.url.SID;
            response = [params.url, params.body, sent_params];
            if(api.observe.bound("poll")) {
                triggered.poll = response;
            }
        }

        if(typeof params.url.ik === "string" && typeof params.url.search === "string" && params.body.length === 0 && typeof params.url._reqid === "string") {
            response = [params.url, params.body, sent_params];
            if(api.observe.bound("refresh")) {
                triggered.refresh = response;
            }
        }

        if(response && action_map[action] && api.observe.bound(action_map[action])) {
            triggered[action_map[action]] = response;
        }

        if(params.method === "POST" && (typeof params.url.SID === "string"
                                       || typeof params.url.ik === "string"
                                       || typeof params.url.act === "string")) {
            triggered.http_event = [params]; // send every event and all data
        }

        // handle new data-format introduced with new gmail 2018.
        if (api.check.is_new_data_layer()) {
            api.tools.parse_request_payload(params, triggered);
        }

        return triggered;
    };

    api.check.data.is_thread_id = function(id) {
        return id
            && typeof id === "string"
            && /^thread-[a|f]:/.test(id);
    };

    api.check.data.is_thread = function(obj) {
        return obj
            && typeof obj === "object"
            && obj["1"]
            && api.check.data.is_thread_id(obj["1"]);
    };

    api.check.data.is_email_id = function(id) {
        return id
            && typeof id === "string"
            && id.indexOf('bump-') === -1
            && /^msg-[a|f]:/.test(id);
    };

    api.check.data.is_email = function(obj) {
        return obj
            && typeof obj === "object"
            && obj["1"]
            && api.check.data.is_email_id(obj["1"]);
    };

    api.check.data.is_legacy_email_id = function(id) {
        return id
            && typeof id === "string"
            && /^[0-9a-f]{16,}$/.test(id);
    };

    api.check.data.is_action = function(obj) {
        return api.check.data.is_first_type_action(obj)
            || api.check.data.is_second_type_action(obj);
    };

    api.check.data.is_first_type_action = function(obj) {
        return obj
            && obj["1"]
            && Array.isArray(obj["1"])
            && obj["1"].length === 1
            && typeof obj["1"]["0"] === 'string';
    };

    api.check.data.is_second_type_action = function(obj) {
        return obj
            && obj["2"]
            && Array.isArray(obj["2"])
            && obj["2"].length
            && typeof obj["2"]["0"] === 'string';
    };

    api.check.data.is_smartlabels_array = function(obj) {
        const isNotArray = !obj || !Array.isArray(obj) ||obj.length === 0;
        if (isNotArray) {
            return false;
        }

        for (let item of obj) {
            if (typeof item !== "string") {
                return false;
            }

            if (!/^\^[a-z]+/.test(item)) {
                return false;
            }
        }

        return true;
    };

    /**
       A lightweight check to see if a object (most likely) is a JSON-string.
    */
    api.check.data.is_json_string = function(obj) {
        if (!obj || typeof obj !== "string") {
            return false;
        }

        let str = obj.trim();
        return ((str.startsWith("{") && str.endsWith("}"))
            || (str.startsWith("[") && str.endsWith("]")));
    };

    api.tools.get_thread_id = function(obj) {
        return api.check.data.is_thread(obj)
            && obj["1"];
    };

    api.tools.get_thread_data = function(obj) {
        return obj
            && obj["2"]
            && typeof obj["2"] === "object"
            && obj["2"]["7"]
            && typeof obj["2"]["7"] === "object"
            && obj["2"]["7"];
    };

    api.tools.get_action = function(obj) {
        return api.tools.get_first_type_action(obj)
            || api.tools.get_second_type_action(obj);
    };

    api.tools.get_first_type_action = function(obj) {
        return obj
            && obj[1]
            && obj[1].join('');
    };

    api.tools.get_second_type_action = function(obj) {
        return obj
            && obj[2]
            && obj[2].join('');
    };

    api.tools.get_message_ids = function(obj) {
        return obj
            && obj["3"]
            && Array.isArray(obj["3"])
            && obj["3"];
    };

    api.tools.extract_from_graph = function(obj, predicate) {
        const result = [];

        const safePredicate = function(item) {
            try {
                return predicate(item);
            }
            catch (err) {
                return false;
            }
        };

        const forEachGraph = function(obj) {
            // check root-node too!
            if (safePredicate(obj)) {
                result.push(obj);
                return;
            }

            for (let key in obj) {
                let item = obj[key];

                if (safePredicate(item)) {
                    result.push(item);
                    continue;
                }

                // special-case digging for arrays!
                if (Array.isArray(item)) {
                    for (let listItem of item) {
                        forEachGraph(listItem, obj);
                    }
                } else if (typeof item === "object") {
                    // keep on digging.
                    forEachGraph(item);
                }
            }
        };

        forEachGraph(obj);
        return result;
    };

    api.tools.check_event_type = function(threadObj) {
        const action_map = {
            // ""            : "add_to_tasks",
            "^a": "archive",
            "^k": "delete",
            // ""            : "delete_message_in_thread",
            // ""            : "delete_forever",
            // ""            : "delete_label",
            // ""            : "discard_draft",
            // ""            : "expand_categories",
            // ""            : "filter_messages_like_these",
            // ""            : "label",
            // "^io_im^imi": "mark_as_important",
            // "^imn": "mark_as_not_important",
            // ""            : "mark_as_not_spam",
            // ""            : "mark_as_spam",
            // ""            : "move_label",
            // ""            : "move_to_inbox",
            // ""            : "mute",
            "^u^us": "read",
            // ""            : "save_draft",
            // ""            : "send_message",
            // ""            : "show_newly_arrived_message",
            // "^t^ss_sy": "star",
            // ""            : "undo_send",
            // ""            : "unmute",
            "^u"            : "unread",
            // "^t^ss_sy^ss_so^ss_sr^ss_sp^ss_sb^ss_sg^ss_cr^ss_co^ss_cy^ss_cg^ss_cb^ss_cp": "unstar",
            "^us"            : "new_email",
            // ""            : "poll",
            // ""            : "refresh",
            // ""            : "restore_message_in_thread",
            "^o": "open_email",
            // ""            : "toggle_threads"
        };
        const threadData = api.tools.get_thread_data(threadObj);

        if (threadData && api.check.data.is_action(threadData)) {
            const action = api.tools.get_action(threadData);

            return action_map[action];
        } else {
            return null;
        }
    };

    api.tools.parse_fd_email = function(json) {
        if (!json || !Array.isArray(json)) {
            return [];
        }

        const res = [];

        for (let item of json) {
            res.push(api.tools.parse_fd_email2(item));
        }

        return res;
    };

    api.tools.parse_fd_email2 = function(item) {
        try
        {
            return {
                name: item["3"],
                address: item["2"]
            };
        }
        catch (e) {
            return null;
        }
    };

    api.tools.parse_fd_attachments = function(json) {
        let res = [];

        if (Array.isArray(json)) {
            for (let item of json) {
                let data = item["1"]["4"] || "";

                res.push({
                    attachment_id: item["1"]["2"],
                    name: data["3"],
                    type: data["4"],
                    url: api.tools.check_fd_attachment_url(data["2"]),
                    size: Number.parseInt(data["5"])
                });
            }
        }

        return res;
    };

    api.tools.check_fd_attachment_url = function(url) {
        var userAccountUrlPart = api.tracker.globals[7];
        if (url && userAccountUrlPart && url.indexOf(userAccountUrlPart) < 0) {
            url = url.replace('/mail/?', userAccountUrlPart + '?');
        }

        return url;
    };

    api.tools.parse_fd_request_html_payload = function(fd_email) {
        let fd_email_content_html = null;
        try {
            const fd_html_containers = fd_email["2"]["6"]["2"];

            for (let fd_html_container of fd_html_containers) {
                fd_email_content_html = (fd_email_content_html || "") + fd_html_container["3"]["2"];
            }
        }
        catch(e) {
            // don't crash gmail when we cant parse email-contents
        }

        return fd_email_content_html;
    };

    api.tools.parse_fd_request_payload_get_email2 = function(fd_thread_container, fd_email_id) {
        try {
            const fd_emails2 = fd_thread_container["2"]["2"];
            const fd_email2 = fd_emails2.filter(i => i["1"] === fd_email_id);
            return fd_email2[0];
        }
        catch (e) {
            return {};
        }
    };

    api.tools.parse_fd_request_payload = function(json) {
        // ensure JSON-format is known and understood?
        let thread_root = json["2"];
        if (!thread_root || !Array.isArray(thread_root)) {
            return null;
        }

        try
        {
            const res = [];

            const fd_threads = thread_root; // array
            for (let fd_thread_container of fd_threads) {
                const fd_thread_id = fd_thread_container["1"];

                let fd_emails = fd_thread_container["3"]; // array
                for (let fd_email of fd_emails) {
                    //console.log(fd_email)
                    const fd_email_id = fd_email["1"];

                    // detailed to/from-fields must be obtained through the -other- email message node.
                    const fd_email2 = api.tools.parse_fd_request_payload_get_email2(fd_thread_container, fd_email_id);

                    const fd_legacy_email_id = fd_email["2"]["35"];
                    const fd_email_smtp_id = fd_email["2"]["8"];

                    const fd_email_subject = fd_email["2"]["5"];
                    const fd_email_timestamp = Number.parseInt(fd_email["2"]["17"]);
                    const fd_email_date = new Date(fd_email_timestamp);

                    const fd_email_content_html = api.tools.parse_fd_request_html_payload(fd_email);

                    const fd_attachments = api.tools.parse_fd_attachments(fd_email["2"]["14"]);

                    const fd_email_sender_address = fd_email["2"]["11"]["17"];

                    let fd_from = api.tools.parse_fd_email2(fd_email2["2"]);
                    if (!fd_from) {
                        fd_from = { address: fd_email_sender_address, name: "" };
                    }

                    const fd_to = api.tools.parse_fd_email(fd_email["2"]["1"]);
                    const fd_cc = api.tools.parse_fd_email(fd_email["2"]["2"]);
                    const fd_bcc = api.tools.parse_fd_email(fd_email["2"]["3"]);

                    const email = {
                        id: fd_email_id,
                        legacy_email_id: fd_legacy_email_id,
                        thread_id: fd_thread_id,
                        smtp_id: fd_email_smtp_id,
                        subject: fd_email_subject,
                        timestamp: fd_email_timestamp,
                        content_html: fd_email_content_html,
                        date: fd_email_date,
                        from: fd_from,
                        to: fd_to,
                        cc: fd_cc,
                        bcc: fd_bcc,
                        attachments: fd_attachments
                    };
                    if (api.cache.debug_xhr_fetch) {
                        email["$email_node"] = fd_email;
                        email["$thread_node"] = fd_thread_container;
                    }
                    //console.log(email);
                    res.push(email);
                }
            }

            return res;
        }
        catch (error) {
            console.warn("Gmail.js encountered an error trying to parse email-data!", error);
            return null;
        }
    };

    api.tools.parse_sent_message_html_payload = function(sent_email) {
        let sent_email_content_html = null;
        try {
            const sent_html_containers = sent_email["9"]["2"];

            for (let sent_html_container of sent_html_containers) {
                sent_email_content_html = (sent_email_content_html || "") + sent_html_container["2"];
            }
        }
        catch(e) {
            // don't crash gmail when we cant parse email-contents
        }

        return sent_email_content_html;
    };

    api.tools.parse_sent_message_attachments = function(json) {
        let res = [];

        if (Array.isArray(json)) {
            for (let item of json) {

                res.push({
                    id: item["5"],
                    name: item["2"],
                    type: item["1"],
                    url: item["6"],
                    size: Number.parseInt(item["3"])
                });
            }
        }

        return res;
    };

    api.tools.parse_sent_message_payload = function(json) {
        try
        {
            let sent_email = json;
            //console.log(sent_email);

            const sent_email_id = sent_email["1"];

            const sent_email_subject = sent_email["8"];
            const sent_email_timestamp = Number.parseInt(sent_email["7"]);
            const sent_email_date = new Date(sent_email_timestamp);

            const sent_email_content_html = api.tools.parse_sent_message_html_payload(sent_email);
            const sent_email_ishtml = sent_email["9"]["7"];

            const sent_attachments = api.tools.parse_sent_message_attachments(sent_email["12"]);

            const sent_from = api.tools.parse_fd_email2(sent_email["2"]);
            const sent_to = api.tools.parse_fd_email(sent_email["3"]);
            const sent_cc = api.tools.parse_fd_email(sent_email["4"]);
            const sent_bcc = api.tools.parse_fd_email(sent_email["5"]);

            const email = {
                1: sent_email_id,
                id: sent_email_id,
                subject: sent_email_subject,
                timestamp: sent_email_timestamp,
                content_html: sent_email_content_html,
                ishtml: sent_email_ishtml,
                date: sent_email_date,
                from: sent_from,
                to: sent_to,
                cc: sent_cc,
                bcc: sent_bcc,
                attachments: sent_attachments,
                email_node: json
            };

            return email;
        }
        catch (error) {
            console.warn("Gmail.js encountered an error trying to parse sent message!", error);
            return null;
        }
    };

    api.tools.parse_request_payload = function(params, events, force) {
        const pathname = api.tools.get_pathname_from_url(params.url_raw);
        if (!force && !pathname) {
            return;
        }

        const isSynch = (pathname || "").endsWith("/i/s");
        const isFetch = (pathname || "").endsWith("/i/fd");
        if (!force && !isFetch && !isSynch) {
            return;
        }

        if (isFetch) {
            // register event, so that after triggers (where we parse response-data) gets triggered.
            events.load_email_data = [null];
        }

        const threads = api.tools.extract_from_graph(params, api.check.data.is_thread);
        // console.log("Threads:");
        // console.log(threads);
        const emails = api.tools.extract_from_graph(params, api.check.data.is_email);
        // console.log("Emails:");
        // console.log(emails);

        for (let email of emails) {
            // console.log("Email:");
            // console.log(email);
            for (let key in email) {
                let prop = email[key];
                if (api.check.data.is_smartlabels_array(prop)) {
                    let sent_email = api.tools.parse_sent_message_payload(email);
                    if (prop.indexOf("^pfg") !== -1) {
                        events.send_message = [params.url, params.body, sent_email];
                    } else if (prop.indexOf("^scheduled") > -1) {
                        events.send_scheduled_message = [params.url, params.body, sent_email];
                    }
                }
            }
        }

        try {
            if (Array.isArray(threads) && api.check.data.is_thread(threads[0])) {
                const actionType = api.tools.check_event_type(threads[0]);

                if (actionType) {
                    // console.log(threads[0]);
                    const threadsData = threads.map(thread => api.tools.get_thread_data(thread));

                    const new_thread_ids = threads.map(thread => api.tools.get_thread_id(thread));
                    const new_email_ids = threadsData.map(threadData => api.tools.get_message_ids(threadData)).reduce((a, b) => a.concat(b), []);
                    events[actionType] = [null, params.url, params.body, new_email_ids, new_thread_ids];
                }
            }
        } catch (e) {
            console.error('Error: ', e);
        }
    };

    api.tools.parse_response = function(response) {
        // first try parse as pure json!
        if (api.check.data.is_json_string(response)) {
            try {
                let json = JSON.parse(response);
                return json;
            } catch(err) {
                // ignore, and fallback to old implementation!
            }
        }

        // early XHR interception also means we intercept HTML, CSS, JS payloads. etc
        // dont crash on those.
        if (response.startsWith("<!DOCTYPE html")
            || response.indexOf("display:inline-block") !== -1
        ) {
            return [];
        }

        let parsedResponse = [];
        let originalResponse = response;
        try {
            // gmail post response structure
            // )}]"\n<datalength><rawData>\n<dataLength><rawData>...

            // prepare response, remove eval protectors
            response = response.replace(/\n/g, " ");
            response = response.substring(response.indexOf("'") + 1, response.length);

            while(response.replace(/\s/g, "").length > 1) {

                // how long is the data to get
                let dataLength = response.substring(0, response.indexOf("[")).replace(/\s/g, "");
                if (!dataLength) {dataLength = response.length;}

                let endIndex = (parseInt(dataLength, 10) - 2) + response.indexOf("[");
                let data = response.substring(response.indexOf("["), endIndex);

                let json = JSON.parse(data);
                parsedResponse.push(json);

                // prepare response for next loop
                response = response.substring(response.indexOf("["), response.length);
                response = response.substring(data.length, response.length);
            }
        } catch (e) {
            // console.log("GmailJS post response-parsing failed.", e, originalResponse);
        }

        return parsedResponse;
    };

    /**
       parses a download_url attribute from the attachments main span-element.
     */
    api.tools.parse_attachment_url = function(url) {
        var parts = url.split(":");
        return {
            type: parts[0],
            url: parts[2] + ":" + parts[3]
        };
    };

    /**
       Node-friendly function to extend objects without depending on jQuery
       (which requires a browser-context)
       */
    var extend = function(target, extension) {
        for (var key in extension) {
            target[key] = extension[key];
        }
    };

    /**
       Node-friendly function to merge arrays without depending on jQuery
       (which requires a browser-context).

       All subsequent arrays are merged into the first one, to match
       $.merge's behaviour.
    */
    var merge = function(target, mergee) {

        for (var i=0; i < mergee.length; i++) {
            var value = mergee[i];
            target.push(value);
        }

        return target;
    };

    api.tools.parse_requests = function(params, xhr) {
        params.url_raw = params.url;
        params.url = api.tools.parse_url(params.url);
        if(typeof params.body === "object") {
            params.body_params = params.body;
            params.body_is_object = true;
        } else if (api.check.data.is_json_string(params.body)) {
            params.body_params = JSON.parse(params.body);
        } else if (params.body !== undefined) {
            params.body_params = api.tools.deparam(params.body);
        } else {
            params.body_params = {};
        }

        if(typeof api.tracker.events !== "object" && typeof api.tracker.actions !== "object") {
            api.tracker.events  = [];
            api.tracker.actions = [];
        }

        api.tracker.events.unshift(params);
        var events = api.tools.parse_actions(params, xhr);

        if(params.method === "POST" && typeof params.url.act === "string") {
            api.tracker.actions.unshift(params);
        }

        if(api.tracker.events.length > 50) {
            api.tracker.events.pop();
        }

        if(api.tracker.actions.length > 10) {
            api.tracker.actions.pop();
        }
        return events;
    };

    api.tools.patch = function(patchee, patch) {
        patch(patchee);
    };


    api.tools.cache_email_data = function(email_data) {
        if (email_data === null) {
            return;
        }

        const c = api.cache;

        for (let email of email_data) {
            // cache email directly on IDs
            c.emailIdCache[email.id] = email;
            c.emailLegacyIdCache[email.legacy_email_id] = email;

            // ensure we have a thread-object before appending emails to it!
            let thread = c.threadCache[email.thread_id];
            if (!thread) {
                thread = {
                    thread_id: email.thread_id,
                    emails: []
                };
                c.threadCache[email.thread_id] = thread;
            }

            // only append email to cache if not already there.
            if (thread.emails.filter(i => i.id === email.id).length === 0) {
                thread.emails.push(email);
            }
        }
    };

    api.tools.xhr_watcher = function () {
        if (api.tracker.xhr_init) {
            return;
        }

        api.tracker.xhr_init = true;

        const win = api.helper.get_xhr_window();

        api.tools.patch(win.XMLHttpRequest.prototype.open, (orig) => {
            win.XMLHttpRequest.prototype.open = function (method, url, async, user, password) {
                var out = orig.apply(this, arguments);
                this.xhrParams = {
                    method: method.toString(),
                    url: url.toString()
                };
                return out;
            };
        });

        api.tools.patch(win.XMLHttpRequest.prototype.send, (orig) => {
            win.XMLHttpRequest.prototype.send = function (body) {
                // parse the xhr request to determine if any events should be triggered
                var events = false;
                if (this.xhrParams) {
                    this.xhrParams.body = body;
                    events = api.tools.parse_requests(this.xhrParams, this);
                }

                // fire before events
                if(api.observe.trigger("before", events, this)) {

                    // if before events were fired, rebuild arguments[0]/body strings
                    // TODO: recreate the url if we want to support manipulating url args (is there a use case where this would be needed?)
                    if (api.check.is_new_data_layer()) {
                        body = arguments[0] = this.xhrParams.body_is_object ? this.xhrParams.body_params : JSON.stringify(this.xhrParams.body_params);
                    } else {
                        body = arguments[0] = this.xhrParams.body_is_object ? this.xhrParams.body_params : $.param(this.xhrParams.body_params,true).replace(/\+/g, "%20");
                    }
                }

                // if any matching after events, bind onreadystatechange callback
                // also: on new gmail we want to intercept email-data from /i/fd-request responses.
                if(api.observe.bound(events, "after") || api.check.is_new_data_layer()) {
                    var curr_onreadystatechange = this.onreadystatechange;
                    var xhr = this;
                    this.onreadystatechange = function(progress) {
                        if (this.readyState === this.DONE) {
                            if (progress.target.responseType === "" || progress.target.responseType === "text") {
                                xhr.xhrResponse = api.tools.parse_response(progress.target.responseText);
                            } else {
                                xhr.xhrResponse = progress.target.response;
                            }

                            // intercept email-data passively, instead of actively trying to fetch it later!
                            // (which we won't be able to do once 2019 hits anyway...)
                            if (api.check.is_new_data_layer()) {
                                if (api.tools.get_pathname_from_url(xhr.xhrParams.url_raw).endsWith("/i/fd")) {
                                    let parsed_emails = api.tools.parse_fd_request_payload(xhr.xhrResponse);
                                    api.tools.cache_email_data(parsed_emails);
                                    events.load_email_data = [parsed_emails];
                                }
                            }
                            api.observe.trigger("after", events, xhr);
                        }
                        if (curr_onreadystatechange) {
                            curr_onreadystatechange.apply(this, arguments);
                        }
                    };
                }

                // send the original request
                var out = orig.apply(this, arguments);

                // fire on events
                api.observe.trigger("on", events, this);
                return out;
            };
        });
    };

    api.helper.get_xhr_window = function() {
        var js_frame = null;

        if (top.document.getElementById("js_frame")){
            js_frame = top.document.getElementById("js_frame");
        } else if (window_opener) {
            js_frame = window_opener.top.document.getElementById("js_frame");
        }
        if (!js_frame){
            if (window_opener) {
                js_frame = window_opener.top;
            } else {
                js_frame = top;
            }
        }
        var win;
        if (js_frame.contentDocument) {
            win = js_frame.contentDocument.defaultView;
        } else {
            win = js_frame;
        }
        return win;
    };


    api.observe.http_requests = function() {
        return api.tracker.events;
    };


    api.observe.actions = function() {
        return api.tracker.actions;
    };

    /**
       Bind a specified callback to an array of callbacks against a specified type & action
    */
    api.observe.bind = function(type, action, callback) {

        // set up watchdog data structure
        if(typeof api.tracker.watchdog !== "object") {
            api.tracker.watchdog = {
                before: {},
                on: {},
                after: {},
                dom: {}
            };
            api.tracker.bound = {};
        }
        if(typeof api.tracker.watchdog[type] !== "object") {
            api.tools.error("api.observe.bind called with invalid type: " + type);
        }

        // ensure we are watching xhr requests
        if(type !== "dom") {
            api.tools.xhr_watcher();
        }

        // add callback to an array in the watchdog
        if(typeof api.tracker.watchdog[type][action] !== "object") {
            api.tracker.watchdog[type][action] = [];
        }
        api.tracker.watchdog[type][action].push(callback);

        // allow checking for bound events to specific action/type as efficiently as possible (without in looping) - bit dirtier code,
        // but lookups (api.observer.bound) are executed by the hundreds & I think the extra efficiency is worth the tradeoff
        api.tracker.bound[action] = typeof api.tracker.bound[action] === "undefined" ? 1 : api.tracker.bound[action]+1;
        api.tracker.bound[type] = typeof api.tracker.bound[type] === "undefined" ? 1 : api.tracker.bound[type]+1;
        //api.tracker.watchdog[action] = callback;
    };

    /**
       an on event is observed just after gmail sends an xhr request
    */
    api.observe.on = function(action, callback, response_callback) {

        // check for DOM observer actions, and if none found, the assume an XHR observer
        if(api.observe.on_dom(action, callback)) return true;

        // bind xhr observers
        api.observe.bind("on", action, callback);
        if (response_callback) {
            api.observe.after(action, callback);
        }
    };

    /**
       an before event is observed just prior to the gmail xhr request being sent
       before events have the ability to modify the xhr request before it is sent
    */
    api.observe.before = function(action, callback) {
        api.observe.bind("before", action, callback);
    };

    /**
       an after event is observed when the gmail xhr request returns from the server
       with the server response
    */
    api.observe.after = function(action, callback) {
        api.observe.bind("after", action, callback);
    };

    /**
       Checks if a specified action & type has anything bound to it
       If type is null, will check for this action bound on any type
       If action is null, will check for any actions bound to a type
    */
    api.observe.bound = function(action, type) {
        if (typeof api.tracker.watchdog !== "object") return false;
        if (action) {

            // if an object of actions (triggered events of format { event: [response] }) is passed, check if any of these are bound
            if(typeof action === "object") {
                var match = false;
                $.each(action,function(key,response){
                    if(typeof api.tracker.watchdog[type][key] === "object") match = true;
                });
                return match;
            }
            if(type) return typeof api.tracker.watchdog[type][action] === "object";
            return api.tracker.bound[action] > 0;
        } else {
            if(type) return api.tracker.bound[type] > 0;
            api.tools.error("api.observe.bound called with invalid args");
        }
    };

    /**
       Clear all callbacks for a specific type (before, on, after, dom) and action
       If action is null, all actions will be cleared
       If type is null, all types will be cleared
    */
    api.observe.off = function(action, type) {

        // if watchdog is not set, bind has not yet been called so nothing to turn off
        if(typeof api.tracker.watchdog !== "object") return true;

        // loop through applicable types
        var types = type ? [ type ] : [ "before", "on", "after", "dom" ];
        $.each(types, function(idx, type) {
            if(typeof api.tracker.watchdog[type] !== "object") return true; // no callbacks for this type

            // if action specified, remove any callbacks for this action, otherwise remove all callbacks for all actions
            if(action) {
                if(typeof api.tracker.watchdog[type][action] === "object") {
                    api.tracker.bound[action] -= api.tracker.watchdog[type][action].length;
                    api.tracker.bound[type] -= api.tracker.watchdog[type][action].length;
                    delete api.tracker.watchdog[type][action];
                }
            } else {
                $.each(api.tracker.watchdog[type], function(act,callbacks) {
                    if(typeof api.tracker.watchdog[type][act] === "object") {
                        api.tracker.bound[act] -= api.tracker.watchdog[type][act].length;
                        api.tracker.bound[type] -= api.tracker.watchdog[type][act].length;
                        delete api.tracker.watchdog[type][act];
                    }
                });
            }
        });
    };

    /**
       Trigger any specified events bound to the passed type
       Returns true or false depending if any events were fired
    */
    api.observe.trigger = function(type, events, xhr) {
        if(!events) return false;
        var fired = false;
        $.each(events, function(action,response) {

            // we have to do this here each time to keep backwards compatibility with old response_callback implementation
            response = $.extend([], response); // break the reference so it doesn"t keep growing each trigger
            if(type === "after") response.push(xhr.xhrResponse); // backwards compat for after events requires we push onreadystatechange parsed response first
            response.push(xhr);
            if(api.observe.bound(action, type)) {
                fired = true;
                $.each(api.tracker.watchdog[type][action], function(idx, callback) {
                    callback.apply(undefined, response);
                });
            }
        });
        return fired;
    };

    /**
       Trigger any specified DOM events passing a specified element & optional handler
    */
    api.observe.trigger_dom = function(observer, element, handler) {

        // if no defined handler, just call the callback
        if (!handler) {
            handler = function(match, callback) {
                callback(match);
            };
        }
        if (!api.tracker.watchdog.dom[observer]) {
            return;
        }
        $.each(api.tracker.watchdog.dom[observer], function(idx, callback) {
            handler(element, callback);
        });
    };

    // pre-configured DOM observers
    // map observers to DOM class names
    // as elements are inserted into the DOM, these classes will be checked for and mapped events triggered,
    // receiving "e" event object, and a jquery bound inserted DOM element
    // NOTE: supported observers must be registered in the supported_observers array as well as the dom_observers config
    // Config example: event_name: {
    //                   class: "className", // required - check for this className in the inserted DOM element
    //                   selector: "div.className#myId", // if you need to match more than just the className of a specific element to indicate a match, you can use this selector for further checking (uses element.is(selector) on matched element). E.g. if there are multiple elements with a class indicating an observer should fire, but you only want it to fire on a specific id, then you would use this
    //                   sub_selector: "div.className", // if specified, we do a jquery element.find for the passed selector on the inserted element and ensure we can find a match
    //                   handler: function( matchElement, callback ) {} // if specified this handler is called if a match is found. Otherwise default calls the callback & passes the jQuery matchElement
    //                 },
    // TODO: current limitation allows only 1 action per watched className (i.e. each watched class must be
    //       unique). If this functionality is needed this can be worked around by pushing actions to an array
    //       in api.tracker.dom_observer_map below
    // console.log( "Observer set for", action, callback);
    api.observe.initialize_dom_observers = function() {
        api.tracker.dom_observer_init = true;
        api.tracker.supported_observers = ["view_thread", "view_email", "load_email_menu", "recipient_change", "compose"];
        api.tracker.dom_observers = {

            // when a thread is clicked on in a mailbox for viewing - note: this should fire at a similar time (directly after) as the open_email XHR observer
            // which is triggered by the XHR request rather than nodes being inserted into the DOM (and thus returns different information)
            "view_thread": {
                class: ["Bu", "nH"], // class depends if is_preview_pane - Bu for preview pane, nH for standard view
                sub_selector: "div.if",
                handler: function(match, callback) {
                    match = new api.dom.thread(match);
                    callback(match);
                }
            },

            // when an individual email is loaded within a thread (also fires when thread loads displaying the latest email)
            "view_email": {
                // class depends if is_preview_pane - Bu for preview pane, nH for standard view,
                // the empty class ("") is for emails opened after thread is rendered.
                class: ["Bu", "nH", ""],
                sub_selector: "div.adn",
                handler: function(match, callback) {
                    match = new api.dom.email(match);
                    callback(match);
                }
            },

            // when the dropdown menu next to the reply button is inserted into the DOM when viewing an email
            "load_email_menu": {
                class: "J-N",
                selector: "div[role=menu] div[role=menuitem]:first-child", // use the first menu item in the popoup as the indicator to trigger this observer
                handler: function(match, callback) {
                    match = match.closest("div[role=menu]");
                    callback(match);
                }
            },

            // a new email address is added to any of the to,cc,bcc fields when composing a new email or replying/forwarding
            "recipient_change": {
                class: "vR",
                handler: function(match, callback) {
                    // console.log("compose:recipient handler called",match,callback);

                    // we need to small delay on the execution of the handler as when the recipients field initialises on a reply (or reinstated compose/draft)
                    // then multiple DOM elements will be inserted for each recipient causing this handler to execute multiple times
                    // in reality we only want a single callback, so give other nodes time to be inserted & then only execute the callback once
                    if(typeof api.tracker.recipient_matches !== "object") {
                        api.tracker.recipient_matches = [];
                    }
                    api.tracker.recipient_matches.push(match);
                    setTimeout(function(){
                        // console.log("recipient timeout handler", api.tracker.recipient_matches.length);
                        if(!api.tracker.recipient_matches.length) return;

                        // determine an array of all emails specified for To, CC and BCC and extract addresses into an object for the callback
                        var compose = new api.dom.compose(api.tracker.recipient_matches[0].closest("div.M9"));
                        var recipients = compose.recipients();
                        callback(compose, recipients, api.tracker.recipient_matches);

                        // reset matches so no future delayed instances of this function execute
                        api.tracker.recipient_matches = [];
                    },100);
                }
            },

            // this will fire if a new compose, reply or forward is created. it won"t fire if a reply changes to a forward & vice versa
            // passes a type of compose, reply, or forward to the callback
            "compose": {
                class: "An", // M9 would be better but this isn"t set at the point of insertion
                handler: function(match, callback) {
                    // console.log("reply_forward handler called", match, callback);

                    var originalMatch = match;
                    // look back up the DOM tree for M9 (the main reply/forward node)
                    match = match.closest("div.M9");
                    if (!match.length) return;
                    match = new api.dom.compose(match);
                    var type;
                    if (match.is_inline()) {
                        type = match.find("input[name=subject]").val().indexOf("Fw") === 0 ? "forward" : "reply";
                    } else {
                        type = "compose";

                        //Find the close button and set an event listener so we can forward the compose_cancelled event.
                        var composeWindow = originalMatch.closest("div.AD");
                        composeWindow.find(".Ha").mouseup(function() {
                            if(api.tracker.composeCancelledCallback) {
                                api.tracker.composeCancelledCallback(match);
                            }
                            return true;
                        });

                    }
                    callback(match,type);
                }
            }
        };

        // support extending with custom observers
        if (api.tracker.custom_supported_observers) {
            $.merge(api.tracker.supported_observers, api.tracker.custom_supported_observers);
            $.extend(true, api.tracker.dom_observers, api.tracker.custom_dom_observers); // deep copy to copy in sub_observers where relevant
        }

        // map observed classNames to actions
        api.tracker.dom_observer_map = {};
        $.each(api.tracker.dom_observers, function(act,config){
            if(!$.isArray(config.class)) config.class = [config.class];
            $.each(config.class, function(idx, className) {
                if (!api.tracker.dom_observer_map[className]) {
                    api.tracker.dom_observer_map[className] = [];
                }
                api.tracker.dom_observer_map[className].push(act);
            });
        });
        //console.log( "observer_config", api.tracker.dom_observers, "dom_observer_map", api.tracker.dom_observer_map);
    };

    /**
       Allow an application to register a custom DOM observer specific to their app.
       Adds it to the configured DOM observers and is supported by the dom insertion observer
       This method can be called two different ways:
       Args:
       action - the name of the new DOM observer
       className / args - for a simple observer, this arg can simply be the class on an inserted DOM element that identifies this event should be
       triggered. For a more complicated observer, this can be an object containing properties for each of the supported DOM observer config arguments
    */
    api.observe.register = function(action, args) {

        // check observers configured
        if (api.tracker.dom_observer_init) {
            api.tools.error("Error: Please register all custom DOM observers before binding handlers using gmail.observe.on etc");
        }
        if (!api.tracker.custom_supported_observers) {
            api.tracker.custom_supported_observers = [];
            api.tracker.custom_dom_observers = {};
        }

        // was an object of arguments passed, or just a className
        var config = {};
        if (typeof args === "object" && !$.isArray(args)) {

            // copy over supported config
            $.each(["class","selector","sub_selector","handler"], function(idx, arg) {
                if(args[arg]) {
                    config[arg] = args[arg];
                }
            });
        } else {
            config["class"] = args;
        }
        api.tracker.custom_supported_observers.push(action);
        api.tracker.custom_dom_observers[action] = config;
    };

    /**
       Observe DOM nodes being inserted. When a node with a class defined in api.tracker.dom_observers is inserted,
       trigger the related event and fire off any relevant bound callbacks
       This function should return true if a dom observer is found for the specified action
    */
    api.observe.on_dom = function(action, callback) {

        // check observers configured
        if(!api.tracker.dom_observer_init) {
            api.observe.initialize_dom_observers();
        }

        // support for DOM observers
        if($.inArray(action, api.tracker.supported_observers) > -1) {

            //console.log("observer found",api.tracker.dom_observers[action]);

            // if we haven"t yet bound the DOM insertion observer, do it now
            if(!api.tracker.observing_dom) {
                api.tracker.observing_dom = true;
                //api.tracker.dom_watchdog = {}; // store passed observer callbacks for different DOM events

                // this listener will check every element inserted into the DOM
                // for specified classes (as defined in api.tracker.dom_observers above) which indicate
                // related actions which need triggering
                $(window.document).on("DOMNodeInserted", function(e) {
                    api.tools.insertion_observer(e.target, api.tracker.dom_observers, api.tracker.dom_observer_map);
                });

                // recipient_change also needs to listen to removals
                var mutationObserver = new MutationObserver(function(mutations) {
                    for (var i = 0; i < mutations.length; i++) {
                        var mutation = mutations[i];
                        var removedNodes = mutation.removedNodes;
                        for (var j = 0; j < removedNodes.length; j++) {
                            var removedNode = removedNodes[j];
                            if (removedNode.className === "vR") {
                                var observer = api.tracker.dom_observer_map["vR"];
                                var handler = api.tracker.dom_observers.recipient_change.handler;
                                api.observe.trigger_dom(observer, $(mutation.target), handler);
                            }
                        }
                    }
                });
                mutationObserver.observe(document.body, {subtree: true, childList: true});

            }
            api.observe.bind("dom",action,callback);
            // console.log(api.tracker.observing_dom,"dom_watchdog is now:",api.tracker.dom_watchdog);
            return true;

            // support for gmail interface load event
        }
        else if(action === "compose_cancelled") {
            console.log("set compose cancelled callback");
            api.tracker.composeCancelledCallback = callback;
        }
        else if(action === "load") {

            // wait until the gmail interface has finished loading and then
            // execute the passed handler. If interface is already loaded,
            // then will just execute callback
            if(api.dom.inbox_content().length) return callback();
            var load_count = 0;
            var delay = 200; // 200ms per check
            var attempts = 50; // try 50 times before giving up & assuming an error
            var timer = setInterval(function() {
                var test = api.dom.inbox_content().length;
                if(test > 0) {
                    clearInterval(timer);
                    return callback();
                } else if(++load_count > attempts) {
                    clearInterval(timer);
                    console.log("Failed to detect interface load in " + (delay*attempts/1000) + " seconds. Will automatically fire event in 5 further seconds.");
                    setTimeout(callback, 5000);
                }
            }, delay);
            return true;
        }
    };

    // observes every element inserted into the DOM by Gmail and looks at the classes on those elements,
    // checking for any configured observers related to those classes
    api.tools.insertion_observer = function(target, dom_observers, dom_observer_map, sub) {
        //console.log("insertion", target, target.className);
        if(!api.tracker.dom_observer_map) return;

        // loop through each of the inserted elements classes & check for a defined observer on that class
        var cn = target.className || "";
        var classes = cn.trim ? cn.trim().split(/\s+/) : [];
        if(!classes.length) classes.push(""); // if no class, then check for anything observing nodes with no class
        $.each(classes, function(idx, className) {
            var observers = dom_observer_map[className];
            if (!observers) {
                return;
            }

            for (var observer of observers) {

                // check if this is a defined observer, and callbacks are bound to that observer
                if(observer && api.tracker.watchdog.dom[observer]) {
                    var element = $(target);
                    var config = dom_observers[observer];

                    // if a config id specified for this observer, ensure it matches for this element
                    if(config.selector && !element.is(config.selector)) {
                        return;
                    }

                    // check for any defined sub_selector match - if not found, then this is not a match for this observer
                    // if found, then set the matching element to be the one that matches the sub_selector
                    if(config.sub_selector) {
                        element = element.find(config.sub_selector);
                        // console.log("checking for subselector", config.sub_selector, element);
                    }

                    // if an element has been found, execute the observer handler (or if none defined, execute the callback)
                    if(element.length) {

                        var handler = config.handler ? config.handler : function(match, callback) { callback(match); };
                        // console.log( "inserted DOM: class match in watchdog",observer,api.tracker.watchdog.dom[observer] );
                        api.observe.trigger_dom(observer, element, handler);
                    }
                }
            }
        });
    };


    api.tools.make_request = function (_link, method, disable_cache) {
        var link = decodeURIComponent(_link.replace(/%23/g, "#-#-#"));
        method  = method || "GET";

        link = encodeURI(link).replace(/#-#-#/gi, "%23");
        var config = {type: method, url: link, async: false, dataType:"text"};
        if (disable_cache) {
            config.cache = false;
        }
        var request = $.ajax(config);
        return request.responseText;
    };


    api.tools.make_request_async = function (_link, method, callback, error_callback, disable_cache) {
        var link = decodeURIComponent(_link.replace(/%23/g, "#-#-#"));
        method  = method || "GET";

        link = encodeURI(link).replace(/#-#-#/gi, "%23");
        var config = {type: method, url: link, async: true, dataType: "text"};
        if (disable_cache){
            config.cache = false;
        }
        $.ajax(config)
            .done(function(data, textStatus, jqxhr) {
                callback(jqxhr.responseText);
            })
            .fail(function(jqxhr, textStatus, errorThrown) {
                console.error("Request Failed", errorThrown);
                if (typeof error_callback === 'function'){
                    error_callback(jqxhr, textStatus, errorThrown);
                }
            });
    };

    /**
       Creates a request to download user-content from Gmail.
       This can be used to download email_source or attachments.

       Set `preferBinary` to receive data as an Uint8Array which is unaffected
       by string-parsing or resolving of text-encoding.

       This is required in order to correctly download attachments!
    */
    api.tools.make_request_download_promise = function (url, preferBinary) {
        // if we try to download the same email/url several times,
        // something weird happens with our cookies, causing the 302
        // redirect to mail-attachment.googleusercontent.com (MAGUC)
        // to redirect back to mail.google.com.
        //
        // mail.google.com does NOT have CORS-headers for MAGUC, so
        // this redirect (and thus our request) fails.
        //
        // Adding a random variable with a constantly changing value defeats
        // any cache, and seems to solve our problem.
        const timeStamp = Date.now();
        url += "&cacheCounter=" + timeStamp;

        let responseType = "text";
        if (preferBinary) {
            responseType = "arraybuffer";
        }

        // now go download!
        return new Promise((resolve, reject) => {
            const request = new XMLHttpRequest();
            request.open("GET", url, true);
            request.responseType = responseType;

            request.onreadystatechange = () => {
                if (request.readyState !== XMLHttpRequest.DONE) {
                    return;
                }

                if (request.status >= 200 && request.status <= 302) {
                    const result = request.response;
                    if (result) {
                        if (preferBinary) {
                            const byteArray = new Uint8Array(result);
                            resolve(byteArray);
                        } else {
                            // result is regular text!
                            resolve(result);
                        }
                    }
                }
            };
            request.onerror = (ev) => {
                reject(ev);
            };

            request.send();
        });
    };


    api.tools.parse_view_data = function(view_data) {
        var parsed = [];
        var data = [];

        for(var j=0; j < view_data.length; j++) {
            if(view_data[j][0] === "tb") {
                for(var k=0; k < view_data[j][2].length; k++) {
                    data.push(view_data[j][2][k]);
                }
            }
        }

        for(var i=0; i < data.length; i++) {
            var x = data[i];

            parsed.push({
                id: x[0],
                title : x[9],
                excerpt : x[10],
                time : x[15],
                sender : x[28],
                attachment : x[13],
                labels: x[5]
            });
        }

        return parsed;
    };


    api.helper.get.is_delegated_inbox = function() {
        return $(".identityUserDelegatedAccount").length === 1;
    };


    api.helper.get.visible_emails_pre = function(customInboxQuery) {
        var page = api.get.current_page();
        var url = window.location.origin + window.location.pathname + "?ui=2&ik=" + api.tracker.ik+"&rid=" + api.tracker.rid + "&view=tl&num=120&rt=1";
        var start = $(".aqK:visible .Dj").find("span:first").text().replace(",", "").replace(".", "").split('–')[0];
        if (start) {
            start = parseInt(start - 1);
            url += "&start=" + start +
                "&sstart=" + start;
        } else {
            url += "&start=0";
        }

        var cat_label = "";

        if(page.indexOf("label/") === 0) {
            url += "&cat=" + page.split("/")[1] +"&search=cat";
        } else if(page.indexOf("category/") === 0) {
            if(page.indexOf("forums") !== -1) {
                cat_label = "group";
            } else if(page.indexOf("updates") !== -1) {
                cat_label = "notification";
            } else if(page.indexOf("promotion") !== -1) {
                cat_label = "promo";
            } else if(page.indexOf("social") !== -1) {
                cat_label = "social";
            }
            url += "&cat=^smartlabel_" + cat_label +"&search=category";
        } else if(page.indexOf("search/") === 0) {
            var at = $("input[name=at]").val();
            url += "&qs=true&q=" + page.split("/")[1] +"&at=" + at + "&search=query";
        } else if(page === "inbox"){
            if ($("div[aria-label='Social']").attr("aria-selected") === "true") {
                cat_label = "social";
                url += "&cat=^smartlabel_" + cat_label + "&search=category";
            } else if ($("div[aria-label='Promotions']").attr("aria-selected") === "true") {
                cat_label = "promo";
                url += "&cat=^smartlabel_" + cat_label + "&search=category";
            } else if ($("div[aria-label='Updates']").attr("aria-selected") === "true") {
                cat_label = "notification";
                url += "&cat=^smartlabel_" + cat_label + "&search=category";
            } else if ($("div[aria-label='Forums']").attr("aria-selected") === "true") {
                cat_label = "group";
                url += "&cat=^smartlabel_" + cat_label + "&search=category";
            } else {
                // control the behaviour with a given parameter
                if (customInboxQuery) {
                    url += "&search=" + customInboxQuery;
                }
                // tentative fix for https://github.com/KartikTalwar/gmail.js/issues/417
                else if (api.check.is_google_apps_user()) {
                    url += "&search=" + "inbox";
                } else {
                    url += "&search=" + "mbox";
                }
            }
        }else {
            url += "&search=" + page;
        }
        return url;
    };


    api.helper.get.visible_emails_post = function(get_data) {
        var emails = [];

        if (!get_data) {
            return emails;
        }

        var data = get_data.substring(get_data.indexOf("["), get_data.length);
        var json = JSON.parse(data);
        api.tracker.view_data = json;

        for(var i in api.tracker.view_data) {
            if (typeof(api.tracker.view_data[i]) === "function") {
                continue;
            }

            var cdata = api.tools.parse_view_data(api.tracker.view_data[i]);
            if(cdata.length > 0) {
                merge(emails, cdata);
            }
        }
        return emails;
    };

    // dispatch mousedown and mouseup event on passed element
    api.helper.trigger_mouse_click = function(element) {
        if(element) {
            //Trigger mouse down event
            var mouseDown = document.createEvent("MouseEvents");
            mouseDown.initEvent( "mousedown", true, false );
            element.dispatchEvent(mouseDown);

            //Trigger mouse up event
            var mouseUp = document.createEvent("MouseEvents");
            mouseUp.initEvent( "mouseup", true, false );
            element.dispatchEvent(mouseUp);

            return true;
        }
        return false;
    };

    api.get.visible_emails = function(customInboxQuery) {
        var url = api.helper.get.visible_emails_pre(customInboxQuery);
        var get_data = api.tools.make_request(url);
        var emails = api.helper.get.visible_emails_post(get_data);

        return emails;
    };


    api.get.visible_emails_async = function(callback, customInboxQuery) {
        var url = api.helper.get.visible_emails_pre(customInboxQuery);
        api.tools.make_request_async(url, "GET", function(get_data) {
            var emails = api.helper.get.visible_emails_post(get_data);
            callback(emails);
        });
    };


    api.get.selected_emails_data = function(customInboxQuery) {
        var selected_emails = [];
        if(!api.check.is_inside_email()){
            if($("[gh='tl'] div[role='checkbox'][aria-checked='true']").length){
                var email = null;
                var emails = api.get.visible_emails(customInboxQuery);
                $("[gh='tl'] div[role='checkbox']").each(function(index){
                    if($(this).attr("aria-checked") === "true"){
                        email = api.get.email_data(emails[index].id);
                        selected_emails.push(email);
                    }
                });
            }
        }else {
            selected_emails.push(api.get.email_data());
        }
        return selected_emails;
    };


    api.get.current_page = function(hash) {
        hash = hash || window.location.hash;

        var hashPart  = hash.split("#").pop().split("?").shift() || "inbox";

        if(hashPart.match(/\/[0-9a-zA-Z]{16,}$/gi)) {
            return "email";
        }

        var isTwopart = (hashPart.indexOf("search/") === 0
                         || hashPart.indexOf("category/") === 0
                         || hashPart.indexOf("label/") === 0);

        var result = null;
        if (!isTwopart) {
            result = hashPart.split("/").shift();
            return result;
        } else {
            var parts = hashPart.split("/");
            result = parts[0] + "/" + parts[1];
            return result;
        }
    };


    api.tools.infobox = function(message, time, html){
        var top = $(".b8.UC");

        // initial Gmail style I noticed on 26 / 05 / 2014 for $(".b8.UC") :
        // style="position: relative; top: -10000px;"
        // Seems that when Gmail shows infobox, the style is simply removed
        // - from what I can see in DevTools Elements Panel

        if(top.length > 0){
            top.stop(false, true); // cancel any existing fade so we can start again
            var info = top.find(".vh");
            if (!html) {
                info.text(message);
            } else {
                info.html(message);
            }
            if(typeof time !== "undefined"){
                var initialInfoboxStyle = top.attr("style");            // backup initial style
                top.removeAttr("style").fadeTo(time, 0, function(){     // simply remove then restore
                    $(this).attr("style", initialInfoboxStyle);           // style attribute insteed of playing
                });                             // on visibility property
            }
            else{
                top.removeAttr("style");                    // dito
            }
        }
    };

    /**
     * Re-renders the UI using the available data.
     *
     * This method does _not_ cause Gmail to fetch new data. This method is useful
     * in circumstances where Gmail has data available but does not immediately
     * render it. `observe.after` may be used to detect when Gmail has fetched the
     * relevant data. For instance, to refresh a conversation after Gmail fetches
     * its data:
     *
     *     gmail.observe.after("refresh", function(url, body, data, xhr) {
     *       if (url.view === "cv") {
     *         gmail.tools.rerender();
     *       }
     *     });
     *
     * If a callback is passed, it will be invoked after re-rendering is complete.
     */
    api.tools.rerender = function(callback) {
        var url = window.location.href;
        var hash = window.location.hash;

        // Get Gmail to re-render by navigating away and then back to the current URL. We keep the
        // UI from changing as we navigate away by visiting an equivalent URL: the current URL with the
        // first parameter of the hash stripped ("#inbox/14a16fab4adc1456" -> "#/14a16fab4adc1456" or
        // "#inbox" -> "#").
        var tempUrl;
        if (hash.indexOf("/") !== -1) {
            tempUrl = url.replace(/#.*?\//, "#/");
        } else {
            tempUrl = url.replace(/#.*/, "#");
        }
        window.location.replace(tempUrl);

        // Return to the original URL after a 0-timeout to force Gmail to navigate to the temp URL.
        setTimeout(function() {
            window.location.replace(url);

            // For some reason, the two replace operations above create a history entry (tested in
            // Chrome 39.0.2171.71). Pop it to hide our URL manipulation.
            window.history.back();

            if (callback) callback();
        }, 0);
    };

    api.tools.get_reply_to = function(ms13) {
        // reply to is an array if exists
        var reply_to = ms13 ? ms13[4] : [];

        // if reply to set get email from it and return it
        if (reply_to.length !== 0) {
            return api.tools.extract_email_address(reply_to[0]);
        }

        // otherwise return null
        return null;
    };

    api.tools.parse_attachment_data = function(x) {
        if (!x[7] || ! x[7][0])
        {
            return null;
        }

        var baseUrl = "";
        if (typeof(window) !== "undefined") {
            baseUrl =  window.location.origin + window.location.pathname;
        }

        var ad = x[7][0];
        api.tracker.attachment_data = ad;

        var attachments = [];
        for (var i = 0; i < ad.length; i++)
        {
            var a = ad[i];
            attachments.push({
                attachment_id: a[0],
                name: a[1],
                type: a[2],
                size: a[3],
                url: baseUrl + a[9]
            });
        }
        return attachments;
    };

    api.tools.parse_email_data = function(email_data) {
        var data = {};

        for(var i in email_data) {
            var x = email_data[i];
            if(x[0] === "cs") {
                data.thread_id = x[1];
                data.first_email= x[8][0];
                data.last_email = x[2];
                data.total_emails = x[3];
                data.total_threads = x[8];
                data.people_involved = x[15];
                data.subject = x[23];
            }

            if(x[0] === "ms") {
                if(data.threads === undefined) {
                    data.threads = {};
                }

                data.threads[x[1]] = {};
                data.threads[x[1]].is_deleted = (x[9] && x[9].indexOf("^k") > -1);
                data.threads[x[1]].reply_to_id = x[2];
                data.threads[x[1]].from = x[5];
                data.threads[x[1]].from_email = x[6];
                data.threads[x[1]].timestamp = x[7];
                data.threads[x[1]].datetime = x[24];
                data.threads[x[1]].attachments = x[21].split(",");
                data.threads[x[1]].attachments_details = x[13] ? api.tools.parse_attachment_data(x[13]) : null;
                data.threads[x[1]].subject = x[12];
                data.threads[x[1]].content_html = x[13] ? x[13][6] : x[8];
                data.threads[x[1]].to = x[13] ? x[13][1] : ((x[37] !== undefined) ? x[37][1]:[]);
                data.threads[x[1]].cc = x[13] ? x[13][2] : [];
                data.threads[x[1]].bcc = x[13] ? x[13][3] : [];
                data.threads[x[1]].reply_to = api.tools.get_reply_to(x[13]);
                data.threads[x[1]].labels = x[9];

                try { // jQuery will sometime fail to parse x[13][6], if so, putting the raw HTML
                    data.threads[x[1]].content_plain = x[13] ? $(x[13][6]).text() : x[8];
                }
                catch(e) {
                    data.threads[x[1]].content_plain = x[13] ? x[13][6] : x[8];
                }
            }
        }

        return data;
    };


    api.helper.get.email_data_pre = function(thread_id) {
        console.warn("Gmail.js: Usage of legacy email-data APIs have been deprecated by Google and will most likely fail. Migrate code to use gmail.new.get.email_data() to fix this problem.");
        if(api.check.is_inside_email() && thread_id === undefined) {
            thread_id = api.get.thread_id();
        }

        var url = null;
        if(thread_id !== undefined) {
            url = window.location.origin + window.location.pathname + "?ui=2&ik=" + api.tracker.ik + "&rid=" + api.tracker.rid + "&view=cv&th=" + thread_id + "&msgs=&mb=0&rt=1&search=inbox";
        }
        return url;
    };


    api.helper.get.email_data_post = function(get_data) {
        if (!get_data) {
            return {};
        }
        var data = get_data.substring(get_data.indexOf("["), get_data.length);
        var json = JSON.parse(data);

        api.tracker.email_data = json[0];
        return api.tools.parse_email_data(api.tracker.email_data);
    };


    api.get.email_data = function(thread_id) {
        var url = api.helper.get.email_data_pre(thread_id);

        if (url !== null) {
            var get_data = api.tools.make_request(url);
            var email_data = api.helper.get.email_data_post(get_data);
            return email_data;
        }

        return {};
    };


    api.get.email_data_async = function(email_id, callback) {
        var url = api.helper.get.email_data_pre(email_id);
        if (url !== null) {
            api.tools.make_request_async(url, "GET", function (get_data) {
                var email_data = api.helper.get.email_data_post(get_data);
                callback(email_data);
            });
        } else {
            callback({});
        }
    };


    api.helper.get.legacy_email_id = function(identifier) {
        if (!identifier) {
            return null;
        } else if (api.check.data.is_legacy_email_id(identifier)) {
            return identifier;
        } else if (identifier.legacy_email_id) {
            return identifier.legacy_email_id;
        } else if (api.check.data.is_email_id(identifier)) {
            console.warn("GmailJS: Warning! Using new-style ID in method expecting legacy-style IDs! Attempting to resolve via cache, but there's no guarantee this will work!");
            const emailData = api.cache.emailIdCache[identifier];
            return emailData && emailData.legacy_email_id;
        }

        // DOMEmail
        if (identifier.$el && identifier.$el[0]) {
            identifier = identifier.$el[0]; // fallback to element-lookup.
        }

        // HTML Element
        if (identifier.dataset && identifier.dataset.legacyMessageId) {
            return identifier.dataset.legacyMessageId;
        }

        return null;
    };

    api.helper.get.new_email_id = function(identifier) {
        if (!identifier) {
            return null;
        } else if (api.check.data.is_email_id(identifier)) {
            return identifier;
        } else if (identifier.id && !identifier.$el) { // ensure to only email_data, not DomEmail!
            return identifier.id;
        } else if (api.check.data.is_legacy_email_id(identifier)) {
            console.warn("GmailJS: Warning! Using legacy-style ID in method expecting new-style IDs! Attempting to resolve via cache, but there's no guarantee this will work!");
            const emailData = api.cache.emailLegacyIdCache[identifier];
            return emailData && emailData.id;
        }

        // DOMEmail
        if (identifier.$el && identifier.$el[0]) {
            identifier = identifier.$el[0]; // fallback to element-lookup.
        }

        // HTML Element
        if (identifier.dataset && identifier.dataset.messageId) {
            let id = identifier.dataset.messageId;
            if (id.indexOf("#") === 0) {
                id = id.substring(1);
            }

            return id;
        }

        return null;
    };

    api.helper.get.thread_id = function(identifier) {
        if (!identifier) {
            return null;
        } else if (api.check.data.is_thread_id(identifier)) {
            return identifier;
        } else if (identifier.thread_id) { // NewEmailData
            return identifier.thread_id;
        } else if (api.check.data.is_email_id(identifier)) {
            console.warn("GmailJS: Warning! Using email-ID in method expecting thread-ID! Attempting to resolve via cache, but there's no guarantee this will work!");
            const emailData = api.cache.emailIdCache[identifier];
            return emailData && emailData.thread_id;
        } else if (api.check.data.is_legacy_email_id(identifier)) {
            console.warn("GmailJS: Warning! Using legacy-style ID in method expecting thread-ID! Attempting to resolve via cache, but there's no guarantee this will work!");
            const emailData = api.cache.emailLegacyIdCache[identifier];
            return emailData && emailData.thread_id;
        }

        // DOMEmail or DOMThread
        if (identifier.$el && identifier.$el[0]) {
            identifier = identifier.$el[0]; // fallback to element-lookup.
        }

        // HTML Element - Thread
        if (identifier.dataset && identifier.dataset.threadPermId) {
            let id = identifier.dataset.threadPermId;
            if (id.indexOf("#") === 0) {
                id = id.substring(1);
            }

            return id;
        }

        // HTML Element - Email
        if (identifier.dataset && identifier.dataset.messageId) {
            let id = identifier.dataset.messageId;
            if (id.indexOf("#") === 0) {
                id = id.substring(1);
            }

            console.warn("GmailJS: Warning! Using DomEmail instance to lookup thread-ID. Attempting to resolve via cache, but there's no guarantee this will work!");
            const emailData = api.cache.emailIdCache[id];
            return emailData && emailData.thread_id;
        }

        return null;
    };

    api.helper.clean_thread_id = function(thread_id) {
        // handle new gmail style email-ids
        if (thread_id.startsWith("#")) {
            thread_id = thread_id.substring(1);
        }

        return thread_id;        
    };

    api.helper.get.email_source_pre = function(identifier) {
        if(!identifier && api.check.is_inside_email()) {
            identifier = api.get.email_id();
        }

        const email_id = api.helper.get.legacy_email_id(identifier);
        if(!email_id) {
            return null;
        } else {
            return window.location.origin + window.location.pathname + "?view=att&th=" + email_id + "&attid=0&disp=comp&safe=1&zw";
        }
    };


    api.get.email_source = function(identifier) {
        console.warn("Gmail.js: This function has been deprecated and will be removed in an upcoming release! Please migrate to email_source_async!");
        var url = api.helper.get.email_source_pre(identifier);
        if (url !== null) {
            return api.tools.make_request(url, "GET", true);
        }
        return "";
    };


    api.get.email_source_async = function(identifier, callback, error_callback, preferBinary) {
        api.get.email_source_promise(identifier, preferBinary)
            .then(callback)
            .catch(error_callback);
    };

    api.get.email_source_promise = function(identifier, preferBinary) {
        const url = api.helper.get.email_source_pre(identifier);
        if (url !== null) {
            return api.tools.make_request_download_promise(url, preferBinary);
        } else {
            return new Promise((resolve, reject) => {
                reject("Unable to resolve URL for email source!");
            });
        }
    };

    api.get.displayed_email_data = function() {
        var email_data = api.get.email_data();

        if (api.check.is_conversation_view()) {
            return get_displayed_email_data_for_thread(email_data);
        }
        else { // Supposing only one displayed email.
            return get_displayed_email_data_for_single_email(email_data);
        }
    };

    api.get.displayed_email_data_async = function (callback) {
        api.get.email_data_async(undefined, function (email_data) {
            if (api.check.is_conversation_view()) {
                callback(get_displayed_email_data_for_thread(email_data));
            }
            else { // Supposing only one displayed email.
                callback(get_displayed_email_data_for_single_email(email_data));
            }
        });
    };

    var get_displayed_email_data_for_thread = function(email_data) {
        var displayed_email_data = email_data;

        var threads = displayed_email_data.threads;
        var total_threads = displayed_email_data.total_threads;

        var hash = window.location.hash.split("#")[1] || "";
        var is_in_trash = (hash.indexOf("trash") === 0);

        for (var id in threads) {
            var email = threads[id];
            var keep_email = (is_in_trash) ? email.is_deleted : !email.is_deleted;

            if (!keep_email) {
                delete threads[id];
                total_threads.splice(total_threads.indexOf(id), 1);
                displayed_email_data.total_emails--;
                // TODO: remove people involved only in this email.
            }
        }
        return displayed_email_data;
    };

    var get_displayed_email_data_for_single_email = function(email_data) {
        var displayed_email_data = {};
        for (var id in email_data.threads) {
            var displayed_email_element = document.querySelector("div[data-legacy-message-id='" + id + "']");

            if (displayed_email_element) {
                var email = email_data.threads[id];

                displayed_email_data.first_email = id;
                displayed_email_data.last_email = id;
                displayed_email_data.subject = email_data.subject;

                displayed_email_data.threads = {};
                displayed_email_data.threads[id] = email;
                displayed_email_data.total_emails = 1;
                displayed_email_data.total_threads = [id];

                displayed_email_data.people_involved = [];

                displayed_email_data.people_involved.push(
                    [email.from, email.from_email]
                );

                email.to.forEach(function(recipient) {
                    var address = api.tools.extract_email_address(recipient);
                    var name = api.tools.extract_name(recipient.replace(address, "")) || "";

                    displayed_email_data.people_involved.push(
                        [name, address]
                    );
                });

                break;
            }
        }
        return displayed_email_data;
    };


    api.check.is_conversation_view = function() {
        if( api.check.is_new_data_layer() ) {
            var conversation_flag = undefined;
            conversation_flag = api.tracker.globals[24].indexOf(7164);
            return conversation_flag !== -1;
        } else {	//To handle classic gmail UI
            var flag_name = "bx_vmb";
            var flag_value = undefined;
            var array_with_flag = api.tracker.globals[17][4][1];
            for (var i = 0; i < array_with_flag.length; i++) {
                var current = array_with_flag[i];
                if (current[0] === flag_name) {
                    flag_value = current[1];
                    break;
                }
            }
            return flag_value === "0" || flag_value === undefined;
        }
    };

    api.tools.extract_email_address = function(str) {
        var regex = /[\+a-z0-9._-]+@[a-z0-9._-]+\.[a-z0-9._-]+/gi;
        var matches = (str) ? str.match(regex) : undefined;

        return (matches) ? matches[0] : undefined;
    };


    api.tools.extract_name = function(str) {
        var regex = /[a-z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF"._\s-]+/gi;
        var matches = (str) ? str.match(regex) : undefined;

        return (matches && matches[0]) ? matches[0].trim() : undefined;
    };


    api.tools.i18n = function(label) {
        var locale = api.get.localization();
        var dictionary;

        switch (locale) {
        case "fr":
            dictionary = {
                "inbox": "Boîte de réception",
                "drafts": "Brouillons",
                "spam": "Spam",
                "forums": "Forums",
                "updates": "Mises à jour",
                "promotions": "Promotions",
                "social_updates": "Réseaux sociaux"
            };
            break;

        case "no":
            dictionary = {
                "inbox": "Innboks",
                "drafts": "Utkast",
                "spam": "Søppelpost",
                "forums": "Forumer",
                "updates": "Oppdateringer",
                "promotions": "Reklame",
                "social_updates": "Sosialt"
            };
            break;

        case "nl":
            dictionary = {
                "inbox": "Postvak IN",
                "drafts": "Concepten",
                "spam": "Spam",
                "forums": "Forums",
                "updates": "Updates",
                "promotions": "Reclame",
                "social_updates": "Sociaal"
            };
            break;

        case "it":
            dictionary = {
                "inbox": "Posta in arrivo",
                "drafts": "Bozza",
                "spam": "Spam",
                "forums": "Forum",
                "updates": "Aggiornamenti",
                "promotions": "Promozioni",
                "social_updates": "Social"
            };
            break;

        case "en":
        default:
            dictionary = {
                "inbox": "Inbox",
                "drafts": "Drafts",
                "spam": "Spam",
                "forums": "Forums",
                "updates": "Updates",
                "promotions": "Promotions",
                "social_updates": "Social Updates"
            };
            break;
        }

        return dictionary[label];
    };

    var create_generic_toolbar_button = function(content_html, onClickFunction, basicStyle, defaultStyle, styleClass, selector) {
        var container = $(document.createElement("div"));
        container.attr("class","G-Ni J-J5-Ji");

        var button = $(document.createElement("div"));
        var buttonClasses = "T-I J-J5-Ji ";
        if(styleClass !== undefined &&
            styleClass !== null &&
            styleClass !== ""){
            buttonClasses += basicStyle+styleClass;
        }else{
            buttonClasses += basicStyle+defaultStyle;
        }
        button.attr("class", buttonClasses);

        button.html(content_html);
        button.click(onClickFunction);

        var content = $(document.createElement("div"));
        content.attr("class","asa");

        container.html(button);

        selector.append(container);

        return container;
    };

    api.tools.add_toolbar_button = function(content_html, onClickFunction, styleClass) {
        var basicLeftStyle = "lS ";
        var defaultLeftStyle = "T-I-ax7 ar7";

        return create_generic_toolbar_button(content_html, onClickFunction, basicLeftStyle, defaultLeftStyle, styleClass, api.dom.toolbar());
    };

    api.tools.add_right_toolbar_button = function(content_html, onClickFunction, styleClass) {
        var basicRightStyle = "ash ";
        var defaultRightStyle = "T-I-ax7 L3";

        return create_generic_toolbar_button(content_html, onClickFunction, basicRightStyle, defaultRightStyle, styleClass, api.dom.right_toolbar());
    };

    api.tools.add_compose_button =  function(composeWindow, content_html, onClickFunction, styleClass) {
        var button = $(document.createElement("div"));
        var buttonClasses = "T-I J-J5-Ji aoO T-I-atl L3 gmailjscomposebutton ";
        if(styleClass !== undefined){
            buttonClasses += styleClass;
        }
        button.attr("class", buttonClasses);
        button.attr("style", "margin-left: 8px; max-width: 500px;");
        button.html(content_html);
        button.click(onClickFunction);

        composeWindow.find(".gU.Up  > .J-J5-Ji").append(button);

        return button;
    };

    /**
       adds a button to an email attachment.

       'attachment'-parameter must be the object returned from api.dom.email().attachments().
       'contentHtml' should represent a 21x21 image of some kind. optional.
       'customCssClass' styling used on the buttons central area. optional.
       'tooltip' will be shown on hover.

       return-value is jQuery-instance representing the created button.
       */
    api.tools.add_attachment_button = function(attachment, contentHtml, customCssClass, tooltip, onClickFunction) {
        var button = $(document.createElement("div"));
        button.attr("class", "T-I J-J5-Ji aQv T-I-ax7 L3");
        button.attr("style", "user-select: none;");
        button.attr("aria-label", tooltip);
        button.attr("data-tooltip", tooltip);

        // make hover-state match existing buttons
        var hoverClass = "T-I-JW";
        button.mouseover(function() { this.classList.add(hoverClass); });
        button.mouseout(function() { this.classList.remove(hoverClass); });

        var div = $(document.createElement("div"));
        var divClass = "wtScjd J-J5-Ji aYr";
        if (customCssClass) {
            divClass += " " + customCssClass;
        }
        div.attr("class", divClass);
        if (contentHtml) {
            div.html(contentHtml);
        }

        button.append(div);
        button.click(onClickFunction);
        attachment.$el.find("div.aQw").append(button);

        return button;
    };

    api.tools.remove_modal_window = function() {
        $("#gmailJsModalBackground").remove();
        $("#gmailJsModalWindow").remove();
    };

    api.tools.add_modal_window = function(title, content_html, onClickOk, onClickCancel, onClickClose, okText, cancelText) {
        // By default, clicking on cancel or close should clean up the modal window
        onClickClose = onClickClose || api.tools.remove_modal_window;
        onClickCancel = onClickCancel || api.tools.remove_modal_window;

        okText = okText || "OK";
        cancelText = cancelText || "Cancel";

        var background = $(document.createElement("div"));
        background.attr("id","gmailJsModalBackground");
        background.attr("class","Kj-JD-Jh");
        background.attr("aria-hidden","true");
        background.attr("style","opacity:0.75;width:100%;height:100%;");

        // Modal window wrapper
        var container = $(document.createElement("div"));
        container.attr("id","gmailJsModalWindow");
        container.attr("class", "Kj-JD");
        container.attr("tabindex", "0");
        container.attr("role", "alertdialog");
        container.attr("aria-labelledby", "gmailJsModalWindowTitle");
        container.attr("style", "left:50%;top:50%;opacity:1;");

        // Modal window header contents
        var header = $(document.createElement("div"));
        header.attr("class", "Kj-JD-K7 Kj-JD-K7-GIHV4");

        var heading = $(document.createElement("span"));
        heading.attr("id", "gmailJsModalWindowTitle");
        heading.attr("class", "Kj-JD-K7-K0");
        heading.attr("role", "heading");
        heading.html(title);

        var closeButton = $(document.createElement("span"));
        closeButton.attr("id", "gmailJsModalWindowClose");
        closeButton.attr("class", "Kj-JD-K7-Jq");
        closeButton.attr("role", "button");
        closeButton.attr("tabindex", "0");
        closeButton.attr("aria-label", "Close");
        closeButton.click(onClickClose);

        header.append(heading);
        header.append(closeButton);

        // Modal window contents
        var contents = $(document.createElement("div"));
        contents.attr("id", "gmailJsModalWindowContent");
        contents.attr("class", "Kj-JD-Jz");
        contents.html(content_html);

        // Modal window controls
        var controls = $(document.createElement("div"));
        controls.attr("class", "Kj-JD-Jl");

        var okButton = $(document.createElement("button"));
        okButton.attr("id", "gmailJsModalWindowOk");
        okButton.attr("class", "J-at1-auR J-at1-atl");
        okButton.attr("name", "ok");
        okButton.text(okText);
        okButton.click(onClickOk);

        var cancelButton = $(document.createElement("button"));
        cancelButton.attr("id", "gmailJsModalWindowCancel");
        cancelButton.attr("name", "cancel");
        cancelButton.text(cancelText);
        cancelButton.click(onClickCancel);

        controls.append(okButton);
        controls.append(cancelButton);

        container.append(header);
        container.append(contents);
        container.append(controls);

        $(document.body).append(background);
        $(document.body).append(container);

        var center = function() {
            container.css({
                top: ($(window).height() - container.outerHeight()) / 2,
                left: ($(window).width() - container.outerWidth()) / 2
            });
        };

        center();

        container.on("DOMSubtreeModified", center);
        $(window).resize(center);
    };

    api.tools.toggle_minimize = function (){
        //The minimize button
        var minimizeButton = $("[alt='Minimize']")[0];

        if(minimizeButton) {
            api.helper.trigger_mouse_click(minimizeButton);

            return true;
        }
        return false;
    };

    api.chat.is_hangouts = function() {
        if(api.tracker.hangouts !== undefined) {
            return api.tracker.hangouts;
        }

        // Returns true if the user is using hangouts instead of the classic chat
        var dwClasses = $(".dw");
        if(dwClasses.length > 1) {
            throw "Figuring out is hangouts - more than one dw classes found";
        }
        if(dwClasses.length === 0) {
            throw "Figuring out is hangouts - no dw classes found";
        }

        var dw = dwClasses[0];

        var chatWindows = $(".nH.aJl.nn", dw);
        if(chatWindows.length > 0) {
            // hangouts
            api.tracker.hangouts = true;
            return true;
        }

        chatWindows = $(".nH.nn", dw);

        if(chatWindows.length > 2) {
            // classic
            api.tracker.hangouts = false;
            return false;
        }
        return undefined;
    };

    /**
     * Returns data about the currently visible messages available in the DOM:
     * {
     *    from: {
     *      name: string,
     *      email: string,
     *    },
     *    summary: string, // subject and email summary
     *    thread_id: string,
     *    legacy_email_id: string,
     *    $el: HTMLElement,
     * }
     */
    api.dom.visible_messages = function() {
        const ret = [];
        $('tbody>tr.zA[draggable="true"]:visible', api.dom.inbox_content())
            .each((index, msgEle) => {
                const nameAndEmail = $('*[email][name]', msgEle);
                const linkAndSubject = $('*[role=link]', msgEle);
                // example value: #thread-f:1638756560099919527|msg-f:1638756560099919527"
                const idNode = msgEle.querySelector("span[data-thread-id]");
                ret.push({
                    from: {
                        name: nameAndEmail.attr('name'),
                        email: nameAndEmail.attr('email'),
                    },
                    summary: linkAndSubject[0].innerText,
                    thread_id: api.helper.clean_thread_id(idNode.dataset.threadId || ""),
                    legacy_email_id: idNode.dataset.legacyMessageId,
                    $el: $(msgEle),
                });
            });
        return ret;
    };

    // retrieve queue of compose window dom objects
    // latest compose at the start of the queue (index 0)
    api.dom.composes = function() {
        var objs = [];
        $("div.M9").each(function(idx, el) {
            objs.push( new api.dom.compose(el));
        });
        return objs;
    };

    /**
       A compose object. Represents a compose window in the DOM and provides a bunch of methods and properties to access & interact with the window
       Expects a jQuery DOM element for the compose div
    */
    api.dom.compose = function(element) {
        if (this.constructor !== api.dom.compose) {
            // if not invoked through new(), nothing works as expected!
            return new api.dom.compose(element);
        }

        element = $(element);
        if(!element || (!element.hasClass("M9") && !element.hasClass("AD"))) api.tools.error("api.dom.compose called with invalid element");
        this.$el = element;
        return this;
    };

    extend(api.dom.compose.prototype, {
        /**
           Retrieve the compose id
        */
        id: function() {
            return this.dom("id").val();
        },

        /**
           Retrieve the draft email id
        */
        email_id: function() {
            let email_id = this.dom("draft").val();
            // handle new gmail style email-ids
            if (email_id && email_id.startsWith("#")) {
                return email_id.substring(1);
            } else {
                return email_id;
            }
        },

        /**
           Retrieve the draft thread id
        */
        thread_id: function() {
            let thread_id = this.dom("thread").val() || "";

            return api.helper.clean_thread_id(thread_id);
        },

        /**
           Is this compose instance inline (as with reply & forwards) or a popup (as with a new compose)
        */
        is_inline: function() {
            return this.$el.closest("td.Bu").length > 0;
        },

        /**
           Retrieves to, cc, bcc and returns them in a hash of arrays
           Parameters:
           options.type  string  to, cc, or bcc to check a specific one
           options.flat  boolean if true will just return an array of all recipients instead of splitting out into to, cc, and bcc
        */
        recipients: function(options) {
            if( typeof options !== "object" ) options = {};
            var name_selector = options.type ? "[name=" + options.type + "]" : "";

            // determine an array of all emails specified for To, CC and BCC and extract addresses into an object for the callback
            var recipients = options.flat ? [] : { to: [], cc: [], bcc: [] };
            this.$el.find(".GS input[type=hidden]"+name_selector).each(function(idx, recipient ){
                if(options.flat) {
                    recipients.push(recipient.value);
                } else {
                    if(!recipients[recipient.name]) recipients[recipient.name] = [];
                    recipients[recipient.name].push(recipient.value);
                }
            });
            return recipients;
        },

        /**
           Retrieve the current "to" recipients
        */
        to: function(to) {
            return this.dom("to").val(to);
        },

        /**
           Retrieve the current "cc" recipients
        */
        cc: function(cc) {
            return this.dom("cc").val(cc);
        },

        /**
           Retrieve the current "bcc" recipients
        */
        bcc: function(bcc) {
            return this.dom("bcc").val(bcc);
        },

        /**
           Get/Set the current subject
           Parameters:
           subject   string  set as new subject
        */
        subject: function(subject) {
            if(subject) this.dom("all_subjects").val(subject);
            subject = this.dom("subjectbox").val();
            return subject ? subject : this.dom("subject").val();
        },

        /**
           Get the from email
           if user only has one email account they can send from, returns that email address
        */
        from: function() {
            var el = this.dom("from");
            if (el.length) {
                var fromNameAndEmail = el.val();
                if (fromNameAndEmail) {
                    return api.tools.extract_email_address(fromNameAndEmail);
                }
            }
            return api.get.user_email();
        },

        /**
           Get/Set the email body
        */
        body: function(body) {
            var el = this.dom("body");
            if(body) el.html(body);
            return el.html();
        },

        /**
          Triggers the same action as clicking the "send" button would do.
          */
        send: function() {
            return this.dom("send_button").click();
        },

        /**
           Map find through to jquery element
        */
        find: function(selector) {
            return this.$el.find(selector);
        },

        /**
           Close compose window
        */
        close: function() {
            const e = document.createEvent('Events');
            e.initEvent('keydown', true, true);
            e.which = 27;
            e.keyCode = 27;

            var $body = this.dom('body');
            $body.focus();
            $body[0].dispatchEvent(e);
        },

        /**
           Retrieve preconfigured dom elements for this compose window
        */
        dom: function(lookup) {
            if (!lookup) return this.$el;
            var config = {
                to:"textarea[name=to]",
                cc:"textarea[name=cc]",
                bcc:"textarea[name=bcc]",
                id: "input[name=composeid]",
                draft: "input[name=draft]",
                thread: "input[name=rt]",
                subject: "input[name=subject]",
                subjectbox: "input[name=subjectbox]",
                all_subjects: "input[name=subjectbox], input[name=subject]",
                body: "div[contenteditable=true]",
                reply: "M9",
                forward: "M9",
                from: "input[name=from]",
                send_button: "div.T-I.T-I-atl:not(.gmailjscomposebutton)"
            };
            if(!config[lookup]) api.tools.error("Dom lookup failed. Unable to find config for \"" + lookup + "\"",config,lookup,config[lookup]);
            return this.$el.find(config[lookup]);
        }

    });

    /**
       An object for interacting with an email currently present in the DOM. Represents an individual email message within a thread
       Provides a number of methods and properties to access & interact with it
       Expects a jQuery DOM element for the email div (div.adn as returned by the "view_email" observer), or an email_id
    */
    api.dom.email = function(element) {
        if (this.constructor !== api.dom.email) {
            // if not invoked through new(), nothing works as expected!
            return new api.dom.email(element);
        }

        if (typeof element === "string") {
            this.id = element;
            element = $("div.adn[data-legacy-message-id='" + this.id + "']");
        } else {
            element = $(element);
        }

        if (!element || (!element.hasClass("adn"))) api.tools.error("api.dom.email called with invalid element/id");

        this.$el = element;
        if (!this.id) {
            this.id = this.$el.data("legacyMessageId");
        }

        return this;
    };

    extend(api.dom.email.prototype, {

        /**
           Get/Set the full email body as it sits in the DOM
           If you want the actual DOM element use .dom("body");
           Note: This gets & sets the body html after it has been parsed & marked up by GMAIL. To retrieve it as it exists in the email message source, use a call to .data();
        */
        body: function(body) {
            var el = this.dom("body");
            if (body) {
                el.html(body);
            }
            return el.html();
        },

        /**
           Get/Set the sender
           Optionally receives email and name properties. If received updates the values in the DOM
           Returns an object containing email & name of the sender and dom element
        */
        from: function(email, name) {
            var el = this.dom("from");
            if (email) {
                el.attr("email",email);
            }
            if (name) {
                el.attr("name",name);
                el.html(name);
            }
            return {
                email: el.attr("email"),
                name: el.attr("name"),
                el: el
            };
        },

        /**
           Get/Set who the email is showing as To
           Optionally receives an object containing email and/or name properties. If received updates the values in the DOM.
           Optionally receives an array of these objects if multiple recipients
           Returns an array of objects containing email & name of who is showing in the DOM as the email is to
        */
        to: function(to_array) {

            // if update data has been passeed, loop through & create a new to_wrapper contents
            if (to_array) {
                if (!$.isArray(to_array)) {
                    to_array = [to_array];
                }
                var html = [];
                $.each(to_array, function(index, obj) {
                    html.push( $("<span />").attr({
                        dir: "ltr",
                        email: obj.email,
                        name: obj.name
                    }).addClass("g2").html(obj.name).wrap("<p/>").parent().html());
                });
                this.dom("to_wrapper").html("to " + html.join(", "));
            }


            // loop through any matching to elements & prepare for output
            var out = [];

            this.dom("to").each(function() {
                var el = $(this);
                out.push({
                    email:  el.attr("email"),
                    name: el.attr("name"),
                    el: el
                });
            });
            return out;
        },

        /**
           Retries the DOM elements which represents the emails attachments.
           Returns undefined if UI-elements are not yet ready for parsing.
        */
        attachments: function() {
            var out = [];
            var failed = false;

            this.dom("attachments").each(function() {
                var el = $(this);

                var result = {};
                result.$el = el;
                result.name = el.find(".aV3").html();
                result.size = el.find(".SaH2Ve").html();

                // Gmail only emits the following attribute for Chrome!
                // use email_data.threads[].attachments_details in other browsers!
                var url = el.attr("download_url");
                if (url) {
                    var url_type = api.tools.parse_attachment_url(url);
                    result.url = url_type.url;
                    result.type = url_type.type;
                }

                out.push(result);
            });

            if (failed) {
                return undefined;
            } else {
                return out;
            }
        },

        /**
           Retrieve relevant email from the Gmail servers for this email
           Makes use of the gmail.get.email_data() method
           Returns an object
        */
        data: function() {
            if (typeof api.dom.email_cache !== "object") {
                api.dom.email_cache = {};
            }
            if (!api.dom.email_cache[this.id]) {

                // retrieve & cache the data for this whole thread of emails
                var data = api.get.email_data(this.id);
                $.each(data.threads, function(email_id, email_data) {
                    api.dom.email_cache[email_id] = email_data;
                });
            }
            return api.dom.email_cache[this.id];
        },

        /**
           Retrieve email source for this email from the Gmail servers
           Makes use of the gmail.get.email_source() method
           Returns string of email raw source
        */
        source: function() {
            return api.get.email_source(this.id);
        },

        /**
           Retrieve preconfigured dom elements for this email
        */
        dom: function(lookup) {
            if (!lookup) return this.$el;
            var config = {
                body: "div.a3s",
                from: "span[email].gD",
                to: "span[email].g2",
                to_wrapper: "span.hb",
                timestamp: "span.g3",
                star: "div.zd",
                attachments: "div.hq.gt div.aQH span.aZo",

                // buttons
                reply_button: "div[role=button].aaq",
                menu_button: "div[role=button].aap",
                details_button: "div[role=button].ajz"
            };
            if(!config[lookup]) api.tools.error("Dom lookup failed. Unable to find config for \"" + lookup + "\"");
            return this.$el.find(config[lookup]);
        }

    });

    /**
       An object for interacting with an email currently present in the DOM. Represents a conversation thread
       Provides a number of methods and properties to access & interact with it
       Expects a jQuery DOM element for the thread wrapper div (div.if as returned by the "view_thread" observer)
    */
    api.dom.thread = function(element) {
        if (this.constructor !== api.dom.thread) {
            // if not invoked through new(), nothing works as expected!
            return new api.dom.thread(element);
        }

        if (!element || (!element.hasClass("if"))) api.tools.error("api.dom.thread called with invalid element/id");
        this.$el = element;
        return this;
    };

    extend(api.dom.thread.prototype, {

        /**
           Retrieve preconfigured dom elements for this email
        */
        dom: function(lookup) {
            if (!lookup) return this.$el;
            var config = {
                opened_email: "div.adn",
                subject: "h2.hP",
                labels: "div.hN"
            };
            if(!config[lookup]) api.tools.error("Dom lookup failed. Unable to find config for \"" + lookup + "\"");
            return this.$el.find(config[lookup]);
        }

    });

    /**
     *  Show a compose window
     * @returns {boolean}
     */
    api.compose.start_compose = function() {

        //The compose button
        var composeEl = $(".T-I.J-J5-Ji.T-I-KE.L3")[0];

        if(composeEl) {
            api.helper.trigger_mouse_click(composeEl);

            return true;
        }
        return false;
    };

    /**
     * Shadow API commands specifically made to interact with old gmail.
     * (And in the future we can either remove "regular"  api.get or replace it with something else)
     */

    api.old = {};
    api.old.get = api.get;


    /**
     * API commands specifically made to interact with new gmail.
     */
    api.new = {};
    api.new.get = {};

    /**
     * Returns the new-style email_id of the latest email visible in the DOM,
     * or for the provided email-node if provided.
     *
     * @param emailElem: Node to extract email-id from. Optional.
     */
    api.new.get.email_id = function(emailElem) {
        // ensure we have an email-element to work with
        if (!emailElem) {
            const emailElems = document.querySelectorAll(".adn[data-message-id]");
            if (!emailElems || emailElems.length === 0) {
                return null;
            }
            emailElem = emailElems[emailElems.length - 1];
        }

        return api.helper.get.new_email_id(emailElem);
    };

    /**
     * Returns the new-style thread_id of the current thread visible in the DOM.
     */
    api.new.get.thread_id = function() {
        const threadElem = document.querySelector("[data-thread-perm-id]");
        if (!threadElem) {
            return null;
        }

        return threadElem.dataset["threadPermId"];
    };

    /**
     * Returns available information about a specific email.
     *
     * @param email_id: new style email id. Legacy IDs not supported. If empty, default to latest in view.
     */
    api.new.get.email_data = function(identifier) {
        identifier = identifier || api.new.get.email_id();
        const email_id = api.helper.get.new_email_id(identifier);

        if (!email_id) {
            return null;
        } else {
            return api.cache.emailIdCache[email_id];
        }
    };

    /**
     * Returns available information about a specific thread.
     *
     * @param thread_id: new style thread id. Legacy IDs not supported. If empty, default to current.
     */
    api.new.get.thread_data = function(identifier) {
        identifier = identifier || api.new.get.thread_id();
        const thread_id = api.helper.get.thread_id(identifier);

        if (!thread_id) {
            return null;
        } else {
            return api.cache.threadCache[thread_id];
        }
    };

    // setup XHR interception as early as possible, to ensure we get all relevant email-data!
    if (typeof(document) !== "undefined") {
        api.tools.xhr_watcher();
    }
    return api;
};

// make class accessible to require()-users.
if (typeof(exports) !== "undefined") {
    exports.Gmail = Gmail;
}

},{"jquery":3}],3:[function(require,module,exports){
/*!
 * jQuery JavaScript Library v3.4.1
 * https://jquery.com/
 *
 * Includes Sizzle.js
 * https://sizzlejs.com/
 *
 * Copyright JS Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2019-05-01T21:04Z
 */
( function( global, factory ) {

	"use strict";

	if ( typeof module === "object" && typeof module.exports === "object" ) {

		// For CommonJS and CommonJS-like environments where a proper `window`
		// is present, execute the factory and get jQuery.
		// For environments that do not have a `window` with a `document`
		// (such as Node.js), expose a factory as module.exports.
		// This accentuates the need for the creation of a real `window`.
		// e.g. var jQuery = require("jquery")(window);
		// See ticket #14549 for more info.
		module.exports = global.document ?
			factory( global, true ) :
			function( w ) {
				if ( !w.document ) {
					throw new Error( "jQuery requires a window with a document" );
				}
				return factory( w );
			};
	} else {
		factory( global );
	}

// Pass this if window is not defined yet
} )( typeof window !== "undefined" ? window : this, function( window, noGlobal ) {

// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1
// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode
// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common
// enough that all such attempts are guarded in a try block.
"use strict";

var arr = [];

var document = window.document;

var getProto = Object.getPrototypeOf;

var slice = arr.slice;

var concat = arr.concat;

var push = arr.push;

var indexOf = arr.indexOf;

var class2type = {};

var toString = class2type.toString;

var hasOwn = class2type.hasOwnProperty;

var fnToString = hasOwn.toString;

var ObjectFunctionString = fnToString.call( Object );

var support = {};

var isFunction = function isFunction( obj ) {

      // Support: Chrome <=57, Firefox <=52
      // In some browsers, typeof returns "function" for HTML <object> elements
      // (i.e., `typeof document.createElement( "object" ) === "function"`).
      // We don't want to classify *any* DOM node as a function.
      return typeof obj === "function" && typeof obj.nodeType !== "number";
  };


var isWindow = function isWindow( obj ) {
		return obj != null && obj === obj.window;
	};




	var preservedScriptAttributes = {
		type: true,
		src: true,
		nonce: true,
		noModule: true
	};

	function DOMEval( code, node, doc ) {
		doc = doc || document;

		var i, val,
			script = doc.createElement( "script" );

		script.text = code;
		if ( node ) {
			for ( i in preservedScriptAttributes ) {

				// Support: Firefox 64+, Edge 18+
				// Some browsers don't support the "nonce" property on scripts.
				// On the other hand, just using `getAttribute` is not enough as
				// the `nonce` attribute is reset to an empty string whenever it
				// becomes browsing-context connected.
				// See https://github.com/whatwg/html/issues/2369
				// See https://html.spec.whatwg.org/#nonce-attributes
				// The `node.getAttribute` check was added for the sake of
				// `jQuery.globalEval` so that it can fake a nonce-containing node
				// via an object.
				val = node[ i ] || node.getAttribute && node.getAttribute( i );
				if ( val ) {
					script.setAttribute( i, val );
				}
			}
		}
		doc.head.appendChild( script ).parentNode.removeChild( script );
	}


function toType( obj ) {
	if ( obj == null ) {
		return obj + "";
	}

	// Support: Android <=2.3 only (functionish RegExp)
	return typeof obj === "object" || typeof obj === "function" ?
		class2type[ toString.call( obj ) ] || "object" :
		typeof obj;
}
/* global Symbol */
// Defining this global in .eslintrc.json would create a danger of using the global
// unguarded in another place, it seems safer to define global only for this module



var
	version = "3.4.1",

	// Define a local copy of jQuery
	jQuery = function( selector, context ) {

		// The jQuery object is actually just the init constructor 'enhanced'
		// Need init if jQuery is called (just allow error to be thrown if not included)
		return new jQuery.fn.init( selector, context );
	},

	// Support: Android <=4.0 only
	// Make sure we trim BOM and NBSP
	rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;

jQuery.fn = jQuery.prototype = {

	// The current version of jQuery being used
	jquery: version,

	constructor: jQuery,

	// The default length of a jQuery object is 0
	length: 0,

	toArray: function() {
		return slice.call( this );
	},

	// Get the Nth element in the matched element set OR
	// Get the whole matched element set as a clean array
	get: function( num ) {

		// Return all the elements in a clean array
		if ( num == null ) {
			return slice.call( this );
		}

		// Return just the one element from the set
		return num < 0 ? this[ num + this.length ] : this[ num ];
	},

	// Take an array of elements and push it onto the stack
	// (returning the new matched element set)
	pushStack: function( elems ) {

		// Build a new jQuery matched element set
		var ret = jQuery.merge( this.constructor(), elems );

		// Add the old object onto the stack (as a reference)
		ret.prevObject = this;

		// Return the newly-formed element set
		return ret;
	},

	// Execute a callback for every element in the matched set.
	each: function( callback ) {
		return jQuery.each( this, callback );
	},

	map: function( callback ) {
		return this.pushStack( jQuery.map( this, function( elem, i ) {
			return callback.call( elem, i, elem );
		} ) );
	},

	slice: function() {
		return this.pushStack( slice.apply( this, arguments ) );
	},

	first: function() {
		return this.eq( 0 );
	},

	last: function() {
		return this.eq( -1 );
	},

	eq: function( i ) {
		var len = this.length,
			j = +i + ( i < 0 ? len : 0 );
		return this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );
	},

	end: function() {
		return this.prevObject || this.constructor();
	},

	// For internal use only.
	// Behaves like an Array's method, not like a jQuery method.
	push: push,
	sort: arr.sort,
	splice: arr.splice
};

jQuery.extend = jQuery.fn.extend = function() {
	var options, name, src, copy, copyIsArray, clone,
		target = arguments[ 0 ] || {},
		i = 1,
		length = arguments.length,
		deep = false;

	// Handle a deep copy situation
	if ( typeof target === "boolean" ) {
		deep = target;

		// Skip the boolean and the target
		target = arguments[ i ] || {};
		i++;
	}

	// Handle case when target is a string or something (possible in deep copy)
	if ( typeof target !== "object" && !isFunction( target ) ) {
		target = {};
	}

	// Extend jQuery itself if only one argument is passed
	if ( i === length ) {
		target = this;
		i--;
	}

	for ( ; i < length; i++ ) {

		// Only deal with non-null/undefined values
		if ( ( options = arguments[ i ] ) != null ) {

			// Extend the base object
			for ( name in options ) {
				copy = options[ name ];

				// Prevent Object.prototype pollution
				// Prevent never-ending loop
				if ( name === "__proto__" || target === copy ) {
					continue;
				}

				// Recurse if we're merging plain objects or arrays
				if ( deep && copy && ( jQuery.isPlainObject( copy ) ||
					( copyIsArray = Array.isArray( copy ) ) ) ) {
					src = target[ name ];

					// Ensure proper type for the source value
					if ( copyIsArray && !Array.isArray( src ) ) {
						clone = [];
					} else if ( !copyIsArray && !jQuery.isPlainObject( src ) ) {
						clone = {};
					} else {
						clone = src;
					}
					copyIsArray = false;

					// Never move original objects, clone them
					target[ name ] = jQuery.extend( deep, clone, copy );

				// Don't bring in undefined values
				} else if ( copy !== undefined ) {
					target[ name ] = copy;
				}
			}
		}
	}

	// Return the modified object
	return target;
};

jQuery.extend( {

	// Unique for each copy of jQuery on the page
	expando: "jQuery" + ( version + Math.random() ).replace( /\D/g, "" ),

	// Assume jQuery is ready without the ready module
	isReady: true,

	error: function( msg ) {
		throw new Error( msg );
	},

	noop: function() {},

	isPlainObject: function( obj ) {
		var proto, Ctor;

		// Detect obvious negatives
		// Use toString instead of jQuery.type to catch host objects
		if ( !obj || toString.call( obj ) !== "[object Object]" ) {
			return false;
		}

		proto = getProto( obj );

		// Objects with no prototype (e.g., `Object.create( null )`) are plain
		if ( !proto ) {
			return true;
		}

		// Objects with prototype are plain iff they were constructed by a global Object function
		Ctor = hasOwn.call( proto, "constructor" ) && proto.constructor;
		return typeof Ctor === "function" && fnToString.call( Ctor ) === ObjectFunctionString;
	},

	isEmptyObject: function( obj ) {
		var name;

		for ( name in obj ) {
			return false;
		}
		return true;
	},

	// Evaluates a script in a global context
	globalEval: function( code, options ) {
		DOMEval( code, { nonce: options && options.nonce } );
	},

	each: function( obj, callback ) {
		var length, i = 0;

		if ( isArrayLike( obj ) ) {
			length = obj.length;
			for ( ; i < length; i++ ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		} else {
			for ( i in obj ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		}

		return obj;
	},

	// Support: Android <=4.0 only
	trim: function( text ) {
		return text == null ?
			"" :
			( text + "" ).replace( rtrim, "" );
	},

	// results is for internal usage only
	makeArray: function( arr, results ) {
		var ret = results || [];

		if ( arr != null ) {
			if ( isArrayLike( Object( arr ) ) ) {
				jQuery.merge( ret,
					typeof arr === "string" ?
					[ arr ] : arr
				);
			} else {
				push.call( ret, arr );
			}
		}

		return ret;
	},

	inArray: function( elem, arr, i ) {
		return arr == null ? -1 : indexOf.call( arr, elem, i );
	},

	// Support: Android <=4.0 only, PhantomJS 1 only
	// push.apply(_, arraylike) throws on ancient WebKit
	merge: function( first, second ) {
		var len = +second.length,
			j = 0,
			i = first.length;

		for ( ; j < len; j++ ) {
			first[ i++ ] = second[ j ];
		}

		first.length = i;

		return first;
	},

	grep: function( elems, callback, invert ) {
		var callbackInverse,
			matches = [],
			i = 0,
			length = elems.length,
			callbackExpect = !invert;

		// Go through the array, only saving the items
		// that pass the validator function
		for ( ; i < length; i++ ) {
			callbackInverse = !callback( elems[ i ], i );
			if ( callbackInverse !== callbackExpect ) {
				matches.push( elems[ i ] );
			}
		}

		return matches;
	},

	// arg is for internal usage only
	map: function( elems, callback, arg ) {
		var length, value,
			i = 0,
			ret = [];

		// Go through the array, translating each of the items to their new values
		if ( isArrayLike( elems ) ) {
			length = elems.length;
			for ( ; i < length; i++ ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}

		// Go through every key on the object,
		} else {
			for ( i in elems ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}
		}

		// Flatten any nested arrays
		return concat.apply( [], ret );
	},

	// A global GUID counter for objects
	guid: 1,

	// jQuery.support is not used in Core but other projects attach their
	// properties to it so it needs to exist.
	support: support
} );

if ( typeof Symbol === "function" ) {
	jQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];
}

// Populate the class2type map
jQuery.each( "Boolean Number String Function Array Date RegExp Object Error Symbol".split( " " ),
function( i, name ) {
	class2type[ "[object " + name + "]" ] = name.toLowerCase();
} );

function isArrayLike( obj ) {

	// Support: real iOS 8.2 only (not reproducible in simulator)
	// `in` check used to prevent JIT error (gh-2145)
	// hasOwn isn't used here due to false negatives
	// regarding Nodelist length in IE
	var length = !!obj && "length" in obj && obj.length,
		type = toType( obj );

	if ( isFunction( obj ) || isWindow( obj ) ) {
		return false;
	}

	return type === "array" || length === 0 ||
		typeof length === "number" && length > 0 && ( length - 1 ) in obj;
}
var Sizzle =
/*!
 * Sizzle CSS Selector Engine v2.3.4
 * https://sizzlejs.com/
 *
 * Copyright JS Foundation and other contributors
 * Released under the MIT license
 * https://js.foundation/
 *
 * Date: 2019-04-08
 */
(function( window ) {

var i,
	support,
	Expr,
	getText,
	isXML,
	tokenize,
	compile,
	select,
	outermostContext,
	sortInput,
	hasDuplicate,

	// Local document vars
	setDocument,
	document,
	docElem,
	documentIsHTML,
	rbuggyQSA,
	rbuggyMatches,
	matches,
	contains,

	// Instance-specific data
	expando = "sizzle" + 1 * new Date(),
	preferredDoc = window.document,
	dirruns = 0,
	done = 0,
	classCache = createCache(),
	tokenCache = createCache(),
	compilerCache = createCache(),
	nonnativeSelectorCache = createCache(),
	sortOrder = function( a, b ) {
		if ( a === b ) {
			hasDuplicate = true;
		}
		return 0;
	},

	// Instance methods
	hasOwn = ({}).hasOwnProperty,
	arr = [],
	pop = arr.pop,
	push_native = arr.push,
	push = arr.push,
	slice = arr.slice,
	// Use a stripped-down indexOf as it's faster than native
	// https://jsperf.com/thor-indexof-vs-for/5
	indexOf = function( list, elem ) {
		var i = 0,
			len = list.length;
		for ( ; i < len; i++ ) {
			if ( list[i] === elem ) {
				return i;
			}
		}
		return -1;
	},

	booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",

	// Regular expressions

	// http://www.w3.org/TR/css3-selectors/#whitespace
	whitespace = "[\\x20\\t\\r\\n\\f]",

	// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier
	identifier = "(?:\\\\.|[\\w-]|[^\0-\\xa0])+",

	// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors
	attributes = "\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace +
		// Operator (capture 2)
		"*([*^$|!~]?=)" + whitespace +
		// "Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]"
		"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" + whitespace +
		"*\\]",

	pseudos = ":(" + identifier + ")(?:\\((" +
		// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:
		// 1. quoted (capture 3; capture 4 or capture 5)
		"('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" +
		// 2. simple (capture 6)
		"((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" +
		// 3. anything else (capture 2)
		".*" +
		")\\)|)",

	// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
	rwhitespace = new RegExp( whitespace + "+", "g" ),
	rtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g" ),

	rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
	rcombinators = new RegExp( "^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*" ),
	rdescend = new RegExp( whitespace + "|>" ),

	rpseudo = new RegExp( pseudos ),
	ridentifier = new RegExp( "^" + identifier + "$" ),

	matchExpr = {
		"ID": new RegExp( "^#(" + identifier + ")" ),
		"CLASS": new RegExp( "^\\.(" + identifier + ")" ),
		"TAG": new RegExp( "^(" + identifier + "|[*])" ),
		"ATTR": new RegExp( "^" + attributes ),
		"PSEUDO": new RegExp( "^" + pseudos ),
		"CHILD": new RegExp( "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace +
			"*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace +
			"*(\\d+)|))" + whitespace + "*\\)|)", "i" ),
		"bool": new RegExp( "^(?:" + booleans + ")$", "i" ),
		// For use in libraries implementing .is()
		// We use this for POS matching in `select`
		"needsContext": new RegExp( "^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" +
			whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i" )
	},

	rhtml = /HTML$/i,
	rinputs = /^(?:input|select|textarea|button)$/i,
	rheader = /^h\d$/i,

	rnative = /^[^{]+\{\s*\[native \w/,

	// Easily-parseable/retrievable ID or TAG or CLASS selectors
	rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,

	rsibling = /[+~]/,

	// CSS escapes
	// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
	runescape = new RegExp( "\\\\([\\da-f]{1,6}" + whitespace + "?|(" + whitespace + ")|.)", "ig" ),
	funescape = function( _, escaped, escapedWhitespace ) {
		var high = "0x" + escaped - 0x10000;
		// NaN means non-codepoint
		// Support: Firefox<24
		// Workaround erroneous numeric interpretation of +"0x"
		return high !== high || escapedWhitespace ?
			escaped :
			high < 0 ?
				// BMP codepoint
				String.fromCharCode( high + 0x10000 ) :
				// Supplemental Plane codepoint (surrogate pair)
				String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );
	},

	// CSS string/identifier serialization
	// https://drafts.csswg.org/cssom/#common-serializing-idioms
	rcssescape = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,
	fcssescape = function( ch, asCodePoint ) {
		if ( asCodePoint ) {

			// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER
			if ( ch === "\0" ) {
				return "\uFFFD";
			}

			// Control characters and (dependent upon position) numbers get escaped as code points
			return ch.slice( 0, -1 ) + "\\" + ch.charCodeAt( ch.length - 1 ).toString( 16 ) + " ";
		}

		// Other potentially-special ASCII characters get backslash-escaped
		return "\\" + ch;
	},

	// Used for iframes
	// See setDocument()
	// Removing the function wrapper causes a "Permission Denied"
	// error in IE
	unloadHandler = function() {
		setDocument();
	},

	inDisabledFieldset = addCombinator(
		function( elem ) {
			return elem.disabled === true && elem.nodeName.toLowerCase() === "fieldset";
		},
		{ dir: "parentNode", next: "legend" }
	);

// Optimize for push.apply( _, NodeList )
try {
	push.apply(
		(arr = slice.call( preferredDoc.childNodes )),
		preferredDoc.childNodes
	);
	// Support: Android<4.0
	// Detect silently failing push.apply
	arr[ preferredDoc.childNodes.length ].nodeType;
} catch ( e ) {
	push = { apply: arr.length ?

		// Leverage slice if possible
		function( target, els ) {
			push_native.apply( target, slice.call(els) );
		} :

		// Support: IE<9
		// Otherwise append directly
		function( target, els ) {
			var j = target.length,
				i = 0;
			// Can't trust NodeList.length
			while ( (target[j++] = els[i++]) ) {}
			target.length = j - 1;
		}
	};
}

function Sizzle( selector, context, results, seed ) {
	var m, i, elem, nid, match, groups, newSelector,
		newContext = context && context.ownerDocument,

		// nodeType defaults to 9, since context defaults to document
		nodeType = context ? context.nodeType : 9;

	results = results || [];

	// Return early from calls with invalid selector or context
	if ( typeof selector !== "string" || !selector ||
		nodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {

		return results;
	}

	// Try to shortcut find operations (as opposed to filters) in HTML documents
	if ( !seed ) {

		if ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {
			setDocument( context );
		}
		context = context || document;

		if ( documentIsHTML ) {

			// If the selector is sufficiently simple, try using a "get*By*" DOM method
			// (excepting DocumentFragment context, where the methods don't exist)
			if ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {

				// ID selector
				if ( (m = match[1]) ) {

					// Document context
					if ( nodeType === 9 ) {
						if ( (elem = context.getElementById( m )) ) {

							// Support: IE, Opera, Webkit
							// TODO: identify versions
							// getElementById can match elements by name instead of ID
							if ( elem.id === m ) {
								results.push( elem );
								return results;
							}
						} else {
							return results;
						}

					// Element context
					} else {

						// Support: IE, Opera, Webkit
						// TODO: identify versions
						// getElementById can match elements by name instead of ID
						if ( newContext && (elem = newContext.getElementById( m )) &&
							contains( context, elem ) &&
							elem.id === m ) {

							results.push( elem );
							return results;
						}
					}

				// Type selector
				} else if ( match[2] ) {
					push.apply( results, context.getElementsByTagName( selector ) );
					return results;

				// Class selector
				} else if ( (m = match[3]) && support.getElementsByClassName &&
					context.getElementsByClassName ) {

					push.apply( results, context.getElementsByClassName( m ) );
					return results;
				}
			}

			// Take advantage of querySelectorAll
			if ( support.qsa &&
				!nonnativeSelectorCache[ selector + " " ] &&
				(!rbuggyQSA || !rbuggyQSA.test( selector )) &&

				// Support: IE 8 only
				// Exclude object elements
				(nodeType !== 1 || context.nodeName.toLowerCase() !== "object") ) {

				newSelector = selector;
				newContext = context;

				// qSA considers elements outside a scoping root when evaluating child or
				// descendant combinators, which is not what we want.
				// In such cases, we work around the behavior by prefixing every selector in the
				// list with an ID selector referencing the scope context.
				// Thanks to Andrew Dupont for this technique.
				if ( nodeType === 1 && rdescend.test( selector ) ) {

					// Capture the context ID, setting it first if necessary
					if ( (nid = context.getAttribute( "id" )) ) {
						nid = nid.replace( rcssescape, fcssescape );
					} else {
						context.setAttribute( "id", (nid = expando) );
					}

					// Prefix every selector in the list
					groups = tokenize( selector );
					i = groups.length;
					while ( i-- ) {
						groups[i] = "#" + nid + " " + toSelector( groups[i] );
					}
					newSelector = groups.join( "," );

					// Expand context for sibling selectors
					newContext = rsibling.test( selector ) && testContext( context.parentNode ) ||
						context;
				}

				try {
					push.apply( results,
						newContext.querySelectorAll( newSelector )
					);
					return results;
				} catch ( qsaError ) {
					nonnativeSelectorCache( selector, true );
				} finally {
					if ( nid === expando ) {
						context.removeAttribute( "id" );
					}
				}
			}
		}
	}

	// All others
	return select( selector.replace( rtrim, "$1" ), context, results, seed );
}

/**
 * Create key-value caches of limited size
 * @returns {function(string, object)} Returns the Object data after storing it on itself with
 *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
 *	deleting the oldest entry
 */
function createCache() {
	var keys = [];

	function cache( key, value ) {
		// Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
		if ( keys.push( key + " " ) > Expr.cacheLength ) {
			// Only keep the most recent entries
			delete cache[ keys.shift() ];
		}
		return (cache[ key + " " ] = value);
	}
	return cache;
}

/**
 * Mark a function for special use by Sizzle
 * @param {Function} fn The function to mark
 */
function markFunction( fn ) {
	fn[ expando ] = true;
	return fn;
}

/**
 * Support testing using an element
 * @param {Function} fn Passed the created element and returns a boolean result
 */
function assert( fn ) {
	var el = document.createElement("fieldset");

	try {
		return !!fn( el );
	} catch (e) {
		return false;
	} finally {
		// Remove from its parent by default
		if ( el.parentNode ) {
			el.parentNode.removeChild( el );
		}
		// release memory in IE
		el = null;
	}
}

/**
 * Adds the same handler for all of the specified attrs
 * @param {String} attrs Pipe-separated list of attributes
 * @param {Function} handler The method that will be applied
 */
function addHandle( attrs, handler ) {
	var arr = attrs.split("|"),
		i = arr.length;

	while ( i-- ) {
		Expr.attrHandle[ arr[i] ] = handler;
	}
}

/**
 * Checks document order of two siblings
 * @param {Element} a
 * @param {Element} b
 * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
 */
function siblingCheck( a, b ) {
	var cur = b && a,
		diff = cur && a.nodeType === 1 && b.nodeType === 1 &&
			a.sourceIndex - b.sourceIndex;

	// Use IE sourceIndex if available on both nodes
	if ( diff ) {
		return diff;
	}

	// Check if b follows a
	if ( cur ) {
		while ( (cur = cur.nextSibling) ) {
			if ( cur === b ) {
				return -1;
			}
		}
	}

	return a ? 1 : -1;
}

/**
 * Returns a function to use in pseudos for input types
 * @param {String} type
 */
function createInputPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return name === "input" && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for buttons
 * @param {String} type
 */
function createButtonPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return (name === "input" || name === "button") && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for :enabled/:disabled
 * @param {Boolean} disabled true for :disabled; false for :enabled
 */
function createDisabledPseudo( disabled ) {

	// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable
	return function( elem ) {

		// Only certain elements can match :enabled or :disabled
		// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled
		// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled
		if ( "form" in elem ) {

			// Check for inherited disabledness on relevant non-disabled elements:
			// * listed form-associated elements in a disabled fieldset
			//   https://html.spec.whatwg.org/multipage/forms.html#category-listed
			//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled
			// * option elements in a disabled optgroup
			//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled
			// All such elements have a "form" property.
			if ( elem.parentNode && elem.disabled === false ) {

				// Option elements defer to a parent optgroup if present
				if ( "label" in elem ) {
					if ( "label" in elem.parentNode ) {
						return elem.parentNode.disabled === disabled;
					} else {
						return elem.disabled === disabled;
					}
				}

				// Support: IE 6 - 11
				// Use the isDisabled shortcut property to check for disabled fieldset ancestors
				return elem.isDisabled === disabled ||

					// Where there is no isDisabled, check manually
					/* jshint -W018 */
					elem.isDisabled !== !disabled &&
						inDisabledFieldset( elem ) === disabled;
			}

			return elem.disabled === disabled;

		// Try to winnow out elements that can't be disabled before trusting the disabled property.
		// Some victims get caught in our net (label, legend, menu, track), but it shouldn't
		// even exist on them, let alone have a boolean value.
		} else if ( "label" in elem ) {
			return elem.disabled === disabled;
		}

		// Remaining elements are neither :enabled nor :disabled
		return false;
	};
}

/**
 * Returns a function to use in pseudos for positionals
 * @param {Function} fn
 */
function createPositionalPseudo( fn ) {
	return markFunction(function( argument ) {
		argument = +argument;
		return markFunction(function( seed, matches ) {
			var j,
				matchIndexes = fn( [], seed.length, argument ),
				i = matchIndexes.length;

			// Match elements found at the specified indexes
			while ( i-- ) {
				if ( seed[ (j = matchIndexes[i]) ] ) {
					seed[j] = !(matches[j] = seed[j]);
				}
			}
		});
	});
}

/**
 * Checks a node for validity as a Sizzle context
 * @param {Element|Object=} context
 * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
 */
function testContext( context ) {
	return context && typeof context.getElementsByTagName !== "undefined" && context;
}

// Expose support vars for convenience
support = Sizzle.support = {};

/**
 * Detects XML nodes
 * @param {Element|Object} elem An element or a document
 * @returns {Boolean} True iff elem is a non-HTML XML node
 */
isXML = Sizzle.isXML = function( elem ) {
	var namespace = elem.namespaceURI,
		docElem = (elem.ownerDocument || elem).documentElement;

	// Support: IE <=8
	// Assume HTML when documentElement doesn't yet exist, such as inside loading iframes
	// https://bugs.jquery.com/ticket/4833
	return !rhtml.test( namespace || docElem && docElem.nodeName || "HTML" );
};

/**
 * Sets document-related variables once based on the current document
 * @param {Element|Object} [doc] An element or document object to use to set the document
 * @returns {Object} Returns the current document
 */
setDocument = Sizzle.setDocument = function( node ) {
	var hasCompare, subWindow,
		doc = node ? node.ownerDocument || node : preferredDoc;

	// Return early if doc is invalid or already selected
	if ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {
		return document;
	}

	// Update global variables
	document = doc;
	docElem = document.documentElement;
	documentIsHTML = !isXML( document );

	// Support: IE 9-11, Edge
	// Accessing iframe documents after unload throws "permission denied" errors (jQuery #13936)
	if ( preferredDoc !== document &&
		(subWindow = document.defaultView) && subWindow.top !== subWindow ) {

		// Support: IE 11, Edge
		if ( subWindow.addEventListener ) {
			subWindow.addEventListener( "unload", unloadHandler, false );

		// Support: IE 9 - 10 only
		} else if ( subWindow.attachEvent ) {
			subWindow.attachEvent( "onunload", unloadHandler );
		}
	}

	/* Attributes
	---------------------------------------------------------------------- */

	// Support: IE<8
	// Verify that getAttribute really returns attributes and not properties
	// (excepting IE8 booleans)
	support.attributes = assert(function( el ) {
		el.className = "i";
		return !el.getAttribute("className");
	});

	/* getElement(s)By*
	---------------------------------------------------------------------- */

	// Check if getElementsByTagName("*") returns only elements
	support.getElementsByTagName = assert(function( el ) {
		el.appendChild( document.createComment("") );
		return !el.getElementsByTagName("*").length;
	});

	// Support: IE<9
	support.getElementsByClassName = rnative.test( document.getElementsByClassName );

	// Support: IE<10
	// Check if getElementById returns elements by name
	// The broken getElementById methods don't pick up programmatically-set names,
	// so use a roundabout getElementsByName test
	support.getById = assert(function( el ) {
		docElem.appendChild( el ).id = expando;
		return !document.getElementsByName || !document.getElementsByName( expando ).length;
	});

	// ID filter and find
	if ( support.getById ) {
		Expr.filter["ID"] = function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				return elem.getAttribute("id") === attrId;
			};
		};
		Expr.find["ID"] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var elem = context.getElementById( id );
				return elem ? [ elem ] : [];
			}
		};
	} else {
		Expr.filter["ID"] =  function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				var node = typeof elem.getAttributeNode !== "undefined" &&
					elem.getAttributeNode("id");
				return node && node.value === attrId;
			};
		};

		// Support: IE 6 - 7 only
		// getElementById is not reliable as a find shortcut
		Expr.find["ID"] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var node, i, elems,
					elem = context.getElementById( id );

				if ( elem ) {

					// Verify the id attribute
					node = elem.getAttributeNode("id");
					if ( node && node.value === id ) {
						return [ elem ];
					}

					// Fall back on getElementsByName
					elems = context.getElementsByName( id );
					i = 0;
					while ( (elem = elems[i++]) ) {
						node = elem.getAttributeNode("id");
						if ( node && node.value === id ) {
							return [ elem ];
						}
					}
				}

				return [];
			}
		};
	}

	// Tag
	Expr.find["TAG"] = support.getElementsByTagName ?
		function( tag, context ) {
			if ( typeof context.getElementsByTagName !== "undefined" ) {
				return context.getElementsByTagName( tag );

			// DocumentFragment nodes don't have gEBTN
			} else if ( support.qsa ) {
				return context.querySelectorAll( tag );
			}
		} :

		function( tag, context ) {
			var elem,
				tmp = [],
				i = 0,
				// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too
				results = context.getElementsByTagName( tag );

			// Filter out possible comments
			if ( tag === "*" ) {
				while ( (elem = results[i++]) ) {
					if ( elem.nodeType === 1 ) {
						tmp.push( elem );
					}
				}

				return tmp;
			}
			return results;
		};

	// Class
	Expr.find["CLASS"] = support.getElementsByClassName && function( className, context ) {
		if ( typeof context.getElementsByClassName !== "undefined" && documentIsHTML ) {
			return context.getElementsByClassName( className );
		}
	};

	/* QSA/matchesSelector
	---------------------------------------------------------------------- */

	// QSA and matchesSelector support

	// matchesSelector(:active) reports false when true (IE9/Opera 11.5)
	rbuggyMatches = [];

	// qSa(:focus) reports false when true (Chrome 21)
	// We allow this because of a bug in IE8/9 that throws an error
	// whenever `document.activeElement` is accessed on an iframe
	// So, we allow :focus to pass through QSA all the time to avoid the IE error
	// See https://bugs.jquery.com/ticket/13378
	rbuggyQSA = [];

	if ( (support.qsa = rnative.test( document.querySelectorAll )) ) {
		// Build QSA regex
		// Regex strategy adopted from Diego Perini
		assert(function( el ) {
			// Select is set to empty string on purpose
			// This is to test IE's treatment of not explicitly
			// setting a boolean content attribute,
			// since its presence should be enough
			// https://bugs.jquery.com/ticket/12359
			docElem.appendChild( el ).innerHTML = "<a id='" + expando + "'></a>" +
				"<select id='" + expando + "-\r\\' msallowcapture=''>" +
				"<option selected=''></option></select>";

			// Support: IE8, Opera 11-12.16
			// Nothing should be selected when empty strings follow ^= or $= or *=
			// The test attribute must be unknown in Opera but "safe" for WinRT
			// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section
			if ( el.querySelectorAll("[msallowcapture^='']").length ) {
				rbuggyQSA.push( "[*^$]=" + whitespace + "*(?:''|\"\")" );
			}

			// Support: IE8
			// Boolean attributes and "value" are not treated correctly
			if ( !el.querySelectorAll("[selected]").length ) {
				rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );
			}

			// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+
			if ( !el.querySelectorAll( "[id~=" + expando + "-]" ).length ) {
				rbuggyQSA.push("~=");
			}

			// Webkit/Opera - :checked should return selected option elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			// IE8 throws error here and will not see later tests
			if ( !el.querySelectorAll(":checked").length ) {
				rbuggyQSA.push(":checked");
			}

			// Support: Safari 8+, iOS 8+
			// https://bugs.webkit.org/show_bug.cgi?id=136851
			// In-page `selector#id sibling-combinator selector` fails
			if ( !el.querySelectorAll( "a#" + expando + "+*" ).length ) {
				rbuggyQSA.push(".#.+[+~]");
			}
		});

		assert(function( el ) {
			el.innerHTML = "<a href='' disabled='disabled'></a>" +
				"<select disabled='disabled'><option/></select>";

			// Support: Windows 8 Native Apps
			// The type and name attributes are restricted during .innerHTML assignment
			var input = document.createElement("input");
			input.setAttribute( "type", "hidden" );
			el.appendChild( input ).setAttribute( "name", "D" );

			// Support: IE8
			// Enforce case-sensitivity of name attribute
			if ( el.querySelectorAll("[name=d]").length ) {
				rbuggyQSA.push( "name" + whitespace + "*[*^$|!~]?=" );
			}

			// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
			// IE8 throws error here and will not see later tests
			if ( el.querySelectorAll(":enabled").length !== 2 ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Support: IE9-11+
			// IE's :disabled selector does not pick up the children of disabled fieldsets
			docElem.appendChild( el ).disabled = true;
			if ( el.querySelectorAll(":disabled").length !== 2 ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Opera 10-11 does not throw on post-comma invalid pseudos
			el.querySelectorAll("*,:x");
			rbuggyQSA.push(",.*:");
		});
	}

	if ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||
		docElem.webkitMatchesSelector ||
		docElem.mozMatchesSelector ||
		docElem.oMatchesSelector ||
		docElem.msMatchesSelector) )) ) {

		assert(function( el ) {
			// Check to see if it's possible to do matchesSelector
			// on a disconnected node (IE 9)
			support.disconnectedMatch = matches.call( el, "*" );

			// This should fail with an exception
			// Gecko does not error, returns false instead
			matches.call( el, "[s!='']:x" );
			rbuggyMatches.push( "!=", pseudos );
		});
	}

	rbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join("|") );
	rbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join("|") );

	/* Contains
	---------------------------------------------------------------------- */
	hasCompare = rnative.test( docElem.compareDocumentPosition );

	// Element contains another
	// Purposefully self-exclusive
	// As in, an element does not contain itself
	contains = hasCompare || rnative.test( docElem.contains ) ?
		function( a, b ) {
			var adown = a.nodeType === 9 ? a.documentElement : a,
				bup = b && b.parentNode;
			return a === bup || !!( bup && bup.nodeType === 1 && (
				adown.contains ?
					adown.contains( bup ) :
					a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16
			));
		} :
		function( a, b ) {
			if ( b ) {
				while ( (b = b.parentNode) ) {
					if ( b === a ) {
						return true;
					}
				}
			}
			return false;
		};

	/* Sorting
	---------------------------------------------------------------------- */

	// Document order sorting
	sortOrder = hasCompare ?
	function( a, b ) {

		// Flag for duplicate removal
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		// Sort on method existence if only one input has compareDocumentPosition
		var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
		if ( compare ) {
			return compare;
		}

		// Calculate position if both inputs belong to the same document
		compare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?
			a.compareDocumentPosition( b ) :

			// Otherwise we know they are disconnected
			1;

		// Disconnected nodes
		if ( compare & 1 ||
			(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {

			// Choose the first element that is related to our preferred document
			if ( a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {
				return -1;
			}
			if ( b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {
				return 1;
			}

			// Maintain original order
			return sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;
		}

		return compare & 4 ? -1 : 1;
	} :
	function( a, b ) {
		// Exit early if the nodes are identical
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		var cur,
			i = 0,
			aup = a.parentNode,
			bup = b.parentNode,
			ap = [ a ],
			bp = [ b ];

		// Parentless nodes are either documents or disconnected
		if ( !aup || !bup ) {
			return a === document ? -1 :
				b === document ? 1 :
				aup ? -1 :
				bup ? 1 :
				sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;

		// If the nodes are siblings, we can do a quick check
		} else if ( aup === bup ) {
			return siblingCheck( a, b );
		}

		// Otherwise we need full lists of their ancestors for comparison
		cur = a;
		while ( (cur = cur.parentNode) ) {
			ap.unshift( cur );
		}
		cur = b;
		while ( (cur = cur.parentNode) ) {
			bp.unshift( cur );
		}

		// Walk down the tree looking for a discrepancy
		while ( ap[i] === bp[i] ) {
			i++;
		}

		return i ?
			// Do a sibling check if the nodes have a common ancestor
			siblingCheck( ap[i], bp[i] ) :

			// Otherwise nodes in our document sort first
			ap[i] === preferredDoc ? -1 :
			bp[i] === preferredDoc ? 1 :
			0;
	};

	return document;
};

Sizzle.matches = function( expr, elements ) {
	return Sizzle( expr, null, null, elements );
};

Sizzle.matchesSelector = function( elem, expr ) {
	// Set document vars if needed
	if ( ( elem.ownerDocument || elem ) !== document ) {
		setDocument( elem );
	}

	if ( support.matchesSelector && documentIsHTML &&
		!nonnativeSelectorCache[ expr + " " ] &&
		( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&
		( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {

		try {
			var ret = matches.call( elem, expr );

			// IE 9's matchesSelector returns false on disconnected nodes
			if ( ret || support.disconnectedMatch ||
					// As well, disconnected nodes are said to be in a document
					// fragment in IE 9
					elem.document && elem.document.nodeType !== 11 ) {
				return ret;
			}
		} catch (e) {
			nonnativeSelectorCache( expr, true );
		}
	}

	return Sizzle( expr, document, null, [ elem ] ).length > 0;
};

Sizzle.contains = function( context, elem ) {
	// Set document vars if needed
	if ( ( context.ownerDocument || context ) !== document ) {
		setDocument( context );
	}
	return contains( context, elem );
};

Sizzle.attr = function( elem, name ) {
	// Set document vars if needed
	if ( ( elem.ownerDocument || elem ) !== document ) {
		setDocument( elem );
	}

	var fn = Expr.attrHandle[ name.toLowerCase() ],
		// Don't get fooled by Object.prototype properties (jQuery #13807)
		val = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?
			fn( elem, name, !documentIsHTML ) :
			undefined;

	return val !== undefined ?
		val :
		support.attributes || !documentIsHTML ?
			elem.getAttribute( name ) :
			(val = elem.getAttributeNode(name)) && val.specified ?
				val.value :
				null;
};

Sizzle.escape = function( sel ) {
	return (sel + "").replace( rcssescape, fcssescape );
};

Sizzle.error = function( msg ) {
	throw new Error( "Syntax error, unrecognized expression: " + msg );
};

/**
 * Document sorting and removing duplicates
 * @param {ArrayLike} results
 */
Sizzle.uniqueSort = function( results ) {
	var elem,
		duplicates = [],
		j = 0,
		i = 0;

	// Unless we *know* we can detect duplicates, assume their presence
	hasDuplicate = !support.detectDuplicates;
	sortInput = !support.sortStable && results.slice( 0 );
	results.sort( sortOrder );

	if ( hasDuplicate ) {
		while ( (elem = results[i++]) ) {
			if ( elem === results[ i ] ) {
				j = duplicates.push( i );
			}
		}
		while ( j-- ) {
			results.splice( duplicates[ j ], 1 );
		}
	}

	// Clear input after sorting to release objects
	// See https://github.com/jquery/sizzle/pull/225
	sortInput = null;

	return results;
};

/**
 * Utility function for retrieving the text value of an array of DOM nodes
 * @param {Array|Element} elem
 */
getText = Sizzle.getText = function( elem ) {
	var node,
		ret = "",
		i = 0,
		nodeType = elem.nodeType;

	if ( !nodeType ) {
		// If no nodeType, this is expected to be an array
		while ( (node = elem[i++]) ) {
			// Do not traverse comment nodes
			ret += getText( node );
		}
	} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {
		// Use textContent for elements
		// innerText usage removed for consistency of new lines (jQuery #11153)
		if ( typeof elem.textContent === "string" ) {
			return elem.textContent;
		} else {
			// Traverse its children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				ret += getText( elem );
			}
		}
	} else if ( nodeType === 3 || nodeType === 4 ) {
		return elem.nodeValue;
	}
	// Do not include comment or processing instruction nodes

	return ret;
};

Expr = Sizzle.selectors = {

	// Can be adjusted by the user
	cacheLength: 50,

	createPseudo: markFunction,

	match: matchExpr,

	attrHandle: {},

	find: {},

	relative: {
		">": { dir: "parentNode", first: true },
		" ": { dir: "parentNode" },
		"+": { dir: "previousSibling", first: true },
		"~": { dir: "previousSibling" }
	},

	preFilter: {
		"ATTR": function( match ) {
			match[1] = match[1].replace( runescape, funescape );

			// Move the given value to match[3] whether quoted or unquoted
			match[3] = ( match[3] || match[4] || match[5] || "" ).replace( runescape, funescape );

			if ( match[2] === "~=" ) {
				match[3] = " " + match[3] + " ";
			}

			return match.slice( 0, 4 );
		},

		"CHILD": function( match ) {
			/* matches from matchExpr["CHILD"]
				1 type (only|nth|...)
				2 what (child|of-type)
				3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
				4 xn-component of xn+y argument ([+-]?\d*n|)
				5 sign of xn-component
				6 x of xn-component
				7 sign of y-component
				8 y of y-component
			*/
			match[1] = match[1].toLowerCase();

			if ( match[1].slice( 0, 3 ) === "nth" ) {
				// nth-* requires argument
				if ( !match[3] ) {
					Sizzle.error( match[0] );
				}

				// numeric x and y parameters for Expr.filter.CHILD
				// remember that false/true cast respectively to 0/1
				match[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === "even" || match[3] === "odd" ) );
				match[5] = +( ( match[7] + match[8] ) || match[3] === "odd" );

			// other types prohibit arguments
			} else if ( match[3] ) {
				Sizzle.error( match[0] );
			}

			return match;
		},

		"PSEUDO": function( match ) {
			var excess,
				unquoted = !match[6] && match[2];

			if ( matchExpr["CHILD"].test( match[0] ) ) {
				return null;
			}

			// Accept quoted arguments as-is
			if ( match[3] ) {
				match[2] = match[4] || match[5] || "";

			// Strip excess characters from unquoted arguments
			} else if ( unquoted && rpseudo.test( unquoted ) &&
				// Get excess from tokenize (recursively)
				(excess = tokenize( unquoted, true )) &&
				// advance to the next closing parenthesis
				(excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length) ) {

				// excess is a negative index
				match[0] = match[0].slice( 0, excess );
				match[2] = unquoted.slice( 0, excess );
			}

			// Return only captures needed by the pseudo filter method (type and argument)
			return match.slice( 0, 3 );
		}
	},

	filter: {

		"TAG": function( nodeNameSelector ) {
			var nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();
			return nodeNameSelector === "*" ?
				function() { return true; } :
				function( elem ) {
					return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
				};
		},

		"CLASS": function( className ) {
			var pattern = classCache[ className + " " ];

			return pattern ||
				(pattern = new RegExp( "(^|" + whitespace + ")" + className + "(" + whitespace + "|$)" )) &&
				classCache( className, function( elem ) {
					return pattern.test( typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== "undefined" && elem.getAttribute("class") || "" );
				});
		},

		"ATTR": function( name, operator, check ) {
			return function( elem ) {
				var result = Sizzle.attr( elem, name );

				if ( result == null ) {
					return operator === "!=";
				}
				if ( !operator ) {
					return true;
				}

				result += "";

				return operator === "=" ? result === check :
					operator === "!=" ? result !== check :
					operator === "^=" ? check && result.indexOf( check ) === 0 :
					operator === "*=" ? check && result.indexOf( check ) > -1 :
					operator === "$=" ? check && result.slice( -check.length ) === check :
					operator === "~=" ? ( " " + result.replace( rwhitespace, " " ) + " " ).indexOf( check ) > -1 :
					operator === "|=" ? result === check || result.slice( 0, check.length + 1 ) === check + "-" :
					false;
			};
		},

		"CHILD": function( type, what, argument, first, last ) {
			var simple = type.slice( 0, 3 ) !== "nth",
				forward = type.slice( -4 ) !== "last",
				ofType = what === "of-type";

			return first === 1 && last === 0 ?

				// Shortcut for :nth-*(n)
				function( elem ) {
					return !!elem.parentNode;
				} :

				function( elem, context, xml ) {
					var cache, uniqueCache, outerCache, node, nodeIndex, start,
						dir = simple !== forward ? "nextSibling" : "previousSibling",
						parent = elem.parentNode,
						name = ofType && elem.nodeName.toLowerCase(),
						useCache = !xml && !ofType,
						diff = false;

					if ( parent ) {

						// :(first|last|only)-(child|of-type)
						if ( simple ) {
							while ( dir ) {
								node = elem;
								while ( (node = node[ dir ]) ) {
									if ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) {

										return false;
									}
								}
								// Reverse direction for :only-* (if we haven't yet done so)
								start = dir = type === "only" && !start && "nextSibling";
							}
							return true;
						}

						start = [ forward ? parent.firstChild : parent.lastChild ];

						// non-xml :nth-child(...) stores cache data on `parent`
						if ( forward && useCache ) {

							// Seek `elem` from a previously-cached index

							// ...in a gzip-friendly way
							node = parent;
							outerCache = node[ expando ] || (node[ expando ] = {});

							// Support: IE <9 only
							// Defend against cloned attroperties (jQuery gh-1709)
							uniqueCache = outerCache[ node.uniqueID ] ||
								(outerCache[ node.uniqueID ] = {});

							cache = uniqueCache[ type ] || [];
							nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
							diff = nodeIndex && cache[ 2 ];
							node = nodeIndex && parent.childNodes[ nodeIndex ];

							while ( (node = ++nodeIndex && node && node[ dir ] ||

								// Fallback to seeking `elem` from the start
								(diff = nodeIndex = 0) || start.pop()) ) {

								// When found, cache indexes on `parent` and break
								if ( node.nodeType === 1 && ++diff && node === elem ) {
									uniqueCache[ type ] = [ dirruns, nodeIndex, diff ];
									break;
								}
							}

						} else {
							// Use previously-cached element index if available
							if ( useCache ) {
								// ...in a gzip-friendly way
								node = elem;
								outerCache = node[ expando ] || (node[ expando ] = {});

								// Support: IE <9 only
								// Defend against cloned attroperties (jQuery gh-1709)
								uniqueCache = outerCache[ node.uniqueID ] ||
									(outerCache[ node.uniqueID ] = {});

								cache = uniqueCache[ type ] || [];
								nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
								diff = nodeIndex;
							}

							// xml :nth-child(...)
							// or :nth-last-child(...) or :nth(-last)?-of-type(...)
							if ( diff === false ) {
								// Use the same loop as above to seek `elem` from the start
								while ( (node = ++nodeIndex && node && node[ dir ] ||
									(diff = nodeIndex = 0) || start.pop()) ) {

									if ( ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) &&
										++diff ) {

										// Cache the index of each encountered element
										if ( useCache ) {
											outerCache = node[ expando ] || (node[ expando ] = {});

											// Support: IE <9 only
											// Defend against cloned attroperties (jQuery gh-1709)
											uniqueCache = outerCache[ node.uniqueID ] ||
												(outerCache[ node.uniqueID ] = {});

											uniqueCache[ type ] = [ dirruns, diff ];
										}

										if ( node === elem ) {
											break;
										}
									}
								}
							}
						}

						// Incorporate the offset, then check against cycle size
						diff -= last;
						return diff === first || ( diff % first === 0 && diff / first >= 0 );
					}
				};
		},

		"PSEUDO": function( pseudo, argument ) {
			// pseudo-class names are case-insensitive
			// http://www.w3.org/TR/selectors/#pseudo-classes
			// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
			// Remember that setFilters inherits from pseudos
			var args,
				fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||
					Sizzle.error( "unsupported pseudo: " + pseudo );

			// The user may use createPseudo to indicate that
			// arguments are needed to create the filter function
			// just as Sizzle does
			if ( fn[ expando ] ) {
				return fn( argument );
			}

			// But maintain support for old signatures
			if ( fn.length > 1 ) {
				args = [ pseudo, pseudo, "", argument ];
				return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?
					markFunction(function( seed, matches ) {
						var idx,
							matched = fn( seed, argument ),
							i = matched.length;
						while ( i-- ) {
							idx = indexOf( seed, matched[i] );
							seed[ idx ] = !( matches[ idx ] = matched[i] );
						}
					}) :
					function( elem ) {
						return fn( elem, 0, args );
					};
			}

			return fn;
		}
	},

	pseudos: {
		// Potentially complex pseudos
		"not": markFunction(function( selector ) {
			// Trim the selector passed to compile
			// to avoid treating leading and trailing
			// spaces as combinators
			var input = [],
				results = [],
				matcher = compile( selector.replace( rtrim, "$1" ) );

			return matcher[ expando ] ?
				markFunction(function( seed, matches, context, xml ) {
					var elem,
						unmatched = matcher( seed, null, xml, [] ),
						i = seed.length;

					// Match elements unmatched by `matcher`
					while ( i-- ) {
						if ( (elem = unmatched[i]) ) {
							seed[i] = !(matches[i] = elem);
						}
					}
				}) :
				function( elem, context, xml ) {
					input[0] = elem;
					matcher( input, null, xml, results );
					// Don't keep the element (issue #299)
					input[0] = null;
					return !results.pop();
				};
		}),

		"has": markFunction(function( selector ) {
			return function( elem ) {
				return Sizzle( selector, elem ).length > 0;
			};
		}),

		"contains": markFunction(function( text ) {
			text = text.replace( runescape, funescape );
			return function( elem ) {
				return ( elem.textContent || getText( elem ) ).indexOf( text ) > -1;
			};
		}),

		// "Whether an element is represented by a :lang() selector
		// is based solely on the element's language value
		// being equal to the identifier C,
		// or beginning with the identifier C immediately followed by "-".
		// The matching of C against the element's language value is performed case-insensitively.
		// The identifier C does not have to be a valid language name."
		// http://www.w3.org/TR/selectors/#lang-pseudo
		"lang": markFunction( function( lang ) {
			// lang value must be a valid identifier
			if ( !ridentifier.test(lang || "") ) {
				Sizzle.error( "unsupported lang: " + lang );
			}
			lang = lang.replace( runescape, funescape ).toLowerCase();
			return function( elem ) {
				var elemLang;
				do {
					if ( (elemLang = documentIsHTML ?
						elem.lang :
						elem.getAttribute("xml:lang") || elem.getAttribute("lang")) ) {

						elemLang = elemLang.toLowerCase();
						return elemLang === lang || elemLang.indexOf( lang + "-" ) === 0;
					}
				} while ( (elem = elem.parentNode) && elem.nodeType === 1 );
				return false;
			};
		}),

		// Miscellaneous
		"target": function( elem ) {
			var hash = window.location && window.location.hash;
			return hash && hash.slice( 1 ) === elem.id;
		},

		"root": function( elem ) {
			return elem === docElem;
		},

		"focus": function( elem ) {
			return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
		},

		// Boolean properties
		"enabled": createDisabledPseudo( false ),
		"disabled": createDisabledPseudo( true ),

		"checked": function( elem ) {
			// In CSS3, :checked should return both checked and selected elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			var nodeName = elem.nodeName.toLowerCase();
			return (nodeName === "input" && !!elem.checked) || (nodeName === "option" && !!elem.selected);
		},

		"selected": function( elem ) {
			// Accessing this property makes selected-by-default
			// options in Safari work properly
			if ( elem.parentNode ) {
				elem.parentNode.selectedIndex;
			}

			return elem.selected === true;
		},

		// Contents
		"empty": function( elem ) {
			// http://www.w3.org/TR/selectors/#empty-pseudo
			// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
			//   but not by others (comment: 8; processing instruction: 7; etc.)
			// nodeType < 6 works because attributes (2) do not appear as children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				if ( elem.nodeType < 6 ) {
					return false;
				}
			}
			return true;
		},

		"parent": function( elem ) {
			return !Expr.pseudos["empty"]( elem );
		},

		// Element/input types
		"header": function( elem ) {
			return rheader.test( elem.nodeName );
		},

		"input": function( elem ) {
			return rinputs.test( elem.nodeName );
		},

		"button": function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return name === "input" && elem.type === "button" || name === "button";
		},

		"text": function( elem ) {
			var attr;
			return elem.nodeName.toLowerCase() === "input" &&
				elem.type === "text" &&

				// Support: IE<8
				// New HTML5 attribute values (e.g., "search") appear with elem.type === "text"
				( (attr = elem.getAttribute("type")) == null || attr.toLowerCase() === "text" );
		},

		// Position-in-collection
		"first": createPositionalPseudo(function() {
			return [ 0 ];
		}),

		"last": createPositionalPseudo(function( matchIndexes, length ) {
			return [ length - 1 ];
		}),

		"eq": createPositionalPseudo(function( matchIndexes, length, argument ) {
			return [ argument < 0 ? argument + length : argument ];
		}),

		"even": createPositionalPseudo(function( matchIndexes, length ) {
			var i = 0;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"odd": createPositionalPseudo(function( matchIndexes, length ) {
			var i = 1;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"lt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			var i = argument < 0 ?
				argument + length :
				argument > length ?
					length :
					argument;
			for ( ; --i >= 0; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"gt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; ++i < length; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		})
	}
};

Expr.pseudos["nth"] = Expr.pseudos["eq"];

// Add button/input type pseudos
for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {
	Expr.pseudos[ i ] = createInputPseudo( i );
}
for ( i in { submit: true, reset: true } ) {
	Expr.pseudos[ i ] = createButtonPseudo( i );
}

// Easy API for creating new setFilters
function setFilters() {}
setFilters.prototype = Expr.filters = Expr.pseudos;
Expr.setFilters = new setFilters();

tokenize = Sizzle.tokenize = function( selector, parseOnly ) {
	var matched, match, tokens, type,
		soFar, groups, preFilters,
		cached = tokenCache[ selector + " " ];

	if ( cached ) {
		return parseOnly ? 0 : cached.slice( 0 );
	}

	soFar = selector;
	groups = [];
	preFilters = Expr.preFilter;

	while ( soFar ) {

		// Comma and first run
		if ( !matched || (match = rcomma.exec( soFar )) ) {
			if ( match ) {
				// Don't consume trailing commas as valid
				soFar = soFar.slice( match[0].length ) || soFar;
			}
			groups.push( (tokens = []) );
		}

		matched = false;

		// Combinators
		if ( (match = rcombinators.exec( soFar )) ) {
			matched = match.shift();
			tokens.push({
				value: matched,
				// Cast descendant combinators to space
				type: match[0].replace( rtrim, " " )
			});
			soFar = soFar.slice( matched.length );
		}

		// Filters
		for ( type in Expr.filter ) {
			if ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||
				(match = preFilters[ type ]( match ))) ) {
				matched = match.shift();
				tokens.push({
					value: matched,
					type: type,
					matches: match
				});
				soFar = soFar.slice( matched.length );
			}
		}

		if ( !matched ) {
			break;
		}
	}

	// Return the length of the invalid excess
	// if we're just parsing
	// Otherwise, throw an error or return tokens
	return parseOnly ?
		soFar.length :
		soFar ?
			Sizzle.error( selector ) :
			// Cache the tokens
			tokenCache( selector, groups ).slice( 0 );
};

function toSelector( tokens ) {
	var i = 0,
		len = tokens.length,
		selector = "";
	for ( ; i < len; i++ ) {
		selector += tokens[i].value;
	}
	return selector;
}

function addCombinator( matcher, combinator, base ) {
	var dir = combinator.dir,
		skip = combinator.next,
		key = skip || dir,
		checkNonElements = base && key === "parentNode",
		doneName = done++;

	return combinator.first ?
		// Check against closest ancestor/preceding element
		function( elem, context, xml ) {
			while ( (elem = elem[ dir ]) ) {
				if ( elem.nodeType === 1 || checkNonElements ) {
					return matcher( elem, context, xml );
				}
			}
			return false;
		} :

		// Check against all ancestor/preceding elements
		function( elem, context, xml ) {
			var oldCache, uniqueCache, outerCache,
				newCache = [ dirruns, doneName ];

			// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching
			if ( xml ) {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						if ( matcher( elem, context, xml ) ) {
							return true;
						}
					}
				}
			} else {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						outerCache = elem[ expando ] || (elem[ expando ] = {});

						// Support: IE <9 only
						// Defend against cloned attroperties (jQuery gh-1709)
						uniqueCache = outerCache[ elem.uniqueID ] || (outerCache[ elem.uniqueID ] = {});

						if ( skip && skip === elem.nodeName.toLowerCase() ) {
							elem = elem[ dir ] || elem;
						} else if ( (oldCache = uniqueCache[ key ]) &&
							oldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {

							// Assign to newCache so results back-propagate to previous elements
							return (newCache[ 2 ] = oldCache[ 2 ]);
						} else {
							// Reuse newcache so results back-propagate to previous elements
							uniqueCache[ key ] = newCache;

							// A match means we're done; a fail means we have to keep checking
							if ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {
								return true;
							}
						}
					}
				}
			}
			return false;
		};
}

function elementMatcher( matchers ) {
	return matchers.length > 1 ?
		function( elem, context, xml ) {
			var i = matchers.length;
			while ( i-- ) {
				if ( !matchers[i]( elem, context, xml ) ) {
					return false;
				}
			}
			return true;
		} :
		matchers[0];
}

function multipleContexts( selector, contexts, results ) {
	var i = 0,
		len = contexts.length;
	for ( ; i < len; i++ ) {
		Sizzle( selector, contexts[i], results );
	}
	return results;
}

function condense( unmatched, map, filter, context, xml ) {
	var elem,
		newUnmatched = [],
		i = 0,
		len = unmatched.length,
		mapped = map != null;

	for ( ; i < len; i++ ) {
		if ( (elem = unmatched[i]) ) {
			if ( !filter || filter( elem, context, xml ) ) {
				newUnmatched.push( elem );
				if ( mapped ) {
					map.push( i );
				}
			}
		}
	}

	return newUnmatched;
}

function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
	if ( postFilter && !postFilter[ expando ] ) {
		postFilter = setMatcher( postFilter );
	}
	if ( postFinder && !postFinder[ expando ] ) {
		postFinder = setMatcher( postFinder, postSelector );
	}
	return markFunction(function( seed, results, context, xml ) {
		var temp, i, elem,
			preMap = [],
			postMap = [],
			preexisting = results.length,

			// Get initial elements from seed or context
			elems = seed || multipleContexts( selector || "*", context.nodeType ? [ context ] : context, [] ),

			// Prefilter to get matcher input, preserving a map for seed-results synchronization
			matcherIn = preFilter && ( seed || !selector ) ?
				condense( elems, preMap, preFilter, context, xml ) :
				elems,

			matcherOut = matcher ?
				// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
				postFinder || ( seed ? preFilter : preexisting || postFilter ) ?

					// ...intermediate processing is necessary
					[] :

					// ...otherwise use results directly
					results :
				matcherIn;

		// Find primary matches
		if ( matcher ) {
			matcher( matcherIn, matcherOut, context, xml );
		}

		// Apply postFilter
		if ( postFilter ) {
			temp = condense( matcherOut, postMap );
			postFilter( temp, [], context, xml );

			// Un-match failing elements by moving them back to matcherIn
			i = temp.length;
			while ( i-- ) {
				if ( (elem = temp[i]) ) {
					matcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);
				}
			}
		}

		if ( seed ) {
			if ( postFinder || preFilter ) {
				if ( postFinder ) {
					// Get the final matcherOut by condensing this intermediate into postFinder contexts
					temp = [];
					i = matcherOut.length;
					while ( i-- ) {
						if ( (elem = matcherOut[i]) ) {
							// Restore matcherIn since elem is not yet a final match
							temp.push( (matcherIn[i] = elem) );
						}
					}
					postFinder( null, (matcherOut = []), temp, xml );
				}

				// Move matched elements from seed to results to keep them synchronized
				i = matcherOut.length;
				while ( i-- ) {
					if ( (elem = matcherOut[i]) &&
						(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {

						seed[temp] = !(results[temp] = elem);
					}
				}
			}

		// Add elements to results, through postFinder if defined
		} else {
			matcherOut = condense(
				matcherOut === results ?
					matcherOut.splice( preexisting, matcherOut.length ) :
					matcherOut
			);
			if ( postFinder ) {
				postFinder( null, results, matcherOut, xml );
			} else {
				push.apply( results, matcherOut );
			}
		}
	});
}

function matcherFromTokens( tokens ) {
	var checkContext, matcher, j,
		len = tokens.length,
		leadingRelative = Expr.relative[ tokens[0].type ],
		implicitRelative = leadingRelative || Expr.relative[" "],
		i = leadingRelative ? 1 : 0,

		// The foundational matcher ensures that elements are reachable from top-level context(s)
		matchContext = addCombinator( function( elem ) {
			return elem === checkContext;
		}, implicitRelative, true ),
		matchAnyContext = addCombinator( function( elem ) {
			return indexOf( checkContext, elem ) > -1;
		}, implicitRelative, true ),
		matchers = [ function( elem, context, xml ) {
			var ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (
				(checkContext = context).nodeType ?
					matchContext( elem, context, xml ) :
					matchAnyContext( elem, context, xml ) );
			// Avoid hanging onto element (issue #299)
			checkContext = null;
			return ret;
		} ];

	for ( ; i < len; i++ ) {
		if ( (matcher = Expr.relative[ tokens[i].type ]) ) {
			matchers = [ addCombinator(elementMatcher( matchers ), matcher) ];
		} else {
			matcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );

			// Return special upon seeing a positional matcher
			if ( matcher[ expando ] ) {
				// Find the next relative operator (if any) for proper handling
				j = ++i;
				for ( ; j < len; j++ ) {
					if ( Expr.relative[ tokens[j].type ] ) {
						break;
					}
				}
				return setMatcher(
					i > 1 && elementMatcher( matchers ),
					i > 1 && toSelector(
						// If the preceding token was a descendant combinator, insert an implicit any-element `*`
						tokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === " " ? "*" : "" })
					).replace( rtrim, "$1" ),
					matcher,
					i < j && matcherFromTokens( tokens.slice( i, j ) ),
					j < len && matcherFromTokens( (tokens = tokens.slice( j )) ),
					j < len && toSelector( tokens )
				);
			}
			matchers.push( matcher );
		}
	}

	return elementMatcher( matchers );
}

function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
	var bySet = setMatchers.length > 0,
		byElement = elementMatchers.length > 0,
		superMatcher = function( seed, context, xml, results, outermost ) {
			var elem, j, matcher,
				matchedCount = 0,
				i = "0",
				unmatched = seed && [],
				setMatched = [],
				contextBackup = outermostContext,
				// We must always have either seed elements or outermost context
				elems = seed || byElement && Expr.find["TAG"]( "*", outermost ),
				// Use integer dirruns iff this is the outermost matcher
				dirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),
				len = elems.length;

			if ( outermost ) {
				outermostContext = context === document || context || outermost;
			}

			// Add elements passing elementMatchers directly to results
			// Support: IE<9, Safari
			// Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id
			for ( ; i !== len && (elem = elems[i]) != null; i++ ) {
				if ( byElement && elem ) {
					j = 0;
					if ( !context && elem.ownerDocument !== document ) {
						setDocument( elem );
						xml = !documentIsHTML;
					}
					while ( (matcher = elementMatchers[j++]) ) {
						if ( matcher( elem, context || document, xml) ) {
							results.push( elem );
							break;
						}
					}
					if ( outermost ) {
						dirruns = dirrunsUnique;
					}
				}

				// Track unmatched elements for set filters
				if ( bySet ) {
					// They will have gone through all possible matchers
					if ( (elem = !matcher && elem) ) {
						matchedCount--;
					}

					// Lengthen the array for every element, matched or not
					if ( seed ) {
						unmatched.push( elem );
					}
				}
			}

			// `i` is now the count of elements visited above, and adding it to `matchedCount`
			// makes the latter nonnegative.
			matchedCount += i;

			// Apply set filters to unmatched elements
			// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`
			// equals `i`), unless we didn't visit _any_ elements in the above loop because we have
			// no element matchers and no seed.
			// Incrementing an initially-string "0" `i` allows `i` to remain a string only in that
			// case, which will result in a "00" `matchedCount` that differs from `i` but is also
			// numerically zero.
			if ( bySet && i !== matchedCount ) {
				j = 0;
				while ( (matcher = setMatchers[j++]) ) {
					matcher( unmatched, setMatched, context, xml );
				}

				if ( seed ) {
					// Reintegrate element matches to eliminate the need for sorting
					if ( matchedCount > 0 ) {
						while ( i-- ) {
							if ( !(unmatched[i] || setMatched[i]) ) {
								setMatched[i] = pop.call( results );
							}
						}
					}

					// Discard index placeholder values to get only actual matches
					setMatched = condense( setMatched );
				}

				// Add matches to results
				push.apply( results, setMatched );

				// Seedless set matches succeeding multiple successful matchers stipulate sorting
				if ( outermost && !seed && setMatched.length > 0 &&
					( matchedCount + setMatchers.length ) > 1 ) {

					Sizzle.uniqueSort( results );
				}
			}

			// Override manipulation of globals by nested matchers
			if ( outermost ) {
				dirruns = dirrunsUnique;
				outermostContext = contextBackup;
			}

			return unmatched;
		};

	return bySet ?
		markFunction( superMatcher ) :
		superMatcher;
}

compile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {
	var i,
		setMatchers = [],
		elementMatchers = [],
		cached = compilerCache[ selector + " " ];

	if ( !cached ) {
		// Generate a function of recursive functions that can be used to check each element
		if ( !match ) {
			match = tokenize( selector );
		}
		i = match.length;
		while ( i-- ) {
			cached = matcherFromTokens( match[i] );
			if ( cached[ expando ] ) {
				setMatchers.push( cached );
			} else {
				elementMatchers.push( cached );
			}
		}

		// Cache the compiled function
		cached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );

		// Save selector and tokenization
		cached.selector = selector;
	}
	return cached;
};

/**
 * A low-level selection function that works with Sizzle's compiled
 *  selector functions
 * @param {String|Function} selector A selector or a pre-compiled
 *  selector function built with Sizzle.compile
 * @param {Element} context
 * @param {Array} [results]
 * @param {Array} [seed] A set of elements to match against
 */
select = Sizzle.select = function( selector, context, results, seed ) {
	var i, tokens, token, type, find,
		compiled = typeof selector === "function" && selector,
		match = !seed && tokenize( (selector = compiled.selector || selector) );

	results = results || [];

	// Try to minimize operations if there is only one selector in the list and no seed
	// (the latter of which guarantees us context)
	if ( match.length === 1 ) {

		// Reduce context if the leading compound selector is an ID
		tokens = match[0] = match[0].slice( 0 );
		if ( tokens.length > 2 && (token = tokens[0]).type === "ID" &&
				context.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[1].type ] ) {

			context = ( Expr.find["ID"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];
			if ( !context ) {
				return results;

			// Precompiled matchers will still verify ancestry, so step up a level
			} else if ( compiled ) {
				context = context.parentNode;
			}

			selector = selector.slice( tokens.shift().value.length );
		}

		// Fetch a seed set for right-to-left matching
		i = matchExpr["needsContext"].test( selector ) ? 0 : tokens.length;
		while ( i-- ) {
			token = tokens[i];

			// Abort if we hit a combinator
			if ( Expr.relative[ (type = token.type) ] ) {
				break;
			}
			if ( (find = Expr.find[ type ]) ) {
				// Search, expanding context for leading sibling combinators
				if ( (seed = find(
					token.matches[0].replace( runescape, funescape ),
					rsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context
				)) ) {

					// If seed is empty or no tokens remain, we can return early
					tokens.splice( i, 1 );
					selector = seed.length && toSelector( tokens );
					if ( !selector ) {
						push.apply( results, seed );
						return results;
					}

					break;
				}
			}
		}
	}

	// Compile and execute a filtering function if one is not provided
	// Provide `match` to avoid retokenization if we modified the selector above
	( compiled || compile( selector, match ) )(
		seed,
		context,
		!documentIsHTML,
		results,
		!context || rsibling.test( selector ) && testContext( context.parentNode ) || context
	);
	return results;
};

// One-time assignments

// Sort stability
support.sortStable = expando.split("").sort( sortOrder ).join("") === expando;

// Support: Chrome 14-35+
// Always assume duplicates if they aren't passed to the comparison function
support.detectDuplicates = !!hasDuplicate;

// Initialize against the default document
setDocument();

// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
// Detached nodes confoundingly follow *each other*
support.sortDetached = assert(function( el ) {
	// Should return 1, but returns 4 (following)
	return el.compareDocumentPosition( document.createElement("fieldset") ) & 1;
});

// Support: IE<8
// Prevent attribute/property "interpolation"
// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
if ( !assert(function( el ) {
	el.innerHTML = "<a href='#'></a>";
	return el.firstChild.getAttribute("href") === "#" ;
}) ) {
	addHandle( "type|href|height|width", function( elem, name, isXML ) {
		if ( !isXML ) {
			return elem.getAttribute( name, name.toLowerCase() === "type" ? 1 : 2 );
		}
	});
}

// Support: IE<9
// Use defaultValue in place of getAttribute("value")
if ( !support.attributes || !assert(function( el ) {
	el.innerHTML = "<input/>";
	el.firstChild.setAttribute( "value", "" );
	return el.firstChild.getAttribute( "value" ) === "";
}) ) {
	addHandle( "value", function( elem, name, isXML ) {
		if ( !isXML && elem.nodeName.toLowerCase() === "input" ) {
			return elem.defaultValue;
		}
	});
}

// Support: IE<9
// Use getAttributeNode to fetch booleans when getAttribute lies
if ( !assert(function( el ) {
	return el.getAttribute("disabled") == null;
}) ) {
	addHandle( booleans, function( elem, name, isXML ) {
		var val;
		if ( !isXML ) {
			return elem[ name ] === true ? name.toLowerCase() :
					(val = elem.getAttributeNode( name )) && val.specified ?
					val.value :
				null;
		}
	});
}

return Sizzle;

})( window );



jQuery.find = Sizzle;
jQuery.expr = Sizzle.selectors;

// Deprecated
jQuery.expr[ ":" ] = jQuery.expr.pseudos;
jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;
jQuery.text = Sizzle.getText;
jQuery.isXMLDoc = Sizzle.isXML;
jQuery.contains = Sizzle.contains;
jQuery.escapeSelector = Sizzle.escape;




var dir = function( elem, dir, until ) {
	var matched = [],
		truncate = until !== undefined;

	while ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {
		if ( elem.nodeType === 1 ) {
			if ( truncate && jQuery( elem ).is( until ) ) {
				break;
			}
			matched.push( elem );
		}
	}
	return matched;
};


var siblings = function( n, elem ) {
	var matched = [];

	for ( ; n; n = n.nextSibling ) {
		if ( n.nodeType === 1 && n !== elem ) {
			matched.push( n );
		}
	}

	return matched;
};


var rneedsContext = jQuery.expr.match.needsContext;



function nodeName( elem, name ) {

  return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();

};
var rsingleTag = ( /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i );



// Implement the identical functionality for filter and not
function winnow( elements, qualifier, not ) {
	if ( isFunction( qualifier ) ) {
		return jQuery.grep( elements, function( elem, i ) {
			return !!qualifier.call( elem, i, elem ) !== not;
		} );
	}

	// Single element
	if ( qualifier.nodeType ) {
		return jQuery.grep( elements, function( elem ) {
			return ( elem === qualifier ) !== not;
		} );
	}

	// Arraylike of elements (jQuery, arguments, Array)
	if ( typeof qualifier !== "string" ) {
		return jQuery.grep( elements, function( elem ) {
			return ( indexOf.call( qualifier, elem ) > -1 ) !== not;
		} );
	}

	// Filtered directly for both simple and complex selectors
	return jQuery.filter( qualifier, elements, not );
}

jQuery.filter = function( expr, elems, not ) {
	var elem = elems[ 0 ];

	if ( not ) {
		expr = ":not(" + expr + ")";
	}

	if ( elems.length === 1 && elem.nodeType === 1 ) {
		return jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];
	}

	return jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {
		return elem.nodeType === 1;
	} ) );
};

jQuery.fn.extend( {
	find: function( selector ) {
		var i, ret,
			len = this.length,
			self = this;

		if ( typeof selector !== "string" ) {
			return this.pushStack( jQuery( selector ).filter( function() {
				for ( i = 0; i < len; i++ ) {
					if ( jQuery.contains( self[ i ], this ) ) {
						return true;
					}
				}
			} ) );
		}

		ret = this.pushStack( [] );

		for ( i = 0; i < len; i++ ) {
			jQuery.find( selector, self[ i ], ret );
		}

		return len > 1 ? jQuery.uniqueSort( ret ) : ret;
	},
	filter: function( selector ) {
		return this.pushStack( winnow( this, selector || [], false ) );
	},
	not: function( selector ) {
		return this.pushStack( winnow( this, selector || [], true ) );
	},
	is: function( selector ) {
		return !!winnow(
			this,

			// If this is a positional/relative selector, check membership in the returned set
			// so $("p:first").is("p:last") won't return true for a doc with two "p".
			typeof selector === "string" && rneedsContext.test( selector ) ?
				jQuery( selector ) :
				selector || [],
			false
		).length;
	}
} );


// Initialize a jQuery object


// A central reference to the root jQuery(document)
var rootjQuery,

	// A simple way to check for HTML strings
	// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
	// Strict HTML recognition (#11290: must start with <)
	// Shortcut simple #id case for speed
	rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,

	init = jQuery.fn.init = function( selector, context, root ) {
		var match, elem;

		// HANDLE: $(""), $(null), $(undefined), $(false)
		if ( !selector ) {
			return this;
		}

		// Method init() accepts an alternate rootjQuery
		// so migrate can support jQuery.sub (gh-2101)
		root = root || rootjQuery;

		// Handle HTML strings
		if ( typeof selector === "string" ) {
			if ( selector[ 0 ] === "<" &&
				selector[ selector.length - 1 ] === ">" &&
				selector.length >= 3 ) {

				// Assume that strings that start and end with <> are HTML and skip the regex check
				match = [ null, selector, null ];

			} else {
				match = rquickExpr.exec( selector );
			}

			// Match html or make sure no context is specified for #id
			if ( match && ( match[ 1 ] || !context ) ) {

				// HANDLE: $(html) -> $(array)
				if ( match[ 1 ] ) {
					context = context instanceof jQuery ? context[ 0 ] : context;

					// Option to run scripts is true for back-compat
					// Intentionally let the error be thrown if parseHTML is not present
					jQuery.merge( this, jQuery.parseHTML(
						match[ 1 ],
						context && context.nodeType ? context.ownerDocument || context : document,
						true
					) );

					// HANDLE: $(html, props)
					if ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {
						for ( match in context ) {

							// Properties of context are called as methods if possible
							if ( isFunction( this[ match ] ) ) {
								this[ match ]( context[ match ] );

							// ...and otherwise set as attributes
							} else {
								this.attr( match, context[ match ] );
							}
						}
					}

					return this;

				// HANDLE: $(#id)
				} else {
					elem = document.getElementById( match[ 2 ] );

					if ( elem ) {

						// Inject the element directly into the jQuery object
						this[ 0 ] = elem;
						this.length = 1;
					}
					return this;
				}

			// HANDLE: $(expr, $(...))
			} else if ( !context || context.jquery ) {
				return ( context || root ).find( selector );

			// HANDLE: $(expr, context)
			// (which is just equivalent to: $(context).find(expr)
			} else {
				return this.constructor( context ).find( selector );
			}

		// HANDLE: $(DOMElement)
		} else if ( selector.nodeType ) {
			this[ 0 ] = selector;
			this.length = 1;
			return this;

		// HANDLE: $(function)
		// Shortcut for document ready
		} else if ( isFunction( selector ) ) {
			return root.ready !== undefined ?
				root.ready( selector ) :

				// Execute immediately if ready is not present
				selector( jQuery );
		}

		return jQuery.makeArray( selector, this );
	};

// Give the init function the jQuery prototype for later instantiation
init.prototype = jQuery.fn;

// Initialize central reference
rootjQuery = jQuery( document );


var rparentsprev = /^(?:parents|prev(?:Until|All))/,

	// Methods guaranteed to produce a unique set when starting from a unique set
	guaranteedUnique = {
		children: true,
		contents: true,
		next: true,
		prev: true
	};

jQuery.fn.extend( {
	has: function( target ) {
		var targets = jQuery( target, this ),
			l = targets.length;

		return this.filter( function() {
			var i = 0;
			for ( ; i < l; i++ ) {
				if ( jQuery.contains( this, targets[ i ] ) ) {
					return true;
				}
			}
		} );
	},

	closest: function( selectors, context ) {
		var cur,
			i = 0,
			l = this.length,
			matched = [],
			targets = typeof selectors !== "string" && jQuery( selectors );

		// Positional selectors never match, since there's no _selection_ context
		if ( !rneedsContext.test( selectors ) ) {
			for ( ; i < l; i++ ) {
				for ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {

					// Always skip document fragments
					if ( cur.nodeType < 11 && ( targets ?
						targets.index( cur ) > -1 :

						// Don't pass non-elements to Sizzle
						cur.nodeType === 1 &&
							jQuery.find.matchesSelector( cur, selectors ) ) ) {

						matched.push( cur );
						break;
					}
				}
			}
		}

		return this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );
	},

	// Determine the position of an element within the set
	index: function( elem ) {

		// No argument, return index in parent
		if ( !elem ) {
			return ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;
		}

		// Index in selector
		if ( typeof elem === "string" ) {
			return indexOf.call( jQuery( elem ), this[ 0 ] );
		}

		// Locate the position of the desired element
		return indexOf.call( this,

			// If it receives a jQuery object, the first element is used
			elem.jquery ? elem[ 0 ] : elem
		);
	},

	add: function( selector, context ) {
		return this.pushStack(
			jQuery.uniqueSort(
				jQuery.merge( this.get(), jQuery( selector, context ) )
			)
		);
	},

	addBack: function( selector ) {
		return this.add( selector == null ?
			this.prevObject : this.prevObject.filter( selector )
		);
	}
} );

function sibling( cur, dir ) {
	while ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}
	return cur;
}

jQuery.each( {
	parent: function( elem ) {
		var parent = elem.parentNode;
		return parent && parent.nodeType !== 11 ? parent : null;
	},
	parents: function( elem ) {
		return dir( elem, "parentNode" );
	},
	parentsUntil: function( elem, i, until ) {
		return dir( elem, "parentNode", until );
	},
	next: function( elem ) {
		return sibling( elem, "nextSibling" );
	},
	prev: function( elem ) {
		return sibling( elem, "previousSibling" );
	},
	nextAll: function( elem ) {
		return dir( elem, "nextSibling" );
	},
	prevAll: function( elem ) {
		return dir( elem, "previousSibling" );
	},
	nextUntil: function( elem, i, until ) {
		return dir( elem, "nextSibling", until );
	},
	prevUntil: function( elem, i, until ) {
		return dir( elem, "previousSibling", until );
	},
	siblings: function( elem ) {
		return siblings( ( elem.parentNode || {} ).firstChild, elem );
	},
	children: function( elem ) {
		return siblings( elem.firstChild );
	},
	contents: function( elem ) {
		if ( typeof elem.contentDocument !== "undefined" ) {
			return elem.contentDocument;
		}

		// Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only
		// Treat the template element as a regular one in browsers that
		// don't support it.
		if ( nodeName( elem, "template" ) ) {
			elem = elem.content || elem;
		}

		return jQuery.merge( [], elem.childNodes );
	}
}, function( name, fn ) {
	jQuery.fn[ name ] = function( until, selector ) {
		var matched = jQuery.map( this, fn, until );

		if ( name.slice( -5 ) !== "Until" ) {
			selector = until;
		}

		if ( selector && typeof selector === "string" ) {
			matched = jQuery.filter( selector, matched );
		}

		if ( this.length > 1 ) {

			// Remove duplicates
			if ( !guaranteedUnique[ name ] ) {
				jQuery.uniqueSort( matched );
			}

			// Reverse order for parents* and prev-derivatives
			if ( rparentsprev.test( name ) ) {
				matched.reverse();
			}
		}

		return this.pushStack( matched );
	};
} );
var rnothtmlwhite = ( /[^\x20\t\r\n\f]+/g );



// Convert String-formatted options into Object-formatted ones
function createOptions( options ) {
	var object = {};
	jQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {
		object[ flag ] = true;
	} );
	return object;
}

/*
 * Create a callback list using the following parameters:
 *
 *	options: an optional list of space-separated options that will change how
 *			the callback list behaves or a more traditional option object
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible options:
 *
 *	once:			will ensure the callback list can only be fired once (like a Deferred)
 *
 *	memory:			will keep track of previous values and will call any callback added
 *					after the list has been fired right away with the latest "memorized"
 *					values (like a Deferred)
 *
 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
 *
 *	stopOnFalse:	interrupt callings when a callback returns false
 *
 */
jQuery.Callbacks = function( options ) {

	// Convert options from String-formatted to Object-formatted if needed
	// (we check in cache first)
	options = typeof options === "string" ?
		createOptions( options ) :
		jQuery.extend( {}, options );

	var // Flag to know if list is currently firing
		firing,

		// Last fire value for non-forgettable lists
		memory,

		// Flag to know if list was already fired
		fired,

		// Flag to prevent firing
		locked,

		// Actual callback list
		list = [],

		// Queue of execution data for repeatable lists
		queue = [],

		// Index of currently firing callback (modified by add/remove as needed)
		firingIndex = -1,

		// Fire callbacks
		fire = function() {

			// Enforce single-firing
			locked = locked || options.once;

			// Execute callbacks for all pending executions,
			// respecting firingIndex overrides and runtime changes
			fired = firing = true;
			for ( ; queue.length; firingIndex = -1 ) {
				memory = queue.shift();
				while ( ++firingIndex < list.length ) {

					// Run callback and check for early termination
					if ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&
						options.stopOnFalse ) {

						// Jump to end and forget the data so .add doesn't re-fire
						firingIndex = list.length;
						memory = false;
					}
				}
			}

			// Forget the data if we're done with it
			if ( !options.memory ) {
				memory = false;
			}

			firing = false;

			// Clean up if we're done firing for good
			if ( locked ) {

				// Keep an empty list if we have data for future add calls
				if ( memory ) {
					list = [];

				// Otherwise, this object is spent
				} else {
					list = "";
				}
			}
		},

		// Actual Callbacks object
		self = {

			// Add a callback or a collection of callbacks to the list
			add: function() {
				if ( list ) {

					// If we have memory from a past run, we should fire after adding
					if ( memory && !firing ) {
						firingIndex = list.length - 1;
						queue.push( memory );
					}

					( function add( args ) {
						jQuery.each( args, function( _, arg ) {
							if ( isFunction( arg ) ) {
								if ( !options.unique || !self.has( arg ) ) {
									list.push( arg );
								}
							} else if ( arg && arg.length && toType( arg ) !== "string" ) {

								// Inspect recursively
								add( arg );
							}
						} );
					} )( arguments );

					if ( memory && !firing ) {
						fire();
					}
				}
				return this;
			},

			// Remove a callback from the list
			remove: function() {
				jQuery.each( arguments, function( _, arg ) {
					var index;
					while ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
						list.splice( index, 1 );

						// Handle firing indexes
						if ( index <= firingIndex ) {
							firingIndex--;
						}
					}
				} );
				return this;
			},

			// Check if a given callback is in the list.
			// If no argument is given, return whether or not list has callbacks attached.
			has: function( fn ) {
				return fn ?
					jQuery.inArray( fn, list ) > -1 :
					list.length > 0;
			},

			// Remove all callbacks from the list
			empty: function() {
				if ( list ) {
					list = [];
				}
				return this;
			},

			// Disable .fire and .add
			// Abort any current/pending executions
			// Clear all callbacks and values
			disable: function() {
				locked = queue = [];
				list = memory = "";
				return this;
			},
			disabled: function() {
				return !list;
			},

			// Disable .fire
			// Also disable .add unless we have memory (since it would have no effect)
			// Abort any pending executions
			lock: function() {
				locked = queue = [];
				if ( !memory && !firing ) {
					list = memory = "";
				}
				return this;
			},
			locked: function() {
				return !!locked;
			},

			// Call all callbacks with the given context and arguments
			fireWith: function( context, args ) {
				if ( !locked ) {
					args = args || [];
					args = [ context, args.slice ? args.slice() : args ];
					queue.push( args );
					if ( !firing ) {
						fire();
					}
				}
				return this;
			},

			// Call all the callbacks with the given arguments
			fire: function() {
				self.fireWith( this, arguments );
				return this;
			},

			// To know if the callbacks have already been called at least once
			fired: function() {
				return !!fired;
			}
		};

	return self;
};


function Identity( v ) {
	return v;
}
function Thrower( ex ) {
	throw ex;
}

function adoptValue( value, resolve, reject, noValue ) {
	var method;

	try {

		// Check for promise aspect first to privilege synchronous behavior
		if ( value && isFunction( ( method = value.promise ) ) ) {
			method.call( value ).done( resolve ).fail( reject );

		// Other thenables
		} else if ( value && isFunction( ( method = value.then ) ) ) {
			method.call( value, resolve, reject );

		// Other non-thenables
		} else {

			// Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:
			// * false: [ value ].slice( 0 ) => resolve( value )
			// * true: [ value ].slice( 1 ) => resolve()
			resolve.apply( undefined, [ value ].slice( noValue ) );
		}

	// For Promises/A+, convert exceptions into rejections
	// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in
	// Deferred#then to conditionally suppress rejection.
	} catch ( value ) {

		// Support: Android 4.0 only
		// Strict mode functions invoked without .call/.apply get global-object context
		reject.apply( undefined, [ value ] );
	}
}

jQuery.extend( {

	Deferred: function( func ) {
		var tuples = [

				// action, add listener, callbacks,
				// ... .then handlers, argument index, [final state]
				[ "notify", "progress", jQuery.Callbacks( "memory" ),
					jQuery.Callbacks( "memory" ), 2 ],
				[ "resolve", "done", jQuery.Callbacks( "once memory" ),
					jQuery.Callbacks( "once memory" ), 0, "resolved" ],
				[ "reject", "fail", jQuery.Callbacks( "once memory" ),
					jQuery.Callbacks( "once memory" ), 1, "rejected" ]
			],
			state = "pending",
			promise = {
				state: function() {
					return state;
				},
				always: function() {
					deferred.done( arguments ).fail( arguments );
					return this;
				},
				"catch": function( fn ) {
					return promise.then( null, fn );
				},

				// Keep pipe for back-compat
				pipe: function( /* fnDone, fnFail, fnProgress */ ) {
					var fns = arguments;

					return jQuery.Deferred( function( newDefer ) {
						jQuery.each( tuples, function( i, tuple ) {

							// Map tuples (progress, done, fail) to arguments (done, fail, progress)
							var fn = isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];

							// deferred.progress(function() { bind to newDefer or newDefer.notify })
							// deferred.done(function() { bind to newDefer or newDefer.resolve })
							// deferred.fail(function() { bind to newDefer or newDefer.reject })
							deferred[ tuple[ 1 ] ]( function() {
								var returned = fn && fn.apply( this, arguments );
								if ( returned && isFunction( returned.promise ) ) {
									returned.promise()
										.progress( newDefer.notify )
										.done( newDefer.resolve )
										.fail( newDefer.reject );
								} else {
									newDefer[ tuple[ 0 ] + "With" ](
										this,
										fn ? [ returned ] : arguments
									);
								}
							} );
						} );
						fns = null;
					} ).promise();
				},
				then: function( onFulfilled, onRejected, onProgress ) {
					var maxDepth = 0;
					function resolve( depth, deferred, handler, special ) {
						return function() {
							var that = this,
								args = arguments,
								mightThrow = function() {
									var returned, then;

									// Support: Promises/A+ section 2.3.3.3.3
									// https://promisesaplus.com/#point-59
									// Ignore double-resolution attempts
									if ( depth < maxDepth ) {
										return;
									}

									returned = handler.apply( that, args );

									// Support: Promises/A+ section 2.3.1
									// https://promisesaplus.com/#point-48
									if ( returned === deferred.promise() ) {
										throw new TypeError( "Thenable self-resolution" );
									}

									// Support: Promises/A+ sections 2.3.3.1, 3.5
									// https://promisesaplus.com/#point-54
									// https://promisesaplus.com/#point-75
									// Retrieve `then` only once
									then = returned &&

										// Support: Promises/A+ section 2.3.4
										// https://promisesaplus.com/#point-64
										// Only check objects and functions for thenability
										( typeof returned === "object" ||
											typeof returned === "function" ) &&
										returned.then;

									// Handle a returned thenable
									if ( isFunction( then ) ) {

										// Special processors (notify) just wait for resolution
										if ( special ) {
											then.call(
												returned,
												resolve( maxDepth, deferred, Identity, special ),
												resolve( maxDepth, deferred, Thrower, special )
											);

										// Normal processors (resolve) also hook into progress
										} else {

											// ...and disregard older resolution values
											maxDepth++;

											then.call(
												returned,
												resolve( maxDepth, deferred, Identity, special ),
												resolve( maxDepth, deferred, Thrower, special ),
												resolve( maxDepth, deferred, Identity,
													deferred.notifyWith )
											);
										}

									// Handle all other returned values
									} else {

										// Only substitute handlers pass on context
										// and multiple values (non-spec behavior)
										if ( handler !== Identity ) {
											that = undefined;
											args = [ returned ];
										}

										// Process the value(s)
										// Default process is resolve
										( special || deferred.resolveWith )( that, args );
									}
								},

								// Only normal processors (resolve) catch and reject exceptions
								process = special ?
									mightThrow :
									function() {
										try {
											mightThrow();
										} catch ( e ) {

											if ( jQuery.Deferred.exceptionHook ) {
												jQuery.Deferred.exceptionHook( e,
													process.stackTrace );
											}

											// Support: Promises/A+ section 2.3.3.3.4.1
											// https://promisesaplus.com/#point-61
											// Ignore post-resolution exceptions
											if ( depth + 1 >= maxDepth ) {

												// Only substitute handlers pass on context
												// and multiple values (non-spec behavior)
												if ( handler !== Thrower ) {
													that = undefined;
													args = [ e ];
												}

												deferred.rejectWith( that, args );
											}
										}
									};

							// Support: Promises/A+ section 2.3.3.3.1
							// https://promisesaplus.com/#point-57
							// Re-resolve promises immediately to dodge false rejection from
							// subsequent errors
							if ( depth ) {
								process();
							} else {

								// Call an optional hook to record the stack, in case of exception
								// since it's otherwise lost when execution goes async
								if ( jQuery.Deferred.getStackHook ) {
									process.stackTrace = jQuery.Deferred.getStackHook();
								}
								window.setTimeout( process );
							}
						};
					}

					return jQuery.Deferred( function( newDefer ) {

						// progress_handlers.add( ... )
						tuples[ 0 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onProgress ) ?
									onProgress :
									Identity,
								newDefer.notifyWith
							)
						);

						// fulfilled_handlers.add( ... )
						tuples[ 1 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onFulfilled ) ?
									onFulfilled :
									Identity
							)
						);

						// rejected_handlers.add( ... )
						tuples[ 2 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onRejected ) ?
									onRejected :
									Thrower
							)
						);
					} ).promise();
				},

				// Get a promise for this deferred
				// If obj is provided, the promise aspect is added to the object
				promise: function( obj ) {
					return obj != null ? jQuery.extend( obj, promise ) : promise;
				}
			},
			deferred = {};

		// Add list-specific methods
		jQuery.each( tuples, function( i, tuple ) {
			var list = tuple[ 2 ],
				stateString = tuple[ 5 ];

			// promise.progress = list.add
			// promise.done = list.add
			// promise.fail = list.add
			promise[ tuple[ 1 ] ] = list.add;

			// Handle state
			if ( stateString ) {
				list.add(
					function() {

						// state = "resolved" (i.e., fulfilled)
						// state = "rejected"
						state = stateString;
					},

					// rejected_callbacks.disable
					// fulfilled_callbacks.disable
					tuples[ 3 - i ][ 2 ].disable,

					// rejected_handlers.disable
					// fulfilled_handlers.disable
					tuples[ 3 - i ][ 3 ].disable,

					// progress_callbacks.lock
					tuples[ 0 ][ 2 ].lock,

					// progress_handlers.lock
					tuples[ 0 ][ 3 ].lock
				);
			}

			// progress_handlers.fire
			// fulfilled_handlers.fire
			// rejected_handlers.fire
			list.add( tuple[ 3 ].fire );

			// deferred.notify = function() { deferred.notifyWith(...) }
			// deferred.resolve = function() { deferred.resolveWith(...) }
			// deferred.reject = function() { deferred.rejectWith(...) }
			deferred[ tuple[ 0 ] ] = function() {
				deferred[ tuple[ 0 ] + "With" ]( this === deferred ? undefined : this, arguments );
				return this;
			};

			// deferred.notifyWith = list.fireWith
			// deferred.resolveWith = list.fireWith
			// deferred.rejectWith = list.fireWith
			deferred[ tuple[ 0 ] + "With" ] = list.fireWith;
		} );

		// Make the deferred a promise
		promise.promise( deferred );

		// Call given func if any
		if ( func ) {
			func.call( deferred, deferred );
		}

		// All done!
		return deferred;
	},

	// Deferred helper
	when: function( singleValue ) {
		var

			// count of uncompleted subordinates
			remaining = arguments.length,

			// count of unprocessed arguments
			i = remaining,

			// subordinate fulfillment data
			resolveContexts = Array( i ),
			resolveValues = slice.call( arguments ),

			// the master Deferred
			master = jQuery.Deferred(),

			// subordinate callback factory
			updateFunc = function( i ) {
				return function( value ) {
					resolveContexts[ i ] = this;
					resolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;
					if ( !( --remaining ) ) {
						master.resolveWith( resolveContexts, resolveValues );
					}
				};
			};

		// Single- and empty arguments are adopted like Promise.resolve
		if ( remaining <= 1 ) {
			adoptValue( singleValue, master.done( updateFunc( i ) ).resolve, master.reject,
				!remaining );

			// Use .then() to unwrap secondary thenables (cf. gh-3000)
			if ( master.state() === "pending" ||
				isFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {

				return master.then();
			}
		}

		// Multiple arguments are aggregated like Promise.all array elements
		while ( i-- ) {
			adoptValue( resolveValues[ i ], updateFunc( i ), master.reject );
		}

		return master.promise();
	}
} );


// These usually indicate a programmer mistake during development,
// warn about them ASAP rather than swallowing them by default.
var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;

jQuery.Deferred.exceptionHook = function( error, stack ) {

	// Support: IE 8 - 9 only
	// Console exists when dev tools are open, which can happen at any time
	if ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {
		window.console.warn( "jQuery.Deferred exception: " + error.message, error.stack, stack );
	}
};




jQuery.readyException = function( error ) {
	window.setTimeout( function() {
		throw error;
	} );
};




// The deferred used on DOM ready
var readyList = jQuery.Deferred();

jQuery.fn.ready = function( fn ) {

	readyList
		.then( fn )

		// Wrap jQuery.readyException in a function so that the lookup
		// happens at the time of error handling instead of callback
		// registration.
		.catch( function( error ) {
			jQuery.readyException( error );
		} );

	return this;
};

jQuery.extend( {

	// Is the DOM ready to be used? Set to true once it occurs.
	isReady: false,

	// A counter to track how many items to wait for before
	// the ready event fires. See #6781
	readyWait: 1,

	// Handle when the DOM is ready
	ready: function( wait ) {

		// Abort if there are pending holds or we're already ready
		if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {
			return;
		}

		// Remember that the DOM is ready
		jQuery.isReady = true;

		// If a normal DOM Ready event fired, decrement, and wait if need be
		if ( wait !== true && --jQuery.readyWait > 0 ) {
			return;
		}

		// If there are functions bound, to execute
		readyList.resolveWith( document, [ jQuery ] );
	}
} );

jQuery.ready.then = readyList.then;

// The ready event handler and self cleanup method
function completed() {
	document.removeEventListener( "DOMContentLoaded", completed );
	window.removeEventListener( "load", completed );
	jQuery.ready();
}

// Catch cases where $(document).ready() is called
// after the browser event has already occurred.
// Support: IE <=9 - 10 only
// Older IE sometimes signals "interactive" too soon
if ( document.readyState === "complete" ||
	( document.readyState !== "loading" && !document.documentElement.doScroll ) ) {

	// Handle it asynchronously to allow scripts the opportunity to delay ready
	window.setTimeout( jQuery.ready );

} else {

	// Use the handy event callback
	document.addEventListener( "DOMContentLoaded", completed );

	// A fallback to window.onload, that will always work
	window.addEventListener( "load", completed );
}




// Multifunctional method to get and set values of a collection
// The value/s can optionally be executed if it's a function
var access = function( elems, fn, key, value, chainable, emptyGet, raw ) {
	var i = 0,
		len = elems.length,
		bulk = key == null;

	// Sets many values
	if ( toType( key ) === "object" ) {
		chainable = true;
		for ( i in key ) {
			access( elems, fn, i, key[ i ], true, emptyGet, raw );
		}

	// Sets one value
	} else if ( value !== undefined ) {
		chainable = true;

		if ( !isFunction( value ) ) {
			raw = true;
		}

		if ( bulk ) {

			// Bulk operations run against the entire set
			if ( raw ) {
				fn.call( elems, value );
				fn = null;

			// ...except when executing function values
			} else {
				bulk = fn;
				fn = function( elem, key, value ) {
					return bulk.call( jQuery( elem ), value );
				};
			}
		}

		if ( fn ) {
			for ( ; i < len; i++ ) {
				fn(
					elems[ i ], key, raw ?
					value :
					value.call( elems[ i ], i, fn( elems[ i ], key ) )
				);
			}
		}
	}

	if ( chainable ) {
		return elems;
	}

	// Gets
	if ( bulk ) {
		return fn.call( elems );
	}

	return len ? fn( elems[ 0 ], key ) : emptyGet;
};


// Matches dashed string for camelizing
var rmsPrefix = /^-ms-/,
	rdashAlpha = /-([a-z])/g;

// Used by camelCase as callback to replace()
function fcamelCase( all, letter ) {
	return letter.toUpperCase();
}

// Convert dashed to camelCase; used by the css and data modules
// Support: IE <=9 - 11, Edge 12 - 15
// Microsoft forgot to hump their vendor prefix (#9572)
function camelCase( string ) {
	return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
}
var acceptData = function( owner ) {

	// Accepts only:
	//  - Node
	//    - Node.ELEMENT_NODE
	//    - Node.DOCUMENT_NODE
	//  - Object
	//    - Any
	return owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );
};




function Data() {
	this.expando = jQuery.expando + Data.uid++;
}

Data.uid = 1;

Data.prototype = {

	cache: function( owner ) {

		// Check if the owner object already has a cache
		var value = owner[ this.expando ];

		// If not, create one
		if ( !value ) {
			value = {};

			// We can accept data for non-element nodes in modern browsers,
			// but we should not, see #8335.
			// Always return an empty object.
			if ( acceptData( owner ) ) {

				// If it is a node unlikely to be stringify-ed or looped over
				// use plain assignment
				if ( owner.nodeType ) {
					owner[ this.expando ] = value;

				// Otherwise secure it in a non-enumerable property
				// configurable must be true to allow the property to be
				// deleted when data is removed
				} else {
					Object.defineProperty( owner, this.expando, {
						value: value,
						configurable: true
					} );
				}
			}
		}

		return value;
	},
	set: function( owner, data, value ) {
		var prop,
			cache = this.cache( owner );

		// Handle: [ owner, key, value ] args
		// Always use camelCase key (gh-2257)
		if ( typeof data === "string" ) {
			cache[ camelCase( data ) ] = value;

		// Handle: [ owner, { properties } ] args
		} else {

			// Copy the properties one-by-one to the cache object
			for ( prop in data ) {
				cache[ camelCase( prop ) ] = data[ prop ];
			}
		}
		return cache;
	},
	get: function( owner, key ) {
		return key === undefined ?
			this.cache( owner ) :

			// Always use camelCase key (gh-2257)
			owner[ this.expando ] && owner[ this.expando ][ camelCase( key ) ];
	},
	access: function( owner, key, value ) {

		// In cases where either:
		//
		//   1. No key was specified
		//   2. A string key was specified, but no value provided
		//
		// Take the "read" path and allow the get method to determine
		// which value to return, respectively either:
		//
		//   1. The entire cache object
		//   2. The data stored at the key
		//
		if ( key === undefined ||
				( ( key && typeof key === "string" ) && value === undefined ) ) {

			return this.get( owner, key );
		}

		// When the key is not a string, or both a key and value
		// are specified, set or extend (existing objects) with either:
		//
		//   1. An object of properties
		//   2. A key and value
		//
		this.set( owner, key, value );

		// Since the "set" path can have two possible entry points
		// return the expected data based on which path was taken[*]
		return value !== undefined ? value : key;
	},
	remove: function( owner, key ) {
		var i,
			cache = owner[ this.expando ];

		if ( cache === undefined ) {
			return;
		}

		if ( key !== undefined ) {

			// Support array or space separated string of keys
			if ( Array.isArray( key ) ) {

				// If key is an array of keys...
				// We always set camelCase keys, so remove that.
				key = key.map( camelCase );
			} else {
				key = camelCase( key );

				// If a key with the spaces exists, use it.
				// Otherwise, create an array by matching non-whitespace
				key = key in cache ?
					[ key ] :
					( key.match( rnothtmlwhite ) || [] );
			}

			i = key.length;

			while ( i-- ) {
				delete cache[ key[ i ] ];
			}
		}

		// Remove the expando if there's no more data
		if ( key === undefined || jQuery.isEmptyObject( cache ) ) {

			// Support: Chrome <=35 - 45
			// Webkit & Blink performance suffers when deleting properties
			// from DOM nodes, so set to undefined instead
			// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)
			if ( owner.nodeType ) {
				owner[ this.expando ] = undefined;
			} else {
				delete owner[ this.expando ];
			}
		}
	},
	hasData: function( owner ) {
		var cache = owner[ this.expando ];
		return cache !== undefined && !jQuery.isEmptyObject( cache );
	}
};
var dataPriv = new Data();

var dataUser = new Data();



//	Implementation Summary
//
//	1. Enforce API surface and semantic compatibility with 1.9.x branch
//	2. Improve the module's maintainability by reducing the storage
//		paths to a single mechanism.
//	3. Use the same single mechanism to support "private" and "user" data.
//	4. _Never_ expose "private" data to user code (TODO: Drop _data, _removeData)
//	5. Avoid exposing implementation details on user objects (eg. expando properties)
//	6. Provide a clear path for implementation upgrade to WeakMap in 2014

var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
	rmultiDash = /[A-Z]/g;

function getData( data ) {
	if ( data === "true" ) {
		return true;
	}

	if ( data === "false" ) {
		return false;
	}

	if ( data === "null" ) {
		return null;
	}

	// Only convert to a number if it doesn't change the string
	if ( data === +data + "" ) {
		return +data;
	}

	if ( rbrace.test( data ) ) {
		return JSON.parse( data );
	}

	return data;
}

function dataAttr( elem, key, data ) {
	var name;

	// If nothing was found internally, try to fetch any
	// data from the HTML5 data-* attribute
	if ( data === undefined && elem.nodeType === 1 ) {
		name = "data-" + key.replace( rmultiDash, "-$&" ).toLowerCase();
		data = elem.getAttribute( name );

		if ( typeof data === "string" ) {
			try {
				data = getData( data );
			} catch ( e ) {}

			// Make sure we set the data so it isn't changed later
			dataUser.set( elem, key, data );
		} else {
			data = undefined;
		}
	}
	return data;
}

jQuery.extend( {
	hasData: function( elem ) {
		return dataUser.hasData( elem ) || dataPriv.hasData( elem );
	},

	data: function( elem, name, data ) {
		return dataUser.access( elem, name, data );
	},

	removeData: function( elem, name ) {
		dataUser.remove( elem, name );
	},

	// TODO: Now that all calls to _data and _removeData have been replaced
	// with direct calls to dataPriv methods, these can be deprecated.
	_data: function( elem, name, data ) {
		return dataPriv.access( elem, name, data );
	},

	_removeData: function( elem, name ) {
		dataPriv.remove( elem, name );
	}
} );

jQuery.fn.extend( {
	data: function( key, value ) {
		var i, name, data,
			elem = this[ 0 ],
			attrs = elem && elem.attributes;

		// Gets all values
		if ( key === undefined ) {
			if ( this.length ) {
				data = dataUser.get( elem );

				if ( elem.nodeType === 1 && !dataPriv.get( elem, "hasDataAttrs" ) ) {
					i = attrs.length;
					while ( i-- ) {

						// Support: IE 11 only
						// The attrs elements can be null (#14894)
						if ( attrs[ i ] ) {
							name = attrs[ i ].name;
							if ( name.indexOf( "data-" ) === 0 ) {
								name = camelCase( name.slice( 5 ) );
								dataAttr( elem, name, data[ name ] );
							}
						}
					}
					dataPriv.set( elem, "hasDataAttrs", true );
				}
			}

			return data;
		}

		// Sets multiple values
		if ( typeof key === "object" ) {
			return this.each( function() {
				dataUser.set( this, key );
			} );
		}

		return access( this, function( value ) {
			var data;

			// The calling jQuery object (element matches) is not empty
			// (and therefore has an element appears at this[ 0 ]) and the
			// `value` parameter was not undefined. An empty jQuery object
			// will result in `undefined` for elem = this[ 0 ] which will
			// throw an exception if an attempt to read a data cache is made.
			if ( elem && value === undefined ) {

				// Attempt to get data from the cache
				// The key will always be camelCased in Data
				data = dataUser.get( elem, key );
				if ( data !== undefined ) {
					return data;
				}

				// Attempt to "discover" the data in
				// HTML5 custom data-* attrs
				data = dataAttr( elem, key );
				if ( data !== undefined ) {
					return data;
				}

				// We tried really hard, but the data doesn't exist.
				return;
			}

			// Set the data...
			this.each( function() {

				// We always store the camelCased key
				dataUser.set( this, key, value );
			} );
		}, null, value, arguments.length > 1, null, true );
	},

	removeData: function( key ) {
		return this.each( function() {
			dataUser.remove( this, key );
		} );
	}
} );


jQuery.extend( {
	queue: function( elem, type, data ) {
		var queue;

		if ( elem ) {
			type = ( type || "fx" ) + "queue";
			queue = dataPriv.get( elem, type );

			// Speed up dequeue by getting out quickly if this is just a lookup
			if ( data ) {
				if ( !queue || Array.isArray( data ) ) {
					queue = dataPriv.access( elem, type, jQuery.makeArray( data ) );
				} else {
					queue.push( data );
				}
			}
			return queue || [];
		}
	},

	dequeue: function( elem, type ) {
		type = type || "fx";

		var queue = jQuery.queue( elem, type ),
			startLength = queue.length,
			fn = queue.shift(),
			hooks = jQuery._queueHooks( elem, type ),
			next = function() {
				jQuery.dequeue( elem, type );
			};

		// If the fx queue is dequeued, always remove the progress sentinel
		if ( fn === "inprogress" ) {
			fn = queue.shift();
			startLength--;
		}

		if ( fn ) {

			// Add a progress sentinel to prevent the fx queue from being
			// automatically dequeued
			if ( type === "fx" ) {
				queue.unshift( "inprogress" );
			}

			// Clear up the last queue stop function
			delete hooks.stop;
			fn.call( elem, next, hooks );
		}

		if ( !startLength && hooks ) {
			hooks.empty.fire();
		}
	},

	// Not public - generate a queueHooks object, or return the current one
	_queueHooks: function( elem, type ) {
		var key = type + "queueHooks";
		return dataPriv.get( elem, key ) || dataPriv.access( elem, key, {
			empty: jQuery.Callbacks( "once memory" ).add( function() {
				dataPriv.remove( elem, [ type + "queue", key ] );
			} )
		} );
	}
} );

jQuery.fn.extend( {
	queue: function( type, data ) {
		var setter = 2;

		if ( typeof type !== "string" ) {
			data = type;
			type = "fx";
			setter--;
		}

		if ( arguments.length < setter ) {
			return jQuery.queue( this[ 0 ], type );
		}

		return data === undefined ?
			this :
			this.each( function() {
				var queue = jQuery.queue( this, type, data );

				// Ensure a hooks for this queue
				jQuery._queueHooks( this, type );

				if ( type === "fx" && queue[ 0 ] !== "inprogress" ) {
					jQuery.dequeue( this, type );
				}
			} );
	},
	dequeue: function( type ) {
		return this.each( function() {
			jQuery.dequeue( this, type );
		} );
	},
	clearQueue: function( type ) {
		return this.queue( type || "fx", [] );
	},

	// Get a promise resolved when queues of a certain type
	// are emptied (fx is the type by default)
	promise: function( type, obj ) {
		var tmp,
			count = 1,
			defer = jQuery.Deferred(),
			elements = this,
			i = this.length,
			resolve = function() {
				if ( !( --count ) ) {
					defer.resolveWith( elements, [ elements ] );
				}
			};

		if ( typeof type !== "string" ) {
			obj = type;
			type = undefined;
		}
		type = type || "fx";

		while ( i-- ) {
			tmp = dataPriv.get( elements[ i ], type + "queueHooks" );
			if ( tmp && tmp.empty ) {
				count++;
				tmp.empty.add( resolve );
			}
		}
		resolve();
		return defer.promise( obj );
	}
} );
var pnum = ( /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/ ).source;

var rcssNum = new RegExp( "^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i" );


var cssExpand = [ "Top", "Right", "Bottom", "Left" ];

var documentElement = document.documentElement;



	var isAttached = function( elem ) {
			return jQuery.contains( elem.ownerDocument, elem );
		},
		composed = { composed: true };

	// Support: IE 9 - 11+, Edge 12 - 18+, iOS 10.0 - 10.2 only
	// Check attachment across shadow DOM boundaries when possible (gh-3504)
	// Support: iOS 10.0-10.2 only
	// Early iOS 10 versions support `attachShadow` but not `getRootNode`,
	// leading to errors. We need to check for `getRootNode`.
	if ( documentElement.getRootNode ) {
		isAttached = function( elem ) {
			return jQuery.contains( elem.ownerDocument, elem ) ||
				elem.getRootNode( composed ) === elem.ownerDocument;
		};
	}
var isHiddenWithinTree = function( elem, el ) {

		// isHiddenWithinTree might be called from jQuery#filter function;
		// in that case, element will be second argument
		elem = el || elem;

		// Inline style trumps all
		return elem.style.display === "none" ||
			elem.style.display === "" &&

			// Otherwise, check computed style
			// Support: Firefox <=43 - 45
			// Disconnected elements can have computed display: none, so first confirm that elem is
			// in the document.
			isAttached( elem ) &&

			jQuery.css( elem, "display" ) === "none";
	};

var swap = function( elem, options, callback, args ) {
	var ret, name,
		old = {};

	// Remember the old values, and insert the new ones
	for ( name in options ) {
		old[ name ] = elem.style[ name ];
		elem.style[ name ] = options[ name ];
	}

	ret = callback.apply( elem, args || [] );

	// Revert the old values
	for ( name in options ) {
		elem.style[ name ] = old[ name ];
	}

	return ret;
};




function adjustCSS( elem, prop, valueParts, tween ) {
	var adjusted, scale,
		maxIterations = 20,
		currentValue = tween ?
			function() {
				return tween.cur();
			} :
			function() {
				return jQuery.css( elem, prop, "" );
			},
		initial = currentValue(),
		unit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? "" : "px" ),

		// Starting value computation is required for potential unit mismatches
		initialInUnit = elem.nodeType &&
			( jQuery.cssNumber[ prop ] || unit !== "px" && +initial ) &&
			rcssNum.exec( jQuery.css( elem, prop ) );

	if ( initialInUnit && initialInUnit[ 3 ] !== unit ) {

		// Support: Firefox <=54
		// Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)
		initial = initial / 2;

		// Trust units reported by jQuery.css
		unit = unit || initialInUnit[ 3 ];

		// Iteratively approximate from a nonzero starting point
		initialInUnit = +initial || 1;

		while ( maxIterations-- ) {

			// Evaluate and update our best guess (doubling guesses that zero out).
			// Finish if the scale equals or crosses 1 (making the old*new product non-positive).
			jQuery.style( elem, prop, initialInUnit + unit );
			if ( ( 1 - scale ) * ( 1 - ( scale = currentValue() / initial || 0.5 ) ) <= 0 ) {
				maxIterations = 0;
			}
			initialInUnit = initialInUnit / scale;

		}

		initialInUnit = initialInUnit * 2;
		jQuery.style( elem, prop, initialInUnit + unit );

		// Make sure we update the tween properties later on
		valueParts = valueParts || [];
	}

	if ( valueParts ) {
		initialInUnit = +initialInUnit || +initial || 0;

		// Apply relative offset (+=/-=) if specified
		adjusted = valueParts[ 1 ] ?
			initialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :
			+valueParts[ 2 ];
		if ( tween ) {
			tween.unit = unit;
			tween.start = initialInUnit;
			tween.end = adjusted;
		}
	}
	return adjusted;
}


var defaultDisplayMap = {};

function getDefaultDisplay( elem ) {
	var temp,
		doc = elem.ownerDocument,
		nodeName = elem.nodeName,
		display = defaultDisplayMap[ nodeName ];

	if ( display ) {
		return display;
	}

	temp = doc.body.appendChild( doc.createElement( nodeName ) );
	display = jQuery.css( temp, "display" );

	temp.parentNode.removeChild( temp );

	if ( display === "none" ) {
		display = "block";
	}
	defaultDisplayMap[ nodeName ] = display;

	return display;
}

function showHide( elements, show ) {
	var display, elem,
		values = [],
		index = 0,
		length = elements.length;

	// Determine new display value for elements that need to change
	for ( ; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}

		display = elem.style.display;
		if ( show ) {

			// Since we force visibility upon cascade-hidden elements, an immediate (and slow)
			// check is required in this first loop unless we have a nonempty display value (either
			// inline or about-to-be-restored)
			if ( display === "none" ) {
				values[ index ] = dataPriv.get( elem, "display" ) || null;
				if ( !values[ index ] ) {
					elem.style.display = "";
				}
			}
			if ( elem.style.display === "" && isHiddenWithinTree( elem ) ) {
				values[ index ] = getDefaultDisplay( elem );
			}
		} else {
			if ( display !== "none" ) {
				values[ index ] = "none";

				// Remember what we're overwriting
				dataPriv.set( elem, "display", display );
			}
		}
	}

	// Set the display of the elements in a second loop to avoid constant reflow
	for ( index = 0; index < length; index++ ) {
		if ( values[ index ] != null ) {
			elements[ index ].style.display = values[ index ];
		}
	}

	return elements;
}

jQuery.fn.extend( {
	show: function() {
		return showHide( this, true );
	},
	hide: function() {
		return showHide( this );
	},
	toggle: function( state ) {
		if ( typeof state === "boolean" ) {
			return state ? this.show() : this.hide();
		}

		return this.each( function() {
			if ( isHiddenWithinTree( this ) ) {
				jQuery( this ).show();
			} else {
				jQuery( this ).hide();
			}
		} );
	}
} );
var rcheckableType = ( /^(?:checkbox|radio)$/i );

var rtagName = ( /<([a-z][^\/\0>\x20\t\r\n\f]*)/i );

var rscriptType = ( /^$|^module$|\/(?:java|ecma)script/i );



// We have to close these tags to support XHTML (#13200)
var wrapMap = {

	// Support: IE <=9 only
	option: [ 1, "<select multiple='multiple'>", "</select>" ],

	// XHTML parsers do not magically insert elements in the
	// same way that tag soup parsers do. So we cannot shorten
	// this by omitting <tbody> or other required elements.
	thead: [ 1, "<table>", "</table>" ],
	col: [ 2, "<table><colgroup>", "</colgroup></table>" ],
	tr: [ 2, "<table><tbody>", "</tbody></table>" ],
	td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],

	_default: [ 0, "", "" ]
};

// Support: IE <=9 only
wrapMap.optgroup = wrapMap.option;

wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
wrapMap.th = wrapMap.td;


function getAll( context, tag ) {

	// Support: IE <=9 - 11 only
	// Use typeof to avoid zero-argument method invocation on host objects (#15151)
	var ret;

	if ( typeof context.getElementsByTagName !== "undefined" ) {
		ret = context.getElementsByTagName( tag || "*" );

	} else if ( typeof context.querySelectorAll !== "undefined" ) {
		ret = context.querySelectorAll( tag || "*" );

	} else {
		ret = [];
	}

	if ( tag === undefined || tag && nodeName( context, tag ) ) {
		return jQuery.merge( [ context ], ret );
	}

	return ret;
}


// Mark scripts as having already been evaluated
function setGlobalEval( elems, refElements ) {
	var i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		dataPriv.set(
			elems[ i ],
			"globalEval",
			!refElements || dataPriv.get( refElements[ i ], "globalEval" )
		);
	}
}


var rhtml = /<|&#?\w+;/;

function buildFragment( elems, context, scripts, selection, ignored ) {
	var elem, tmp, tag, wrap, attached, j,
		fragment = context.createDocumentFragment(),
		nodes = [],
		i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		elem = elems[ i ];

		if ( elem || elem === 0 ) {

			// Add nodes directly
			if ( toType( elem ) === "object" ) {

				// Support: Android <=4.0 only, PhantomJS 1 only
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );

			// Convert non-html into a text node
			} else if ( !rhtml.test( elem ) ) {
				nodes.push( context.createTextNode( elem ) );

			// Convert html into DOM nodes
			} else {
				tmp = tmp || fragment.appendChild( context.createElement( "div" ) );

				// Deserialize a standard representation
				tag = ( rtagName.exec( elem ) || [ "", "" ] )[ 1 ].toLowerCase();
				wrap = wrapMap[ tag ] || wrapMap._default;
				tmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];

				// Descend through wrappers to the right content
				j = wrap[ 0 ];
				while ( j-- ) {
					tmp = tmp.lastChild;
				}

				// Support: Android <=4.0 only, PhantomJS 1 only
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, tmp.childNodes );

				// Remember the top-level container
				tmp = fragment.firstChild;

				// Ensure the created nodes are orphaned (#12392)
				tmp.textContent = "";
			}
		}
	}

	// Remove wrapper from fragment
	fragment.textContent = "";

	i = 0;
	while ( ( elem = nodes[ i++ ] ) ) {

		// Skip elements already in the context collection (trac-4087)
		if ( selection && jQuery.inArray( elem, selection ) > -1 ) {
			if ( ignored ) {
				ignored.push( elem );
			}
			continue;
		}

		attached = isAttached( elem );

		// Append to fragment
		tmp = getAll( fragment.appendChild( elem ), "script" );

		// Preserve script evaluation history
		if ( attached ) {
			setGlobalEval( tmp );
		}

		// Capture executables
		if ( scripts ) {
			j = 0;
			while ( ( elem = tmp[ j++ ] ) ) {
				if ( rscriptType.test( elem.type || "" ) ) {
					scripts.push( elem );
				}
			}
		}
	}

	return fragment;
}


( function() {
	var fragment = document.createDocumentFragment(),
		div = fragment.appendChild( document.createElement( "div" ) ),
		input = document.createElement( "input" );

	// Support: Android 4.0 - 4.3 only
	// Check state lost if the name is set (#11217)
	// Support: Windows Web Apps (WWA)
	// `name` and `type` must use .setAttribute for WWA (#14901)
	input.setAttribute( "type", "radio" );
	input.setAttribute( "checked", "checked" );
	input.setAttribute( "name", "t" );

	div.appendChild( input );

	// Support: Android <=4.1 only
	// Older WebKit doesn't clone checked state correctly in fragments
	support.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;

	// Support: IE <=11 only
	// Make sure textarea (and checkbox) defaultValue is properly cloned
	div.innerHTML = "<textarea>x</textarea>";
	support.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;
} )();


var
	rkeyEvent = /^key/,
	rmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,
	rtypenamespace = /^([^.]*)(?:\.(.+)|)/;

function returnTrue() {
	return true;
}

function returnFalse() {
	return false;
}

// Support: IE <=9 - 11+
// focus() and blur() are asynchronous, except when they are no-op.
// So expect focus to be synchronous when the element is already active,
// and blur to be synchronous when the element is not already active.
// (focus and blur are always synchronous in other supported browsers,
// this just defines when we can count on it).
function expectSync( elem, type ) {
	return ( elem === safeActiveElement() ) === ( type === "focus" );
}

// Support: IE <=9 only
// Accessing document.activeElement can throw unexpectedly
// https://bugs.jquery.com/ticket/13393
function safeActiveElement() {
	try {
		return document.activeElement;
	} catch ( err ) { }
}

function on( elem, types, selector, data, fn, one ) {
	var origFn, type;

	// Types can be a map of types/handlers
	if ( typeof types === "object" ) {

		// ( types-Object, selector, data )
		if ( typeof selector !== "string" ) {

			// ( types-Object, data )
			data = data || selector;
			selector = undefined;
		}
		for ( type in types ) {
			on( elem, type, selector, data, types[ type ], one );
		}
		return elem;
	}

	if ( data == null && fn == null ) {

		// ( types, fn )
		fn = selector;
		data = selector = undefined;
	} else if ( fn == null ) {
		if ( typeof selector === "string" ) {

			// ( types, selector, fn )
			fn = data;
			data = undefined;
		} else {

			// ( types, data, fn )
			fn = data;
			data = selector;
			selector = undefined;
		}
	}
	if ( fn === false ) {
		fn = returnFalse;
	} else if ( !fn ) {
		return elem;
	}

	if ( one === 1 ) {
		origFn = fn;
		fn = function( event ) {

			// Can use an empty set, since event contains the info
			jQuery().off( event );
			return origFn.apply( this, arguments );
		};

		// Use same guid so caller can remove using origFn
		fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
	}
	return elem.each( function() {
		jQuery.event.add( this, types, fn, data, selector );
	} );
}

/*
 * Helper functions for managing events -- not part of the public interface.
 * Props to Dean Edwards' addEvent library for many of the ideas.
 */
jQuery.event = {

	global: {},

	add: function( elem, types, handler, data, selector ) {

		var handleObjIn, eventHandle, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.get( elem );

		// Don't attach events to noData or text/comment nodes (but allow plain objects)
		if ( !elemData ) {
			return;
		}

		// Caller can pass in an object of custom data in lieu of the handler
		if ( handler.handler ) {
			handleObjIn = handler;
			handler = handleObjIn.handler;
			selector = handleObjIn.selector;
		}

		// Ensure that invalid selectors throw exceptions at attach time
		// Evaluate against documentElement in case elem is a non-element node (e.g., document)
		if ( selector ) {
			jQuery.find.matchesSelector( documentElement, selector );
		}

		// Make sure that the handler has a unique ID, used to find/remove it later
		if ( !handler.guid ) {
			handler.guid = jQuery.guid++;
		}

		// Init the element's event structure and main handler, if this is the first
		if ( !( events = elemData.events ) ) {
			events = elemData.events = {};
		}
		if ( !( eventHandle = elemData.handle ) ) {
			eventHandle = elemData.handle = function( e ) {

				// Discard the second event of a jQuery.event.trigger() and
				// when an event is called after a page has unloaded
				return typeof jQuery !== "undefined" && jQuery.event.triggered !== e.type ?
					jQuery.event.dispatch.apply( elem, arguments ) : undefined;
			};
		}

		// Handle multiple events separated by a space
		types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// There *must* be a type, no attaching namespace-only handlers
			if ( !type ) {
				continue;
			}

			// If event changes its type, use the special event handlers for the changed type
			special = jQuery.event.special[ type ] || {};

			// If selector defined, determine special event api type, otherwise given type
			type = ( selector ? special.delegateType : special.bindType ) || type;

			// Update special based on newly reset type
			special = jQuery.event.special[ type ] || {};

			// handleObj is passed to all event handlers
			handleObj = jQuery.extend( {
				type: type,
				origType: origType,
				data: data,
				handler: handler,
				guid: handler.guid,
				selector: selector,
				needsContext: selector && jQuery.expr.match.needsContext.test( selector ),
				namespace: namespaces.join( "." )
			}, handleObjIn );

			// Init the event handler queue if we're the first
			if ( !( handlers = events[ type ] ) ) {
				handlers = events[ type ] = [];
				handlers.delegateCount = 0;

				// Only use addEventListener if the special events handler returns false
				if ( !special.setup ||
					special.setup.call( elem, data, namespaces, eventHandle ) === false ) {

					if ( elem.addEventListener ) {
						elem.addEventListener( type, eventHandle );
					}
				}
			}

			if ( special.add ) {
				special.add.call( elem, handleObj );

				if ( !handleObj.handler.guid ) {
					handleObj.handler.guid = handler.guid;
				}
			}

			// Add to the element's handler list, delegates in front
			if ( selector ) {
				handlers.splice( handlers.delegateCount++, 0, handleObj );
			} else {
				handlers.push( handleObj );
			}

			// Keep track of which events have ever been used, for event optimization
			jQuery.event.global[ type ] = true;
		}

	},

	// Detach an event or set of events from an element
	remove: function( elem, types, handler, selector, mappedTypes ) {

		var j, origCount, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.hasData( elem ) && dataPriv.get( elem );

		if ( !elemData || !( events = elemData.events ) ) {
			return;
		}

		// Once for each type.namespace in types; type may be omitted
		types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// Unbind all events (on this namespace, if provided) for the element
			if ( !type ) {
				for ( type in events ) {
					jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
				}
				continue;
			}

			special = jQuery.event.special[ type ] || {};
			type = ( selector ? special.delegateType : special.bindType ) || type;
			handlers = events[ type ] || [];
			tmp = tmp[ 2 ] &&
				new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" );

			// Remove matching events
			origCount = j = handlers.length;
			while ( j-- ) {
				handleObj = handlers[ j ];

				if ( ( mappedTypes || origType === handleObj.origType ) &&
					( !handler || handler.guid === handleObj.guid ) &&
					( !tmp || tmp.test( handleObj.namespace ) ) &&
					( !selector || selector === handleObj.selector ||
						selector === "**" && handleObj.selector ) ) {
					handlers.splice( j, 1 );

					if ( handleObj.selector ) {
						handlers.delegateCount--;
					}
					if ( special.remove ) {
						special.remove.call( elem, handleObj );
					}
				}
			}

			// Remove generic event handler if we removed something and no more handlers exist
			// (avoids potential for endless recursion during removal of special event handlers)
			if ( origCount && !handlers.length ) {
				if ( !special.teardown ||
					special.teardown.call( elem, namespaces, elemData.handle ) === false ) {

					jQuery.removeEvent( elem, type, elemData.handle );
				}

				delete events[ type ];
			}
		}

		// Remove data and the expando if it's no longer used
		if ( jQuery.isEmptyObject( events ) ) {
			dataPriv.remove( elem, "handle events" );
		}
	},

	dispatch: function( nativeEvent ) {

		// Make a writable jQuery.Event from the native event object
		var event = jQuery.event.fix( nativeEvent );

		var i, j, ret, matched, handleObj, handlerQueue,
			args = new Array( arguments.length ),
			handlers = ( dataPriv.get( this, "events" ) || {} )[ event.type ] || [],
			special = jQuery.event.special[ event.type ] || {};

		// Use the fix-ed jQuery.Event rather than the (read-only) native event
		args[ 0 ] = event;

		for ( i = 1; i < arguments.length; i++ ) {
			args[ i ] = arguments[ i ];
		}

		event.delegateTarget = this;

		// Call the preDispatch hook for the mapped type, and let it bail if desired
		if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
			return;
		}

		// Determine handlers
		handlerQueue = jQuery.event.handlers.call( this, event, handlers );

		// Run delegates first; they may want to stop propagation beneath us
		i = 0;
		while ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {
			event.currentTarget = matched.elem;

			j = 0;
			while ( ( handleObj = matched.handlers[ j++ ] ) &&
				!event.isImmediatePropagationStopped() ) {

				// If the event is namespaced, then each handler is only invoked if it is
				// specially universal or its namespaces are a superset of the event's.
				if ( !event.rnamespace || handleObj.namespace === false ||
					event.rnamespace.test( handleObj.namespace ) ) {

					event.handleObj = handleObj;
					event.data = handleObj.data;

					ret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||
						handleObj.handler ).apply( matched.elem, args );

					if ( ret !== undefined ) {
						if ( ( event.result = ret ) === false ) {
							event.preventDefault();
							event.stopPropagation();
						}
					}
				}
			}
		}

		// Call the postDispatch hook for the mapped type
		if ( special.postDispatch ) {
			special.postDispatch.call( this, event );
		}

		return event.result;
	},

	handlers: function( event, handlers ) {
		var i, handleObj, sel, matchedHandlers, matchedSelectors,
			handlerQueue = [],
			delegateCount = handlers.delegateCount,
			cur = event.target;

		// Find delegate handlers
		if ( delegateCount &&

			// Support: IE <=9
			// Black-hole SVG <use> instance trees (trac-13180)
			cur.nodeType &&

			// Support: Firefox <=42
			// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)
			// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click
			// Support: IE 11 only
			// ...but not arrow key "clicks" of radio inputs, which can have `button` -1 (gh-2343)
			!( event.type === "click" && event.button >= 1 ) ) {

			for ( ; cur !== this; cur = cur.parentNode || this ) {

				// Don't check non-elements (#13208)
				// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
				if ( cur.nodeType === 1 && !( event.type === "click" && cur.disabled === true ) ) {
					matchedHandlers = [];
					matchedSelectors = {};
					for ( i = 0; i < delegateCount; i++ ) {
						handleObj = handlers[ i ];

						// Don't conflict with Object.prototype properties (#13203)
						sel = handleObj.selector + " ";

						if ( matchedSelectors[ sel ] === undefined ) {
							matchedSelectors[ sel ] = handleObj.needsContext ?
								jQuery( sel, this ).index( cur ) > -1 :
								jQuery.find( sel, this, null, [ cur ] ).length;
						}
						if ( matchedSelectors[ sel ] ) {
							matchedHandlers.push( handleObj );
						}
					}
					if ( matchedHandlers.length ) {
						handlerQueue.push( { elem: cur, handlers: matchedHandlers } );
					}
				}
			}
		}

		// Add the remaining (directly-bound) handlers
		cur = this;
		if ( delegateCount < handlers.length ) {
			handlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );
		}

		return handlerQueue;
	},

	addProp: function( name, hook ) {
		Object.defineProperty( jQuery.Event.prototype, name, {
			enumerable: true,
			configurable: true,

			get: isFunction( hook ) ?
				function() {
					if ( this.originalEvent ) {
							return hook( this.originalEvent );
					}
				} :
				function() {
					if ( this.originalEvent ) {
							return this.originalEvent[ name ];
					}
				},

			set: function( value ) {
				Object.defineProperty( this, name, {
					enumerable: true,
					configurable: true,
					writable: true,
					value: value
				} );
			}
		} );
	},

	fix: function( originalEvent ) {
		return originalEvent[ jQuery.expando ] ?
			originalEvent :
			new jQuery.Event( originalEvent );
	},

	special: {
		load: {

			// Prevent triggered image.load events from bubbling to window.load
			noBubble: true
		},
		click: {

			// Utilize native event to ensure correct state for checkable inputs
			setup: function( data ) {

				// For mutual compressibility with _default, replace `this` access with a local var.
				// `|| data` is dead code meant only to preserve the variable through minification.
				var el = this || data;

				// Claim the first handler
				if ( rcheckableType.test( el.type ) &&
					el.click && nodeName( el, "input" ) ) {

					// dataPriv.set( el, "click", ... )
					leverageNative( el, "click", returnTrue );
				}

				// Return false to allow normal processing in the caller
				return false;
			},
			trigger: function( data ) {

				// For mutual compressibility with _default, replace `this` access with a local var.
				// `|| data` is dead code meant only to preserve the variable through minification.
				var el = this || data;

				// Force setup before triggering a click
				if ( rcheckableType.test( el.type ) &&
					el.click && nodeName( el, "input" ) ) {

					leverageNative( el, "click" );
				}

				// Return non-false to allow normal event-path propagation
				return true;
			},

			// For cross-browser consistency, suppress native .click() on links
			// Also prevent it if we're currently inside a leveraged native-event stack
			_default: function( event ) {
				var target = event.target;
				return rcheckableType.test( target.type ) &&
					target.click && nodeName( target, "input" ) &&
					dataPriv.get( target, "click" ) ||
					nodeName( target, "a" );
			}
		},

		beforeunload: {
			postDispatch: function( event ) {

				// Support: Firefox 20+
				// Firefox doesn't alert if the returnValue field is not set.
				if ( event.result !== undefined && event.originalEvent ) {
					event.originalEvent.returnValue = event.result;
				}
			}
		}
	}
};

// Ensure the presence of an event listener that handles manually-triggered
// synthetic events by interrupting progress until reinvoked in response to
// *native* events that it fires directly, ensuring that state changes have
// already occurred before other listeners are invoked.
function leverageNative( el, type, expectSync ) {

	// Missing expectSync indicates a trigger call, which must force setup through jQuery.event.add
	if ( !expectSync ) {
		if ( dataPriv.get( el, type ) === undefined ) {
			jQuery.event.add( el, type, returnTrue );
		}
		return;
	}

	// Register the controller as a special universal handler for all event namespaces
	dataPriv.set( el, type, false );
	jQuery.event.add( el, type, {
		namespace: false,
		handler: function( event ) {
			var notAsync, result,
				saved = dataPriv.get( this, type );

			if ( ( event.isTrigger & 1 ) && this[ type ] ) {

				// Interrupt processing of the outer synthetic .trigger()ed event
				// Saved data should be false in such cases, but might be a leftover capture object
				// from an async native handler (gh-4350)
				if ( !saved.length ) {

					// Store arguments for use when handling the inner native event
					// There will always be at least one argument (an event object), so this array
					// will not be confused with a leftover capture object.
					saved = slice.call( arguments );
					dataPriv.set( this, type, saved );

					// Trigger the native event and capture its result
					// Support: IE <=9 - 11+
					// focus() and blur() are asynchronous
					notAsync = expectSync( this, type );
					this[ type ]();
					result = dataPriv.get( this, type );
					if ( saved !== result || notAsync ) {
						dataPriv.set( this, type, false );
					} else {
						result = {};
					}
					if ( saved !== result ) {

						// Cancel the outer synthetic event
						event.stopImmediatePropagation();
						event.preventDefault();
						return result.value;
					}

				// If this is an inner synthetic event for an event with a bubbling surrogate
				// (focus or blur), assume that the surrogate already propagated from triggering the
				// native event and prevent that from happening again here.
				// This technically gets the ordering wrong w.r.t. to `.trigger()` (in which the
				// bubbling surrogate propagates *after* the non-bubbling base), but that seems
				// less bad than duplication.
				} else if ( ( jQuery.event.special[ type ] || {} ).delegateType ) {
					event.stopPropagation();
				}

			// If this is a native event triggered above, everything is now in order
			// Fire an inner synthetic event with the original arguments
			} else if ( saved.length ) {

				// ...and capture the result
				dataPriv.set( this, type, {
					value: jQuery.event.trigger(

						// Support: IE <=9 - 11+
						// Extend with the prototype to reset the above stopImmediatePropagation()
						jQuery.extend( saved[ 0 ], jQuery.Event.prototype ),
						saved.slice( 1 ),
						this
					)
				} );

				// Abort handling of the native event
				event.stopImmediatePropagation();
			}
		}
	} );
}

jQuery.removeEvent = function( elem, type, handle ) {

	// This "if" is needed for plain objects
	if ( elem.removeEventListener ) {
		elem.removeEventListener( type, handle );
	}
};

jQuery.Event = function( src, props ) {

	// Allow instantiation without the 'new' keyword
	if ( !( this instanceof jQuery.Event ) ) {
		return new jQuery.Event( src, props );
	}

	// Event object
	if ( src && src.type ) {
		this.originalEvent = src;
		this.type = src.type;

		// Events bubbling up the document may have been marked as prevented
		// by a handler lower down the tree; reflect the correct value.
		this.isDefaultPrevented = src.defaultPrevented ||
				src.defaultPrevented === undefined &&

				// Support: Android <=2.3 only
				src.returnValue === false ?
			returnTrue :
			returnFalse;

		// Create target properties
		// Support: Safari <=6 - 7 only
		// Target should not be a text node (#504, #13143)
		this.target = ( src.target && src.target.nodeType === 3 ) ?
			src.target.parentNode :
			src.target;

		this.currentTarget = src.currentTarget;
		this.relatedTarget = src.relatedTarget;

	// Event type
	} else {
		this.type = src;
	}

	// Put explicitly provided properties onto the event object
	if ( props ) {
		jQuery.extend( this, props );
	}

	// Create a timestamp if incoming event doesn't have one
	this.timeStamp = src && src.timeStamp || Date.now();

	// Mark it as fixed
	this[ jQuery.expando ] = true;
};

// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
jQuery.Event.prototype = {
	constructor: jQuery.Event,
	isDefaultPrevented: returnFalse,
	isPropagationStopped: returnFalse,
	isImmediatePropagationStopped: returnFalse,
	isSimulated: false,

	preventDefault: function() {
		var e = this.originalEvent;

		this.isDefaultPrevented = returnTrue;

		if ( e && !this.isSimulated ) {
			e.preventDefault();
		}
	},
	stopPropagation: function() {
		var e = this.originalEvent;

		this.isPropagationStopped = returnTrue;

		if ( e && !this.isSimulated ) {
			e.stopPropagation();
		}
	},
	stopImmediatePropagation: function() {
		var e = this.originalEvent;

		this.isImmediatePropagationStopped = returnTrue;

		if ( e && !this.isSimulated ) {
			e.stopImmediatePropagation();
		}

		this.stopPropagation();
	}
};

// Includes all common event props including KeyEvent and MouseEvent specific props
jQuery.each( {
	altKey: true,
	bubbles: true,
	cancelable: true,
	changedTouches: true,
	ctrlKey: true,
	detail: true,
	eventPhase: true,
	metaKey: true,
	pageX: true,
	pageY: true,
	shiftKey: true,
	view: true,
	"char": true,
	code: true,
	charCode: true,
	key: true,
	keyCode: true,
	button: true,
	buttons: true,
	clientX: true,
	clientY: true,
	offsetX: true,
	offsetY: true,
	pointerId: true,
	pointerType: true,
	screenX: true,
	screenY: true,
	targetTouches: true,
	toElement: true,
	touches: true,

	which: function( event ) {
		var button = event.button;

		// Add which for key events
		if ( event.which == null && rkeyEvent.test( event.type ) ) {
			return event.charCode != null ? event.charCode : event.keyCode;
		}

		// Add which for click: 1 === left; 2 === middle; 3 === right
		if ( !event.which && button !== undefined && rmouseEvent.test( event.type ) ) {
			if ( button & 1 ) {
				return 1;
			}

			if ( button & 2 ) {
				return 3;
			}

			if ( button & 4 ) {
				return 2;
			}

			return 0;
		}

		return event.which;
	}
}, jQuery.event.addProp );

jQuery.each( { focus: "focusin", blur: "focusout" }, function( type, delegateType ) {
	jQuery.event.special[ type ] = {

		// Utilize native event if possible so blur/focus sequence is correct
		setup: function() {

			// Claim the first handler
			// dataPriv.set( this, "focus", ... )
			// dataPriv.set( this, "blur", ... )
			leverageNative( this, type, expectSync );

			// Return false to allow normal processing in the caller
			return false;
		},
		trigger: function() {

			// Force setup before trigger
			leverageNative( this, type );

			// Return non-false to allow normal event-path propagation
			return true;
		},

		delegateType: delegateType
	};
} );

// Create mouseenter/leave events using mouseover/out and event-time checks
// so that event delegation works in jQuery.
// Do the same for pointerenter/pointerleave and pointerover/pointerout
//
// Support: Safari 7 only
// Safari sends mouseenter too often; see:
// https://bugs.chromium.org/p/chromium/issues/detail?id=470258
// for the description of the bug (it existed in older Chrome versions as well).
jQuery.each( {
	mouseenter: "mouseover",
	mouseleave: "mouseout",
	pointerenter: "pointerover",
	pointerleave: "pointerout"
}, function( orig, fix ) {
	jQuery.event.special[ orig ] = {
		delegateType: fix,
		bindType: fix,

		handle: function( event ) {
			var ret,
				target = this,
				related = event.relatedTarget,
				handleObj = event.handleObj;

			// For mouseenter/leave call the handler if related is outside the target.
			// NB: No relatedTarget if the mouse left/entered the browser window
			if ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {
				event.type = handleObj.origType;
				ret = handleObj.handler.apply( this, arguments );
				event.type = fix;
			}
			return ret;
		}
	};
} );

jQuery.fn.extend( {

	on: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn );
	},
	one: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn, 1 );
	},
	off: function( types, selector, fn ) {
		var handleObj, type;
		if ( types && types.preventDefault && types.handleObj ) {

			// ( event )  dispatched jQuery.Event
			handleObj = types.handleObj;
			jQuery( types.delegateTarget ).off(
				handleObj.namespace ?
					handleObj.origType + "." + handleObj.namespace :
					handleObj.origType,
				handleObj.selector,
				handleObj.handler
			);
			return this;
		}
		if ( typeof types === "object" ) {

			// ( types-object [, selector] )
			for ( type in types ) {
				this.off( type, selector, types[ type ] );
			}
			return this;
		}
		if ( selector === false || typeof selector === "function" ) {

			// ( types [, fn] )
			fn = selector;
			selector = undefined;
		}
		if ( fn === false ) {
			fn = returnFalse;
		}
		return this.each( function() {
			jQuery.event.remove( this, types, fn, selector );
		} );
	}
} );


var

	/* eslint-disable max-len */

	// See https://github.com/eslint/eslint/issues/3229
	rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,

	/* eslint-enable */

	// Support: IE <=10 - 11, Edge 12 - 13 only
	// In IE/Edge using regex groups here causes severe slowdowns.
	// See https://connect.microsoft.com/IE/feedback/details/1736512/
	rnoInnerhtml = /<script|<style|<link/i,

	// checked="checked" or checked
	rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
	rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;

// Prefer a tbody over its parent table for containing new rows
function manipulationTarget( elem, content ) {
	if ( nodeName( elem, "table" ) &&
		nodeName( content.nodeType !== 11 ? content : content.firstChild, "tr" ) ) {

		return jQuery( elem ).children( "tbody" )[ 0 ] || elem;
	}

	return elem;
}

// Replace/restore the type attribute of script elements for safe DOM manipulation
function disableScript( elem ) {
	elem.type = ( elem.getAttribute( "type" ) !== null ) + "/" + elem.type;
	return elem;
}
function restoreScript( elem ) {
	if ( ( elem.type || "" ).slice( 0, 5 ) === "true/" ) {
		elem.type = elem.type.slice( 5 );
	} else {
		elem.removeAttribute( "type" );
	}

	return elem;
}

function cloneCopyEvent( src, dest ) {
	var i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;

	if ( dest.nodeType !== 1 ) {
		return;
	}

	// 1. Copy private data: events, handlers, etc.
	if ( dataPriv.hasData( src ) ) {
		pdataOld = dataPriv.access( src );
		pdataCur = dataPriv.set( dest, pdataOld );
		events = pdataOld.events;

		if ( events ) {
			delete pdataCur.handle;
			pdataCur.events = {};

			for ( type in events ) {
				for ( i = 0, l = events[ type ].length; i < l; i++ ) {
					jQuery.event.add( dest, type, events[ type ][ i ] );
				}
			}
		}
	}

	// 2. Copy user data
	if ( dataUser.hasData( src ) ) {
		udataOld = dataUser.access( src );
		udataCur = jQuery.extend( {}, udataOld );

		dataUser.set( dest, udataCur );
	}
}

// Fix IE bugs, see support tests
function fixInput( src, dest ) {
	var nodeName = dest.nodeName.toLowerCase();

	// Fails to persist the checked state of a cloned checkbox or radio button.
	if ( nodeName === "input" && rcheckableType.test( src.type ) ) {
		dest.checked = src.checked;

	// Fails to return the selected option to the default selected state when cloning options
	} else if ( nodeName === "input" || nodeName === "textarea" ) {
		dest.defaultValue = src.defaultValue;
	}
}

function domManip( collection, args, callback, ignored ) {

	// Flatten any nested arrays
	args = concat.apply( [], args );

	var fragment, first, scripts, hasScripts, node, doc,
		i = 0,
		l = collection.length,
		iNoClone = l - 1,
		value = args[ 0 ],
		valueIsFunction = isFunction( value );

	// We can't cloneNode fragments that contain checked, in WebKit
	if ( valueIsFunction ||
			( l > 1 && typeof value === "string" &&
				!support.checkClone && rchecked.test( value ) ) ) {
		return collection.each( function( index ) {
			var self = collection.eq( index );
			if ( valueIsFunction ) {
				args[ 0 ] = value.call( this, index, self.html() );
			}
			domManip( self, args, callback, ignored );
		} );
	}

	if ( l ) {
		fragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );
		first = fragment.firstChild;

		if ( fragment.childNodes.length === 1 ) {
			fragment = first;
		}

		// Require either new content or an interest in ignored elements to invoke the callback
		if ( first || ignored ) {
			scripts = jQuery.map( getAll( fragment, "script" ), disableScript );
			hasScripts = scripts.length;

			// Use the original fragment for the last item
			// instead of the first because it can end up
			// being emptied incorrectly in certain situations (#8070).
			for ( ; i < l; i++ ) {
				node = fragment;

				if ( i !== iNoClone ) {
					node = jQuery.clone( node, true, true );

					// Keep references to cloned scripts for later restoration
					if ( hasScripts ) {

						// Support: Android <=4.0 only, PhantomJS 1 only
						// push.apply(_, arraylike) throws on ancient WebKit
						jQuery.merge( scripts, getAll( node, "script" ) );
					}
				}

				callback.call( collection[ i ], node, i );
			}

			if ( hasScripts ) {
				doc = scripts[ scripts.length - 1 ].ownerDocument;

				// Reenable scripts
				jQuery.map( scripts, restoreScript );

				// Evaluate executable scripts on first document insertion
				for ( i = 0; i < hasScripts; i++ ) {
					node = scripts[ i ];
					if ( rscriptType.test( node.type || "" ) &&
						!dataPriv.access( node, "globalEval" ) &&
						jQuery.contains( doc, node ) ) {

						if ( node.src && ( node.type || "" ).toLowerCase()  !== "module" ) {

							// Optional AJAX dependency, but won't run scripts if not present
							if ( jQuery._evalUrl && !node.noModule ) {
								jQuery._evalUrl( node.src, {
									nonce: node.nonce || node.getAttribute( "nonce" )
								} );
							}
						} else {
							DOMEval( node.textContent.replace( rcleanScript, "" ), node, doc );
						}
					}
				}
			}
		}
	}

	return collection;
}

function remove( elem, selector, keepData ) {
	var node,
		nodes = selector ? jQuery.filter( selector, elem ) : elem,
		i = 0;

	for ( ; ( node = nodes[ i ] ) != null; i++ ) {
		if ( !keepData && node.nodeType === 1 ) {
			jQuery.cleanData( getAll( node ) );
		}

		if ( node.parentNode ) {
			if ( keepData && isAttached( node ) ) {
				setGlobalEval( getAll( node, "script" ) );
			}
			node.parentNode.removeChild( node );
		}
	}

	return elem;
}

jQuery.extend( {
	htmlPrefilter: function( html ) {
		return html.replace( rxhtmlTag, "<$1></$2>" );
	},

	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
		var i, l, srcElements, destElements,
			clone = elem.cloneNode( true ),
			inPage = isAttached( elem );

		// Fix IE cloning issues
		if ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&
				!jQuery.isXMLDoc( elem ) ) {

			// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2
			destElements = getAll( clone );
			srcElements = getAll( elem );

			for ( i = 0, l = srcElements.length; i < l; i++ ) {
				fixInput( srcElements[ i ], destElements[ i ] );
			}
		}

		// Copy the events from the original to the clone
		if ( dataAndEvents ) {
			if ( deepDataAndEvents ) {
				srcElements = srcElements || getAll( elem );
				destElements = destElements || getAll( clone );

				for ( i = 0, l = srcElements.length; i < l; i++ ) {
					cloneCopyEvent( srcElements[ i ], destElements[ i ] );
				}
			} else {
				cloneCopyEvent( elem, clone );
			}
		}

		// Preserve script evaluation history
		destElements = getAll( clone, "script" );
		if ( destElements.length > 0 ) {
			setGlobalEval( destElements, !inPage && getAll( elem, "script" ) );
		}

		// Return the cloned set
		return clone;
	},

	cleanData: function( elems ) {
		var data, elem, type,
			special = jQuery.event.special,
			i = 0;

		for ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {
			if ( acceptData( elem ) ) {
				if ( ( data = elem[ dataPriv.expando ] ) ) {
					if ( data.events ) {
						for ( type in data.events ) {
							if ( special[ type ] ) {
								jQuery.event.remove( elem, type );

							// This is a shortcut to avoid jQuery.event.remove's overhead
							} else {
								jQuery.removeEvent( elem, type, data.handle );
							}
						}
					}

					// Support: Chrome <=35 - 45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataPriv.expando ] = undefined;
				}
				if ( elem[ dataUser.expando ] ) {

					// Support: Chrome <=35 - 45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataUser.expando ] = undefined;
				}
			}
		}
	}
} );

jQuery.fn.extend( {
	detach: function( selector ) {
		return remove( this, selector, true );
	},

	remove: function( selector ) {
		return remove( this, selector );
	},

	text: function( value ) {
		return access( this, function( value ) {
			return value === undefined ?
				jQuery.text( this ) :
				this.empty().each( function() {
					if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
						this.textContent = value;
					}
				} );
		}, null, value, arguments.length );
	},

	append: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.appendChild( elem );
			}
		} );
	},

	prepend: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.insertBefore( elem, target.firstChild );
			}
		} );
	},

	before: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this );
			}
		} );
	},

	after: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this.nextSibling );
			}
		} );
	},

	empty: function() {
		var elem,
			i = 0;

		for ( ; ( elem = this[ i ] ) != null; i++ ) {
			if ( elem.nodeType === 1 ) {

				// Prevent memory leaks
				jQuery.cleanData( getAll( elem, false ) );

				// Remove any remaining nodes
				elem.textContent = "";
			}
		}

		return this;
	},

	clone: function( dataAndEvents, deepDataAndEvents ) {
		dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
		deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

		return this.map( function() {
			return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
		} );
	},

	html: function( value ) {
		return access( this, function( value ) {
			var elem = this[ 0 ] || {},
				i = 0,
				l = this.length;

			if ( value === undefined && elem.nodeType === 1 ) {
				return elem.innerHTML;
			}

			// See if we can take a shortcut and just use innerHTML
			if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
				!wrapMap[ ( rtagName.exec( value ) || [ "", "" ] )[ 1 ].toLowerCase() ] ) {

				value = jQuery.htmlPrefilter( value );

				try {
					for ( ; i < l; i++ ) {
						elem = this[ i ] || {};

						// Remove element nodes and prevent memory leaks
						if ( elem.nodeType === 1 ) {
							jQuery.cleanData( getAll( elem, false ) );
							elem.innerHTML = value;
						}
					}

					elem = 0;

				// If using innerHTML throws an exception, use the fallback method
				} catch ( e ) {}
			}

			if ( elem ) {
				this.empty().append( value );
			}
		}, null, value, arguments.length );
	},

	replaceWith: function() {
		var ignored = [];

		// Make the changes, replacing each non-ignored context element with the new content
		return domManip( this, arguments, function( elem ) {
			var parent = this.parentNode;

			if ( jQuery.inArray( this, ignored ) < 0 ) {
				jQuery.cleanData( getAll( this ) );
				if ( parent ) {
					parent.replaceChild( elem, this );
				}
			}

		// Force callback invocation
		}, ignored );
	}
} );

jQuery.each( {
	appendTo: "append",
	prependTo: "prepend",
	insertBefore: "before",
	insertAfter: "after",
	replaceAll: "replaceWith"
}, function( name, original ) {
	jQuery.fn[ name ] = function( selector ) {
		var elems,
			ret = [],
			insert = jQuery( selector ),
			last = insert.length - 1,
			i = 0;

		for ( ; i <= last; i++ ) {
			elems = i === last ? this : this.clone( true );
			jQuery( insert[ i ] )[ original ]( elems );

			// Support: Android <=4.0 only, PhantomJS 1 only
			// .get() because push.apply(_, arraylike) throws on ancient WebKit
			push.apply( ret, elems.get() );
		}

		return this.pushStack( ret );
	};
} );
var rnumnonpx = new RegExp( "^(" + pnum + ")(?!px)[a-z%]+$", "i" );

var getStyles = function( elem ) {

		// Support: IE <=11 only, Firefox <=30 (#15098, #14150)
		// IE throws on elements created in popups
		// FF meanwhile throws on frame elements through "defaultView.getComputedStyle"
		var view = elem.ownerDocument.defaultView;

		if ( !view || !view.opener ) {
			view = window;
		}

		return view.getComputedStyle( elem );
	};

var rboxStyle = new RegExp( cssExpand.join( "|" ), "i" );



( function() {

	// Executing both pixelPosition & boxSizingReliable tests require only one layout
	// so they're executed at the same time to save the second computation.
	function computeStyleTests() {

		// This is a singleton, we need to execute it only once
		if ( !div ) {
			return;
		}

		container.style.cssText = "position:absolute;left:-11111px;width:60px;" +
			"margin-top:1px;padding:0;border:0";
		div.style.cssText =
			"position:relative;display:block;box-sizing:border-box;overflow:scroll;" +
			"margin:auto;border:1px;padding:1px;" +
			"width:60%;top:1%";
		documentElement.appendChild( container ).appendChild( div );

		var divStyle = window.getComputedStyle( div );
		pixelPositionVal = divStyle.top !== "1%";

		// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44
		reliableMarginLeftVal = roundPixelMeasures( divStyle.marginLeft ) === 12;

		// Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3
		// Some styles come back with percentage values, even though they shouldn't
		div.style.right = "60%";
		pixelBoxStylesVal = roundPixelMeasures( divStyle.right ) === 36;

		// Support: IE 9 - 11 only
		// Detect misreporting of content dimensions for box-sizing:border-box elements
		boxSizingReliableVal = roundPixelMeasures( divStyle.width ) === 36;

		// Support: IE 9 only
		// Detect overflow:scroll screwiness (gh-3699)
		// Support: Chrome <=64
		// Don't get tricked when zoom affects offsetWidth (gh-4029)
		div.style.position = "absolute";
		scrollboxSizeVal = roundPixelMeasures( div.offsetWidth / 3 ) === 12;

		documentElement.removeChild( container );

		// Nullify the div so it wouldn't be stored in the memory and
		// it will also be a sign that checks already performed
		div = null;
	}

	function roundPixelMeasures( measure ) {
		return Math.round( parseFloat( measure ) );
	}

	var pixelPositionVal, boxSizingReliableVal, scrollboxSizeVal, pixelBoxStylesVal,
		reliableMarginLeftVal,
		container = document.createElement( "div" ),
		div = document.createElement( "div" );

	// Finish early in limited (non-browser) environments
	if ( !div.style ) {
		return;
	}

	// Support: IE <=9 - 11 only
	// Style of cloned element affects source element cloned (#8908)
	div.style.backgroundClip = "content-box";
	div.cloneNode( true ).style.backgroundClip = "";
	support.clearCloneStyle = div.style.backgroundClip === "content-box";

	jQuery.extend( support, {
		boxSizingReliable: function() {
			computeStyleTests();
			return boxSizingReliableVal;
		},
		pixelBoxStyles: function() {
			computeStyleTests();
			return pixelBoxStylesVal;
		},
		pixelPosition: function() {
			computeStyleTests();
			return pixelPositionVal;
		},
		reliableMarginLeft: function() {
			computeStyleTests();
			return reliableMarginLeftVal;
		},
		scrollboxSize: function() {
			computeStyleTests();
			return scrollboxSizeVal;
		}
	} );
} )();


function curCSS( elem, name, computed ) {
	var width, minWidth, maxWidth, ret,

		// Support: Firefox 51+
		// Retrieving style before computed somehow
		// fixes an issue with getting wrong values
		// on detached elements
		style = elem.style;

	computed = computed || getStyles( elem );

	// getPropertyValue is needed for:
	//   .css('filter') (IE 9 only, #12537)
	//   .css('--customProperty) (#3144)
	if ( computed ) {
		ret = computed.getPropertyValue( name ) || computed[ name ];

		if ( ret === "" && !isAttached( elem ) ) {
			ret = jQuery.style( elem, name );
		}

		// A tribute to the "awesome hack by Dean Edwards"
		// Android Browser returns percentage for some values,
		// but width seems to be reliably pixels.
		// This is against the CSSOM draft spec:
		// https://drafts.csswg.org/cssom/#resolved-values
		if ( !support.pixelBoxStyles() && rnumnonpx.test( ret ) && rboxStyle.test( name ) ) {

			// Remember the original values
			width = style.width;
			minWidth = style.minWidth;
			maxWidth = style.maxWidth;

			// Put in the new values to get a computed value out
			style.minWidth = style.maxWidth = style.width = ret;
			ret = computed.width;

			// Revert the changed values
			style.width = width;
			style.minWidth = minWidth;
			style.maxWidth = maxWidth;
		}
	}

	return ret !== undefined ?

		// Support: IE <=9 - 11 only
		// IE returns zIndex value as an integer.
		ret + "" :
		ret;
}


function addGetHookIf( conditionFn, hookFn ) {

	// Define the hook, we'll check on the first run if it's really needed.
	return {
		get: function() {
			if ( conditionFn() ) {

				// Hook not needed (or it's not possible to use it due
				// to missing dependency), remove it.
				delete this.get;
				return;
			}

			// Hook needed; redefine it so that the support test is not executed again.
			return ( this.get = hookFn ).apply( this, arguments );
		}
	};
}


var cssPrefixes = [ "Webkit", "Moz", "ms" ],
	emptyStyle = document.createElement( "div" ).style,
	vendorProps = {};

// Return a vendor-prefixed property or undefined
function vendorPropName( name ) {

	// Check for vendor prefixed names
	var capName = name[ 0 ].toUpperCase() + name.slice( 1 ),
		i = cssPrefixes.length;

	while ( i-- ) {
		name = cssPrefixes[ i ] + capName;
		if ( name in emptyStyle ) {
			return name;
		}
	}
}

// Return a potentially-mapped jQuery.cssProps or vendor prefixed property
function finalPropName( name ) {
	var final = jQuery.cssProps[ name ] || vendorProps[ name ];

	if ( final ) {
		return final;
	}
	if ( name in emptyStyle ) {
		return name;
	}
	return vendorProps[ name ] = vendorPropName( name ) || name;
}


var

	// Swappable if display is none or starts with table
	// except "table", "table-cell", or "table-caption"
	// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
	rdisplayswap = /^(none|table(?!-c[ea]).+)/,
	rcustomProp = /^--/,
	cssShow = { position: "absolute", visibility: "hidden", display: "block" },
	cssNormalTransform = {
		letterSpacing: "0",
		fontWeight: "400"
	};

function setPositiveNumber( elem, value, subtract ) {

	// Any relative (+/-) values have already been
	// normalized at this point
	var matches = rcssNum.exec( value );
	return matches ?

		// Guard against undefined "subtract", e.g., when used as in cssHooks
		Math.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || "px" ) :
		value;
}

function boxModelAdjustment( elem, dimension, box, isBorderBox, styles, computedVal ) {
	var i = dimension === "width" ? 1 : 0,
		extra = 0,
		delta = 0;

	// Adjustment may not be necessary
	if ( box === ( isBorderBox ? "border" : "content" ) ) {
		return 0;
	}

	for ( ; i < 4; i += 2 ) {

		// Both box models exclude margin
		if ( box === "margin" ) {
			delta += jQuery.css( elem, box + cssExpand[ i ], true, styles );
		}

		// If we get here with a content-box, we're seeking "padding" or "border" or "margin"
		if ( !isBorderBox ) {

			// Add padding
			delta += jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );

			// For "border" or "margin", add border
			if ( box !== "padding" ) {
				delta += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );

			// But still keep track of it otherwise
			} else {
				extra += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}

		// If we get here with a border-box (content + padding + border), we're seeking "content" or
		// "padding" or "margin"
		} else {

			// For "content", subtract padding
			if ( box === "content" ) {
				delta -= jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );
			}

			// For "content" or "padding", subtract border
			if ( box !== "margin" ) {
				delta -= jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		}
	}

	// Account for positive content-box scroll gutter when requested by providing computedVal
	if ( !isBorderBox && computedVal >= 0 ) {

		// offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border
		// Assuming integer scroll gutter, subtract the rest and round down
		delta += Math.max( 0, Math.ceil(
			elem[ "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -
			computedVal -
			delta -
			extra -
			0.5

		// If offsetWidth/offsetHeight is unknown, then we can't determine content-box scroll gutter
		// Use an explicit zero to avoid NaN (gh-3964)
		) ) || 0;
	}

	return delta;
}

function getWidthOrHeight( elem, dimension, extra ) {

	// Start with computed style
	var styles = getStyles( elem ),

		// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-4322).
		// Fake content-box until we know it's needed to know the true value.
		boxSizingNeeded = !support.boxSizingReliable() || extra,
		isBorderBox = boxSizingNeeded &&
			jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
		valueIsBorderBox = isBorderBox,

		val = curCSS( elem, dimension, styles ),
		offsetProp = "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 );

	// Support: Firefox <=54
	// Return a confounding non-pixel value or feign ignorance, as appropriate.
	if ( rnumnonpx.test( val ) ) {
		if ( !extra ) {
			return val;
		}
		val = "auto";
	}


	// Fall back to offsetWidth/offsetHeight when value is "auto"
	// This happens for inline elements with no explicit setting (gh-3571)
	// Support: Android <=4.1 - 4.3 only
	// Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)
	// Support: IE 9-11 only
	// Also use offsetWidth/offsetHeight for when box sizing is unreliable
	// We use getClientRects() to check for hidden/disconnected.
	// In those cases, the computed value can be trusted to be border-box
	if ( ( !support.boxSizingReliable() && isBorderBox ||
		val === "auto" ||
		!parseFloat( val ) && jQuery.css( elem, "display", false, styles ) === "inline" ) &&
		elem.getClientRects().length ) {

		isBorderBox = jQuery.css( elem, "boxSizing", false, styles ) === "border-box";

		// Where available, offsetWidth/offsetHeight approximate border box dimensions.
		// Where not available (e.g., SVG), assume unreliable box-sizing and interpret the
		// retrieved value as a content box dimension.
		valueIsBorderBox = offsetProp in elem;
		if ( valueIsBorderBox ) {
			val = elem[ offsetProp ];
		}
	}

	// Normalize "" and auto
	val = parseFloat( val ) || 0;

	// Adjust for the element's box model
	return ( val +
		boxModelAdjustment(
			elem,
			dimension,
			extra || ( isBorderBox ? "border" : "content" ),
			valueIsBorderBox,
			styles,

			// Provide the current computed size to request scroll gutter calculation (gh-3589)
			val
		)
	) + "px";
}

jQuery.extend( {

	// Add in style property hooks for overriding the default
	// behavior of getting and setting a style property
	cssHooks: {
		opacity: {
			get: function( elem, computed ) {
				if ( computed ) {

					// We should always get a number back from opacity
					var ret = curCSS( elem, "opacity" );
					return ret === "" ? "1" : ret;
				}
			}
		}
	},

	// Don't automatically add "px" to these possibly-unitless properties
	cssNumber: {
		"animationIterationCount": true,
		"columnCount": true,
		"fillOpacity": true,
		"flexGrow": true,
		"flexShrink": true,
		"fontWeight": true,
		"gridArea": true,
		"gridColumn": true,
		"gridColumnEnd": true,
		"gridColumnStart": true,
		"gridRow": true,
		"gridRowEnd": true,
		"gridRowStart": true,
		"lineHeight": true,
		"opacity": true,
		"order": true,
		"orphans": true,
		"widows": true,
		"zIndex": true,
		"zoom": true
	},

	// Add in properties whose names you wish to fix before
	// setting or getting the value
	cssProps: {},

	// Get and set the style property on a DOM Node
	style: function( elem, name, value, extra ) {

		// Don't set styles on text and comment nodes
		if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
			return;
		}

		// Make sure that we're working with the right name
		var ret, type, hooks,
			origName = camelCase( name ),
			isCustomProp = rcustomProp.test( name ),
			style = elem.style;

		// Make sure that we're working with the right name. We don't
		// want to query the value if it is a CSS custom property
		// since they are user-defined.
		if ( !isCustomProp ) {
			name = finalPropName( origName );
		}

		// Gets hook for the prefixed version, then unprefixed version
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// Check if we're setting a value
		if ( value !== undefined ) {
			type = typeof value;

			// Convert "+=" or "-=" to relative numbers (#7345)
			if ( type === "string" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {
				value = adjustCSS( elem, name, ret );

				// Fixes bug #9237
				type = "number";
			}

			// Make sure that null and NaN values aren't set (#7116)
			if ( value == null || value !== value ) {
				return;
			}

			// If a number was passed in, add the unit (except for certain CSS properties)
			// The isCustomProp check can be removed in jQuery 4.0 when we only auto-append
			// "px" to a few hardcoded values.
			if ( type === "number" && !isCustomProp ) {
				value += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? "" : "px" );
			}

			// background-* props affect original clone's values
			if ( !support.clearCloneStyle && value === "" && name.indexOf( "background" ) === 0 ) {
				style[ name ] = "inherit";
			}

			// If a hook was provided, use that value, otherwise just set the specified value
			if ( !hooks || !( "set" in hooks ) ||
				( value = hooks.set( elem, value, extra ) ) !== undefined ) {

				if ( isCustomProp ) {
					style.setProperty( name, value );
				} else {
					style[ name ] = value;
				}
			}

		} else {

			// If a hook was provided get the non-computed value from there
			if ( hooks && "get" in hooks &&
				( ret = hooks.get( elem, false, extra ) ) !== undefined ) {

				return ret;
			}

			// Otherwise just get the value from the style object
			return style[ name ];
		}
	},

	css: function( elem, name, extra, styles ) {
		var val, num, hooks,
			origName = camelCase( name ),
			isCustomProp = rcustomProp.test( name );

		// Make sure that we're working with the right name. We don't
		// want to modify the value if it is a CSS custom property
		// since they are user-defined.
		if ( !isCustomProp ) {
			name = finalPropName( origName );
		}

		// Try prefixed name followed by the unprefixed name
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// If a hook was provided get the computed value from there
		if ( hooks && "get" in hooks ) {
			val = hooks.get( elem, true, extra );
		}

		// Otherwise, if a way to get the computed value exists, use that
		if ( val === undefined ) {
			val = curCSS( elem, name, styles );
		}

		// Convert "normal" to computed value
		if ( val === "normal" && name in cssNormalTransform ) {
			val = cssNormalTransform[ name ];
		}

		// Make numeric if forced or a qualifier was provided and val looks numeric
		if ( extra === "" || extra ) {
			num = parseFloat( val );
			return extra === true || isFinite( num ) ? num || 0 : val;
		}

		return val;
	}
} );

jQuery.each( [ "height", "width" ], function( i, dimension ) {
	jQuery.cssHooks[ dimension ] = {
		get: function( elem, computed, extra ) {
			if ( computed ) {

				// Certain elements can have dimension info if we invisibly show them
				// but it must have a current display style that would benefit
				return rdisplayswap.test( jQuery.css( elem, "display" ) ) &&

					// Support: Safari 8+
					// Table columns in Safari have non-zero offsetWidth & zero
					// getBoundingClientRect().width unless display is changed.
					// Support: IE <=11 only
					// Running getBoundingClientRect on a disconnected node
					// in IE throws an error.
					( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?
						swap( elem, cssShow, function() {
							return getWidthOrHeight( elem, dimension, extra );
						} ) :
						getWidthOrHeight( elem, dimension, extra );
			}
		},

		set: function( elem, value, extra ) {
			var matches,
				styles = getStyles( elem ),

				// Only read styles.position if the test has a chance to fail
				// to avoid forcing a reflow.
				scrollboxSizeBuggy = !support.scrollboxSize() &&
					styles.position === "absolute",

				// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-3991)
				boxSizingNeeded = scrollboxSizeBuggy || extra,
				isBorderBox = boxSizingNeeded &&
					jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
				subtract = extra ?
					boxModelAdjustment(
						elem,
						dimension,
						extra,
						isBorderBox,
						styles
					) :
					0;

			// Account for unreliable border-box dimensions by comparing offset* to computed and
			// faking a content-box to get border and padding (gh-3699)
			if ( isBorderBox && scrollboxSizeBuggy ) {
				subtract -= Math.ceil(
					elem[ "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -
					parseFloat( styles[ dimension ] ) -
					boxModelAdjustment( elem, dimension, "border", false, styles ) -
					0.5
				);
			}

			// Convert to pixels if value adjustment is needed
			if ( subtract && ( matches = rcssNum.exec( value ) ) &&
				( matches[ 3 ] || "px" ) !== "px" ) {

				elem.style[ dimension ] = value;
				value = jQuery.css( elem, dimension );
			}

			return setPositiveNumber( elem, value, subtract );
		}
	};
} );

jQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,
	function( elem, computed ) {
		if ( computed ) {
			return ( parseFloat( curCSS( elem, "marginLeft" ) ) ||
				elem.getBoundingClientRect().left -
					swap( elem, { marginLeft: 0 }, function() {
						return elem.getBoundingClientRect().left;
					} )
				) + "px";
		}
	}
);

// These hooks are used by animate to expand properties
jQuery.each( {
	margin: "",
	padding: "",
	border: "Width"
}, function( prefix, suffix ) {
	jQuery.cssHooks[ prefix + suffix ] = {
		expand: function( value ) {
			var i = 0,
				expanded = {},

				// Assumes a single number if not a string
				parts = typeof value === "string" ? value.split( " " ) : [ value ];

			for ( ; i < 4; i++ ) {
				expanded[ prefix + cssExpand[ i ] + suffix ] =
					parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
			}

			return expanded;
		}
	};

	if ( prefix !== "margin" ) {
		jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;
	}
} );

jQuery.fn.extend( {
	css: function( name, value ) {
		return access( this, function( elem, name, value ) {
			var styles, len,
				map = {},
				i = 0;

			if ( Array.isArray( name ) ) {
				styles = getStyles( elem );
				len = name.length;

				for ( ; i < len; i++ ) {
					map[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );
				}

				return map;
			}

			return value !== undefined ?
				jQuery.style( elem, name, value ) :
				jQuery.css( elem, name );
		}, name, value, arguments.length > 1 );
	}
} );


function Tween( elem, options, prop, end, easing ) {
	return new Tween.prototype.init( elem, options, prop, end, easing );
}
jQuery.Tween = Tween;

Tween.prototype = {
	constructor: Tween,
	init: function( elem, options, prop, end, easing, unit ) {
		this.elem = elem;
		this.prop = prop;
		this.easing = easing || jQuery.easing._default;
		this.options = options;
		this.start = this.now = this.cur();
		this.end = end;
		this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );
	},
	cur: function() {
		var hooks = Tween.propHooks[ this.prop ];

		return hooks && hooks.get ?
			hooks.get( this ) :
			Tween.propHooks._default.get( this );
	},
	run: function( percent ) {
		var eased,
			hooks = Tween.propHooks[ this.prop ];

		if ( this.options.duration ) {
			this.pos = eased = jQuery.easing[ this.easing ](
				percent, this.options.duration * percent, 0, 1, this.options.duration
			);
		} else {
			this.pos = eased = percent;
		}
		this.now = ( this.end - this.start ) * eased + this.start;

		if ( this.options.step ) {
			this.options.step.call( this.elem, this.now, this );
		}

		if ( hooks && hooks.set ) {
			hooks.set( this );
		} else {
			Tween.propHooks._default.set( this );
		}
		return this;
	}
};

Tween.prototype.init.prototype = Tween.prototype;

Tween.propHooks = {
	_default: {
		get: function( tween ) {
			var result;

			// Use a property on the element directly when it is not a DOM element,
			// or when there is no matching style property that exists.
			if ( tween.elem.nodeType !== 1 ||
				tween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {
				return tween.elem[ tween.prop ];
			}

			// Passing an empty string as a 3rd parameter to .css will automatically
			// attempt a parseFloat and fallback to a string if the parse fails.
			// Simple values such as "10px" are parsed to Float;
			// complex values such as "rotate(1rad)" are returned as-is.
			result = jQuery.css( tween.elem, tween.prop, "" );

			// Empty strings, null, undefined and "auto" are converted to 0.
			return !result || result === "auto" ? 0 : result;
		},
		set: function( tween ) {

			// Use step hook for back compat.
			// Use cssHook if its there.
			// Use .style if available and use plain properties where available.
			if ( jQuery.fx.step[ tween.prop ] ) {
				jQuery.fx.step[ tween.prop ]( tween );
			} else if ( tween.elem.nodeType === 1 && (
					jQuery.cssHooks[ tween.prop ] ||
					tween.elem.style[ finalPropName( tween.prop ) ] != null ) ) {
				jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );
			} else {
				tween.elem[ tween.prop ] = tween.now;
			}
		}
	}
};

// Support: IE <=9 only
// Panic based approach to setting things on disconnected nodes
Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
	set: function( tween ) {
		if ( tween.elem.nodeType && tween.elem.parentNode ) {
			tween.elem[ tween.prop ] = tween.now;
		}
	}
};

jQuery.easing = {
	linear: function( p ) {
		return p;
	},
	swing: function( p ) {
		return 0.5 - Math.cos( p * Math.PI ) / 2;
	},
	_default: "swing"
};

jQuery.fx = Tween.prototype.init;

// Back compat <1.8 extension point
jQuery.fx.step = {};




var
	fxNow, inProgress,
	rfxtypes = /^(?:toggle|show|hide)$/,
	rrun = /queueHooks$/;

function schedule() {
	if ( inProgress ) {
		if ( document.hidden === false && window.requestAnimationFrame ) {
			window.requestAnimationFrame( schedule );
		} else {
			window.setTimeout( schedule, jQuery.fx.interval );
		}

		jQuery.fx.tick();
	}
}

// Animations created synchronously will run synchronously
function createFxNow() {
	window.setTimeout( function() {
		fxNow = undefined;
	} );
	return ( fxNow = Date.now() );
}

// Generate parameters to create a standard animation
function genFx( type, includeWidth ) {
	var which,
		i = 0,
		attrs = { height: type };

	// If we include width, step value is 1 to do all cssExpand values,
	// otherwise step value is 2 to skip over Left and Right
	includeWidth = includeWidth ? 1 : 0;
	for ( ; i < 4; i += 2 - includeWidth ) {
		which = cssExpand[ i ];
		attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;
	}

	if ( includeWidth ) {
		attrs.opacity = attrs.width = type;
	}

	return attrs;
}

function createTween( value, prop, animation ) {
	var tween,
		collection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ "*" ] ),
		index = 0,
		length = collection.length;
	for ( ; index < length; index++ ) {
		if ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {

			// We're done with this property
			return tween;
		}
	}
}

function defaultPrefilter( elem, props, opts ) {
	var prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,
		isBox = "width" in props || "height" in props,
		anim = this,
		orig = {},
		style = elem.style,
		hidden = elem.nodeType && isHiddenWithinTree( elem ),
		dataShow = dataPriv.get( elem, "fxshow" );

	// Queue-skipping animations hijack the fx hooks
	if ( !opts.queue ) {
		hooks = jQuery._queueHooks( elem, "fx" );
		if ( hooks.unqueued == null ) {
			hooks.unqueued = 0;
			oldfire = hooks.empty.fire;
			hooks.empty.fire = function() {
				if ( !hooks.unqueued ) {
					oldfire();
				}
			};
		}
		hooks.unqueued++;

		anim.always( function() {

			// Ensure the complete handler is called before this completes
			anim.always( function() {
				hooks.unqueued--;
				if ( !jQuery.queue( elem, "fx" ).length ) {
					hooks.empty.fire();
				}
			} );
		} );
	}

	// Detect show/hide animations
	for ( prop in props ) {
		value = props[ prop ];
		if ( rfxtypes.test( value ) ) {
			delete props[ prop ];
			toggle = toggle || value === "toggle";
			if ( value === ( hidden ? "hide" : "show" ) ) {

				// Pretend to be hidden if this is a "show" and
				// there is still data from a stopped show/hide
				if ( value === "show" && dataShow && dataShow[ prop ] !== undefined ) {
					hidden = true;

				// Ignore all other no-op show/hide data
				} else {
					continue;
				}
			}
			orig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );
		}
	}

	// Bail out if this is a no-op like .hide().hide()
	propTween = !jQuery.isEmptyObject( props );
	if ( !propTween && jQuery.isEmptyObject( orig ) ) {
		return;
	}

	// Restrict "overflow" and "display" styles during box animations
	if ( isBox && elem.nodeType === 1 ) {

		// Support: IE <=9 - 11, Edge 12 - 15
		// Record all 3 overflow attributes because IE does not infer the shorthand
		// from identically-valued overflowX and overflowY and Edge just mirrors
		// the overflowX value there.
		opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];

		// Identify a display type, preferring old show/hide data over the CSS cascade
		restoreDisplay = dataShow && dataShow.display;
		if ( restoreDisplay == null ) {
			restoreDisplay = dataPriv.get( elem, "display" );
		}
		display = jQuery.css( elem, "display" );
		if ( display === "none" ) {
			if ( restoreDisplay ) {
				display = restoreDisplay;
			} else {

				// Get nonempty value(s) by temporarily forcing visibility
				showHide( [ elem ], true );
				restoreDisplay = elem.style.display || restoreDisplay;
				display = jQuery.css( elem, "display" );
				showHide( [ elem ] );
			}
		}

		// Animate inline elements as inline-block
		if ( display === "inline" || display === "inline-block" && restoreDisplay != null ) {
			if ( jQuery.css( elem, "float" ) === "none" ) {

				// Restore the original display value at the end of pure show/hide animations
				if ( !propTween ) {
					anim.done( function() {
						style.display = restoreDisplay;
					} );
					if ( restoreDisplay == null ) {
						display = style.display;
						restoreDisplay = display === "none" ? "" : display;
					}
				}
				style.display = "inline-block";
			}
		}
	}

	if ( opts.overflow ) {
		style.overflow = "hidden";
		anim.always( function() {
			style.overflow = opts.overflow[ 0 ];
			style.overflowX = opts.overflow[ 1 ];
			style.overflowY = opts.overflow[ 2 ];
		} );
	}

	// Implement show/hide animations
	propTween = false;
	for ( prop in orig ) {

		// General show/hide setup for this element animation
		if ( !propTween ) {
			if ( dataShow ) {
				if ( "hidden" in dataShow ) {
					hidden = dataShow.hidden;
				}
			} else {
				dataShow = dataPriv.access( elem, "fxshow", { display: restoreDisplay } );
			}

			// Store hidden/visible for toggle so `.stop().toggle()` "reverses"
			if ( toggle ) {
				dataShow.hidden = !hidden;
			}

			// Show elements before animating them
			if ( hidden ) {
				showHide( [ elem ], true );
			}

			/* eslint-disable no-loop-func */

			anim.done( function() {

			/* eslint-enable no-loop-func */

				// The final step of a "hide" animation is actually hiding the element
				if ( !hidden ) {
					showHide( [ elem ] );
				}
				dataPriv.remove( elem, "fxshow" );
				for ( prop in orig ) {
					jQuery.style( elem, prop, orig[ prop ] );
				}
			} );
		}

		// Per-property setup
		propTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );
		if ( !( prop in dataShow ) ) {
			dataShow[ prop ] = propTween.start;
			if ( hidden ) {
				propTween.end = propTween.start;
				propTween.start = 0;
			}
		}
	}
}

function propFilter( props, specialEasing ) {
	var index, name, easing, value, hooks;

	// camelCase, specialEasing and expand cssHook pass
	for ( index in props ) {
		name = camelCase( index );
		easing = specialEasing[ name ];
		value = props[ index ];
		if ( Array.isArray( value ) ) {
			easing = value[ 1 ];
			value = props[ index ] = value[ 0 ];
		}

		if ( index !== name ) {
			props[ name ] = value;
			delete props[ index ];
		}

		hooks = jQuery.cssHooks[ name ];
		if ( hooks && "expand" in hooks ) {
			value = hooks.expand( value );
			delete props[ name ];

			// Not quite $.extend, this won't overwrite existing keys.
			// Reusing 'index' because we have the correct "name"
			for ( index in value ) {
				if ( !( index in props ) ) {
					props[ index ] = value[ index ];
					specialEasing[ index ] = easing;
				}
			}
		} else {
			specialEasing[ name ] = easing;
		}
	}
}

function Animation( elem, properties, options ) {
	var result,
		stopped,
		index = 0,
		length = Animation.prefilters.length,
		deferred = jQuery.Deferred().always( function() {

			// Don't match elem in the :animated selector
			delete tick.elem;
		} ),
		tick = function() {
			if ( stopped ) {
				return false;
			}
			var currentTime = fxNow || createFxNow(),
				remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),

				// Support: Android 2.3 only
				// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)
				temp = remaining / animation.duration || 0,
				percent = 1 - temp,
				index = 0,
				length = animation.tweens.length;

			for ( ; index < length; index++ ) {
				animation.tweens[ index ].run( percent );
			}

			deferred.notifyWith( elem, [ animation, percent, remaining ] );

			// If there's more to do, yield
			if ( percent < 1 && length ) {
				return remaining;
			}

			// If this was an empty animation, synthesize a final progress notification
			if ( !length ) {
				deferred.notifyWith( elem, [ animation, 1, 0 ] );
			}

			// Resolve the animation and report its conclusion
			deferred.resolveWith( elem, [ animation ] );
			return false;
		},
		animation = deferred.promise( {
			elem: elem,
			props: jQuery.extend( {}, properties ),
			opts: jQuery.extend( true, {
				specialEasing: {},
				easing: jQuery.easing._default
			}, options ),
			originalProperties: properties,
			originalOptions: options,
			startTime: fxNow || createFxNow(),
			duration: options.duration,
			tweens: [],
			createTween: function( prop, end ) {
				var tween = jQuery.Tween( elem, animation.opts, prop, end,
						animation.opts.specialEasing[ prop ] || animation.opts.easing );
				animation.tweens.push( tween );
				return tween;
			},
			stop: function( gotoEnd ) {
				var index = 0,

					// If we are going to the end, we want to run all the tweens
					// otherwise we skip this part
					length = gotoEnd ? animation.tweens.length : 0;
				if ( stopped ) {
					return this;
				}
				stopped = true;
				for ( ; index < length; index++ ) {
					animation.tweens[ index ].run( 1 );
				}

				// Resolve when we played the last frame; otherwise, reject
				if ( gotoEnd ) {
					deferred.notifyWith( elem, [ animation, 1, 0 ] );
					deferred.resolveWith( elem, [ animation, gotoEnd ] );
				} else {
					deferred.rejectWith( elem, [ animation, gotoEnd ] );
				}
				return this;
			}
		} ),
		props = animation.props;

	propFilter( props, animation.opts.specialEasing );

	for ( ; index < length; index++ ) {
		result = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );
		if ( result ) {
			if ( isFunction( result.stop ) ) {
				jQuery._queueHooks( animation.elem, animation.opts.queue ).stop =
					result.stop.bind( result );
			}
			return result;
		}
	}

	jQuery.map( props, createTween, animation );

	if ( isFunction( animation.opts.start ) ) {
		animation.opts.start.call( elem, animation );
	}

	// Attach callbacks from options
	animation
		.progress( animation.opts.progress )
		.done( animation.opts.done, animation.opts.complete )
		.fail( animation.opts.fail )
		.always( animation.opts.always );

	jQuery.fx.timer(
		jQuery.extend( tick, {
			elem: elem,
			anim: animation,
			queue: animation.opts.queue
		} )
	);

	return animation;
}

jQuery.Animation = jQuery.extend( Animation, {

	tweeners: {
		"*": [ function( prop, value ) {
			var tween = this.createTween( prop, value );
			adjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );
			return tween;
		} ]
	},

	tweener: function( props, callback ) {
		if ( isFunction( props ) ) {
			callback = props;
			props = [ "*" ];
		} else {
			props = props.match( rnothtmlwhite );
		}

		var prop,
			index = 0,
			length = props.length;

		for ( ; index < length; index++ ) {
			prop = props[ index ];
			Animation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];
			Animation.tweeners[ prop ].unshift( callback );
		}
	},

	prefilters: [ defaultPrefilter ],

	prefilter: function( callback, prepend ) {
		if ( prepend ) {
			Animation.prefilters.unshift( callback );
		} else {
			Animation.prefilters.push( callback );
		}
	}
} );

jQuery.speed = function( speed, easing, fn ) {
	var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
		complete: fn || !fn && easing ||
			isFunction( speed ) && speed,
		duration: speed,
		easing: fn && easing || easing && !isFunction( easing ) && easing
	};

	// Go to the end state if fx are off
	if ( jQuery.fx.off ) {
		opt.duration = 0;

	} else {
		if ( typeof opt.duration !== "number" ) {
			if ( opt.duration in jQuery.fx.speeds ) {
				opt.duration = jQuery.fx.speeds[ opt.duration ];

			} else {
				opt.duration = jQuery.fx.speeds._default;
			}
		}
	}

	// Normalize opt.queue - true/undefined/null -> "fx"
	if ( opt.queue == null || opt.queue === true ) {
		opt.queue = "fx";
	}

	// Queueing
	opt.old = opt.complete;

	opt.complete = function() {
		if ( isFunction( opt.old ) ) {
			opt.old.call( this );
		}

		if ( opt.queue ) {
			jQuery.dequeue( this, opt.queue );
		}
	};

	return opt;
};

jQuery.fn.extend( {
	fadeTo: function( speed, to, easing, callback ) {

		// Show any hidden elements after setting opacity to 0
		return this.filter( isHiddenWithinTree ).css( "opacity", 0 ).show()

			// Animate to the value specified
			.end().animate( { opacity: to }, speed, easing, callback );
	},
	animate: function( prop, speed, easing, callback ) {
		var empty = jQuery.isEmptyObject( prop ),
			optall = jQuery.speed( speed, easing, callback ),
			doAnimation = function() {

				// Operate on a copy of prop so per-property easing won't be lost
				var anim = Animation( this, jQuery.extend( {}, prop ), optall );

				// Empty animations, or finishing resolves immediately
				if ( empty || dataPriv.get( this, "finish" ) ) {
					anim.stop( true );
				}
			};
			doAnimation.finish = doAnimation;

		return empty || optall.queue === false ?
			this.each( doAnimation ) :
			this.queue( optall.queue, doAnimation );
	},
	stop: function( type, clearQueue, gotoEnd ) {
		var stopQueue = function( hooks ) {
			var stop = hooks.stop;
			delete hooks.stop;
			stop( gotoEnd );
		};

		if ( typeof type !== "string" ) {
			gotoEnd = clearQueue;
			clearQueue = type;
			type = undefined;
		}
		if ( clearQueue && type !== false ) {
			this.queue( type || "fx", [] );
		}

		return this.each( function() {
			var dequeue = true,
				index = type != null && type + "queueHooks",
				timers = jQuery.timers,
				data = dataPriv.get( this );

			if ( index ) {
				if ( data[ index ] && data[ index ].stop ) {
					stopQueue( data[ index ] );
				}
			} else {
				for ( index in data ) {
					if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
						stopQueue( data[ index ] );
					}
				}
			}

			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this &&
					( type == null || timers[ index ].queue === type ) ) {

					timers[ index ].anim.stop( gotoEnd );
					dequeue = false;
					timers.splice( index, 1 );
				}
			}

			// Start the next in the queue if the last step wasn't forced.
			// Timers currently will call their complete callbacks, which
			// will dequeue but only if they were gotoEnd.
			if ( dequeue || !gotoEnd ) {
				jQuery.dequeue( this, type );
			}
		} );
	},
	finish: function( type ) {
		if ( type !== false ) {
			type = type || "fx";
		}
		return this.each( function() {
			var index,
				data = dataPriv.get( this ),
				queue = data[ type + "queue" ],
				hooks = data[ type + "queueHooks" ],
				timers = jQuery.timers,
				length = queue ? queue.length : 0;

			// Enable finishing flag on private data
			data.finish = true;

			// Empty the queue first
			jQuery.queue( this, type, [] );

			if ( hooks && hooks.stop ) {
				hooks.stop.call( this, true );
			}

			// Look for any active animations, and finish them
			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this && timers[ index ].queue === type ) {
					timers[ index ].anim.stop( true );
					timers.splice( index, 1 );
				}
			}

			// Look for any animations in the old queue and finish them
			for ( index = 0; index < length; index++ ) {
				if ( queue[ index ] && queue[ index ].finish ) {
					queue[ index ].finish.call( this );
				}
			}

			// Turn off finishing flag
			delete data.finish;
		} );
	}
} );

jQuery.each( [ "toggle", "show", "hide" ], function( i, name ) {
	var cssFn = jQuery.fn[ name ];
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return speed == null || typeof speed === "boolean" ?
			cssFn.apply( this, arguments ) :
			this.animate( genFx( name, true ), speed, easing, callback );
	};
} );

// Generate shortcuts for custom animations
jQuery.each( {
	slideDown: genFx( "show" ),
	slideUp: genFx( "hide" ),
	slideToggle: genFx( "toggle" ),
	fadeIn: { opacity: "show" },
	fadeOut: { opacity: "hide" },
	fadeToggle: { opacity: "toggle" }
}, function( name, props ) {
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return this.animate( props, speed, easing, callback );
	};
} );

jQuery.timers = [];
jQuery.fx.tick = function() {
	var timer,
		i = 0,
		timers = jQuery.timers;

	fxNow = Date.now();

	for ( ; i < timers.length; i++ ) {
		timer = timers[ i ];

		// Run the timer and safely remove it when done (allowing for external removal)
		if ( !timer() && timers[ i ] === timer ) {
			timers.splice( i--, 1 );
		}
	}

	if ( !timers.length ) {
		jQuery.fx.stop();
	}
	fxNow = undefined;
};

jQuery.fx.timer = function( timer ) {
	jQuery.timers.push( timer );
	jQuery.fx.start();
};

jQuery.fx.interval = 13;
jQuery.fx.start = function() {
	if ( inProgress ) {
		return;
	}

	inProgress = true;
	schedule();
};

jQuery.fx.stop = function() {
	inProgress = null;
};

jQuery.fx.speeds = {
	slow: 600,
	fast: 200,

	// Default speed
	_default: 400
};


// Based off of the plugin by Clint Helfers, with permission.
// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/
jQuery.fn.delay = function( time, type ) {
	time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
	type = type || "fx";

	return this.queue( type, function( next, hooks ) {
		var timeout = window.setTimeout( next, time );
		hooks.stop = function() {
			window.clearTimeout( timeout );
		};
	} );
};


( function() {
	var input = document.createElement( "input" ),
		select = document.createElement( "select" ),
		opt = select.appendChild( document.createElement( "option" ) );

	input.type = "checkbox";

	// Support: Android <=4.3 only
	// Default value for a checkbox should be "on"
	support.checkOn = input.value !== "";

	// Support: IE <=11 only
	// Must access selectedIndex to make default options select
	support.optSelected = opt.selected;

	// Support: IE <=11 only
	// An input loses its value after becoming a radio
	input = document.createElement( "input" );
	input.value = "t";
	input.type = "radio";
	support.radioValue = input.value === "t";
} )();


var boolHook,
	attrHandle = jQuery.expr.attrHandle;

jQuery.fn.extend( {
	attr: function( name, value ) {
		return access( this, jQuery.attr, name, value, arguments.length > 1 );
	},

	removeAttr: function( name ) {
		return this.each( function() {
			jQuery.removeAttr( this, name );
		} );
	}
} );

jQuery.extend( {
	attr: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set attributes on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		// Fallback to prop when attributes are not supported
		if ( typeof elem.getAttribute === "undefined" ) {
			return jQuery.prop( elem, name, value );
		}

		// Attribute hooks are determined by the lowercase version
		// Grab necessary hook if one is defined
		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {
			hooks = jQuery.attrHooks[ name.toLowerCase() ] ||
				( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );
		}

		if ( value !== undefined ) {
			if ( value === null ) {
				jQuery.removeAttr( elem, name );
				return;
			}

			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			elem.setAttribute( name, value + "" );
			return value;
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		ret = jQuery.find.attr( elem, name );

		// Non-existent attributes return null, we normalize to undefined
		return ret == null ? undefined : ret;
	},

	attrHooks: {
		type: {
			set: function( elem, value ) {
				if ( !support.radioValue && value === "radio" &&
					nodeName( elem, "input" ) ) {
					var val = elem.value;
					elem.setAttribute( "type", value );
					if ( val ) {
						elem.value = val;
					}
					return value;
				}
			}
		}
	},

	removeAttr: function( elem, value ) {
		var name,
			i = 0,

			// Attribute names can contain non-HTML whitespace characters
			// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2
			attrNames = value && value.match( rnothtmlwhite );

		if ( attrNames && elem.nodeType === 1 ) {
			while ( ( name = attrNames[ i++ ] ) ) {
				elem.removeAttribute( name );
			}
		}
	}
} );

// Hooks for boolean attributes
boolHook = {
	set: function( elem, value, name ) {
		if ( value === false ) {

			// Remove boolean attributes when set to false
			jQuery.removeAttr( elem, name );
		} else {
			elem.setAttribute( name, name );
		}
		return name;
	}
};

jQuery.each( jQuery.expr.match.bool.source.match( /\w+/g ), function( i, name ) {
	var getter = attrHandle[ name ] || jQuery.find.attr;

	attrHandle[ name ] = function( elem, name, isXML ) {
		var ret, handle,
			lowercaseName = name.toLowerCase();

		if ( !isXML ) {

			// Avoid an infinite loop by temporarily removing this function from the getter
			handle = attrHandle[ lowercaseName ];
			attrHandle[ lowercaseName ] = ret;
			ret = getter( elem, name, isXML ) != null ?
				lowercaseName :
				null;
			attrHandle[ lowercaseName ] = handle;
		}
		return ret;
	};
} );




var rfocusable = /^(?:input|select|textarea|button)$/i,
	rclickable = /^(?:a|area)$/i;

jQuery.fn.extend( {
	prop: function( name, value ) {
		return access( this, jQuery.prop, name, value, arguments.length > 1 );
	},

	removeProp: function( name ) {
		return this.each( function() {
			delete this[ jQuery.propFix[ name ] || name ];
		} );
	}
} );

jQuery.extend( {
	prop: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set properties on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {

			// Fix name and attach hooks
			name = jQuery.propFix[ name ] || name;
			hooks = jQuery.propHooks[ name ];
		}

		if ( value !== undefined ) {
			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			return ( elem[ name ] = value );
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		return elem[ name ];
	},

	propHooks: {
		tabIndex: {
			get: function( elem ) {

				// Support: IE <=9 - 11 only
				// elem.tabIndex doesn't always return the
				// correct value when it hasn't been explicitly set
				// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
				// Use proper attribute retrieval(#12072)
				var tabindex = jQuery.find.attr( elem, "tabindex" );

				if ( tabindex ) {
					return parseInt( tabindex, 10 );
				}

				if (
					rfocusable.test( elem.nodeName ) ||
					rclickable.test( elem.nodeName ) &&
					elem.href
				) {
					return 0;
				}

				return -1;
			}
		}
	},

	propFix: {
		"for": "htmlFor",
		"class": "className"
	}
} );

// Support: IE <=11 only
// Accessing the selectedIndex property
// forces the browser to respect setting selected
// on the option
// The getter ensures a default option is selected
// when in an optgroup
// eslint rule "no-unused-expressions" is disabled for this code
// since it considers such accessions noop
if ( !support.optSelected ) {
	jQuery.propHooks.selected = {
		get: function( elem ) {

			/* eslint no-unused-expressions: "off" */

			var parent = elem.parentNode;
			if ( parent && parent.parentNode ) {
				parent.parentNode.selectedIndex;
			}
			return null;
		},
		set: function( elem ) {

			/* eslint no-unused-expressions: "off" */

			var parent = elem.parentNode;
			if ( parent ) {
				parent.selectedIndex;

				if ( parent.parentNode ) {
					parent.parentNode.selectedIndex;
				}
			}
		}
	};
}

jQuery.each( [
	"tabIndex",
	"readOnly",
	"maxLength",
	"cellSpacing",
	"cellPadding",
	"rowSpan",
	"colSpan",
	"useMap",
	"frameBorder",
	"contentEditable"
], function() {
	jQuery.propFix[ this.toLowerCase() ] = this;
} );




	// Strip and collapse whitespace according to HTML spec
	// https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace
	function stripAndCollapse( value ) {
		var tokens = value.match( rnothtmlwhite ) || [];
		return tokens.join( " " );
	}


function getClass( elem ) {
	return elem.getAttribute && elem.getAttribute( "class" ) || "";
}

function classesToArray( value ) {
	if ( Array.isArray( value ) ) {
		return value;
	}
	if ( typeof value === "string" ) {
		return value.match( rnothtmlwhite ) || [];
	}
	return [];
}

jQuery.fn.extend( {
	addClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).addClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		classes = classesToArray( value );

		if ( classes.length ) {
			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );
				cur = elem.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {
						if ( cur.indexOf( " " + clazz + " " ) < 0 ) {
							cur += clazz + " ";
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = stripAndCollapse( cur );
					if ( curValue !== finalValue ) {
						elem.setAttribute( "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	removeClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		if ( !arguments.length ) {
			return this.attr( "class", "" );
		}

		classes = classesToArray( value );

		if ( classes.length ) {
			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );

				// This expression is here for better compressibility (see addClass)
				cur = elem.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {

						// Remove *all* instances
						while ( cur.indexOf( " " + clazz + " " ) > -1 ) {
							cur = cur.replace( " " + clazz + " ", " " );
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = stripAndCollapse( cur );
					if ( curValue !== finalValue ) {
						elem.setAttribute( "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	toggleClass: function( value, stateVal ) {
		var type = typeof value,
			isValidValue = type === "string" || Array.isArray( value );

		if ( typeof stateVal === "boolean" && isValidValue ) {
			return stateVal ? this.addClass( value ) : this.removeClass( value );
		}

		if ( isFunction( value ) ) {
			return this.each( function( i ) {
				jQuery( this ).toggleClass(
					value.call( this, i, getClass( this ), stateVal ),
					stateVal
				);
			} );
		}

		return this.each( function() {
			var className, i, self, classNames;

			if ( isValidValue ) {

				// Toggle individual class names
				i = 0;
				self = jQuery( this );
				classNames = classesToArray( value );

				while ( ( className = classNames[ i++ ] ) ) {

					// Check each className given, space separated list
					if ( self.hasClass( className ) ) {
						self.removeClass( className );
					} else {
						self.addClass( className );
					}
				}

			// Toggle whole class name
			} else if ( value === undefined || type === "boolean" ) {
				className = getClass( this );
				if ( className ) {

					// Store className if set
					dataPriv.set( this, "__className__", className );
				}

				// If the element has a class name or if we're passed `false`,
				// then remove the whole classname (if there was one, the above saved it).
				// Otherwise bring back whatever was previously saved (if anything),
				// falling back to the empty string if nothing was stored.
				if ( this.setAttribute ) {
					this.setAttribute( "class",
						className || value === false ?
						"" :
						dataPriv.get( this, "__className__" ) || ""
					);
				}
			}
		} );
	},

	hasClass: function( selector ) {
		var className, elem,
			i = 0;

		className = " " + selector + " ";
		while ( ( elem = this[ i++ ] ) ) {
			if ( elem.nodeType === 1 &&
				( " " + stripAndCollapse( getClass( elem ) ) + " " ).indexOf( className ) > -1 ) {
					return true;
			}
		}

		return false;
	}
} );




var rreturn = /\r/g;

jQuery.fn.extend( {
	val: function( value ) {
		var hooks, ret, valueIsFunction,
			elem = this[ 0 ];

		if ( !arguments.length ) {
			if ( elem ) {
				hooks = jQuery.valHooks[ elem.type ] ||
					jQuery.valHooks[ elem.nodeName.toLowerCase() ];

				if ( hooks &&
					"get" in hooks &&
					( ret = hooks.get( elem, "value" ) ) !== undefined
				) {
					return ret;
				}

				ret = elem.value;

				// Handle most common string cases
				if ( typeof ret === "string" ) {
					return ret.replace( rreturn, "" );
				}

				// Handle cases where value is null/undef or number
				return ret == null ? "" : ret;
			}

			return;
		}

		valueIsFunction = isFunction( value );

		return this.each( function( i ) {
			var val;

			if ( this.nodeType !== 1 ) {
				return;
			}

			if ( valueIsFunction ) {
				val = value.call( this, i, jQuery( this ).val() );
			} else {
				val = value;
			}

			// Treat null/undefined as ""; convert numbers to string
			if ( val == null ) {
				val = "";

			} else if ( typeof val === "number" ) {
				val += "";

			} else if ( Array.isArray( val ) ) {
				val = jQuery.map( val, function( value ) {
					return value == null ? "" : value + "";
				} );
			}

			hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];

			// If set returns undefined, fall back to normal setting
			if ( !hooks || !( "set" in hooks ) || hooks.set( this, val, "value" ) === undefined ) {
				this.value = val;
			}
		} );
	}
} );

jQuery.extend( {
	valHooks: {
		option: {
			get: function( elem ) {

				var val = jQuery.find.attr( elem, "value" );
				return val != null ?
					val :

					// Support: IE <=10 - 11 only
					// option.text throws exceptions (#14686, #14858)
					// Strip and collapse whitespace
					// https://html.spec.whatwg.org/#strip-and-collapse-whitespace
					stripAndCollapse( jQuery.text( elem ) );
			}
		},
		select: {
			get: function( elem ) {
				var value, option, i,
					options = elem.options,
					index = elem.selectedIndex,
					one = elem.type === "select-one",
					values = one ? null : [],
					max = one ? index + 1 : options.length;

				if ( index < 0 ) {
					i = max;

				} else {
					i = one ? index : 0;
				}

				// Loop through all the selected options
				for ( ; i < max; i++ ) {
					option = options[ i ];

					// Support: IE <=9 only
					// IE8-9 doesn't update selected after form reset (#2551)
					if ( ( option.selected || i === index ) &&

							// Don't return options that are disabled or in a disabled optgroup
							!option.disabled &&
							( !option.parentNode.disabled ||
								!nodeName( option.parentNode, "optgroup" ) ) ) {

						// Get the specific value for the option
						value = jQuery( option ).val();

						// We don't need an array for one selects
						if ( one ) {
							return value;
						}

						// Multi-Selects return an array
						values.push( value );
					}
				}

				return values;
			},

			set: function( elem, value ) {
				var optionSet, option,
					options = elem.options,
					values = jQuery.makeArray( value ),
					i = options.length;

				while ( i-- ) {
					option = options[ i ];

					/* eslint-disable no-cond-assign */

					if ( option.selected =
						jQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1
					) {
						optionSet = true;
					}

					/* eslint-enable no-cond-assign */
				}

				// Force browsers to behave consistently when non-matching value is set
				if ( !optionSet ) {
					elem.selectedIndex = -1;
				}
				return values;
			}
		}
	}
} );

// Radios and checkboxes getter/setter
jQuery.each( [ "radio", "checkbox" ], function() {
	jQuery.valHooks[ this ] = {
		set: function( elem, value ) {
			if ( Array.isArray( value ) ) {
				return ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );
			}
		}
	};
	if ( !support.checkOn ) {
		jQuery.valHooks[ this ].get = function( elem ) {
			return elem.getAttribute( "value" ) === null ? "on" : elem.value;
		};
	}
} );




// Return jQuery for attributes-only inclusion


support.focusin = "onfocusin" in window;


var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
	stopPropagationCallback = function( e ) {
		e.stopPropagation();
	};

jQuery.extend( jQuery.event, {

	trigger: function( event, data, elem, onlyHandlers ) {

		var i, cur, tmp, bubbleType, ontype, handle, special, lastElement,
			eventPath = [ elem || document ],
			type = hasOwn.call( event, "type" ) ? event.type : event,
			namespaces = hasOwn.call( event, "namespace" ) ? event.namespace.split( "." ) : [];

		cur = lastElement = tmp = elem = elem || document;

		// Don't do events on text and comment nodes
		if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
			return;
		}

		// focus/blur morphs to focusin/out; ensure we're not firing them right now
		if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
			return;
		}

		if ( type.indexOf( "." ) > -1 ) {

			// Namespaced trigger; create a regexp to match event type in handle()
			namespaces = type.split( "." );
			type = namespaces.shift();
			namespaces.sort();
		}
		ontype = type.indexOf( ":" ) < 0 && "on" + type;

		// Caller can pass in a jQuery.Event object, Object, or just an event type string
		event = event[ jQuery.expando ] ?
			event :
			new jQuery.Event( type, typeof event === "object" && event );

		// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
		event.isTrigger = onlyHandlers ? 2 : 3;
		event.namespace = namespaces.join( "." );
		event.rnamespace = event.namespace ?
			new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" ) :
			null;

		// Clean up the event in case it is being reused
		event.result = undefined;
		if ( !event.target ) {
			event.target = elem;
		}

		// Clone any incoming data and prepend the event, creating the handler arg list
		data = data == null ?
			[ event ] :
			jQuery.makeArray( data, [ event ] );

		// Allow special events to draw outside the lines
		special = jQuery.event.special[ type ] || {};
		if ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {
			return;
		}

		// Determine event propagation path in advance, per W3C events spec (#9951)
		// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
		if ( !onlyHandlers && !special.noBubble && !isWindow( elem ) ) {

			bubbleType = special.delegateType || type;
			if ( !rfocusMorph.test( bubbleType + type ) ) {
				cur = cur.parentNode;
			}
			for ( ; cur; cur = cur.parentNode ) {
				eventPath.push( cur );
				tmp = cur;
			}

			// Only add window if we got to document (e.g., not plain obj or detached DOM)
			if ( tmp === ( elem.ownerDocument || document ) ) {
				eventPath.push( tmp.defaultView || tmp.parentWindow || window );
			}
		}

		// Fire handlers on the event path
		i = 0;
		while ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {
			lastElement = cur;
			event.type = i > 1 ?
				bubbleType :
				special.bindType || type;

			// jQuery handler
			handle = ( dataPriv.get( cur, "events" ) || {} )[ event.type ] &&
				dataPriv.get( cur, "handle" );
			if ( handle ) {
				handle.apply( cur, data );
			}

			// Native handler
			handle = ontype && cur[ ontype ];
			if ( handle && handle.apply && acceptData( cur ) ) {
				event.result = handle.apply( cur, data );
				if ( event.result === false ) {
					event.preventDefault();
				}
			}
		}
		event.type = type;

		// If nobody prevented the default action, do it now
		if ( !onlyHandlers && !event.isDefaultPrevented() ) {

			if ( ( !special._default ||
				special._default.apply( eventPath.pop(), data ) === false ) &&
				acceptData( elem ) ) {

				// Call a native DOM method on the target with the same name as the event.
				// Don't do default actions on window, that's where global variables be (#6170)
				if ( ontype && isFunction( elem[ type ] ) && !isWindow( elem ) ) {

					// Don't re-trigger an onFOO event when we call its FOO() method
					tmp = elem[ ontype ];

					if ( tmp ) {
						elem[ ontype ] = null;
					}

					// Prevent re-triggering of the same event, since we already bubbled it above
					jQuery.event.triggered = type;

					if ( event.isPropagationStopped() ) {
						lastElement.addEventListener( type, stopPropagationCallback );
					}

					elem[ type ]();

					if ( event.isPropagationStopped() ) {
						lastElement.removeEventListener( type, stopPropagationCallback );
					}

					jQuery.event.triggered = undefined;

					if ( tmp ) {
						elem[ ontype ] = tmp;
					}
				}
			}
		}

		return event.result;
	},

	// Piggyback on a donor event to simulate a different one
	// Used only for `focus(in | out)` events
	simulate: function( type, elem, event ) {
		var e = jQuery.extend(
			new jQuery.Event(),
			event,
			{
				type: type,
				isSimulated: true
			}
		);

		jQuery.event.trigger( e, null, elem );
	}

} );

jQuery.fn.extend( {

	trigger: function( type, data ) {
		return this.each( function() {
			jQuery.event.trigger( type, data, this );
		} );
	},
	triggerHandler: function( type, data ) {
		var elem = this[ 0 ];
		if ( elem ) {
			return jQuery.event.trigger( type, data, elem, true );
		}
	}
} );


// Support: Firefox <=44
// Firefox doesn't have focus(in | out) events
// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787
//
// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1
// focus(in | out) events fire after focus & blur events,
// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order
// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857
if ( !support.focusin ) {
	jQuery.each( { focus: "focusin", blur: "focusout" }, function( orig, fix ) {

		// Attach a single capturing handler on the document while someone wants focusin/focusout
		var handler = function( event ) {
			jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );
		};

		jQuery.event.special[ fix ] = {
			setup: function() {
				var doc = this.ownerDocument || this,
					attaches = dataPriv.access( doc, fix );

				if ( !attaches ) {
					doc.addEventListener( orig, handler, true );
				}
				dataPriv.access( doc, fix, ( attaches || 0 ) + 1 );
			},
			teardown: function() {
				var doc = this.ownerDocument || this,
					attaches = dataPriv.access( doc, fix ) - 1;

				if ( !attaches ) {
					doc.removeEventListener( orig, handler, true );
					dataPriv.remove( doc, fix );

				} else {
					dataPriv.access( doc, fix, attaches );
				}
			}
		};
	} );
}
var location = window.location;

var nonce = Date.now();

var rquery = ( /\?/ );



// Cross-browser xml parsing
jQuery.parseXML = function( data ) {
	var xml;
	if ( !data || typeof data !== "string" ) {
		return null;
	}

	// Support: IE 9 - 11 only
	// IE throws on parseFromString with invalid input.
	try {
		xml = ( new window.DOMParser() ).parseFromString( data, "text/xml" );
	} catch ( e ) {
		xml = undefined;
	}

	if ( !xml || xml.getElementsByTagName( "parsererror" ).length ) {
		jQuery.error( "Invalid XML: " + data );
	}
	return xml;
};


var
	rbracket = /\[\]$/,
	rCRLF = /\r?\n/g,
	rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
	rsubmittable = /^(?:input|select|textarea|keygen)/i;

function buildParams( prefix, obj, traditional, add ) {
	var name;

	if ( Array.isArray( obj ) ) {

		// Serialize array item.
		jQuery.each( obj, function( i, v ) {
			if ( traditional || rbracket.test( prefix ) ) {

				// Treat each array item as a scalar.
				add( prefix, v );

			} else {

				// Item is non-scalar (array or object), encode its numeric index.
				buildParams(
					prefix + "[" + ( typeof v === "object" && v != null ? i : "" ) + "]",
					v,
					traditional,
					add
				);
			}
		} );

	} else if ( !traditional && toType( obj ) === "object" ) {

		// Serialize object item.
		for ( name in obj ) {
			buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
		}

	} else {

		// Serialize scalar item.
		add( prefix, obj );
	}
}

// Serialize an array of form elements or a set of
// key/values into a query string
jQuery.param = function( a, traditional ) {
	var prefix,
		s = [],
		add = function( key, valueOrFunction ) {

			// If value is a function, invoke it and use its return value
			var value = isFunction( valueOrFunction ) ?
				valueOrFunction() :
				valueOrFunction;

			s[ s.length ] = encodeURIComponent( key ) + "=" +
				encodeURIComponent( value == null ? "" : value );
		};

	if ( a == null ) {
		return "";
	}

	// If an array was passed in, assume that it is an array of form elements.
	if ( Array.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {

		// Serialize the form elements
		jQuery.each( a, function() {
			add( this.name, this.value );
		} );

	} else {

		// If traditional, encode the "old" way (the way 1.3.2 or older
		// did it), otherwise encode params recursively.
		for ( prefix in a ) {
			buildParams( prefix, a[ prefix ], traditional, add );
		}
	}

	// Return the resulting serialization
	return s.join( "&" );
};

jQuery.fn.extend( {
	serialize: function() {
		return jQuery.param( this.serializeArray() );
	},
	serializeArray: function() {
		return this.map( function() {

			// Can add propHook for "elements" to filter or add form elements
			var elements = jQuery.prop( this, "elements" );
			return elements ? jQuery.makeArray( elements ) : this;
		} )
		.filter( function() {
			var type = this.type;

			// Use .is( ":disabled" ) so that fieldset[disabled] works
			return this.name && !jQuery( this ).is( ":disabled" ) &&
				rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&
				( this.checked || !rcheckableType.test( type ) );
		} )
		.map( function( i, elem ) {
			var val = jQuery( this ).val();

			if ( val == null ) {
				return null;
			}

			if ( Array.isArray( val ) ) {
				return jQuery.map( val, function( val ) {
					return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
				} );
			}

			return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
		} ).get();
	}
} );


var
	r20 = /%20/g,
	rhash = /#.*$/,
	rantiCache = /([?&])_=[^&]*/,
	rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg,

	// #7653, #8125, #8152: local protocol detection
	rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
	rnoContent = /^(?:GET|HEAD)$/,
	rprotocol = /^\/\//,

	/* Prefilters
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
	 * 2) These are called:
	 *    - BEFORE asking for a transport
	 *    - AFTER param serialization (s.data is a string if s.processData is true)
	 * 3) key is the dataType
	 * 4) the catchall symbol "*" can be used
	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
	 */
	prefilters = {},

	/* Transports bindings
	 * 1) key is the dataType
	 * 2) the catchall symbol "*" can be used
	 * 3) selection will start with transport dataType and THEN go to "*" if needed
	 */
	transports = {},

	// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
	allTypes = "*/".concat( "*" ),

	// Anchor tag for parsing the document origin
	originAnchor = document.createElement( "a" );
	originAnchor.href = location.href;

// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
function addToPrefiltersOrTransports( structure ) {

	// dataTypeExpression is optional and defaults to "*"
	return function( dataTypeExpression, func ) {

		if ( typeof dataTypeExpression !== "string" ) {
			func = dataTypeExpression;
			dataTypeExpression = "*";
		}

		var dataType,
			i = 0,
			dataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];

		if ( isFunction( func ) ) {

			// For each dataType in the dataTypeExpression
			while ( ( dataType = dataTypes[ i++ ] ) ) {

				// Prepend if requested
				if ( dataType[ 0 ] === "+" ) {
					dataType = dataType.slice( 1 ) || "*";
					( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );

				// Otherwise append
				} else {
					( structure[ dataType ] = structure[ dataType ] || [] ).push( func );
				}
			}
		}
	};
}

// Base inspection function for prefilters and transports
function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {

	var inspected = {},
		seekingTransport = ( structure === transports );

	function inspect( dataType ) {
		var selected;
		inspected[ dataType ] = true;
		jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
			var dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );
			if ( typeof dataTypeOrTransport === "string" &&
				!seekingTransport && !inspected[ dataTypeOrTransport ] ) {

				options.dataTypes.unshift( dataTypeOrTransport );
				inspect( dataTypeOrTransport );
				return false;
			} else if ( seekingTransport ) {
				return !( selected = dataTypeOrTransport );
			}
		} );
		return selected;
	}

	return inspect( options.dataTypes[ 0 ] ) || !inspected[ "*" ] && inspect( "*" );
}

// A special extend for ajax options
// that takes "flat" options (not to be deep extended)
// Fixes #9887
function ajaxExtend( target, src ) {
	var key, deep,
		flatOptions = jQuery.ajaxSettings.flatOptions || {};

	for ( key in src ) {
		if ( src[ key ] !== undefined ) {
			( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];
		}
	}
	if ( deep ) {
		jQuery.extend( true, target, deep );
	}

	return target;
}

/* Handles responses to an ajax request:
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */
function ajaxHandleResponses( s, jqXHR, responses ) {

	var ct, type, finalDataType, firstDataType,
		contents = s.contents,
		dataTypes = s.dataTypes;

	// Remove auto dataType and get content-type in the process
	while ( dataTypes[ 0 ] === "*" ) {
		dataTypes.shift();
		if ( ct === undefined ) {
			ct = s.mimeType || jqXHR.getResponseHeader( "Content-Type" );
		}
	}

	// Check if we're dealing with a known content-type
	if ( ct ) {
		for ( type in contents ) {
			if ( contents[ type ] && contents[ type ].test( ct ) ) {
				dataTypes.unshift( type );
				break;
			}
		}
	}

	// Check to see if we have a response for the expected dataType
	if ( dataTypes[ 0 ] in responses ) {
		finalDataType = dataTypes[ 0 ];
	} else {

		// Try convertible dataTypes
		for ( type in responses ) {
			if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[ 0 ] ] ) {
				finalDataType = type;
				break;
			}
			if ( !firstDataType ) {
				firstDataType = type;
			}
		}

		// Or just use first one
		finalDataType = finalDataType || firstDataType;
	}

	// If we found a dataType
	// We add the dataType to the list if needed
	// and return the corresponding response
	if ( finalDataType ) {
		if ( finalDataType !== dataTypes[ 0 ] ) {
			dataTypes.unshift( finalDataType );
		}
		return responses[ finalDataType ];
	}
}

/* Chain conversions given the request and the original response
 * Also sets the responseXXX fields on the jqXHR instance
 */
function ajaxConvert( s, response, jqXHR, isSuccess ) {
	var conv2, current, conv, tmp, prev,
		converters = {},

		// Work with a copy of dataTypes in case we need to modify it for conversion
		dataTypes = s.dataTypes.slice();

	// Create converters map with lowercased keys
	if ( dataTypes[ 1 ] ) {
		for ( conv in s.converters ) {
			converters[ conv.toLowerCase() ] = s.converters[ conv ];
		}
	}

	current = dataTypes.shift();

	// Convert to each sequential dataType
	while ( current ) {

		if ( s.responseFields[ current ] ) {
			jqXHR[ s.responseFields[ current ] ] = response;
		}

		// Apply the dataFilter if provided
		if ( !prev && isSuccess && s.dataFilter ) {
			response = s.dataFilter( response, s.dataType );
		}

		prev = current;
		current = dataTypes.shift();

		if ( current ) {

			// There's only work to do if current dataType is non-auto
			if ( current === "*" ) {

				current = prev;

			// Convert response if prev dataType is non-auto and differs from current
			} else if ( prev !== "*" && prev !== current ) {

				// Seek a direct converter
				conv = converters[ prev + " " + current ] || converters[ "* " + current ];

				// If none found, seek a pair
				if ( !conv ) {
					for ( conv2 in converters ) {

						// If conv2 outputs current
						tmp = conv2.split( " " );
						if ( tmp[ 1 ] === current ) {

							// If prev can be converted to accepted input
							conv = converters[ prev + " " + tmp[ 0 ] ] ||
								converters[ "* " + tmp[ 0 ] ];
							if ( conv ) {

								// Condense equivalence converters
								if ( conv === true ) {
									conv = converters[ conv2 ];

								// Otherwise, insert the intermediate dataType
								} else if ( converters[ conv2 ] !== true ) {
									current = tmp[ 0 ];
									dataTypes.unshift( tmp[ 1 ] );
								}
								break;
							}
						}
					}
				}

				// Apply converter (if not an equivalence)
				if ( conv !== true ) {

					// Unless errors are allowed to bubble, catch and return them
					if ( conv && s.throws ) {
						response = conv( response );
					} else {
						try {
							response = conv( response );
						} catch ( e ) {
							return {
								state: "parsererror",
								error: conv ? e : "No conversion from " + prev + " to " + current
							};
						}
					}
				}
			}
		}
	}

	return { state: "success", data: response };
}

jQuery.extend( {

	// Counter for holding the number of active queries
	active: 0,

	// Last-Modified header cache for next request
	lastModified: {},
	etag: {},

	ajaxSettings: {
		url: location.href,
		type: "GET",
		isLocal: rlocalProtocol.test( location.protocol ),
		global: true,
		processData: true,
		async: true,
		contentType: "application/x-www-form-urlencoded; charset=UTF-8",

		/*
		timeout: 0,
		data: null,
		dataType: null,
		username: null,
		password: null,
		cache: null,
		throws: false,
		traditional: false,
		headers: {},
		*/

		accepts: {
			"*": allTypes,
			text: "text/plain",
			html: "text/html",
			xml: "application/xml, text/xml",
			json: "application/json, text/javascript"
		},

		contents: {
			xml: /\bxml\b/,
			html: /\bhtml/,
			json: /\bjson\b/
		},

		responseFields: {
			xml: "responseXML",
			text: "responseText",
			json: "responseJSON"
		},

		// Data converters
		// Keys separate source (or catchall "*") and destination types with a single space
		converters: {

			// Convert anything to text
			"* text": String,

			// Text to html (true = no transformation)
			"text html": true,

			// Evaluate text as a json expression
			"text json": JSON.parse,

			// Parse text as xml
			"text xml": jQuery.parseXML
		},

		// For options that shouldn't be deep extended:
		// you can add your own custom options here if
		// and when you create one that shouldn't be
		// deep extended (see ajaxExtend)
		flatOptions: {
			url: true,
			context: true
		}
	},

	// Creates a full fledged settings object into target
	// with both ajaxSettings and settings fields.
	// If target is omitted, writes into ajaxSettings.
	ajaxSetup: function( target, settings ) {
		return settings ?

			// Building a settings object
			ajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :

			// Extending ajaxSettings
			ajaxExtend( jQuery.ajaxSettings, target );
	},

	ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
	ajaxTransport: addToPrefiltersOrTransports( transports ),

	// Main method
	ajax: function( url, options ) {

		// If url is an object, simulate pre-1.5 signature
		if ( typeof url === "object" ) {
			options = url;
			url = undefined;
		}

		// Force options to be an object
		options = options || {};

		var transport,

			// URL without anti-cache param
			cacheURL,

			// Response headers
			responseHeadersString,
			responseHeaders,

			// timeout handle
			timeoutTimer,

			// Url cleanup var
			urlAnchor,

			// Request state (becomes false upon send and true upon completion)
			completed,

			// To know if global events are to be dispatched
			fireGlobals,

			// Loop variable
			i,

			// uncached part of the url
			uncached,

			// Create the final options object
			s = jQuery.ajaxSetup( {}, options ),

			// Callbacks context
			callbackContext = s.context || s,

			// Context for global events is callbackContext if it is a DOM node or jQuery collection
			globalEventContext = s.context &&
				( callbackContext.nodeType || callbackContext.jquery ) ?
					jQuery( callbackContext ) :
					jQuery.event,

			// Deferreds
			deferred = jQuery.Deferred(),
			completeDeferred = jQuery.Callbacks( "once memory" ),

			// Status-dependent callbacks
			statusCode = s.statusCode || {},

			// Headers (they are sent all at once)
			requestHeaders = {},
			requestHeadersNames = {},

			// Default abort message
			strAbort = "canceled",

			// Fake xhr
			jqXHR = {
				readyState: 0,

				// Builds headers hashtable if needed
				getResponseHeader: function( key ) {
					var match;
					if ( completed ) {
						if ( !responseHeaders ) {
							responseHeaders = {};
							while ( ( match = rheaders.exec( responseHeadersString ) ) ) {
								responseHeaders[ match[ 1 ].toLowerCase() + " " ] =
									( responseHeaders[ match[ 1 ].toLowerCase() + " " ] || [] )
										.concat( match[ 2 ] );
							}
						}
						match = responseHeaders[ key.toLowerCase() + " " ];
					}
					return match == null ? null : match.join( ", " );
				},

				// Raw string
				getAllResponseHeaders: function() {
					return completed ? responseHeadersString : null;
				},

				// Caches the header
				setRequestHeader: function( name, value ) {
					if ( completed == null ) {
						name = requestHeadersNames[ name.toLowerCase() ] =
							requestHeadersNames[ name.toLowerCase() ] || name;
						requestHeaders[ name ] = value;
					}
					return this;
				},

				// Overrides response content-type header
				overrideMimeType: function( type ) {
					if ( completed == null ) {
						s.mimeType = type;
					}
					return this;
				},

				// Status-dependent callbacks
				statusCode: function( map ) {
					var code;
					if ( map ) {
						if ( completed ) {

							// Execute the appropriate callbacks
							jqXHR.always( map[ jqXHR.status ] );
						} else {

							// Lazy-add the new callbacks in a way that preserves old ones
							for ( code in map ) {
								statusCode[ code ] = [ statusCode[ code ], map[ code ] ];
							}
						}
					}
					return this;
				},

				// Cancel the request
				abort: function( statusText ) {
					var finalText = statusText || strAbort;
					if ( transport ) {
						transport.abort( finalText );
					}
					done( 0, finalText );
					return this;
				}
			};

		// Attach deferreds
		deferred.promise( jqXHR );

		// Add protocol if not provided (prefilters might expect it)
		// Handle falsy url in the settings object (#10093: consistency with old signature)
		// We also use the url parameter if available
		s.url = ( ( url || s.url || location.href ) + "" )
			.replace( rprotocol, location.protocol + "//" );

		// Alias method option to type as per ticket #12004
		s.type = options.method || options.type || s.method || s.type;

		// Extract dataTypes list
		s.dataTypes = ( s.dataType || "*" ).toLowerCase().match( rnothtmlwhite ) || [ "" ];

		// A cross-domain request is in order when the origin doesn't match the current origin.
		if ( s.crossDomain == null ) {
			urlAnchor = document.createElement( "a" );

			// Support: IE <=8 - 11, Edge 12 - 15
			// IE throws exception on accessing the href property if url is malformed,
			// e.g. http://example.com:80x/
			try {
				urlAnchor.href = s.url;

				// Support: IE <=8 - 11 only
				// Anchor's host property isn't correctly set when s.url is relative
				urlAnchor.href = urlAnchor.href;
				s.crossDomain = originAnchor.protocol + "//" + originAnchor.host !==
					urlAnchor.protocol + "//" + urlAnchor.host;
			} catch ( e ) {

				// If there is an error parsing the URL, assume it is crossDomain,
				// it can be rejected by the transport if it is invalid
				s.crossDomain = true;
			}
		}

		// Convert data if not already a string
		if ( s.data && s.processData && typeof s.data !== "string" ) {
			s.data = jQuery.param( s.data, s.traditional );
		}

		// Apply prefilters
		inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );

		// If request was aborted inside a prefilter, stop there
		if ( completed ) {
			return jqXHR;
		}

		// We can fire global events as of now if asked to
		// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)
		fireGlobals = jQuery.event && s.global;

		// Watch for a new set of requests
		if ( fireGlobals && jQuery.active++ === 0 ) {
			jQuery.event.trigger( "ajaxStart" );
		}

		// Uppercase the type
		s.type = s.type.toUpperCase();

		// Determine if request has content
		s.hasContent = !rnoContent.test( s.type );

		// Save the URL in case we're toying with the If-Modified-Since
		// and/or If-None-Match header later on
		// Remove hash to simplify url manipulation
		cacheURL = s.url.replace( rhash, "" );

		// More options handling for requests with no content
		if ( !s.hasContent ) {

			// Remember the hash so we can put it back
			uncached = s.url.slice( cacheURL.length );

			// If data is available and should be processed, append data to url
			if ( s.data && ( s.processData || typeof s.data === "string" ) ) {
				cacheURL += ( rquery.test( cacheURL ) ? "&" : "?" ) + s.data;

				// #9682: remove data so that it's not used in an eventual retry
				delete s.data;
			}

			// Add or update anti-cache param if needed
			if ( s.cache === false ) {
				cacheURL = cacheURL.replace( rantiCache, "$1" );
				uncached = ( rquery.test( cacheURL ) ? "&" : "?" ) + "_=" + ( nonce++ ) + uncached;
			}

			// Put hash and anti-cache on the URL that will be requested (gh-1732)
			s.url = cacheURL + uncached;

		// Change '%20' to '+' if this is encoded form body content (gh-2658)
		} else if ( s.data && s.processData &&
			( s.contentType || "" ).indexOf( "application/x-www-form-urlencoded" ) === 0 ) {
			s.data = s.data.replace( r20, "+" );
		}

		// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
		if ( s.ifModified ) {
			if ( jQuery.lastModified[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ cacheURL ] );
			}
			if ( jQuery.etag[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );
			}
		}

		// Set the correct header, if data is being sent
		if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
			jqXHR.setRequestHeader( "Content-Type", s.contentType );
		}

		// Set the Accepts header for the server, depending on the dataType
		jqXHR.setRequestHeader(
			"Accept",
			s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?
				s.accepts[ s.dataTypes[ 0 ] ] +
					( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
				s.accepts[ "*" ]
		);

		// Check for headers option
		for ( i in s.headers ) {
			jqXHR.setRequestHeader( i, s.headers[ i ] );
		}

		// Allow custom headers/mimetypes and early abort
		if ( s.beforeSend &&
			( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {

			// Abort if not done already and return
			return jqXHR.abort();
		}

		// Aborting is no longer a cancellation
		strAbort = "abort";

		// Install callbacks on deferreds
		completeDeferred.add( s.complete );
		jqXHR.done( s.success );
		jqXHR.fail( s.error );

		// Get transport
		transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );

		// If no transport, we auto-abort
		if ( !transport ) {
			done( -1, "No Transport" );
		} else {
			jqXHR.readyState = 1;

			// Send global event
			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
			}

			// If request was aborted inside ajaxSend, stop there
			if ( completed ) {
				return jqXHR;
			}

			// Timeout
			if ( s.async && s.timeout > 0 ) {
				timeoutTimer = window.setTimeout( function() {
					jqXHR.abort( "timeout" );
				}, s.timeout );
			}

			try {
				completed = false;
				transport.send( requestHeaders, done );
			} catch ( e ) {

				// Rethrow post-completion exceptions
				if ( completed ) {
					throw e;
				}

				// Propagate others as results
				done( -1, e );
			}
		}

		// Callback for when everything is done
		function done( status, nativeStatusText, responses, headers ) {
			var isSuccess, success, error, response, modified,
				statusText = nativeStatusText;

			// Ignore repeat invocations
			if ( completed ) {
				return;
			}

			completed = true;

			// Clear timeout if it exists
			if ( timeoutTimer ) {
				window.clearTimeout( timeoutTimer );
			}

			// Dereference transport for early garbage collection
			// (no matter how long the jqXHR object will be used)
			transport = undefined;

			// Cache response headers
			responseHeadersString = headers || "";

			// Set readyState
			jqXHR.readyState = status > 0 ? 4 : 0;

			// Determine if successful
			isSuccess = status >= 200 && status < 300 || status === 304;

			// Get response data
			if ( responses ) {
				response = ajaxHandleResponses( s, jqXHR, responses );
			}

			// Convert no matter what (that way responseXXX fields are always set)
			response = ajaxConvert( s, response, jqXHR, isSuccess );

			// If successful, handle type chaining
			if ( isSuccess ) {

				// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
				if ( s.ifModified ) {
					modified = jqXHR.getResponseHeader( "Last-Modified" );
					if ( modified ) {
						jQuery.lastModified[ cacheURL ] = modified;
					}
					modified = jqXHR.getResponseHeader( "etag" );
					if ( modified ) {
						jQuery.etag[ cacheURL ] = modified;
					}
				}

				// if no content
				if ( status === 204 || s.type === "HEAD" ) {
					statusText = "nocontent";

				// if not modified
				} else if ( status === 304 ) {
					statusText = "notmodified";

				// If we have data, let's convert it
				} else {
					statusText = response.state;
					success = response.data;
					error = response.error;
					isSuccess = !error;
				}
			} else {

				// Extract error from statusText and normalize for non-aborts
				error = statusText;
				if ( status || !statusText ) {
					statusText = "error";
					if ( status < 0 ) {
						status = 0;
					}
				}
			}

			// Set data for the fake xhr object
			jqXHR.status = status;
			jqXHR.statusText = ( nativeStatusText || statusText ) + "";

			// Success/Error
			if ( isSuccess ) {
				deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
			} else {
				deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
			}

			// Status-dependent callbacks
			jqXHR.statusCode( statusCode );
			statusCode = undefined;

			if ( fireGlobals ) {
				globalEventContext.trigger( isSuccess ? "ajaxSuccess" : "ajaxError",
					[ jqXHR, s, isSuccess ? success : error ] );
			}

			// Complete
			completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );

			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );

				// Handle the global AJAX counter
				if ( !( --jQuery.active ) ) {
					jQuery.event.trigger( "ajaxStop" );
				}
			}
		}

		return jqXHR;
	},

	getJSON: function( url, data, callback ) {
		return jQuery.get( url, data, callback, "json" );
	},

	getScript: function( url, callback ) {
		return jQuery.get( url, undefined, callback, "script" );
	}
} );

jQuery.each( [ "get", "post" ], function( i, method ) {
	jQuery[ method ] = function( url, data, callback, type ) {

		// Shift arguments if data argument was omitted
		if ( isFunction( data ) ) {
			type = type || callback;
			callback = data;
			data = undefined;
		}

		// The url can be an options object (which then must have .url)
		return jQuery.ajax( jQuery.extend( {
			url: url,
			type: method,
			dataType: type,
			data: data,
			success: callback
		}, jQuery.isPlainObject( url ) && url ) );
	};
} );


jQuery._evalUrl = function( url, options ) {
	return jQuery.ajax( {
		url: url,

		// Make this explicit, since user can override this through ajaxSetup (#11264)
		type: "GET",
		dataType: "script",
		cache: true,
		async: false,
		global: false,

		// Only evaluate the response if it is successful (gh-4126)
		// dataFilter is not invoked for failure responses, so using it instead
		// of the default converter is kludgy but it works.
		converters: {
			"text script": function() {}
		},
		dataFilter: function( response ) {
			jQuery.globalEval( response, options );
		}
	} );
};


jQuery.fn.extend( {
	wrapAll: function( html ) {
		var wrap;

		if ( this[ 0 ] ) {
			if ( isFunction( html ) ) {
				html = html.call( this[ 0 ] );
			}

			// The elements to wrap the target around
			wrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );

			if ( this[ 0 ].parentNode ) {
				wrap.insertBefore( this[ 0 ] );
			}

			wrap.map( function() {
				var elem = this;

				while ( elem.firstElementChild ) {
					elem = elem.firstElementChild;
				}

				return elem;
			} ).append( this );
		}

		return this;
	},

	wrapInner: function( html ) {
		if ( isFunction( html ) ) {
			return this.each( function( i ) {
				jQuery( this ).wrapInner( html.call( this, i ) );
			} );
		}

		return this.each( function() {
			var self = jQuery( this ),
				contents = self.contents();

			if ( contents.length ) {
				contents.wrapAll( html );

			} else {
				self.append( html );
			}
		} );
	},

	wrap: function( html ) {
		var htmlIsFunction = isFunction( html );

		return this.each( function( i ) {
			jQuery( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );
		} );
	},

	unwrap: function( selector ) {
		this.parent( selector ).not( "body" ).each( function() {
			jQuery( this ).replaceWith( this.childNodes );
		} );
		return this;
	}
} );


jQuery.expr.pseudos.hidden = function( elem ) {
	return !jQuery.expr.pseudos.visible( elem );
};
jQuery.expr.pseudos.visible = function( elem ) {
	return !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );
};




jQuery.ajaxSettings.xhr = function() {
	try {
		return new window.XMLHttpRequest();
	} catch ( e ) {}
};

var xhrSuccessStatus = {

		// File protocol always yields status code 0, assume 200
		0: 200,

		// Support: IE <=9 only
		// #1450: sometimes IE returns 1223 when it should be 204
		1223: 204
	},
	xhrSupported = jQuery.ajaxSettings.xhr();

support.cors = !!xhrSupported && ( "withCredentials" in xhrSupported );
support.ajax = xhrSupported = !!xhrSupported;

jQuery.ajaxTransport( function( options ) {
	var callback, errorCallback;

	// Cross domain only allowed if supported through XMLHttpRequest
	if ( support.cors || xhrSupported && !options.crossDomain ) {
		return {
			send: function( headers, complete ) {
				var i,
					xhr = options.xhr();

				xhr.open(
					options.type,
					options.url,
					options.async,
					options.username,
					options.password
				);

				// Apply custom fields if provided
				if ( options.xhrFields ) {
					for ( i in options.xhrFields ) {
						xhr[ i ] = options.xhrFields[ i ];
					}
				}

				// Override mime type if needed
				if ( options.mimeType && xhr.overrideMimeType ) {
					xhr.overrideMimeType( options.mimeType );
				}

				// X-Requested-With header
				// For cross-domain requests, seeing as conditions for a preflight are
				// akin to a jigsaw puzzle, we simply never set it to be sure.
				// (it can always be set on a per-request basis or even using ajaxSetup)
				// For same-domain requests, won't change header if already provided.
				if ( !options.crossDomain && !headers[ "X-Requested-With" ] ) {
					headers[ "X-Requested-With" ] = "XMLHttpRequest";
				}

				// Set headers
				for ( i in headers ) {
					xhr.setRequestHeader( i, headers[ i ] );
				}

				// Callback
				callback = function( type ) {
					return function() {
						if ( callback ) {
							callback = errorCallback = xhr.onload =
								xhr.onerror = xhr.onabort = xhr.ontimeout =
									xhr.onreadystatechange = null;

							if ( type === "abort" ) {
								xhr.abort();
							} else if ( type === "error" ) {

								// Support: IE <=9 only
								// On a manual native abort, IE9 throws
								// errors on any property access that is not readyState
								if ( typeof xhr.status !== "number" ) {
									complete( 0, "error" );
								} else {
									complete(

										// File: protocol always yields status 0; see #8605, #14207
										xhr.status,
										xhr.statusText
									);
								}
							} else {
								complete(
									xhrSuccessStatus[ xhr.status ] || xhr.status,
									xhr.statusText,

									// Support: IE <=9 only
									// IE9 has no XHR2 but throws on binary (trac-11426)
									// For XHR2 non-text, let the caller handle it (gh-2498)
									( xhr.responseType || "text" ) !== "text"  ||
									typeof xhr.responseText !== "string" ?
										{ binary: xhr.response } :
										{ text: xhr.responseText },
									xhr.getAllResponseHeaders()
								);
							}
						}
					};
				};

				// Listen to events
				xhr.onload = callback();
				errorCallback = xhr.onerror = xhr.ontimeout = callback( "error" );

				// Support: IE 9 only
				// Use onreadystatechange to replace onabort
				// to handle uncaught aborts
				if ( xhr.onabort !== undefined ) {
					xhr.onabort = errorCallback;
				} else {
					xhr.onreadystatechange = function() {

						// Check readyState before timeout as it changes
						if ( xhr.readyState === 4 ) {

							// Allow onerror to be called first,
							// but that will not handle a native abort
							// Also, save errorCallback to a variable
							// as xhr.onerror cannot be accessed
							window.setTimeout( function() {
								if ( callback ) {
									errorCallback();
								}
							} );
						}
					};
				}

				// Create the abort callback
				callback = callback( "abort" );

				try {

					// Do send the request (this may raise an exception)
					xhr.send( options.hasContent && options.data || null );
				} catch ( e ) {

					// #14683: Only rethrow if this hasn't been notified as an error yet
					if ( callback ) {
						throw e;
					}
				}
			},

			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );




// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)
jQuery.ajaxPrefilter( function( s ) {
	if ( s.crossDomain ) {
		s.contents.script = false;
	}
} );

// Install script dataType
jQuery.ajaxSetup( {
	accepts: {
		script: "text/javascript, application/javascript, " +
			"application/ecmascript, application/x-ecmascript"
	},
	contents: {
		script: /\b(?:java|ecma)script\b/
	},
	converters: {
		"text script": function( text ) {
			jQuery.globalEval( text );
			return text;
		}
	}
} );

// Handle cache's special case and crossDomain
jQuery.ajaxPrefilter( "script", function( s ) {
	if ( s.cache === undefined ) {
		s.cache = false;
	}
	if ( s.crossDomain ) {
		s.type = "GET";
	}
} );

// Bind script tag hack transport
jQuery.ajaxTransport( "script", function( s ) {

	// This transport only deals with cross domain or forced-by-attrs requests
	if ( s.crossDomain || s.scriptAttrs ) {
		var script, callback;
		return {
			send: function( _, complete ) {
				script = jQuery( "<script>" )
					.attr( s.scriptAttrs || {} )
					.prop( { charset: s.scriptCharset, src: s.url } )
					.on( "load error", callback = function( evt ) {
						script.remove();
						callback = null;
						if ( evt ) {
							complete( evt.type === "error" ? 404 : 200, evt.type );
						}
					} );

				// Use native DOM manipulation to avoid our domManip AJAX trickery
				document.head.appendChild( script[ 0 ] );
			},
			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );




var oldCallbacks = [],
	rjsonp = /(=)\?(?=&|$)|\?\?/;

// Default jsonp settings
jQuery.ajaxSetup( {
	jsonp: "callback",
	jsonpCallback: function() {
		var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( nonce++ ) );
		this[ callback ] = true;
		return callback;
	}
} );

// Detect, normalize options and install callbacks for jsonp requests
jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {

	var callbackName, overwritten, responseContainer,
		jsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?
			"url" :
			typeof s.data === "string" &&
				( s.contentType || "" )
					.indexOf( "application/x-www-form-urlencoded" ) === 0 &&
				rjsonp.test( s.data ) && "data"
		);

	// Handle iff the expected data type is "jsonp" or we have a parameter to set
	if ( jsonProp || s.dataTypes[ 0 ] === "jsonp" ) {

		// Get callback name, remembering preexisting value associated with it
		callbackName = s.jsonpCallback = isFunction( s.jsonpCallback ) ?
			s.jsonpCallback() :
			s.jsonpCallback;

		// Insert callback into url or form data
		if ( jsonProp ) {
			s[ jsonProp ] = s[ jsonProp ].replace( rjsonp, "$1" + callbackName );
		} else if ( s.jsonp !== false ) {
			s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
		}

		// Use data converter to retrieve json after script execution
		s.converters[ "script json" ] = function() {
			if ( !responseContainer ) {
				jQuery.error( callbackName + " was not called" );
			}
			return responseContainer[ 0 ];
		};

		// Force json dataType
		s.dataTypes[ 0 ] = "json";

		// Install callback
		overwritten = window[ callbackName ];
		window[ callbackName ] = function() {
			responseContainer = arguments;
		};

		// Clean-up function (fires after converters)
		jqXHR.always( function() {

			// If previous value didn't exist - remove it
			if ( overwritten === undefined ) {
				jQuery( window ).removeProp( callbackName );

			// Otherwise restore preexisting value
			} else {
				window[ callbackName ] = overwritten;
			}

			// Save back as free
			if ( s[ callbackName ] ) {

				// Make sure that re-using the options doesn't screw things around
				s.jsonpCallback = originalSettings.jsonpCallback;

				// Save the callback name for future use
				oldCallbacks.push( callbackName );
			}

			// Call if it was a function and we have a response
			if ( responseContainer && isFunction( overwritten ) ) {
				overwritten( responseContainer[ 0 ] );
			}

			responseContainer = overwritten = undefined;
		} );

		// Delegate to script
		return "script";
	}
} );




// Support: Safari 8 only
// In Safari 8 documents created via document.implementation.createHTMLDocument
// collapse sibling forms: the second one becomes a child of the first one.
// Because of that, this security measure has to be disabled in Safari 8.
// https://bugs.webkit.org/show_bug.cgi?id=137337
support.createHTMLDocument = ( function() {
	var body = document.implementation.createHTMLDocument( "" ).body;
	body.innerHTML = "<form></form><form></form>";
	return body.childNodes.length === 2;
} )();


// Argument "data" should be string of html
// context (optional): If specified, the fragment will be created in this context,
// defaults to document
// keepScripts (optional): If true, will include scripts passed in the html string
jQuery.parseHTML = function( data, context, keepScripts ) {
	if ( typeof data !== "string" ) {
		return [];
	}
	if ( typeof context === "boolean" ) {
		keepScripts = context;
		context = false;
	}

	var base, parsed, scripts;

	if ( !context ) {

		// Stop scripts or inline event handlers from being executed immediately
		// by using document.implementation
		if ( support.createHTMLDocument ) {
			context = document.implementation.createHTMLDocument( "" );

			// Set the base href for the created document
			// so any parsed elements with URLs
			// are based on the document's URL (gh-2965)
			base = context.createElement( "base" );
			base.href = document.location.href;
			context.head.appendChild( base );
		} else {
			context = document;
		}
	}

	parsed = rsingleTag.exec( data );
	scripts = !keepScripts && [];

	// Single tag
	if ( parsed ) {
		return [ context.createElement( parsed[ 1 ] ) ];
	}

	parsed = buildFragment( [ data ], context, scripts );

	if ( scripts && scripts.length ) {
		jQuery( scripts ).remove();
	}

	return jQuery.merge( [], parsed.childNodes );
};


/**
 * Load a url into a page
 */
jQuery.fn.load = function( url, params, callback ) {
	var selector, type, response,
		self = this,
		off = url.indexOf( " " );

	if ( off > -1 ) {
		selector = stripAndCollapse( url.slice( off ) );
		url = url.slice( 0, off );
	}

	// If it's a function
	if ( isFunction( params ) ) {

		// We assume that it's the callback
		callback = params;
		params = undefined;

	// Otherwise, build a param string
	} else if ( params && typeof params === "object" ) {
		type = "POST";
	}

	// If we have elements to modify, make the request
	if ( self.length > 0 ) {
		jQuery.ajax( {
			url: url,

			// If "type" variable is undefined, then "GET" method will be used.
			// Make value of this field explicit since
			// user can override it through ajaxSetup method
			type: type || "GET",
			dataType: "html",
			data: params
		} ).done( function( responseText ) {

			// Save response for use in complete callback
			response = arguments;

			self.html( selector ?

				// If a selector was specified, locate the right elements in a dummy div
				// Exclude scripts to avoid IE 'Permission Denied' errors
				jQuery( "<div>" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :

				// Otherwise use the full result
				responseText );

		// If the request succeeds, this function gets "data", "status", "jqXHR"
		// but they are ignored because response was set above.
		// If it fails, this function gets "jqXHR", "status", "error"
		} ).always( callback && function( jqXHR, status ) {
			self.each( function() {
				callback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );
			} );
		} );
	}

	return this;
};




// Attach a bunch of functions for handling common AJAX events
jQuery.each( [
	"ajaxStart",
	"ajaxStop",
	"ajaxComplete",
	"ajaxError",
	"ajaxSuccess",
	"ajaxSend"
], function( i, type ) {
	jQuery.fn[ type ] = function( fn ) {
		return this.on( type, fn );
	};
} );




jQuery.expr.pseudos.animated = function( elem ) {
	return jQuery.grep( jQuery.timers, function( fn ) {
		return elem === fn.elem;
	} ).length;
};




jQuery.offset = {
	setOffset: function( elem, options, i ) {
		var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,
			position = jQuery.css( elem, "position" ),
			curElem = jQuery( elem ),
			props = {};

		// Set position first, in-case top/left are set even on static elem
		if ( position === "static" ) {
			elem.style.position = "relative";
		}

		curOffset = curElem.offset();
		curCSSTop = jQuery.css( elem, "top" );
		curCSSLeft = jQuery.css( elem, "left" );
		calculatePosition = ( position === "absolute" || position === "fixed" ) &&
			( curCSSTop + curCSSLeft ).indexOf( "auto" ) > -1;

		// Need to be able to calculate position if either
		// top or left is auto and position is either absolute or fixed
		if ( calculatePosition ) {
			curPosition = curElem.position();
			curTop = curPosition.top;
			curLeft = curPosition.left;

		} else {
			curTop = parseFloat( curCSSTop ) || 0;
			curLeft = parseFloat( curCSSLeft ) || 0;
		}

		if ( isFunction( options ) ) {

			// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)
			options = options.call( elem, i, jQuery.extend( {}, curOffset ) );
		}

		if ( options.top != null ) {
			props.top = ( options.top - curOffset.top ) + curTop;
		}
		if ( options.left != null ) {
			props.left = ( options.left - curOffset.left ) + curLeft;
		}

		if ( "using" in options ) {
			options.using.call( elem, props );

		} else {
			curElem.css( props );
		}
	}
};

jQuery.fn.extend( {

	// offset() relates an element's border box to the document origin
	offset: function( options ) {

		// Preserve chaining for setter
		if ( arguments.length ) {
			return options === undefined ?
				this :
				this.each( function( i ) {
					jQuery.offset.setOffset( this, options, i );
				} );
		}

		var rect, win,
			elem = this[ 0 ];

		if ( !elem ) {
			return;
		}

		// Return zeros for disconnected and hidden (display: none) elements (gh-2310)
		// Support: IE <=11 only
		// Running getBoundingClientRect on a
		// disconnected node in IE throws an error
		if ( !elem.getClientRects().length ) {
			return { top: 0, left: 0 };
		}

		// Get document-relative position by adding viewport scroll to viewport-relative gBCR
		rect = elem.getBoundingClientRect();
		win = elem.ownerDocument.defaultView;
		return {
			top: rect.top + win.pageYOffset,
			left: rect.left + win.pageXOffset
		};
	},

	// position() relates an element's margin box to its offset parent's padding box
	// This corresponds to the behavior of CSS absolute positioning
	position: function() {
		if ( !this[ 0 ] ) {
			return;
		}

		var offsetParent, offset, doc,
			elem = this[ 0 ],
			parentOffset = { top: 0, left: 0 };

		// position:fixed elements are offset from the viewport, which itself always has zero offset
		if ( jQuery.css( elem, "position" ) === "fixed" ) {

			// Assume position:fixed implies availability of getBoundingClientRect
			offset = elem.getBoundingClientRect();

		} else {
			offset = this.offset();

			// Account for the *real* offset parent, which can be the document or its root element
			// when a statically positioned element is identified
			doc = elem.ownerDocument;
			offsetParent = elem.offsetParent || doc.documentElement;
			while ( offsetParent &&
				( offsetParent === doc.body || offsetParent === doc.documentElement ) &&
				jQuery.css( offsetParent, "position" ) === "static" ) {

				offsetParent = offsetParent.parentNode;
			}
			if ( offsetParent && offsetParent !== elem && offsetParent.nodeType === 1 ) {

				// Incorporate borders into its offset, since they are outside its content origin
				parentOffset = jQuery( offsetParent ).offset();
				parentOffset.top += jQuery.css( offsetParent, "borderTopWidth", true );
				parentOffset.left += jQuery.css( offsetParent, "borderLeftWidth", true );
			}
		}

		// Subtract parent offsets and element margins
		return {
			top: offset.top - parentOffset.top - jQuery.css( elem, "marginTop", true ),
			left: offset.left - parentOffset.left - jQuery.css( elem, "marginLeft", true )
		};
	},

	// This method will return documentElement in the following cases:
	// 1) For the element inside the iframe without offsetParent, this method will return
	//    documentElement of the parent window
	// 2) For the hidden or detached element
	// 3) For body or html element, i.e. in case of the html node - it will return itself
	//
	// but those exceptions were never presented as a real life use-cases
	// and might be considered as more preferable results.
	//
	// This logic, however, is not guaranteed and can change at any point in the future
	offsetParent: function() {
		return this.map( function() {
			var offsetParent = this.offsetParent;

			while ( offsetParent && jQuery.css( offsetParent, "position" ) === "static" ) {
				offsetParent = offsetParent.offsetParent;
			}

			return offsetParent || documentElement;
		} );
	}
} );

// Create scrollLeft and scrollTop methods
jQuery.each( { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function( method, prop ) {
	var top = "pageYOffset" === prop;

	jQuery.fn[ method ] = function( val ) {
		return access( this, function( elem, method, val ) {

			// Coalesce documents and windows
			var win;
			if ( isWindow( elem ) ) {
				win = elem;
			} else if ( elem.nodeType === 9 ) {
				win = elem.defaultView;
			}

			if ( val === undefined ) {
				return win ? win[ prop ] : elem[ method ];
			}

			if ( win ) {
				win.scrollTo(
					!top ? val : win.pageXOffset,
					top ? val : win.pageYOffset
				);

			} else {
				elem[ method ] = val;
			}
		}, method, val, arguments.length );
	};
} );

// Support: Safari <=7 - 9.1, Chrome <=37 - 49
// Add the top/left cssHooks using jQuery.fn.position
// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347
// getComputedStyle returns percent when specified for top/left/bottom/right;
// rather than make the css module depend on the offset module, just check for it here
jQuery.each( [ "top", "left" ], function( i, prop ) {
	jQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,
		function( elem, computed ) {
			if ( computed ) {
				computed = curCSS( elem, prop );

				// If curCSS returns percentage, fallback to offset
				return rnumnonpx.test( computed ) ?
					jQuery( elem ).position()[ prop ] + "px" :
					computed;
			}
		}
	);
} );


// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
	jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name },
		function( defaultExtra, funcName ) {

		// Margin is only for outerHeight, outerWidth
		jQuery.fn[ funcName ] = function( margin, value ) {
			var chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
				extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );

			return access( this, function( elem, type, value ) {
				var doc;

				if ( isWindow( elem ) ) {

					// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)
					return funcName.indexOf( "outer" ) === 0 ?
						elem[ "inner" + name ] :
						elem.document.documentElement[ "client" + name ];
				}

				// Get document width or height
				if ( elem.nodeType === 9 ) {
					doc = elem.documentElement;

					// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],
					// whichever is greatest
					return Math.max(
						elem.body[ "scroll" + name ], doc[ "scroll" + name ],
						elem.body[ "offset" + name ], doc[ "offset" + name ],
						doc[ "client" + name ]
					);
				}

				return value === undefined ?

					// Get width or height on the element, requesting but not forcing parseFloat
					jQuery.css( elem, type, extra ) :

					// Set width or height on the element
					jQuery.style( elem, type, value, extra );
			}, type, chainable ? margin : undefined, chainable );
		};
	} );
} );


jQuery.each( ( "blur focus focusin focusout resize scroll click dblclick " +
	"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
	"change select submit keydown keypress keyup contextmenu" ).split( " " ),
	function( i, name ) {

	// Handle event binding
	jQuery.fn[ name ] = function( data, fn ) {
		return arguments.length > 0 ?
			this.on( name, null, data, fn ) :
			this.trigger( name );
	};
} );

jQuery.fn.extend( {
	hover: function( fnOver, fnOut ) {
		return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
	}
} );




jQuery.fn.extend( {

	bind: function( types, data, fn ) {
		return this.on( types, null, data, fn );
	},
	unbind: function( types, fn ) {
		return this.off( types, null, fn );
	},

	delegate: function( selector, types, data, fn ) {
		return this.on( types, selector, data, fn );
	},
	undelegate: function( selector, types, fn ) {

		// ( namespace ) or ( selector, types [, fn] )
		return arguments.length === 1 ?
			this.off( selector, "**" ) :
			this.off( types, selector || "**", fn );
	}
} );

// Bind a function to a context, optionally partially applying any
// arguments.
// jQuery.proxy is deprecated to promote standards (specifically Function#bind)
// However, it is not slated for removal any time soon
jQuery.proxy = function( fn, context ) {
	var tmp, args, proxy;

	if ( typeof context === "string" ) {
		tmp = fn[ context ];
		context = fn;
		fn = tmp;
	}

	// Quick check to determine if target is callable, in the spec
	// this throws a TypeError, but we will just return undefined.
	if ( !isFunction( fn ) ) {
		return undefined;
	}

	// Simulated bind
	args = slice.call( arguments, 2 );
	proxy = function() {
		return fn.apply( context || this, args.concat( slice.call( arguments ) ) );
	};

	// Set the guid of unique handler to the same of original handler, so it can be removed
	proxy.guid = fn.guid = fn.guid || jQuery.guid++;

	return proxy;
};

jQuery.holdReady = function( hold ) {
	if ( hold ) {
		jQuery.readyWait++;
	} else {
		jQuery.ready( true );
	}
};
jQuery.isArray = Array.isArray;
jQuery.parseJSON = JSON.parse;
jQuery.nodeName = nodeName;
jQuery.isFunction = isFunction;
jQuery.isWindow = isWindow;
jQuery.camelCase = camelCase;
jQuery.type = toType;

jQuery.now = Date.now;

jQuery.isNumeric = function( obj ) {

	// As of jQuery 3.0, isNumeric is limited to
	// strings and numbers (primitives or objects)
	// that can be coerced to finite numbers (gh-2662)
	var type = jQuery.type( obj );
	return ( type === "number" || type === "string" ) &&

		// parseFloat NaNs numeric-cast false positives ("")
		// ...but misinterprets leading-number strings, particularly hex literals ("0x...")
		// subtraction forces infinities to NaN
		!isNaN( obj - parseFloat( obj ) );
};




// Register as a named AMD module, since jQuery can be concatenated with other
// files that may use define, but not via a proper concatenation script that
// understands anonymous AMD modules. A named AMD is safest and most robust
// way to register. Lowercase jquery is used because AMD module names are
// derived from file names, and jQuery is normally delivered in a lowercase
// file name. Do this after creating the global so that if an AMD module wants
// to call noConflict to hide this version of jQuery, it will work.

// Note that for maximum portability, libraries that are not jQuery should
// declare themselves as anonymous modules, and avoid setting a global if an
// AMD loader is present. jQuery is a special case. For more information, see
// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon

if ( typeof define === "function" && define.amd ) {
	define( "jquery", [], function() {
		return jQuery;
	} );
}




var

	// Map over jQuery in case of overwrite
	_jQuery = window.jQuery,

	// Map over the $ in case of overwrite
	_$ = window.$;

jQuery.noConflict = function( deep ) {
	if ( window.$ === jQuery ) {
		window.$ = _$;
	}

	if ( deep && window.jQuery === jQuery ) {
		window.jQuery = _jQuery;
	}

	return jQuery;
};

// Expose jQuery and $ identifiers, even in AMD
// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)
// and CommonJS for browser emulators (#13566)
if ( !noGlobal ) {
	window.jQuery = window.$ = jQuery;
}




return jQuery;
} );

},{}],4:[function(require,module,exports){
module.exports={"trigram":{"albanian":{"t\u00eb ":"0"," t\u00eb":"1","n\u00eb ":"2","p\u00ebr":"3"," p\u00eb":"4"," e ":"5","sht":"6"," n\u00eb":"7"," sh":"8","se ":"9","et ":"10","\u00eb s":"11","\u00eb t":"12"," se":"13","he ":"14","j\u00eb ":"15","\u00ebr ":"16","dhe":"17"," pa":"18","\u00eb n":"19","\u00eb p":"20"," q\u00eb":"21"," dh":"22","nj\u00eb":"23","\u00eb m":"24"," nj":"25","\u00ebsh":"26","in ":"27"," me":"28","q\u00eb ":"29"," po":"30","e n":"31","e t":"32","ish":"33","m\u00eb ":"34","s\u00eb ":"35","me ":"36","ht\u00eb":"37"," ka":"38"," si":"39","e k":"40","e p":"41"," i ":"42","an\u00eb":"43","ar ":"44"," nu":"45","und":"46","ve ":"47"," \u00ebs":"48","e s":"49"," m\u00eb":"50","nuk":"51","par":"52","uar":"53","uk ":"54","jo ":"55","r\u00eb ":"56","ta ":"57","\u00eb f":"58","en ":"59","it ":"60","min":"61","het":"62","n e":"63","ri ":"64","shq":"65","\u00eb d":"66"," do":"67"," nd":"68","sh ":"69","\u00ebn ":"70","at\u00eb":"71","hqi":"72","ist":"73","\u00eb q":"74"," gj":"75"," ng":"76"," th":"77","a n":"78","do ":"79","end":"80","imi":"81","ndi":"82","r t":"83","rat":"84","\u00eb b":"85","\u00ebri":"86"," mu":"87","art":"88","ash":"89","qip":"90"," ko":"91","e m":"92","edh":"93","eri":"94","je ":"95","ka ":"96","nga":"97","si ":"98","te ":"99","\u00eb k":"100","\u00ebsi":"101"," ma":"102"," ti":"103","eve":"104","hje":"105","ira":"106","mun":"107","on ":"108","po ":"109","re ":"110"," pr":"111","im ":"112","lit":"113","o t":"114","ur ":"115","\u00eb e":"116","\u00eb v":"117","\u00ebt ":"118"," ku":"119"," s\u00eb":"120","e d":"121","es ":"122","ga ":"123","iti":"124","jet":"125","nd\u00eb":"126","oli":"127","shi":"128","tje":"129"," b\u00eb":"130"," z ":"131","gje":"132","kan":"133","shk":"134","\u00ebnd":"135","\u00ebs ":"136"," de":"137"," kj":"138"," ru":"139"," vi":"140","ara":"141","gov":"142","kjo":"143","or ":"144","r p":"145","rto":"146","rug":"147","tet":"148","ugo":"149","ali":"150","arr":"151","at ":"152","d t":"153","ht ":"154","i p":"155","ip\u00eb":"156","izi":"157","jn\u00eb":"158","n n":"159","ohe":"160","shu":"161","sh\u00eb":"162","t e":"163","tik":"164","a e":"165","ar\u00eb":"166","et\u00eb":"167","hum":"168","nd ":"169","ndr":"170","osh":"171","ova":"172","rim":"173","tos":"174","va ":"175"," fa":"176"," fi":"177","a s":"178","hen":"179","i n":"180","mar":"181","ndo":"182","por":"183","ris":"184","sa ":"185","sis":"186","t\u00ebs":"187","um\u00eb":"188","viz":"189","zit":"190"," di":"191"," mb":"192","aj ":"193","ana":"194","ata":"195","d\u00ebr":"196","e a":"197","esh":"198","ime":"199","jes":"200","lar":"201","n s":"202","nte":"203","pol":"204","r n":"205","ran":"206","res":"207","rr\u00eb":"208","tar":"209","\u00eb a":"210","\u00eb i":"211"," at":"212"," jo":"213"," k\u00eb":"214"," re":"215","a k":"216","ai ":"217","akt":"218","h\u00eb ":"219","h\u00ebn":"220","i i":"221","i m":"222","ia ":"223","men":"224","nis":"225","shm":"226","str":"227","t k":"228","t n":"229","t s":"230","\u00eb g":"231","\u00ebrk":"232","\u00ebve":"233"," ai":"234"," ci":"235"," ed":"236"," ja":"237"," kr":"238"," qe":"239"," ta":"240"," ve":"241","a p":"242","cil":"243","el ":"244","er\u00eb":"245","gji":"246","hte":"247","i t":"248","jen":"249","jit":"250","k d":"251","m\u00ebn":"252","n t":"253","nyr":"254","ori":"255","pas":"256","ra ":"257","rie":"258","r\u00ebs":"259","tor":"260","uaj":"261","yre":"262","\u00ebm ":"263","\u00ebny":"264"," ar":"265"," du":"266"," ga":"267"," je":"268","d\u00ebs":"269","e e":"270","e z":"271","ha ":"272","hme":"273","ika":"274","ini":"275","ite":"276","ith":"277","koh":"278","kra":"279","ku ":"280","lim":"281","lis":"282","q\u00ebn":"283","r\u00ebn":"284","s s":"285","t d":"286","t t":"287","tir":"288","t\u00ebn":"289","ver":"290","\u00eb j":"291"," ba":"292"," in":"293"," tr":"294"," zg":"295","a a":"296","a m":"297","a t":"298","abr":"299"},"arabic":{" \u0627\u0644":"0","\u0627\u0644\u0639":"1","\u0644\u0639\u0631":"2","\u0639\u0631\u0627":"3","\u0631\u0627\u0642":"4"," \u0641\u064a":"5","\u0641\u064a ":"6","\u064a\u0646 ":"7","\u064a\u0629 ":"8","\u0646 \u0627":"9","\u0627\u0644\u0645":"10","\u0627\u062a ":"11","\u0645\u0646 ":"12","\u064a \u0627":"13"," \u0645\u0646":"14","\u0627\u0644\u0623":"15","\u0629 \u0627":"16","\u0627\u0642 ":"17"," \u0648\u0627":"18","\u0627\u0621 ":"19","\u0627\u0644\u0625":"20"," \u0623\u0646":"21","\u0648\u0627\u0644":"22","\u0645\u0627 ":"23"," \u0639\u0644":"24","\u0644\u0649 ":"25","\u062a \u0627":"26","\u0648\u0646 ":"27","\u0647\u0645 ":"28","\u0627\u0642\u064a":"29","\u0627\u0645 ":"30","\u0644 \u0627":"31","\u0623\u0646 ":"32","\u0645 \u0627":"33","\u0627\u0644\u062a":"34","\u0644\u0627 ":"35","\u0627\u0644\u0627":"36","\u0627\u0646 ":"37","\u0647\u0627 ":"38","\u0627\u0644 ":"39","\u0629 \u0648":"40","\u0627 \u0627":"41","\u0631\u0647\u0627":"42","\u0644\u0627\u0645":"43","\u064a\u064a\u0646":"44"," \u0648\u0644":"45","\u0644\u0623\u0645":"46","\u0646\u0627 ":"47","\u0639\u0644\u0649":"48","\u0646 \u064a":"49","\u0627\u0644\u0628":"50","\u0627\u062f ":"51","\u0627\u0644\u0642":"52","\u062f \u0627":"53","\u0630\u0627 ":"54","\u0647 \u0627":"55"," \u0628\u0627":"56","\u0627\u0644\u062f":"57","\u0628 \u0627":"58","\u0645\u0631\u064a":"59","\u0644\u0645 ":"60"," \u0625\u0646":"61"," \u0644\u0644":"62","\u0633\u0644\u0627":"63","\u0623\u0645\u0631":"64","\u0631\u064a\u0643":"65","\u0645\u0629 ":"66","\u0649 \u0627":"67","\u0627 \u064a":"68"," \u0639\u0646":"69"," \u0647\u0630":"70","\u0621 \u0627":"71","\u0631 \u0627":"72","\u0643\u0627\u0646":"73","\u0642\u062a\u0644":"74","\u0625\u0633\u0644":"75","\u0627\u0644\u062d":"76","\u0648\u0627 ":"77"," \u0625\u0644":"78","\u0627 \u0623":"79","\u0628\u0627\u0644":"80","\u0646 \u0645":"81","\u0627\u0644\u0633":"82","\u0631\u0629 ":"83","\u0644\u0625\u0633":"84","\u0646 \u0648":"85","\u0647\u0627\u0628":"86","\u064a \u0648":"87","\u064a\u0631 ":"88"," \u0643\u0627":"89","\u0644\u0629 ":"90","\u064a\u0627\u062a":"91"," \u0644\u0627":"92","\u0627\u0646\u062a":"93","\u0646 \u0623":"94","\u064a\u0643\u064a":"95","\u0627\u0644\u0631":"96","\u0627\u0644\u0648":"97","\u0629 \u0641":"98","\u062f\u0629 ":"99","\u0627\u0644\u062c":"100","\u0642\u064a ":"101","\u0648\u064a ":"102","\u0627\u0644\u0630":"103","\u0627\u0644\u0634":"104","\u0627\u0645\u064a":"105","\u0627\u0646\u064a":"106","\u0630\u0647 ":"107","\u0639\u0646 ":"108","\u0644\u0645\u0627":"109","\u0647\u0630\u0647":"110","\u0648\u0644 ":"111","\u0627\u0641 ":"112","\u0627\u0648\u064a":"113","\u0628\u0631\u064a":"114","\u0629 \u0644":"115"," \u0623\u0645":"116"," \u0644\u0645":"117"," \u0645\u0627":"118","\u064a\u062f ":"119"," \u0623\u064a":"120","\u0625\u0631\u0647":"121","\u0639 \u0627":"122","\u0639\u0645\u0644":"123","\u0648\u0644\u0627":"124","\u0625\u0644\u0649":"125","\u0627\u0628\u064a":"126","\u0646 \u0641":"127","\u062e\u062a\u0637":"128","\u0644\u0643 ":"129","\u0646\u0647 ":"130","\u0646\u064a ":"131","\u0625\u0646 ":"132","\u062f\u064a\u0646":"133","\u0641 \u0627":"134","\u0644\u0630\u064a":"135","\u064a \u0623":"136","\u064a \u0628":"137"," \u0648\u0623":"138","\u0627 \u0639":"139","\u0627\u0644\u062e":"140","\u062a\u0644 ":"141","\u062a\u064a ":"142","\u0642\u062f ":"143","\u0644\u062f\u064a":"144"," \u0643\u0644":"145"," \u0645\u0639":"146","\u0627\u0628 ":"147","\u0627\u062e\u062a":"148","\u0627\u0631 ":"149","\u0627\u0644\u0646":"150","\u0639\u0644\u0627":"151","\u0645 \u0648":"152","\u0645\u0639 ":"153","\u0633 \u0627":"154","\u0643\u0644 ":"155","\u0644\u0627\u0621":"156","\u0646 \u0628":"157","\u0646 \u062a":"158","\u064a \u0645":"159","\u0639\u0631\u0628":"160","\u0645 \u0628":"161"," \u0648\u0642":"162"," \u064a\u0642":"163","\u0627 \u0644":"164","\u0627 \u0645":"165","\u0627\u0644\u0641":"166","\u062a\u0637\u0627":"167","\u062f\u0627\u062f":"168","\u0644\u0645\u0633":"169","\u0644\u0647 ":"170","\u0647\u0630\u0627":"171"," \u0645\u062d":"172","\u0624\u0644\u0627":"173","\u0628\u064a ":"174","\u0629 \u0645":"175","\u0646 \u0644":"176","\u0647\u0624\u0644":"177","\u0643\u0646 ":"178","\u0644\u0625\u0631":"179","\u0644\u062a\u064a":"180"," \u0623\u0648":"181"," \u0627\u0646":"182"," \u0639\u0645":"183","\u0627 \u0641":"184","\u0629 \u0623":"185","\u0637\u0627\u0641":"186","\u0639\u0628 ":"187","\u0644 \u0645":"188","\u0646 \u0639":"189","\u0648\u0631 ":"190","\u064a\u0627 ":"191"," \u064a\u0633":"192","\u0627 \u062a":"193","\u0629 \u0628":"194","\u0631\u0627\u0621":"195","\u0639\u0627\u0644":"196","\u0642\u0648\u0627":"197","\u0642\u064a\u0629":"198","\u0644\u0639\u0627":"199","\u0645 \u064a":"200","\u0645\u064a ":"201","\u0645\u064a\u0629":"202","\u0646\u064a\u0629":"203","\u0623\u064a ":"204","\u0627\u0628\u0627":"205","\u0628\u063a\u062f":"206","\u0628\u0644 ":"207","\u0631\u0628 ":"208","\u0639\u0645\u0627":"209","\u063a\u062f\u0627":"210","\u0645\u0627\u0644":"211","\u0645\u0644\u064a":"212","\u064a\u0633 ":"213"," \u0628\u0623":"214"," \u0628\u0639":"215"," \u0628\u063a":"216"," \u0648\u0645":"217","\u0628\u0627\u062a":"218","\u0628\u064a\u0629":"219","\u0630\u0644\u0643":"220","\u0639\u0629 ":"221","\u0642\u0627\u0648":"222","\u0642\u064a\u064a":"223","\u0643\u064a ":"224","\u0645 \u0645":"225","\u064a \u0639":"226"," \u0639\u0631":"227"," \u0642\u0627":"228","\u0627 \u0648":"229","\u0631\u0649 ":"230","\u0642 \u0627":"231","\u0648\u0627\u062a":"232","\u0648\u0645 ":"233"," \u0647\u0624":"234","\u0627 \u0628":"235","\u062f\u0627\u0645":"236","\u062f\u064a ":"237","\u0631\u0627\u062a":"238","\u0634\u0639\u0628":"239","\u0644\u0627\u0646":"240","\u0644\u0634\u0639":"241","\u0644\u0642\u0648":"242","\u0644\u064a\u0627":"243","\u0646 \u0647":"244","\u064a \u062a":"245","\u064a \u064a":"246"," \u0648\u0647":"247"," \u064a\u062d":"248","\u062c\u0631\u0627":"249","\u062c\u0645\u0627":"250","\u062d\u0645\u062f":"251","\u062f\u0645 ":"252","\u0643\u0645 ":"253","\u0644\u0627\u0648":"254","\u0644\u0631\u0647":"255","\u0645\u0627\u0639":"256","\u0646 \u0642":"257","\u0646\u0629 ":"258","\u0647\u064a ":"259"," \u0628\u0644":"260"," \u0628\u0647":"261"," \u0644\u0647":"262"," \u0648\u064a":"263","\u0627 \u0643":"264","\u0627\u0630\u0627":"265","\u0627\u0639 ":"266","\u062a \u0645":"267","\u062a\u062e\u0627":"268","\u062e\u0627\u0628":"269","\u0631 \u0645":"270","\u0644\u0645\u062a":"271","\u0645\u0633\u0644":"272","\u0649 \u0623":"273","\u064a\u0633\u062a":"274","\u064a\u0637\u0627":"275"," \u0644\u0623":"276"," \u0644\u064a":"277","\u0623\u0645\u0646":"278","\u0627\u0633\u062a":"279","\u0628\u0639\u0636":"280","\u0629 \u062a":"281","\u0631\u064a ":"282","\u0635\u062f\u0627":"283","\u0642 \u0648":"284","\u0642\u0648\u0644":"285","\u0645\u062f ":"286","\u0646\u062a\u062e":"287","\u0646\u0641\u0633":"288","\u0646\u0647\u0627":"289","\u0647\u0646\u0627":"290","\u0623\u0639\u0645":"291","\u0623\u0646\u0647":"292","\u0627\u0626\u0646":"293","\u0627\u0644\u0622":"294","\u0627\u0644\u0643":"295","\u062d\u0629 ":"296","\u062f \u0645":"297","\u0631 \u0639":"298","\u0631\u0628\u064a":"299"},"azeri":{"l\u0259r":"0","in ":"1","\u0131n ":"2","lar":"3","da ":"4","an ":"5","ir ":"6","d\u0259 ":"7","ki ":"8"," bi":"9","\u0259n ":"10","\u0259ri":"11","ar\u0131":"12","\u0259r ":"13","dir":"14","nda":"15"," ki":"16","rin":"17","n\u0131n":"18","\u0259si":"19","ini":"20"," ed":"21"," qa":"22"," t\u0259":"23"," ba":"24"," ol":"25","as\u0131":"26","il\u0259":"27","r\u0131n":"28"," ya":"29","an\u0131":"30"," v\u0259":"31","nd\u0259":"32","ni ":"33","ara":"34","\u0131n\u0131":"35","\u0131nd":"36"," bu":"37","si ":"38","ib ":"39","aq ":"40","d\u0259n":"41","iya":"42","n\u0259 ":"43","r\u0259 ":"44","n b":"45","s\u0131n":"46","v\u0259 ":"47","iri":"48","l\u0259 ":"49","nin":"50","\u0259li":"51"," de":"52"," m\u00fc":"53","bir":"54","n s":"55","ri ":"56","\u0259k ":"57"," az":"58"," s\u0259":"59","ar ":"60","bil":"61","z\u0259r":"62","bu ":"63","dan":"64","edi":"65","ind":"66","man":"67","un ":"68","\u0259r\u0259":"69"," ha":"70","lan":"71","yy\u0259":"72","iyy":"73"," il":"74"," ne":"75","r k":"76","\u0259 b":"77"," is":"78","na ":"79","nun":"80","\u0131r ":"81"," da":"82"," h\u0259":"83","a b":"84","in\u0259":"85","sin":"86","yan":"87","\u0259rb":"88"," d\u0259":"89"," m\u0259":"90"," q\u0259":"91","d\u0131r":"92","li ":"93","ola":"94","rba":"95","az\u0259":"96","can":"97","l\u0131 ":"98","nla":"99"," et":"100"," g\u00f6":"101","al\u0131":"102","ayc":"103","bay":"104","eft":"105","ist":"106","n i":"107","nef":"108","tl\u0259":"109","yca":"110","y\u0259t":"111","\u0259c\u0259":"112"," la":"113","ild":"114","n\u0131 ":"115","tin":"116","ldi":"117","lik":"118","n h":"119","n m":"120","oyu":"121","raq":"122","ya ":"123","\u0259ti":"124"," ar":"125","ada":"126","ed\u0259":"127","mas":"128","s\u0131 ":"129","\u0131na":"130","\u0259 d":"131","\u0259l\u0259":"132","ay\u0131":"133","iyi":"134","lma":"135","m\u0259k":"136","n d":"137","ti ":"138","yin":"139","yun":"140","\u0259t ":"141","az\u0131":"142","ft ":"143","i t":"144","lli":"145","n a":"146","ra ":"147"," c\u0259":"148"," g\u0259":"149"," ko":"150"," n\u0259":"151"," oy":"152","a d":"153","ana":"154","c\u0259k":"155","eyi":"156","ilm":"157","irl":"158","lay":"159","liy":"160","lub":"161","n \u0259":"162","ril":"163","rl\u0259":"164","unu":"165","ver":"166","\u00fcn ":"167","\u0259 o":"168","\u0259ni":"169"," he":"170"," ma":"171"," on":"172"," pa":"173","ala":"174","dey":"175","i m":"176","ima":"177","lm\u0259":"178","m\u0259t":"179","par":"180","y\u0259 ":"181","\u0259tl":"182"," al":"183"," mi":"184"," sa":"185"," \u0259l":"186","ad\u0131":"187","ak\u0131":"188","and":"189","ard":"190","art":"191","ayi":"192","i a":"193","i q":"194","i y":"195","ili":"196","ill":"197","is\u0259":"198","n o":"199","n q":"200","olu":"201","rla":"202","st\u0259":"203","s\u0259 ":"204","tan":"205","tel":"206","yar":"207","\u0259d\u0259":"208"," me":"209"," r\u0259":"210"," ve":"211"," ye":"212","a k":"213","at ":"214","ba\u015f":"215","diy":"216","ent":"217","eti":"218","h\u0259s":"219","i i":"220","ik ":"221","la ":"222","mi\u015f":"223","n n":"224","nu ":"225","qar":"226","ran":"227","t\u0259r":"228","xan":"229","\u0259 a":"230","\u0259 g":"231","\u0259 t":"232"," d\u00fc":"233","ama":"234","b k":"235","dil":"236","era":"237","etm":"238","i b":"239","kil":"240","mil":"241","n r":"242","qla":"243","r s":"244","ras":"245","siy":"246","son":"247","tim":"248","yer":"249","\u0259 k":"250"," g\u00fc":"251"," so":"252"," s\u00f6":"253"," te":"254"," xa":"255","ai ":"256","bar":"257","cti":"258","di ":"259","eri":"260","g\u00f6r":"261","g\u00fcn":"262","g\u0259l":"263","hb\u0259":"264","ih\u0259":"265","iki":"266","isi":"267","lin":"268","mai":"269","maq":"270","n k":"271","n t":"272","n v":"273","onu":"274","qan":"275","q\u0259z":"276","t\u0259 ":"277","xal":"278","yib":"279","yih":"280","zet":"281","z\u0131r":"282","\u0131b ":"283","\u0259 m":"284","\u0259ze":"285"," br":"286"," in":"287"," i\u0307":"288"," pr":"289"," ta":"290"," to":"291"," \u00fc\u00e7":"292","a o":"293","ali":"294","ani":"295","anl":"296","aql":"297","azi":"298","bri":"299"},"bengali":{"\u09be\u09b0 ":"0","\u09af\u09bc ":"1","\u09c7\u09af\u09bc":"2","\u09af\u09bc\u09be":"3"," \u0995\u09b0":"4","\u09c7\u09a4 ":"5"," \u0995\u09be":"6"," \u09aa\u09be":"7"," \u09a4\u09be":"8","\u09a8\u09be ":"9","\u09be\u09af\u09bc":"10","\u09c7\u09b0 ":"11","\u09af\u09bc\u09c7":"12"," \u09ac\u09be":"13","\u09c7\u09ac ":"14"," \u09af\u09be":"15"," \u09b9\u09c7":"16"," \u09b8\u09be":"17","\u09be\u09a8 ":"18","\u09c7\u099b ":"19"," \u09bf\u09a8":"20","\u09c7\u09b2 ":"21"," \u09bf\u09a6":"22"," \u09a8\u09be":"23"," \u09bf\u09ac":"24","\u09c7\u0995 ":"25","\u09b2\u09be ":"26","\u09a4\u09be ":"27"," \u09ac\u0a98":"28"," \u09bf\u0995":"29","\u0995\u09b0\u09c7":"30"," \u09aa\u0a9a":"31","\u09be\u09c7\u09b0":"32","\u09bf\u09a8\u09c7":"33","\u09b0\u09be ":"34"," \u09cb\u09ac":"35","\u0995\u09be ":"36"," \u0995\u09c7":"37"," \u099f\u09be":"38","\u09b0 \u0995":"39","\u09c7\u09b2\u09be":"40"," \u09cb\u0995":"41"," \u09ae\u09be":"42"," \u09cb\u09a6":"43"," \u09cb\u09ae":"44","\u09a6\u09b0 ":"45","\u09bc\u09be ":"46","\u09bf\u09a6\u09c7":"47","\u09be\u0995\u09be":"48","\u09bc\u09c7\u099b":"49","\u09c7\u09a6\u09b0":"50"," \u0986\u09c7":"51"," \u0993 ":"52","\u09be\u09b2 ":"53","\u09bf\u099f ":"54"," \u09ae\u09c1":"55","\u0995\u09c7\u09b0":"56","\u09b9\u09af\u09bc":"57","\u0995\u09b0\u09be":"58","\u09aa\u09b0 ":"59","\u09aa\u09be\u09c7":"60"," \u098f\u0995":"61"," \u09aa\u09a6":"62","\u099f\u09be\u0995":"63","\u09a1\u09bc ":"64","\u0995\u09be\u09a8":"65","\u099f\u09be ":"66","\u09a6\u0a97\u09be":"67","\u09aa\u09a6\u0a97":"68","\u09be\u09a1\u09bc":"69","\u09cb\u0995\u09be":"70","\u0993\u09af\u09bc":"71","\u0995\u09be\u09aa":"72","\u09b9\u09c7\u09af":"73","\u09c7\u09a8\u09b0":"74"," \u09b9\u09af":"75","\u09a6\u09c7\u09af":"76","\u09a8\u09b0 ":"77","\u09be\u09a8\u09be":"78","\u09be\u09c7\u09b2":"79"," \u0986\u09b0":"80"," \u09bc ":"81","\u09ac\u0a98\u09ac":"82","\u09bf\u09af\u09bc":"83"," \u09a6\u09be":"84"," \u09b8\u09ae":"85","\u0995\u09be\u09b0":"86","\u09b9\u09be\u09b0":"87","\u09be\u0987 ":"88","\u09a1\u09bc\u09be":"89","\u09bf\u09ac\u09bf":"90"," \u09b0\u09be":"91"," \u09b2\u09be":"92","\u09a8\u09be\u09b0":"93","\u09ac\u09b9\u09be":"94","\u09ac\u09be ":"95","\u09af\u09be\u09af":"96","\u09c7\u09a8 ":"97","\u0a98\u09ac\u09b9":"98"," \u09ad\u09be":"99"," \u09b8\u09c7":"100"," \u09cb\u09af":"101","\u09b0\u09b0 ":"102","\u09bc\u09be\u09b0":"103","\u09bc\u09be\u09b2":"104","\u0a97\u09be ":"105","\u09a5\u09c7\u0995":"106","\u09ad\u09be\u09c7":"107","\u09bc\u09c7 ":"108","\u09c7\u09b0\u09b0":"109"," \u09a7\u09b0":"110"," \u09b9\u09be":"111","\u09a8\u0a98 ":"112","\u09b0\u09c7\u09a8":"113","\u09be\u09c7\u09ac":"114","\u09bf\u09a1\u09bc":"115","\u09bf\u09b0 ":"116"," \u09cb\u09a5":"117","\u09a4\u09be\u09b0":"118","\u09ac\u09bf\u09ad":"119","\u09b0\u09c7\u09a4":"120","\u09b8\u09be\u09c7":"121","\u09be\u0995\u09c7":"122","\u09be\u09c7\u09a4":"123","\u09bf\u09ad\u0a2d":"124","\u09c7 \u09ac":"125","\u09cb\u09a5\u09c7":"126"," \u09cb\u09aa":"127"," \u09cb\u09b8":"128","\u09ac\u09be\u09b0":"129","\u09ad\u0a2d ":"130","\u09b0\u09a8 ":"131","\u09be\u09ae ":"132"," \u098f\u0996":"133","\u0986\u09b0 ":"134","\u0995\u09be\u09c7":"135","\u09a6\u09a8 ":"136","\u09b8\u09be\u099c":"137","\u09be\u09c7\u0995":"138","\u09be\u09c7\u09a8":"139","\u09c7\u09a8\u09be":"140"," \u0998\u09c7":"141"," \u09a4\u09c7":"142"," \u09b0\u09c7":"143","\u09a4\u09c7\u09ac":"144","\u09ac\u09a8 ":"145","\u09ac\u0a98\u09be":"146","\u09c7\u09a1\u09bc":"147","\u09c7\u09ac\u09a8":"148"," \u0996\u09c1":"149"," \u099a\u09be":"150"," \u09b8\u09c1":"151","\u0995\u09c7 ":"152","\u09a7\u09b0\u09c7":"153","\u09b0 \u09cb":"154","\u09bc \u09bf":"155","\u09be \u09bf":"156","\u09be\u09c7\u09a5":"157","\u09be\u0a20\u09be":"158","\u09bf\u09a6 ":"159","\u09bf\u09a8 ":"160"," \u0985\u09a8":"161"," \u0986\u09aa":"162"," \u0986\u09ae":"163"," \u09a5\u09be":"164"," \u09ac\u0a9a":"165"," \u09cb\u09ab":"166"," \u09cc\u09a4":"167","\u0998\u09c7\u09b0":"168","\u09a4\u09c7 ":"169","\u09ae\u09af\u09bc":"170","\u09af\u09be\u0a20":"171","\u09b0 \u09b8":"172","\u09b0\u09be\u0996":"173","\u09be \u09ac":"174","\u09be \u09cb":"175","\u09be\u09b2\u09be":"176","\u09bf\u0995 ":"177","\u09bf\u09b6 ":"178","\u09c7\u0996 ":"179"," \u098f\u09b0":"180"," \u099a\u0a93":"181"," \u09bf\u09a1":"182","\u0996\u09a8 ":"183","\u09a1\u09bc\u09c7":"184","\u09b0 \u09ac":"185","\u09bc\u09b0 ":"186","\u09be\u0987\u09c7":"187","\u09be\u09c7\u09a6":"188","\u09bf\u09a6\u09a8":"189","\u09c7\u09b0\u09a8":"190"," \u09a4\u0a74":"191","\u099b\u09be\u09a1":"192","\u099c\u09a8\u0a98":"193","\u09a4\u09be\u0987":"194","\u09ae\u09be ":"195","\u09ae\u09be\u09c7":"196","\u09b2\u09be\u09b0":"197","\u09be\u099c ":"198","\u09be\u09a4\u09be":"199","\u09be\u09ae\u09be":"200","\u0a0a\u09c7\u09b2":"201","\u0a97\u09be\u09b0":"202"," \u09b8\u09ac":"203","\u0986\u09aa\u09a8":"204","\u098f\u0995\u099f":"205","\u0995\u09be\u09bf":"206","\u099c\u09be\u0987":"207","\u099f\u09b0 ":"208","\u09a1\u099c\u09be":"209","\u09a6\u09c7\u0996":"210","\u09aa\u09a8\u09be":"211","\u09b0\u0993 ":"212","\u09b2\u09c7 ":"213","\u09b9\u09c7\u09ac":"214","\u09be\u099c\u09be":"215","\u09be\u09bf\u099f":"216","\u09bf\u09a1\u099c":"217","\u09c7\u09a5 ":"218"," \u098f\u09ac":"219"," \u099c\u09a8":"220"," \u099c\u09be":"221","\u0986\u09ae\u09be":"222","\u0997\u09c7\u09b2":"223","\u099c\u09be\u09a8":"224","\u09a8\u09c7\u09a4":"225","\u09ac\u09bf\u09b6":"226","\u09ae\u09c1\u09c7":"227","\u09ae\u09c7\u09af":"228","\u09b0 \u09aa":"229","\u09b8\u09c7 ":"230","\u09b9\u09c7\u09b2":"231","\u09bc \u09cb":"232","\u09be \u09b9":"233","\u09be\u0993\u09af":"234","\u09cb\u09ae\u0995":"235","\u0a98\u09be\u09bf":"236"," \u0985\u09c7":"237"," \u099f ":"238"," \u09cb\u0997":"239"," \u09cb\u09a8":"240","\u099c\u09b0 ":"241","\u09a4\u09bf\u09b0":"242","\u09a6\u09be\u09ae":"243","\u09aa\u09a1\u09bc":"244","\u09aa\u09be\u09b0":"245","\u09ac\u09be\u0998":"246","\u09ae\u0995\u09be":"247","\u09ae\u09be\u09ae":"248","\u09af\u09bc\u09b0":"249","\u09af\u09be\u09c7":"250","\u09b0 \u09ae":"251","\u09b0\u09c7 ":"252","\u09b2\u09b0 ":"253","\u09be \u0995":"254","\u09be\u0997 ":"255","\u09be\u09ac\u09be":"256","\u09be\u09b0\u09be":"257","\u09be\u09bf\u09a8":"258","\u09c7 \u0997":"259","\u09c7\u0997 ":"260","\u09c7\u09b2\u09b0":"261","\u09cb\u09a6\u0996":"262","\u09cb\u09ac\u09bf":"263","\u0a93\u09b2 ":"264"," \u09a6\u09c7":"265"," \u09aa\u09c1":"266"," \u09ac\u09c7":"267","\u0985\u09c7\u09a8":"268","\u098f\u0996\u09a8":"269","\u0995\u099b\u09c1":"270","\u0995\u09be\u09b2":"271","\u0997\u09c7\u09af":"272","\u099b\u09a8 ":"273","\u09a4 \u09aa":"274","\u09a8\u09c7\u09af":"275","\u09aa\u09be\u09bf":"276","\u09ae\u09a8 ":"277","\u09b0 \u0986":"278","\u09b0\u09be\u09b0":"279","\u09be\u0993 ":"280","\u09be\u09aa ":"281","\u09bf\u0995\u099b":"282","\u09bf\u0997\u09c7":"283","\u09c7\u099b\u09a8":"284","\u09c7\u099c\u09b0":"285","\u09cb\u09ae\u09be":"286","\u09cb\u09ae\u09c7":"287","\u09cc\u09a4\u09bf":"288","\u0a98\u09be\u09c7":"289"," ' ":"290"," \u098f\u099b":"291"," \u099b\u09be":"292"," \u09ac\u09b2":"293"," \u09af\u09bf":"294"," \u09b6\u09bf":"295"," \u09bf\u09ae":"296"," \u09cb\u09b2":"297","\u098f\u099b\u09be":"298","\u0996\u09be ":"299"},"bulgarian":{"\u043d\u0430 ":"0"," \u043d\u0430":"1","\u0442\u043e ":"2"," \u043f\u0440":"3"," \u0437\u0430":"4","\u0442\u0430 ":"5"," \u043f\u043e":"6","\u0438\u0442\u0435":"7","\u0442\u0435 ":"8","\u0430 \u043f":"9","\u0430 \u0441":"10"," \u043e\u0442":"11","\u0437\u0430 ":"12","\u0430\u0442\u0430":"13","\u0438\u044f ":"14"," \u0432 ":"15","\u0435 \u043d":"16"," \u0434\u0430":"17","\u0430 \u043d":"18"," \u0441\u0435":"19"," \u043a\u043e":"20","\u0434\u0430 ":"21","\u043e\u0442 ":"22","\u0430\u043d\u0438":"23","\u043f\u0440\u0435":"24","\u043d\u0435 ":"25","\u0435\u043d\u0438":"26","\u043e \u043d":"27","\u043d\u0438 ":"28","\u0441\u0435 ":"29"," \u0438 ":"30","\u043d\u043e ":"31","\u0430\u043d\u0435":"32","\u0435\u0442\u043e":"33","\u0430 \u0432":"34","\u0432\u0430 ":"35","\u0432\u0430\u043d":"36","\u0435 \u043f":"37","\u0430 \u043e":"38","\u043e\u0442\u043e":"39","\u0440\u0430\u043d":"40","\u0430\u0442 ":"41","\u0440\u0435\u0434":"42"," \u043d\u0435":"43","\u0430 \u0434":"44","\u0438 \u043f":"45"," \u0434\u043e":"46","\u043f\u0440\u043e":"47"," \u0441\u044a":"48","\u043b\u0438 ":"49","\u043f\u0440\u0438":"50","\u043d\u0438\u044f":"51","\u0441\u043a\u0438":"52","\u0442\u0435\u043b":"53","\u0430 \u0438":"54","\u043f\u043e ":"55","\u0440\u0438 ":"56"," \u0435 ":"57"," \u043a\u0430":"58","\u0438\u0440\u0430":"59","\u043a\u0430\u0442":"60","\u043d\u0438\u0435":"61","\u043d\u0438\u0442":"62","\u0435 \u0437":"63","\u0438 \u0441":"64","\u043e \u0441":"65","\u043e\u0441\u0442":"66","\u0447\u0435 ":"67"," \u0440\u0430":"68","\u0438\u0441\u0442":"69","\u043e \u043f":"70"," \u0438\u0437":"71"," \u0441\u0430":"72","\u0435 \u0434":"73","\u0438\u043d\u0438":"74","\u043a\u0438 ":"75","\u043c\u0438\u043d":"76"," \u043c\u0438":"77","\u0430 \u0431":"78","\u0430\u0432\u0430":"79","\u0435 \u0432":"80","\u0438\u0435 ":"81","\u043f\u043e\u043b":"82","\u0441\u0442\u0432":"83","\u0442 \u043d":"84"," \u0432\u044a":"85"," \u0441\u0442":"86"," \u0442\u043e":"87","\u0430\u0437\u0430":"88","\u0435 \u043e":"89","\u043e\u0432 ":"90","\u0441\u0442 ":"91","\u044a\u0442 ":"92","\u0438 \u043d":"93","\u0438\u044f\u0442":"94","\u043d\u0430\u0442":"95","\u0440\u0430 ":"96"," \u0431\u044a":"97"," \u0447\u0435":"98","\u0430\u043b\u043d":"99","\u0435 \u0441":"100","\u0435\u043d ":"101","\u0435\u0441\u0442":"102","\u0438 \u0434":"103","\u043b\u0435\u043d":"104","\u043d\u0438\u0441":"105","\u043e \u043e":"106","\u043e\u0432\u0438":"107"," \u043e\u0431":"108"," \u0441\u043b":"109","\u0430 \u0440":"110","\u0430\u0442\u043e":"111","\u043a\u043e\u043d":"112","\u043d\u043e\u0441":"113","\u0440\u043e\u0432":"114","\u0449\u0435 ":"115"," \u0440\u0435":"116"," \u0441 ":"117"," \u0441\u043f":"118","\u0432\u0430\u0442":"119","\u0435\u0448\u0435":"120","\u0438 \u0432":"121","\u0438\u0435\u0442":"122","\u043e \u0432":"123","\u043e\u0432\u0435":"124","\u0441\u0442\u0430":"125","\u0430 \u043a":"126","\u0430 \u0442":"127","\u0434\u0430\u0442":"128","\u0435\u043d\u0442":"129","\u043a\u0430 ":"130","\u043b\u0435\u0434":"131","\u043d\u0435\u0442":"132","\u043e\u0440\u0438":"133","\u0441\u0442\u0440":"134","\u0441\u0442\u044a":"135","\u0442\u0438 ":"136","\u0442\u044a\u0440":"137"," \u0442\u0435":"138","\u0430 \u0437":"139","\u0430 \u043c":"140","\u0430\u0434 ":"141","\u0430\u043d\u0430":"142","\u0435\u043d\u043e":"143","\u0438 \u043e":"144","\u0438\u043d\u0430":"145","\u0438\u0442\u0438":"146","\u043c\u0430 ":"147","\u0441\u043a\u0430":"148","\u0441\u043b\u0435":"149","\u0442\u0432\u043e":"150","\u0442\u0435\u0440":"151","\u0446\u0438\u044f":"152","\u044f\u0442 ":"153"," \u0431\u0435":"154"," \u0434\u0435":"155"," \u043f\u0430":"156","\u0430\u0442\u0435":"157","\u0432\u0435\u043d":"158","\u0432\u0438 ":"159","\u0432\u0438\u0442":"160","\u0438 \u0437":"161","\u0438 \u0438":"162","\u043d\u0430\u0440":"163","\u043d\u043e\u0432":"164","\u043e\u0432\u0430":"165","\u043f\u043e\u0432":"166","\u0440\u0435\u0437":"167","\u0440\u0438\u0442":"168","\u0441\u0430 ":"169","\u044f\u0442\u0430":"170"," \u0433\u043e":"171"," \u0449\u0435":"172","\u0430\u043b\u0438":"173","\u0432 \u043f":"174","\u0433\u0440\u0430":"175","\u0435 \u0438":"176","\u0435\u0434\u0438":"177","\u0435\u043b\u0438":"178","\u0438\u043b\u0438":"179","\u043a\u0430\u0437":"180","\u043a\u0438\u0442":"181","\u043b\u043d\u043e":"182","\u043c\u0435\u043d":"183","\u043e\u043b\u0438":"184","\u0440\u0430\u0437":"185"," \u0432\u0435":"186"," \u0433\u0440":"187"," \u0438\u043c":"188"," \u043c\u0435":"189"," \u043f\u044a":"190","\u0430\u0432\u0438":"191","\u0430\u043a\u043e":"192","\u0430\u0447\u0430":"193","\u0432\u0438\u043d":"194","\u0432\u043e ":"195","\u0433\u043e\u0432":"196","\u0434\u0430\u043d":"197","\u0434\u0438 ":"198","\u0434\u043e ":"199","\u0435\u0434 ":"200","\u0435\u0440\u0438":"201","\u0435\u0440\u043e":"202","\u0436\u0434\u0430":"203","\u0438\u0442\u043e":"204","\u043a\u043e\u0432":"205","\u043a\u043e\u043b":"206","\u043b\u043d\u0438":"207","\u043c\u0435\u0440":"208","\u043d\u0430\u0447":"209","\u043e \u0437":"210","\u043e\u043b\u0430":"211","\u043e\u043d ":"212","\u043e\u043d\u0430":"213","\u043f\u0440\u0430":"214","\u0440\u0430\u0432":"215","\u0440\u0435\u043c":"216","\u0441\u0438\u044f":"217","\u0441\u0442\u0438":"218","\u0442 \u043f":"219","\u0442\u0430\u043d":"220","\u0445\u0430 ":"221","\u0448\u0435 ":"222","\u0448\u0435\u043d":"223","\u044a\u043b\u0433":"224"," \u0431\u0430":"225"," \u0441\u0438":"226","\u0430\u0440\u043e":"227","\u0431\u044a\u043b":"228","\u0432 \u0440":"229","\u0433\u0430\u0440":"230","\u0435 \u0435":"231","\u0435\u043b\u043d":"232","\u0435\u043c\u0435":"233","\u0438\u043a\u043e":"234","\u0438\u043c\u0430":"235","\u043a\u043e ":"236","\u043a\u043e\u0438":"237","\u043b\u0430 ":"238","\u043b\u0433\u0430":"239","\u043e \u0434":"240","\u043e\u0437\u0438":"241","\u043e\u0438\u0442":"242","\u043f\u043e\u0434":"243","\u0440\u0435\u0441":"244","\u0440\u0438\u0435":"245","\u0441\u0442\u043e":"246","\u0442 \u043a":"247","\u0442 \u043c":"248","\u0442 \u0441":"249","\u0443\u0441\u0442":"250"," \u0431\u0438":"251"," \u0434\u0432":"252"," \u0434\u044a":"253"," \u043c\u0430":"254"," \u043c\u043e":"255"," \u043d\u0438":"256"," \u043e\u0441":"257","\u0430\u043b\u0430":"258","\u0430\u043d\u0441":"259","\u0430\u0440\u0430":"260","\u0430\u0442\u0438":"261","\u0430\u0446\u0438":"262","\u0431\u0435\u0448":"263","\u0432\u044a\u0440":"264","\u0435 \u0440":"265","\u0435\u0434\u0432":"266","\u0435\u043c\u0430":"267","\u0436\u0430\u0432":"268","\u0438 \u043a":"269","\u0438\u0430\u043b":"270","\u0438\u0446\u0430":"271","\u0438\u0447\u0435":"272","\u043a\u0438\u044f":"273","\u043b\u0438\u0442":"274","\u043e \u0431":"275","\u043e\u0432\u043e":"276","\u043e\u0434\u0438":"277","\u043e\u043a\u0430":"278","\u043f\u043e\u0441":"279","\u0440\u043e\u0434":"280","\u0441\u0435\u0434":"281","\u0441\u043b\u0443":"282","\u0442 \u0438":"283","\u0442\u043e\u0432":"284","\u0443\u0432\u0430":"285","\u0446\u0438\u0430":"286","\u0447\u0435\u0441":"287","\u044f \u0437":"288"," \u0432\u043e":"289"," \u0438\u043b":"290"," \u0441\u043a":"291"," \u0442\u0440":"292"," \u0446\u0435":"293","\u0430\u043c\u0438":"294","\u0430\u0440\u0438":"295","\u0431\u0430\u0442":"296","\u0431\u0438 ":"297","\u0431\u0440\u0430":"298","\u0431\u044a\u0434":"299"},"cebuano":{"ng ":"0","sa ":"1"," sa":"2","ang":"3","ga ":"4","nga":"5"," ka":"6"," ng":"7","an ":"8"," an":"9"," na":"10"," ma":"11"," ni":"12","a s":"13","a n":"14","on ":"15"," pa":"16"," si":"17","a k":"18","a m":"19"," ba":"20","ong":"21","a i":"22","ila":"23"," mg":"24","mga":"25","a p":"26","iya":"27","a a":"28","ay ":"29","ka ":"30","ala":"31","ing":"32","g m":"33","n s":"34","g n":"35","lan":"36"," gi":"37","na ":"38","ni ":"39","o s":"40","g p":"41","n n":"42"," da":"43","ag ":"44","pag":"45","g s":"46","yan":"47","ayo":"48","o n":"49","si ":"50"," mo":"51","a b":"52","g a":"53","ail":"54","g b":"55","han":"56","a d":"57","asu":"58","nag":"59","ya ":"60","man":"61","ne ":"62","pan":"63","kon":"64"," il":"65"," la":"66","aka":"67","ako":"68","ana":"69","bas":"70","ko ":"71","od ":"72","yo ":"73"," di":"74"," ko":"75"," ug":"76","a u":"77","g k":"78","kan":"79","la ":"80","len":"81","sur":"82","ug ":"83"," ai":"84","apa":"85","aw ":"86","d s":"87","g d":"88","g g":"89","ile":"90","nin":"91"," iy":"92"," su":"93","ene":"94","og ":"95","ot ":"96","aba":"97","aha":"98","as ":"99","imo":"100"," ki":"101","a t":"102","aga":"103","ban":"104","ero":"105","nan":"106","o k":"107","ran":"108","ron":"109","sil":"110","una":"111","usa":"112"," us":"113","a g":"114","ahi":"115","ani":"116","er ":"117","ha ":"118","i a":"119","rer":"120","yon":"121"," pu":"122","ini":"123","nak":"124","ro ":"125","to ":"126","ure":"127"," ed":"128"," og":"129"," wa":"130","ili":"131","mo ":"132","n a":"133","nd ":"134","o a":"135"," ad":"136"," du":"137"," pr":"138","aro":"139","i s":"140","ma ":"141","n m":"142","ulo":"143","und":"144"," ta":"145","ara":"146","asa":"147","ato":"148","awa":"149","dmu":"150","e n":"151","edm":"152","ina":"153","mak":"154","mun":"155","niy":"156","san":"157","wa ":"158"," tu":"159"," un":"160","a l":"161","bay":"162","iga":"163","ika":"164","ita":"165","kin":"166","lis":"167","may":"168","os ":"169"," ar":"170","ad ":"171","ali":"172","ama":"173","ers":"174","ipa":"175","isa":"176","mao":"177","nim":"178","t s":"179","tin":"180"," ak":"181"," ap":"182"," hi":"183","abo":"184","agp":"185","ano":"186","ata":"187","g i":"188","gan":"189","gka":"190","gpa":"191","i m":"192","iha":"193","k s":"194","law":"195","or ":"196","rs ":"197","siy":"198","tag":"199"," al":"200"," at":"201"," ha":"202"," hu":"203"," im":"204","a h":"205","bu ":"206","e s":"207","gma":"208","kas":"209","lag":"210","mon":"211","nah":"212","ngo":"213","r s":"214","ra ":"215","sab":"216","sam":"217","sul":"218","uba":"219","uha":"220"," lo":"221"," re":"222","ada":"223","aki":"224","aya":"225","bah":"226","ce ":"227","d n":"228","lab":"229","pa ":"230","pak":"231","s n":"232","s s":"233","tan":"234","taw":"235","te ":"236","uma":"237","ura":"238"," in":"239"," lu":"240","a c":"241","abi":"242","at ":"243","awo":"244","bat":"245","dal":"246","dla":"247","ele":"248","g t":"249","g u":"250","gay":"251","go ":"252","hab":"253","hin":"254","i e":"255","i n":"256","kab":"257","kap":"258","lay":"259","lin":"260","nil":"261","pam":"262","pas":"263","pro":"264","pul":"265","ta ":"266","ton":"267","uga":"268","ugm":"269","unt":"270"," co":"271"," gu":"272"," mi":"273"," pi":"274"," ti":"275","a o":"276","abu":"277","adl":"278","ado":"279","agh":"280","agk":"281","ao ":"282","art":"283","bal":"284","cit":"285","di ":"286","dto":"287","dun":"288","ent":"289","g e":"290","gon":"291","gug":"292","ia ":"293","iba":"294","ice":"295","in ":"296","inu":"297","it ":"298","kaa":"299"},"croatian":{"je ":"0"," na":"1"," pr":"2"," po":"3","na ":"4"," je":"5"," za":"6","ije":"7","ne ":"8"," i ":"9","ti ":"10","da ":"11"," ko":"12"," ne":"13","li ":"14"," bi":"15"," da":"16"," u ":"17","ma ":"18","mo ":"19","a n":"20","ih ":"21","za ":"22","a s":"23","ko ":"24","i s":"25","a p":"26","koj":"27","pro":"28","ju ":"29","se ":"30"," go":"31","ost":"32","to ":"33","va ":"34"," do":"35"," to":"36","e n":"37","i p":"38"," od":"39"," ra":"40","no ":"41","ako":"42","ka ":"43","ni ":"44"," ka":"45"," se":"46"," mo":"47"," st":"48","i n":"49","ima":"50","ja ":"51","pri":"52","vat":"53","sta":"54"," su":"55","ati":"56","e p":"57","ta ":"58","tsk":"59","e i":"60","nij":"61"," tr":"62","cij":"63","jen":"64","nos":"65","o s":"66"," iz":"67","om ":"68","tro":"69","ili":"70","iti":"71","pos":"72"," al":"73","a i":"74","a o":"75","e s":"76","ija":"77","ini":"78","pre":"79","str":"80","la ":"81","og ":"82","ovo":"83"," sv":"84","ekt":"85","nje":"86","o p":"87","odi":"88","rva":"89"," ni":"90","ali":"91","min":"92","rij":"93","a t":"94","a z":"95","ats":"96","iva":"97","o t":"98","od ":"99","oje":"100","ra ":"101"," hr":"102","a m":"103","a u":"104","hrv":"105","im ":"106","ke ":"107","o i":"108","ovi":"109","red":"110","riv":"111","te ":"112","bi ":"113","e o":"114","god":"115","i d":"116","lek":"117","umi":"118","zvo":"119","din":"120","e u":"121","ene":"122","jed":"123","ji ":"124","lje":"125","nog":"126","su ":"127"," a ":"128"," el":"129"," mi":"130"," o ":"131","a d":"132","alu":"133","ele":"134","i u":"135","izv":"136","ktr":"137","lum":"138","o d":"139","ori":"140","rad":"141","sto":"142","a k":"143","anj":"144","ava":"145","e k":"146","men":"147","nic":"148","o j":"149","oj ":"150","ove":"151","ski":"152","tvr":"153","una":"154","vor":"155"," di":"156"," no":"157"," s ":"158"," ta":"159"," tv":"160","i i":"161","i o":"162","kak":"163","ro\u0161":"164","sko":"165","vod":"166"," sa":"167"," \u0107e":"168","a b":"169","adi":"170","amo":"171","eni":"172","gov":"173","iju":"174","ku ":"175","o n":"176","ora":"177","rav":"178","ruj":"179","smo":"180","tav":"181","tru":"182","u p":"183","ve ":"184"," in":"185"," pl":"186","aci":"187","bit":"188","de ":"189","di\u0161":"190","ema":"191","i m":"192","ika":"193","i\u0161t":"194","jer":"195","ki ":"196","mog":"197","nik":"198","nov":"199","nu ":"200","oji":"201","oli":"202","pla":"203","pod":"204","st ":"205","sti":"206","tra":"207","tre":"208","vo ":"209"," sm":"210"," \u0161t":"211","dan":"212","e z":"213","i t":"214","io ":"215","ist":"216","kon":"217","lo ":"218","stv":"219","u s":"220","uje":"221","ust":"222","\u0107e ":"223","\u0107i ":"224","\u0161to":"225"," dr":"226"," im":"227"," li":"228","ada":"229","aft":"230","ani":"231","ao ":"232","ars":"233","ata":"234","e t":"235","emo":"236","i k":"237","ine":"238","jem":"239","kov":"240","lik":"241","lji":"242","mje":"243","naf":"244","ner":"245","nih":"246","nja":"247","ogo":"248","oiz":"249","ome":"250","pot":"251","ran":"252","ri ":"253","roi":"254","rtk":"255","ska":"256","ter":"257","u i":"258","u o":"259","vi ":"260","vrt":"261"," me":"262"," ug":"263","ak ":"264","ama":"265","dr\u017e":"266","e e":"267","e g":"268","e m":"269","em ":"270","eme":"271","enj":"272","ent":"273","er ":"274","ere":"275","erg":"276","eur":"277","go ":"278","i b":"279","i z":"280","jet":"281","ksi":"282","o u":"283","oda":"284","ona":"285","pra":"286","reb":"287","rem":"288","rop":"289","tri":"290","\u017eav":"291"," ci":"292"," eu":"293"," re":"294"," te":"295"," uv":"296"," ve":"297","aju":"298","an ":"299"},"czech":{" pr":"0"," po":"1","n\u00ed ":"2","pro":"3"," na":"4","na ":"5"," p\u0159":"6","ch ":"7"," je":"8"," ne":"9","\u017ee ":"10"," \u017ee":"11"," se":"12"," do":"13"," ro":"14"," st":"15"," v ":"16"," ve":"17","p\u0159e":"18","se ":"19","ho ":"20","sta":"21"," to":"22"," vy":"23"," za":"24","ou ":"25"," a ":"26","to ":"27"," by":"28","la ":"29","ce ":"30","e v":"31","ist":"32","le ":"33","pod":"34","\u00ed p":"35"," vl":"36","e n":"37","e s":"38","je ":"39","k\u00e9 ":"40","by ":"41","em ":"42","\u00fdch":"43"," od":"44","ova":"45","\u0159ed":"46","dy ":"47","en\u00ed":"48","kon":"49","li ":"50","n\u011b ":"51","str":"52"," z\u00e1":"53","ve ":"54"," ka":"55"," sv":"56","e p":"57","it ":"58","l\u00e1d":"59","oho":"60","rov":"61","roz":"62","ter":"63","vl\u00e1":"64","\u00edm ":"65"," ko":"66","hod":"67","nis":"68","p\u0159\u00ed":"69","sk\u00fd":"70"," mi":"71"," ob":"72"," so":"73","a p":"74","ali":"75","bud":"76","edn":"77","ick":"78","kte":"79","ku ":"80","o s":"81","al ":"82","ci ":"83","e t":"84","il ":"85","ny ":"86","n\u00e9 ":"87","odl":"88","ov\u00e1":"89","rot":"90","sou":"91","\u00e1n\u00ed":"92"," bu":"93"," mo":"94"," o ":"95","ast":"96","byl":"97","de ":"98","ek ":"99","ost":"100"," m\u00ed":"101"," ta":"102","es ":"103","jed":"104","ky ":"105","las":"106","m p":"107","nes":"108","n\u00edm":"109","ran":"110","rem":"111","ros":"112","\u00e9ho":"113"," de":"114"," kt":"115"," ni":"116"," si":"117"," v\u00fd":"118","at ":"119","j\u00ed ":"120","k\u00fd ":"121","mi ":"122","pre":"123","tak":"124","tan":"125","y v":"126","\u0159ek":"127"," ch":"128"," li":"129"," n\u00e1":"130"," pa":"131"," \u0159e":"132","da ":"133","dle":"134","dne":"135","i p":"136","i v":"137","ly ":"138","min":"139","o n":"140","o v":"141","pol":"142","tra":"143","val":"144","vn\u00ed":"145","\u00edch":"146","\u00fd p":"147","\u0159ej":"148"," ce":"149"," kd":"150"," le":"151","a s":"152","a z":"153","cen":"154","e k":"155","eds":"156","ekl":"157","emi":"158","kl ":"159","lat":"160","lo ":"161","mi\u00e9":"162","nov":"163","pra":"164","sku":"165","sk\u00e9":"166","sti":"167","tav":"168","ti ":"169","ty ":"170","v\u00e1n":"171","v\u00e9 ":"172","y n":"173","y s":"174","\u00ed s":"175","\u00ed v":"176","\u011b p":"177"," dn":"178"," n\u011b":"179"," sp":"180"," \u010ds":"181","a n":"182","a t":"183","ak ":"184","dn\u00ed":"185","doh":"186","e b":"187","e m":"188","ejn":"189","ena":"190","est":"191","ini":"192","m z":"193","nal":"194","nou":"195","n\u00e1 ":"196","ovi":"197","ov\u00e9":"198","ov\u00fd":"199","rsk":"200","st\u00e1":"201","t\u00ed ":"202","t\u0159e":"203","t\u016f ":"204","ude":"205","za ":"206","\u00e9 p":"207","\u00e9m ":"208","\u00ed d":"209"," ir":"210"," zv":"211","ale":"212","an\u011b":"213","ave":"214","ck\u00e9":"215","den":"216","e z":"217","ech":"218","en ":"219","er\u00fd":"220","hla":"221","i s":"222","i\u00e9r":"223","lov":"224","mu ":"225","neb":"226","nic":"227","o b":"228","o m":"229","pad":"230","pot":"231","rav":"232","rop":"233","r\u00fd ":"234","sed":"235","si ":"236","t p":"237","tic":"238","tu ":"239","t\u011b ":"240","u p":"241","u v":"242","v\u00e1 ":"243","v\u00fd\u0161":"244","zv\u00fd":"245","\u010dn\u00ed":"246","\u0159\u00ed ":"247","\u016fm ":"248"," bl":"249"," br":"250"," ho":"251"," ja":"252"," re":"253"," s ":"254"," z ":"255"," zd":"256","a v":"257","ani":"258","ato":"259","bla":"260","bri":"261","e\u010dn":"262","e\u0159e":"263","h v":"264","i n":"265","ie ":"266","ila":"267","irs":"268","ite":"269","kov":"270","nos":"271","o o":"272","o p":"273","oce":"274","ody":"275","ohl":"276","oli":"277","ovo":"278","pla":"279","po\u010d":"280","pr\u00e1":"281","ra ":"282","rit":"283","rod":"284","ry ":"285","sd ":"286","sko":"287","ssd":"288","tel":"289","u s":"290","vat":"291","ve\u0159":"292","vit":"293","vla":"294","y p":"295","\u00e1ln":"296","\u010dss":"297","\u0161en":"298"," al":"299"},"danish":{"er ":"0","en ":"1"," de":"2","et ":"3","der":"4","de ":"5","for":"6"," fo":"7"," i ":"8","at ":"9"," at":"10","re ":"11","det":"12"," ha":"13","nde":"14","ere":"15","ing":"16","den":"17"," me":"18"," og":"19","ger":"20","ter":"21"," er":"22"," si":"23","and":"24"," af":"25","or ":"26"," st":"27"," ti":"28"," en":"29","og ":"30","ar ":"31","il ":"32","r s":"33","ige":"34","til":"35","ke ":"36","r e":"37","af ":"38","kke":"39"," ma":"40"," p\u00e5":"41","om ":"42","p\u00e5 ":"43","ed ":"44","ge ":"45","end":"46","nge":"47","t s":"48","e s":"49","ler":"50"," sk":"51","els":"52","ern":"53","sig":"54","ne ":"55","lig":"56","r d":"57","ska":"58"," vi":"59","har":"60"," be":"61"," se":"62","an ":"63","ikk":"64","lle":"65","gen":"66","n f":"67","ste":"68","t a":"69","t d":"70","rin":"71"," ik":"72","es ":"73","ng ":"74","ver":"75","r b":"76","sen":"77","ede":"78","men":"79","r i":"80"," he":"81"," et":"82","ig ":"83","lan":"84","med":"85","nd ":"86","rne":"87"," da":"88"," in":"89","e t":"90","mme":"91","und":"92"," om":"93","e e":"94","e m":"95","her":"96","le ":"97","r f":"98","t f":"99","s\u00e5 ":"100","te ":"101"," so":"102","ele":"103","t e":"104"," ko":"105","est":"106","ske":"107"," bl":"108","e f":"109","ekt":"110","mar":"111","bru":"112","e a":"113","el ":"114","ers":"115","ret":"116","som":"117","tte":"118","ve ":"119"," la":"120"," ud":"121"," ve":"122","age":"123","e d":"124","e h":"125","lse":"126","man":"127","rug":"128","sel":"129","ser":"130"," fi":"131"," op":"132"," pr":"133","dt ":"134","e i":"135","n m":"136","r m":"137"," an":"138"," re":"139"," sa":"140","ion":"141","ner":"142","res":"143","t i":"144","get":"145","n s":"146","one":"147","orb":"148","t h":"149","vis":"150","\u00e5r ":"151"," fr":"152","bil":"153","e k":"154","ens":"155","ind":"156","omm":"157","t m":"158"," hv":"159"," je":"160","dan":"161","ent":"162","fte":"163","nin":"164"," mi":"165","e o":"166","e p":"167","n o":"168","nte":"169"," ku":"170","ell":"171","nas":"172","ore":"173","r h":"174","r k":"175","sta":"176","sto":"177","dag":"178","eri":"179","kun":"180","lde":"181","mer":"182","r a":"183","r v":"184","rek":"185","rer":"186","t o":"187","tor":"188","t\u00f8r":"189"," f\u00e5":"190"," m\u00e5":"191"," to":"192","boe":"193","che":"194","e v":"195","i d":"196","ive":"197","kab":"198","ns ":"199","oel":"200","se ":"201","t v":"202"," al":"203"," bo":"204"," un":"205","ans":"206","dre":"207","ire":"208","k\u00f8b":"209","ors":"210","ove":"211","ren":"212","t b":"213","\u00f8r ":"214"," ka":"215","ald":"216","bet":"217","gt ":"218","isk":"219","kal":"220","kom":"221","lev":"222","n d":"223","n i":"224","pri":"225","r p":"226","rbr":"227","s\u00f8g":"228","tel":"229"," s\u00e5":"230"," te":"231"," va":"232","al ":"233","dir":"234","eje":"235","fis":"236","gs\u00e5":"237","isc":"238","jer":"239","ker":"240","ogs":"241","sch":"242","st ":"243","t k":"244","uge":"245"," di":"246","ag ":"247","d a":"248","g i":"249","ill":"250","l a":"251","lsk":"252","n a":"253","on ":"254","sam":"255","str":"256","tet":"257","var":"258"," mo":"259","art":"260","ash":"261","att":"262","e b":"263","han":"264","hav":"265","kla":"266","kon":"267","n t":"268","ned":"269","r o":"270","ra ":"271","rre":"272","ves":"273","vil":"274"," el":"275"," kr":"276"," ov":"277","ann":"278","e u":"279","ess":"280","fra":"281","g a":"282","g d":"283","int":"284","ngs":"285","rde":"286","tra":"287"," \u00e5r":"288","akt":"289","asi":"290","em ":"291","gel":"292","gym":"293","hol":"294","kan":"295","mna":"296","n h":"297","nsk":"298","old":"299"},"dutch":{"en ":"0","de ":"1"," de":"2","et ":"3","an ":"4"," he":"5","er ":"6"," va":"7","n d":"8","van":"9","een":"10","het":"11"," ge":"12","oor":"13"," ee":"14","der":"15"," en":"16","ij ":"17","aar":"18","gen":"19","te ":"20","ver":"21"," in":"22"," me":"23","aan":"24","den":"25"," we":"26","at ":"27","in ":"28"," da":"29"," te":"30","eer":"31","nde":"32","ter":"33","ste":"34","n v":"35"," vo":"36"," zi":"37","ing":"38","n h":"39","voo":"40","is ":"41"," op":"42","tie":"43"," aa":"44","ede":"45","erd":"46","ers":"47"," be":"48","eme":"49","ten":"50","ken":"51","n e":"52"," ni":"53"," ve":"54","ent":"55","ijn":"56","jn ":"57","mee":"58","iet":"59","n w":"60","ng ":"61","nie":"62"," is":"63","cht":"64","dat":"65","ere":"66","ie ":"67","ijk":"68","n b":"69","rde":"70","ar ":"71","e b":"72","e a":"73","met":"74","t d":"75","el ":"76","ond":"77","t h":"78"," al":"79","e w":"80","op ":"81","ren":"82"," di":"83"," on":"84","al ":"85","and":"86","bij":"87","zij":"88"," bi":"89"," hi":"90"," wi":"91","or ":"92","r d":"93","t v":"94"," wa":"95","e h":"96","lle":"97","rt ":"98","ang":"99","hij":"100","men":"101","n a":"102","n z":"103","rs ":"104"," om":"105","e o":"106","e v":"107","end":"108","est":"109","n t":"110","par":"111"," pa":"112"," pr":"113"," ze":"114","e g":"115","e p":"116","n p":"117","ord":"118","oud":"119","raa":"120","sch":"121","t e":"122","ege":"123","ich":"124","ien":"125","aat":"126","ek ":"127","len":"128","n m":"129","nge":"130","nt ":"131","ove":"132","rd ":"133","wer":"134"," ma":"135"," mi":"136","daa":"137","e k":"138","lij":"139","mer":"140","n g":"141","n o":"142","om ":"143","sen":"144","t b":"145","wij":"146"," ho":"147","e m":"148","ele":"149","gem":"150","heb":"151","pen":"152","ude":"153"," bo":"154"," ja":"155","die":"156","e e":"157","eli":"158","erk":"159","le ":"160","pro":"161","rij":"162"," er":"163"," za":"164","e d":"165","ens":"166","ind":"167","ke ":"168","n k":"169","nd ":"170","nen":"171","nte":"172","r h":"173","s d":"174","s e":"175","t z":"176"," b ":"177"," co":"178"," ik":"179"," ko":"180"," ov":"181","eke":"182","hou":"183","ik ":"184","iti":"185","lan":"186","ns ":"187","t g":"188","t m":"189"," do":"190"," le":"191"," zo":"192","ams":"193","e z":"194","g v":"195","it ":"196","je ":"197","ls ":"198","maa":"199","n i":"200","nke":"201","rke":"202","uit":"203"," ha":"204"," ka":"205"," mo":"206"," re":"207"," st":"208"," to":"209","age":"210","als":"211","ark":"212","art":"213","ben":"214","e r":"215","e s":"216","ert":"217","eze":"218","ht ":"219","ijd":"220","lem":"221","r v":"222","rte":"223","t p":"224","zeg":"225","zic":"226","aak":"227","aal":"228","ag ":"229","ale":"230","bbe":"231","ch ":"232","e t":"233","ebb":"234","erz":"235","ft ":"236","ge ":"237","led":"238","mst":"239","n n":"240","oek":"241","r i":"242","t o":"243","t w":"244","tel":"245","tte":"246","uur":"247","we ":"248","zit":"249"," af":"250"," li":"251"," ui":"252","ak ":"253","all":"254","aut":"255","doo":"256","e i":"257","ene":"258","erg":"259","ete":"260","ges":"261","hee":"262","jaa":"263","jke":"264","kee":"265","kel":"266","kom":"267","lee":"268","moe":"269","n s":"270","ort":"271","rec":"272","s o":"273","s v":"274","teg":"275","tij":"276","ven":"277","waa":"278","wel":"279"," an":"280"," au":"281"," bu":"282"," gr":"283"," pl":"284"," ti":"285","'' ":"286","ade":"287","dag":"288","e l":"289","ech":"290","eel":"291","eft":"292","ger":"293","gt ":"294","ig ":"295","itt":"296","j d":"297","ppe":"298","rda":"299"},"english":{" th":"0","the":"1","he ":"2","ed ":"3"," to":"4"," in":"5","er ":"6","ing":"7","ng ":"8"," an":"9","nd ":"10"," of":"11","and":"12","to ":"13","of ":"14"," co":"15","at ":"16","on ":"17","in ":"18"," a ":"19","d t":"20"," he":"21","e t":"22","ion":"23","es ":"24"," re":"25","re ":"26","hat":"27"," sa":"28"," st":"29"," ha":"30","her":"31","tha":"32","tio":"33","or ":"34"," ''":"35","en ":"36"," wh":"37","e s":"38","ent":"39","n t":"40","s a":"41","as ":"42","for":"43","is ":"44","t t":"45"," be":"46","ld ":"47","e a":"48","rs ":"49"," wa":"50","ut ":"51","ve ":"52","ll ":"53","al ":"54"," ma":"55","e i":"56"," fo":"57","'s ":"58","an ":"59","est":"60"," hi":"61"," mo":"62"," se":"63"," pr":"64","s t":"65","ate":"66","st ":"67","ter":"68","ere":"69","ted":"70","nt ":"71","ver":"72","d a":"73"," wi":"74","se ":"75","e c":"76","ect":"77","ns ":"78"," on":"79","ly ":"80","tol":"81","ey ":"82","r t":"83"," ca":"84","ati":"85","ts ":"86","all":"87"," no":"88","his":"89","s o":"90","ers":"91","con":"92","e o":"93","ear":"94","f t":"95","e w":"96","was":"97","ons":"98","sta":"99","'' ":"100","sti":"101","n a":"102","sto":"103","t h":"104"," we":"105","id ":"106","th ":"107"," it":"108","ce ":"109"," di":"110","ave":"111","d h":"112","cou":"113","pro":"114","ad ":"115","oll":"116","ry ":"117","d s":"118","e m":"119"," so":"120","ill":"121","cti":"122","te ":"123","tor":"124","eve":"125","g t":"126","it ":"127"," ch":"128"," de":"129","hav":"130","oul":"131","ty ":"132","uld":"133","use":"134"," al":"135","are":"136","ch ":"137","me ":"138","out":"139","ove":"140","wit":"141","ys ":"142","chi":"143","t a":"144","ith":"145","oth":"146"," ab":"147"," te":"148"," wo":"149","s s":"150","res":"151","t w":"152","tin":"153","e b":"154","e h":"155","nce":"156","t s":"157","y t":"158","e p":"159","ele":"160","hin":"161","s i":"162","nte":"163"," li":"164","le ":"165"," do":"166","aid":"167","hey":"168","ne ":"169","s w":"170"," as":"171"," fr":"172"," tr":"173","end":"174","sai":"175"," el":"176"," ne":"177"," su":"178","'t ":"179","ay ":"180","hou":"181","ive":"182","lec":"183","n't":"184"," ye":"185","but":"186","d o":"187","o t":"188","y o":"189"," ho":"190"," me":"191","be ":"192","cal":"193","e e":"194","had":"195","ple":"196"," at":"197"," bu":"198"," la":"199","d b":"200","s h":"201","say":"202","t i":"203"," ar":"204","e f":"205","ght":"206","hil":"207","igh":"208","int":"209","not":"210","ren":"211"," is":"212"," pa":"213"," sh":"214","ays":"215","com":"216","n s":"217","r a":"218","rin":"219","y a":"220"," un":"221","n c":"222","om ":"223","thi":"224"," mi":"225","by ":"226","d i":"227","e d":"228","e n":"229","t o":"230"," by":"231","e r":"232","eri":"233","old":"234","ome":"235","whe":"236","yea":"237"," gr":"238","ar ":"239","ity":"240","mpl":"241","oun":"242","one":"243","ow ":"244","r s":"245","s f":"246","tat":"247"," ba":"248"," vo":"249","bou":"250","sam":"251","tim":"252","vot":"253","abo":"254","ant":"255","ds ":"256","ial":"257","ine":"258","man":"259","men":"260"," or":"261"," po":"262","amp":"263","can":"264","der":"265","e l":"266","les":"267","ny ":"268","ot ":"269","rec":"270","tes":"271","tho":"272","ica":"273","ild":"274","ir ":"275","nde":"276","ose":"277","ous":"278","pre":"279","ste":"280","era":"281","per":"282","r o":"283","red":"284","rie":"285"," bo":"286"," le":"287","ali":"288","ars":"289","ore":"290","ric":"291","s m":"292","str":"293"," fa":"294","ess":"295","ie ":"296","ist":"297","lat":"298","uri":"299"},"estonian":{"st ":"0"," ka":"1","on ":"2","ja ":"3"," va":"4"," on":"5"," ja":"6"," ko":"7","se ":"8","ast":"9","le ":"10","es ":"11","as ":"12","is ":"13","ud ":"14"," sa":"15","da ":"16","ga ":"17"," ta":"18","aja":"19","sta":"20"," ku":"21"," pe":"22","a k":"23","est":"24","ist":"25","ks ":"26","ta ":"27","al ":"28","ava":"29","id ":"30","saa":"31","mis":"32","te ":"33","val":"34"," et":"35","nud":"36"," te":"37","inn":"38"," se":"39"," tu":"40","a v":"41","alu":"42","e k":"43","ise":"44","lu ":"45","ma ":"46","mes":"47"," mi":"48","et ":"49","iku":"50","lin":"51","ad ":"52","el ":"53","ime":"54","ne ":"55","nna":"56"," ha":"57"," in":"58"," ke":"59"," v\u00f5":"60","a s":"61","a t":"62","ab ":"63","e s":"64","esi":"65"," la":"66"," li":"67","e v":"68","eks":"69","ema":"70","las":"71","les":"72","rju":"73","tle":"74","tsi":"75","tus":"76","upa":"77","use":"78","ust":"79","var":"80"," l\u00e4":"81","ali":"82","arj":"83","de ":"84","ete":"85","i t":"86","iga":"87","ilm":"88","kui":"89","li ":"90","tul":"91"," ei":"92"," me":"93"," s\u00f5":"94","aal":"95","ata":"96","dus":"97","ei ":"98","nik":"99","pea":"100","s k":"101","s o":"102","sal":"103","s\u00f5n":"104","ter":"105","ul ":"106","v\u00f5i":"107"," el":"108"," ne":"109","a j":"110","ate":"111","end":"112","i k":"113","ita":"114","kar":"115","kor":"116","l o":"117","lt ":"118","maa":"119","oli":"120","sti":"121","vad":"122","\u00e4\u00e4n":"123"," ju":"124"," j\u00e4":"125"," k\u00fc":"126"," ma":"127"," po":"128"," \u00fct":"129","aas":"130","aks":"131","at ":"132","ed ":"133","eri":"134","hoi":"135","i s":"136","ka ":"137","la ":"138","nni":"139","oid":"140","pai":"141","rit":"142","us ":"143","\u00fctl":"144"," aa":"145"," lo":"146"," to":"147"," ve":"148","a e":"149","ada":"150","aid":"151","ami":"152","and":"153","dla":"154","e j":"155","ega":"156","gi ":"157","gu ":"158","i p":"159","idl":"160","ik ":"161","ini":"162","jup":"163","kal":"164","kas":"165","kes":"166","koh":"167","s e":"168","s p":"169","sel":"170","sse":"171","ui ":"172"," pi":"173"," si":"174","aru":"175","eda":"176","eva":"177","fil":"178","i v":"179","ida":"180","ing":"181","l\u00e4\u00e4":"182","me ":"183","na ":"184","nda":"185","nim":"186","ole":"187","ots":"188","ris":"189","s l":"190","sia":"191","t p":"192"," en":"193"," mu":"194"," ol":"195"," p\u00f5":"196"," su":"197"," v\u00e4":"198"," \u00fch":"199","a l":"200","a p":"201","aga":"202","ale":"203","aps":"204","arv":"205","e a":"206","ela":"207","ika":"208","lle":"209","loo":"210","mal":"211","pet":"212","t k":"213","tee":"214","tis":"215","vat":"216","\u00e4ne":"217","\u00f5nn":"218"," es":"219"," fi":"220"," vi":"221","a i":"222","a o":"223","aab":"224","aap":"225","ala":"226","alt":"227","ama":"228","anu":"229","e p":"230","e t":"231","eal":"232","eli":"233","haa":"234","hin":"235","iva":"236","kon":"237","ku ":"238","lik":"239","lm ":"240","min":"241","n t":"242","odu":"243","oon":"244","psa":"245","ri ":"246","si ":"247","stu":"248","t e":"249","t s":"250","ti ":"251","ule":"252","uur":"253","vas":"254","vee":"255"," ki":"256"," ni":"257"," n\u00e4":"258"," ra":"259","aig":"260","aka":"261","all":"262","atu":"263","e e":"264","eis":"265","ers":"266","i e":"267","ii ":"268","iis":"269","il ":"270","ima":"271","its":"272","kka":"273","kuh":"274","l k":"275","lat":"276","maj":"277","ndu":"278","ni ":"279","nii":"280","oma":"281","ool":"282","rso":"283","ru ":"284","rva":"285","s t":"286","sek":"287","son":"288","ste":"289","t m":"290","taj":"291","tam":"292","ude":"293","uho":"294","vai":"295"," ag":"296"," os":"297"," pa":"298"," re":"299"},"farsi":{"\u0627\u0646 ":"0","\u0627\u06cc ":"1","\u0647 \u0627":"2"," \u0627\u064a":"3"," \u062f\u0631":"4","\u0628\u0647 ":"5"," \u0628\u0631":"6","\u062f\u0631 ":"7","\u0631\u0627\u0646":"8"," \u0628\u0647":"9","\u06cc \u0627":"10","\u0627\u0632 ":"11","\u064a\u0646 ":"12","\u0645\u06cc ":"13"," \u0627\u0632":"14","\u062f\u0647 ":"15","\u0633\u062a ":"16","\u0627\u0633\u062a":"17"," \u0627\u0633":"18"," \u06a9\u0647":"19","\u06a9\u0647 ":"20","\u0627\u064a\u0631":"21","\u0646\u062f ":"22","\u0627\u064a\u0646":"23"," \u0647\u0627":"24","\u064a\u0631\u0627":"25","\u0648\u062f ":"26"," \u0631\u0627":"27","\u0647\u0627\u06cc":"28"," \u062e\u0648":"29","\u062a\u0647 ":"30","\u0631\u0627 ":"31","\u0631\u0627\u06cc":"32","\u0631\u062f ":"33","\u0646 \u0628":"34","\u06a9\u0631\u062f":"35"," \u0648 ":"36"," \u06a9\u0631":"37","\u0627\u062a ":"38","\u0628\u0631\u0627":"39","\u062f \u06a9":"40","\u0645\u0627\u0646":"41","\u06cc \u062f":"42"," \u0627\u0646":"43","\u062e\u0648\u0627":"44","\u0634\u0648\u0631":"45"," \u0628\u0627":"46","\u0646 \u0627":"47"," \u0633\u0627":"48","\u062a\u0645\u06cc":"49","\u0631\u06cc ":"50","\u0627\u062a\u0645":"51","\u0627 \u0627":"52","\u0648\u0627\u0647":"53"," \u0627\u062a":"54"," \u0639\u0631":"55","\u0627\u0642 ":"56","\u0631 \u0645":"57","\u0631\u0627\u0642":"58","\u0639\u0631\u0627":"59","\u06cc \u0628":"60"," \u062a\u0627":"61"," \u062a\u0648":"62","\u0627\u0631 ":"63","\u0631 \u0627":"64","\u0646 \u0645":"65","\u0647 \u0628":"66","\u0648\u0631 ":"67","\u064a\u062f ":"68","\u06cc \u06a9":"69"," \u0627\u0645":"70"," \u062f\u0627":"71"," \u06a9\u0646":"72","\u0627\u0647\u062f":"73","\u0647\u062f ":"74"," \u0622\u0646":"75"," \u0645\u06cc":"76"," \u0646\u064a":"77"," \u06af\u0641":"78","\u062f \u0627":"79","\u06af\u0641\u062a":"80"," \u06a9\u0634":"81","\u0627 \u0628":"82","\u0646\u06cc ":"83","\u0647\u0627 ":"84","\u06a9\u0634\u0648":"85"," \u0631\u0648":"86","\u062a \u06a9":"87","\u0646\u064a\u0648":"88","\u0647 \u0645":"89","\u0648\u06cc ":"90","\u06cc \u062a":"91"," \u0634\u0648":"92","\u0627\u0644 ":"93","\u062f\u0627\u0631":"94","\u0645\u0647 ":"95","\u0646 \u06a9":"96","\u0647 \u062f":"97","\u064a\u0647 ":"98"," \u0645\u0627":"99","\u0627\u0645\u0647":"100","\u062f \u0628":"101","\u0632\u0627\u0631":"102","\u0648\u0631\u0627":"103","\u06af\u0632\u0627":"104"," \u067e\u064a":"105","\u0622\u0646 ":"106","\u0627\u0646\u062a":"107","\u062a \u0627":"108","\u0641\u062a ":"109","\u0647 \u0646":"110","\u06cc \u062e":"111","\u0627\u0645\u0627":"112","\u0628\u0627\u062a":"113","\u0645\u0627 ":"114","\u0645\u0644\u0644":"115","\u0646\u0627\u0645":"116","\u064a\u0631 ":"117","\u06cc \u0645":"118","\u06cc \u0647":"119"," \u0622\u0645":"120"," \u0627\u06cc":"121"," \u0645\u0646":"122","\u0627\u0646\u0633":"123","\u0627\u0646\u064a":"124","\u062a \u062f":"125","\u0631\u062f\u0647":"126","\u0633\u0627\u0632":"127","\u0646 \u062f":"128","\u0646\u0647 ":"129","\u0648\u0631\u062f":"130"," \u0627\u0648":"131"," \u0628\u064a":"132"," \u0633\u0648":"133"," \u0634\u062f":"134","\u0627\u062f\u0647":"135","\u0627\u0646\u062f":"136","\u0628\u0627 ":"137","\u062a \u0628":"138","\u0631 \u0628":"139","\u0632 \u0627":"140","\u0632\u0645\u0627":"141","\u0633\u062a\u0647":"142","\u0646 \u0631":"143","\u0647 \u0633":"144","\u0648\u0627\u0646":"145","\u0648\u0632 ":"146","\u06cc \u0631":"147","\u06cc \u0633":"148"," \u0647\u0633":"149","\u0627\u0628\u0627":"150","\u0627\u0645 ":"151","\u0627\u0648\u0631":"152","\u062a\u062e\u0627":"153","\u062e\u0627\u0628":"154","\u062e\u0648\u062f":"155","\u062f \u062f":"156","\u062f\u0646 ":"157","\u0631\u0647\u0627":"158","\u0631\u0648\u0632":"159","\u0631\u06af\u0632":"160","\u0646\u062a\u062e":"161","\u0647 \u0634":"162","\u0647 \u0647":"163","\u0647\u0633\u062a":"164","\u064a\u062a ":"165","\u064a\u0645 ":"166"," \u062f\u0648":"167"," \u062f\u064a":"168"," \u0645\u0648":"169"," \u0646\u0648":"170"," \u0647\u0645":"171"," \u06a9\u0627":"172","\u0627\u062f ":"173","\u0627\u0631\u06cc":"174","\u0627\u0646\u06cc":"175","\u0628\u0631 ":"176","\u0628\u0648\u062f":"177","\u062a \u0647":"178","\u062d \u0647":"179","\u062d\u0627\u0644":"180","\u0631\u0634 ":"181","\u0639\u0647 ":"182","\u0644\u06cc ":"183","\u0648\u0645 ":"184","\u0698\u0627\u0646":"185"," \u0633\u0644":"186","\u0622\u0645\u0631":"187","\u0627\u062d ":"188","\u062a\u0648\u0633":"189","\u062f\u0627\u062f":"190","\u062f\u0627\u0645":"191","\u0631 \u062f":"192","\u0631\u0647 ":"193","\u0631\u064a\u06a9":"194","\u0632\u06cc ":"195","\u0633\u0644\u0627":"196","\u0634\u0648\u062f":"197","\u0644\u0627\u062d":"198","\u0645\u0631\u064a":"199","\u0646\u0646\u062f":"200","\u0647 \u0639":"201","\u064a\u0645\u0627":"202","\u064a\u06a9\u0627":"203","\u067e\u064a\u0645":"204","\u06af\u0631 ":"205"," \u0622\u0698":"206"," \u0627\u0644":"207"," \u0628\u0648":"208"," \u0645\u0642":"209"," \u0645\u0644":"210"," \u0648\u06cc":"211","\u0622\u0698\u0627":"212","\u0627\u0632\u0645":"213","\u0627\u0632\u06cc":"214","\u0628\u0627\u0631":"215","\u0628\u0631\u0646":"216","\u0631 \u0622":"217","\u0632 \u0633":"218","\u0633\u0639\u0647":"219","\u0634\u062a\u0647":"220","\u0645\u0627\u062a":"221","\u0646 \u0622":"222","\u0646 \u067e":"223","\u0646\u0633 ":"224","\u0647 \u06af":"225","\u0648\u0633\u0639":"226","\u064a\u0627\u0646":"227","\u064a\u0648\u0645":"228","\u06a9\u0627 ":"229","\u06a9\u0627\u0645":"230","\u06a9\u0646\u062f":"231"," \u062e\u0627":"232"," \u0633\u0631":"233","\u0622\u0648\u0631":"234","\u0627\u0631\u062f":"235","\u0627\u0642\u062f":"236","\u0627\u064a\u0645":"237","\u0627\u064a\u06cc":"238","\u0628\u0631\u06af":"239","\u062a \u0639":"240","\u062a\u0646 ":"241","\u062e\u062a ":"242","\u062f \u0648":"243","\u0631 \u062e":"244","\u0631\u06a9 ":"245","\u0632\u064a\u0631":"246","\u0641\u062a\u0647":"247","\u0642\u062f\u0627":"248","\u0644 \u062a":"249","\u0645\u064a\u0646":"250","\u0646 \u06af":"251","\u0647 \u0622":"252","\u0647 \u062e":"253","\u0647 \u06a9":"254","\u0648\u0631\u06a9":"255","\u0648\u064a\u0648":"256","\u064a\u0648\u0631":"257","\u064a\u0648\u064a":"258","\u064a\u06cc ":"259","\u06a9 \u062a":"260","\u06cc \u0634":"261"," \u0627\u0642":"262"," \u062d\u0627":"263"," \u062d\u0642":"264"," \u062f\u0633":"265"," \u0634\u06a9":"266"," \u0639\u0645":"267"," \u064a\u06a9":"268","\u0627 \u062a":"269","\u0627 \u062f":"270","\u0627\u0631\u062c":"271","\u0628\u064a\u0646":"272","\u062a \u0645":"273","\u062a \u0648":"274","\u062a\u0627\u064a":"275","\u062f\u0633\u062a":"276","\u0631 \u062d":"277","\u0631 \u0633":"278","\u0631\u0646\u0627":"279","\u0632 \u0628":"280","\u0634\u06a9\u0627":"281","\u0644\u0644 ":"282","\u0645 \u06a9":"283","\u0645\u0632 ":"284","\u0646\u062f\u0627":"285","\u0646\u0648\u0627":"286","\u0648 \u0627":"287","\u0648\u0631\u0647":"288","\u0648\u0646 ":"289","\u0648\u0646\u062f":"290","\u064a\u0645\u0632":"291"," \u0622\u0648":"292"," \u0627\u0639":"293"," \u0641\u0631":"294"," \u0645\u062a":"295"," \u0646\u0647":"296"," \u0647\u0631":"297"," \u0648\u0632":"298"," \u06af\u0632":"299"},"finnish":{"en ":"0","in ":"1","an ":"2","on ":"3","ist":"4","ta ":"5","ja ":"6","n t":"7","sa ":"8","sta":"9","aan":"10","n p":"11"," on":"12","ssa":"13","tta":"14","t\u00e4 ":"15"," ka":"16"," pa":"17","si ":"18"," ja":"19","n k":"20","lla":"21","\u00e4n ":"22","een":"23","n v":"24","ksi":"25","ett":"26","nen":"27","taa":"28","tt\u00e4":"29"," va":"30","ill":"31","itt":"32"," jo":"33"," ko":"34","n s":"35"," tu":"36","ia ":"37"," su":"38","a p":"39","aa ":"40","la ":"41","lle":"42","n m":"43","le ":"44","tte":"45","na ":"46"," ta":"47"," ve":"48","at ":"49"," vi":"50","utt":"51"," sa":"52","ise":"53","sen":"54"," ku":"55"," n\u00e4":"56"," p\u00e4":"57","ste":"58"," ol":"59","a t":"60","ais":"61","maa":"62","ti ":"63","a o":"64","oit":"65","p\u00e4\u00e4":"66"," pi":"67","a v":"68","ala":"69","ine":"70","isi":"71","tel":"72","tti":"73"," si":"74","a k":"75","all":"76","iin":"77","kin":"78","st\u00e4":"79","uom":"80","vii":"81"," ma":"82"," se":"83","en\u00e4":"84"," mu":"85","a s":"86","est":"87","iss":"88","ll\u00e4":"89","lok":"90","l\u00e4 ":"91","n j":"92","n o":"93","toi":"94","ven":"95","ytt":"96"," li":"97","ain":"98","et ":"99","ina":"100","n a":"101","n n":"102","oll":"103","plo":"104","ten":"105","ust":"106","\u00e4ll":"107","\u00e4\u00e4n":"108"," to":"109","den":"110","men":"111","oki":"112","suo":"113","s\u00e4 ":"114","t\u00e4\u00e4":"115","uks":"116","vat":"117"," al":"118"," ke":"119"," te":"120","a e":"121","lii":"122","tai":"123","tei":"124","\u00e4is":"125","\u00e4\u00e4 ":"126"," pl":"127","ell":"128","i t":"129","ide":"130","ikk":"131","ki ":"132","nta":"133","ova":"134","yst":"135","yt ":"136","\u00e4 p":"137","\u00e4yt":"138"," ha":"139"," pe":"140"," t\u00e4":"141","a n":"142","aik":"143","i p":"144","i v":"145","nyt":"146","n\u00e4y":"147","pal":"148","tee":"149","un ":"150"," me":"151","a m":"152","ess":"153","kau":"154","pai":"155","stu":"156","ut ":"157","voi":"158"," et":"159","a h":"160","eis":"161","hte":"162","i o":"163","iik":"164","ita":"165","jou":"166","mis":"167","nin":"168","nut":"169","sia":"170","ss\u00e4":"171","van":"172"," ty":"173"," yh":"174","aks":"175","ime":"176","loi":"177","me ":"178","n e":"179","n h":"180","n l":"181","oin":"182","ome":"183","ott":"184","ouk":"185","sit":"186","sti":"187","tet":"188","tie":"189","ukk":"190","\u00e4 k":"191"," ra":"192"," ti":"193","aja":"194","asi":"195","ent":"196","iga":"197","iig":"198","ite":"199","jan":"200","kaa":"201","kse":"202","laa":"203","lan":"204","li ":"205","n\u00e4j":"206","ole":"207","tii":"208","usi":"209","\u00e4j\u00e4":"210"," ov":"211","a a":"212","ant":"213","ava":"214","ei ":"215","eri":"216","kan":"217","kku":"218","lai":"219","lis":"220","l\u00e4i":"221","mat":"222","ois":"223","pel":"224","sil":"225","sty":"226","taj":"227","tav":"228","ttu":"229","ty\u00f6":"230","y\u00f6s":"231","\u00e4 o":"232"," ai":"233"," pu":"234","a j":"235","a l":"236","aal":"237","arv":"238","ass":"239","ien":"240","imi":"241","imm":"242","it\u00e4":"243","ka ":"244","kes":"245","kue":"246","lee":"247","lin":"248","llo":"249","one":"250","ri ":"251","t o":"252","t p":"253","tu ":"254","val":"255","vuo":"256"," ei":"257"," he":"258"," hy":"259"," my":"260"," vo":"261","ali":"262","alo":"263","ano":"264","ast":"265","att":"266","auk":"267","eli":"268","ely":"269","hti":"270","ika":"271","ken":"272","kki":"273","lys":"274","min":"275","my\u00f6":"276","oht":"277","oma":"278","tus":"279","umi":"280","yks":"281","\u00e4t ":"282","\u00e4\u00e4l":"283","\u00f6s ":"284"," ar":"285"," eu":"286"," hu":"287"," na":"288","aat":"289","alk":"290","alu":"291","ans":"292","arj":"293","enn":"294","han":"295","kuu":"296","n y":"297","set":"298","sim":"299"},"french":{"es ":"0"," de":"1","de ":"2"," le":"3","ent":"4","le ":"5","nt ":"6","la ":"7","s d":"8"," la":"9","ion":"10","on ":"11","re ":"12"," pa":"13","e l":"14","e d":"15"," l'":"16","e p":"17"," co":"18"," pr":"19","tio":"20","ns ":"21"," en":"22","ne ":"23","que":"24","r l":"25","les":"26","ur ":"27","en ":"28","ati":"29","ue ":"30"," po":"31"," d'":"32","par":"33"," a ":"34","et ":"35","it ":"36"," qu":"37","men":"38","ons":"39","te ":"40"," et":"41","t d":"42"," re":"43","des":"44"," un":"45","ie ":"46","s l":"47"," su":"48","pou":"49"," au":"50"," \u00e0 ":"51","con":"52","er ":"53"," no":"54","ait":"55","e c":"56","se ":"57","t\u00e9 ":"58","du ":"59"," du":"60"," d\u00e9":"61","ce ":"62","e e":"63","is ":"64","n d":"65","s a":"66"," so":"67","e r":"68","e s":"69","our":"70","res":"71","ssi":"72","eur":"73"," se":"74","eme":"75","est":"76","us ":"77","sur":"78","ant":"79","iqu":"80","s p":"81","une":"82","uss":"83","l'a":"84","pro":"85","ter":"86","tre":"87","end":"88","rs ":"89"," ce":"90","e a":"91","t p":"92","un ":"93"," ma":"94"," ru":"95"," r\u00e9":"96","ous":"97","ris":"98","rus":"99","sse":"100","ans":"101","ar ":"102","com":"103","e m":"104","ire":"105","nce":"106","nte":"107","t l":"108"," av":"109"," mo":"110"," te":"111","il ":"112","me ":"113","ont":"114","ten":"115","a p":"116","dan":"117","pas":"118","qui":"119","s e":"120","s s":"121"," in":"122","ist":"123","lle":"124","nou":"125","pr\u00e9":"126","'un":"127","air":"128","d'a":"129","ir ":"130","n e":"131","rop":"132","ts ":"133"," da":"134","a s":"135","as ":"136","au ":"137","den":"138","mai":"139","mis":"140","ori":"141","out":"142","rme":"143","sio":"144","tte":"145","ux ":"146","a d":"147","ien":"148","n a":"149","ntr":"150","omm":"151","ort":"152","ouv":"153","s c":"154","son":"155","tes":"156","ver":"157","\u00e8re":"158"," il":"159"," m ":"160"," sa":"161"," ve":"162","a r":"163","ais":"164","ava":"165","di ":"166","n p":"167","sti":"168","ven":"169"," mi":"170","ain":"171","enc":"172","for":"173","it\u00e9":"174","lar":"175","oir":"176","rem":"177","ren":"178","rro":"179","r\u00e9s":"180","sie":"181","t a":"182","tur":"183"," pe":"184"," to":"185","d'u":"186","ell":"187","err":"188","ers":"189","ide":"190","ine":"191","iss":"192","mes":"193","por":"194","ran":"195","sit":"196","st ":"197","t r":"198","uti":"199","vai":"200","\u00e9 l":"201","\u00e9si":"202"," di":"203"," n'":"204"," \u00e9t":"205","a c":"206","ass":"207","e t":"208","in ":"209","nde":"210","pre":"211","rat":"212","s m":"213","ste":"214","tai":"215","tch":"216","ui ":"217","uro":"218","\u00e8s ":"219"," es":"220"," fo":"221"," tr":"222","'ad":"223","app":"224","aux":"225","e \u00e0":"226","ett":"227","iti":"228","lit":"229","nal":"230","op\u00e9":"231","r d":"232","ra ":"233","rai":"234","ror":"235","s r":"236","tat":"237","ut\u00e9":"238","\u00e0 l":"239"," af":"240","anc":"241","ara":"242","art":"243","bre":"244","ch\u00e9":"245","dre":"246","e f":"247","ens":"248","lem":"249","n r":"250","n t":"251","ndr":"252","nne":"253","onn":"254","pos":"255","s t":"256","tiq":"257","ure":"258"," tu":"259","ale":"260","and":"261","ave":"262","cla":"263","cou":"264","e n":"265","emb":"266","ins":"267","jou":"268","mme":"269","rie":"270","r\u00e8s":"271","sem":"272","str":"273","t i":"274","ues":"275","uni":"276","uve":"277","\u00e9 d":"278","\u00e9e ":"279"," ch":"280"," do":"281"," eu":"282"," fa":"283"," lo":"284"," ne":"285"," ra":"286","arl":"287","att":"288","ec ":"289","ica":"290","l a":"291","l'o":"292","l'\u00e9":"293","mmi":"294","nta":"295","orm":"296","ou ":"297","r u":"298","rle":"299"},"german":{"en ":"0","er ":"1"," de":"2","der":"3","ie ":"4"," di":"5","die":"6","sch":"7","ein":"8","che":"9","ich":"10","den":"11","in ":"12","te ":"13","ch ":"14"," ei":"15","ung":"16","n d":"17","nd ":"18"," be":"19","ver":"20","es ":"21"," zu":"22","eit":"23","gen":"24","und":"25"," un":"26"," au":"27"," in":"28","cht":"29","it ":"30","ten":"31"," da":"32","ent":"33"," ve":"34","and":"35"," ge":"36","ine":"37"," mi":"38","r d":"39","hen":"40","ng ":"41","nde":"42"," vo":"43","e d":"44","ber":"45","men":"46","ei ":"47","mit":"48"," st":"49","ter":"50","ren":"51","t d":"52"," er":"53","ere":"54","n s":"55","ste":"56"," se":"57","e s":"58","ht ":"59","des":"60","ist":"61","ne ":"62","auf":"63","e a":"64","isc":"65","on ":"66","rte":"67"," re":"68"," we":"69","ges":"70","uch":"71"," f\u00fc":"72"," so":"73","bei":"74","e e":"75","nen":"76","r s":"77","ach":"78","f\u00fcr":"79","ier":"80","par":"81","\u00fcr ":"82"," ha":"83","as ":"84","ert":"85"," an":"86"," pa":"87"," sa":"88"," sp":"89"," wi":"90","for":"91","tag":"92","zu ":"93","das":"94","rei":"95","he ":"96","hre":"97","nte":"98","sen":"99","vor":"100"," sc":"101","ech":"102","etz":"103","hei":"104","lan":"105","n a":"106","pd ":"107","st ":"108","sta":"109","ese":"110","lic":"111"," ab":"112"," si":"113","gte":"114"," wa":"115","iti":"116","kei":"117","n e":"118","nge":"119","sei":"120","tra":"121","zen":"122"," im":"123"," la":"124","art":"125","im ":"126","lle":"127","n w":"128","rde":"129","rec":"130","set":"131","str":"132","tei":"133","tte":"134"," ni":"135","e p":"136","ehe":"137","ers":"138","g d":"139","nic":"140","von":"141"," al":"142"," pr":"143","an ":"144","aus":"145","erf":"146","r e":"147","tze":"148","t\u00fcr":"149","uf ":"150","ag ":"151","als":"152","ar ":"153","chs":"154","end":"155","ge ":"156","ige":"157","ion":"158","ls ":"159","n m":"160","ngs":"161","nis":"162","nt ":"163","ord":"164","s s":"165","sse":"166"," t\u00fc":"167","ahl":"168","e b":"169","ede":"170","em ":"171","len":"172","n i":"173","orm":"174","pro":"175","rke":"176","run":"177","s d":"178","wah":"179","wer":"180","\u00fcrk":"181"," me":"182","age":"183","att":"184","ell":"185","est":"186","hat":"187","n b":"188","oll":"189","raf":"190","s a":"191","tsc":"192"," es":"193"," fo":"194"," gr":"195"," ja":"196","abe":"197","auc":"198","ben":"199","e n":"200","ege":"201","lie":"202","n u":"203","r v":"204","re ":"205","rit":"206","sag":"207"," am":"208","agt":"209","ahr":"210","bra":"211","de ":"212","erd":"213","her":"214","ite":"215","le ":"216","n p":"217","n v":"218","or ":"219","rbe":"220","rt ":"221","sic":"222","wie":"223","\u00fcbe":"224"," is":"225"," \u00fcb":"226","cha":"227","chi":"228","e f":"229","e m":"230","eri":"231","ied":"232","mme":"233","ner":"234","r a":"235","sti":"236","t a":"237","t s":"238","tis":"239"," ko":"240","arb":"241","ds ":"242","gan":"243","n z":"244","r f":"245","r w":"246","ran":"247","se ":"248","t i":"249","wei":"250","wir":"251"," br":"252"," np":"253","am ":"254","bes":"255","d d":"256","deu":"257","e g":"258","e k":"259","efo":"260","et ":"261","eut":"262","fen":"263","hse":"264","lte":"265","n r":"266","npd":"267","r b":"268","rhe":"269","t w":"270","tz ":"271"," fr":"272"," ih":"273"," ke":"274"," ma":"275","ame":"276","ang":"277","d s":"278","eil":"279","el ":"280","era":"281","erh":"282","h d":"283","i d":"284","kan":"285","n f":"286","n l":"287","nts":"288","och":"289","rag":"290","rd ":"291","spd":"292","spr":"293","tio":"294"," ar":"295"," en":"296"," ka":"297","ark":"298","ass":"299"},"hausa":{" da":"0","da ":"1","in ":"2","an ":"3","ya ":"4"," wa":"5"," ya":"6","na ":"7","ar ":"8","a d":"9"," ma":"10","wa ":"11","a a":"12","a k":"13","a s":"14"," ta":"15","wan":"16"," a ":"17"," ba":"18"," ka":"19","ta ":"20","a y":"21","n d":"22"," ha":"23"," na":"24"," su":"25"," sa":"26","kin":"27","sa ":"28","ata":"29"," ko":"30","a t":"31","su ":"32"," ga":"33","ai ":"34"," sh":"35","a m":"36","uwa":"37","iya":"38","ma ":"39","a w":"40","asa":"41","yan":"42","ka ":"43","ani":"44","shi":"45","a b":"46","a h":"47","a c":"48","ama":"49","ba ":"50","nan":"51","n a":"52"," mu":"53","ana":"54"," yi":"55","a g":"56"," za":"57","i d":"58"," ku":"59","aka":"60","yi ":"61","n k":"62","ann":"63","ke ":"64","tar":"65"," ci":"66","iki":"67","n s":"68","ko ":"69"," ra":"70","ki ":"71","ne ":"72","a z":"73","mat":"74","hak":"75","nin":"76","e d":"77","nna":"78","uma":"79","nda":"80","a n":"81","ada":"82","cik":"83","ni ":"84","rin":"85","una":"86","ara":"87","kum":"88","akk":"89"," ce":"90"," du":"91","man":"92","n y":"93","nci":"94","sar":"95","aki":"96","awa":"97","ci ":"98","kan":"99","kar":"100","ari":"101","n m":"102","and":"103","hi ":"104","n t":"105","ga ":"106","owa":"107","ash":"108","kam":"109","dan":"110","ewa":"111","nsa":"112","ali":"113","ami":"114"," ab":"115"," do":"116","anc":"117","n r":"118","aya":"119","i n":"120","sun":"121","uka":"122"," al":"123"," ne":"124","a'a":"125","cew":"126","cin":"127","mas":"128","tak":"129","un ":"130","aba":"131","kow":"132","a r":"133","ra ":"134"," ja":"135"," \u0199a":"136","en ":"137","r d":"138","sam":"139","tsa":"140"," ru":"141","ce ":"142","i a":"143","abi":"144","ida":"145","mut":"146","n g":"147","n j":"148","san":"149","a \u0199":"150","har":"151","on ":"152","i m":"153","suk":"154"," ak":"155"," ji":"156","yar":"157","'ya":"158","kwa":"159","min":"160"," 'y":"161","ane":"162","ban":"163","ins":"164","ruw":"165","i k":"166","n h":"167"," ad":"168","ake":"169","n w":"170","sha":"171","utu":"172"," \u01b4a":"173","bay":"174","tan":"175","\u01b4an":"176","bin":"177","duk":"178","e m":"179","n n":"180","oka":"181","yin":"182","\u0257an":"183"," fa":"184","a i":"185","kki":"186","re ":"187","za ":"188","ala":"189","asu":"190","han":"191","i y":"192","mar":"193","ran":"194","\u0199as":"195","add":"196","ars":"197","gab":"198","ira":"199","mma":"200","u d":"201"," ts":"202","abb":"203","abu":"204","aga":"205","gar":"206","n b":"207"," \u0257a":"208","aci":"209","aik":"210","am ":"211","dun":"212","e s":"213","i b":"214","i w":"215","kas":"216","kok":"217","wam":"218"," am":"219","amf":"220","bba":"221","din":"222","fan":"223","gwa":"224","i s":"225","wat":"226","ano":"227","are":"228","dai":"229","iri":"230","ma'":"231"," la":"232","all":"233","dam":"234","ika":"235","mi ":"236","she":"237","tum":"238","uni":"239"," an":"240"," ai":"241"," ke":"242"," ki":"243","dag":"244","mai":"245","mfa":"246","no ":"247","nsu":"248","o d":"249","sak":"250","um ":"251"," bi":"252"," gw":"253"," kw":"254","jam":"255","yya":"256","a j":"257","fa ":"258","uta":"259"," hu":"260","'a ":"261","ans":"262","a\u0257a":"263","dda":"264","hin":"265","niy":"266","r s":"267","bat":"268","dar":"269","gan":"270","i t":"271","nta":"272","oki":"273","omi":"274","sal":"275","a l":"276","kac":"277","lla":"278","wad":"279","war":"280","amm":"281","dom":"282","r m":"283","ras":"284","sai":"285"," lo":"286","ats":"287","hal":"288","kat":"289","li ":"290","lok":"291","n c":"292","nar":"293","tin":"294","afa":"295","bub":"296","i g":"297","isa":"298","mak":"299"},"hawaiian":{" ka":"0","na ":"1"," o ":"2","ka ":"3"," ma":"4"," a ":"5"," la":"6","a i":"7","a m":"8"," i ":"9","la ":"10","ana":"11","ai ":"12","ia ":"13","a o":"14","a k":"15","a h":"16","o k":"17"," ke":"18","a a":"19","i k":"20"," ho":"21"," ia":"22","ua ":"23"," na":"24"," me":"25","e k":"26","e a":"27","au ":"28","ke ":"29","ma ":"30","mai":"31","aku":"32"," ak":"33","ahi":"34"," ha":"35"," ko":"36"," e ":"37","a l":"38"," no":"39","me ":"40","ku ":"41","aka":"42","kan":"43","no ":"44","i a":"45","ho ":"46","ou ":"47"," ai":"48","i o":"49","a p":"50","o l":"51","o a":"52","ama":"53","a n":"54"," an":"55","i m":"56","han":"57","i i":"58","iho":"59","kou":"60","ne ":"61"," ih":"62","o i":"63","iki":"64","ona":"65","hoo":"66","le ":"67","e h":"68"," he":"69","ina":"70"," wa":"71","ea ":"72","ako":"73","u i":"74","kah":"75","oe ":"76","i l":"77","u a":"78"," pa":"79","hoi":"80","e i":"81","era":"82","ko ":"83","u m":"84","kua":"85","mak":"86","oi ":"87","kai":"88","i n":"89","a e":"90","hin":"91","ane":"92"," ol":"93","i h":"94","mea":"95","wah":"96","lak":"97","e m":"98","o n":"99","u l":"100","ika":"101","ki ":"102","a w":"103","mal":"104","hi ":"105","e n":"106","u o":"107","hik":"108"," ku":"109","e l":"110","ele":"111","ra ":"112","ber":"113","ine":"114","abe":"115","ain":"116","ala":"117","lo ":"118"," po":"119","kon":"120"," ab":"121","ole":"122","he ":"123","pau":"124","mah":"125","va ":"126","ela":"127","kau":"128","nak":"129"," oe":"130","kei":"131","oia":"132"," ie":"133","ram":"134"," oi":"135","oa ":"136","eho":"137","hov":"138","ieh":"139","ova":"140"," ua":"141","una":"142","ara":"143","o s":"144","awa":"145","o o":"146","nau":"147","u n":"148","wa ":"149","wai":"150","hel":"151"," ae":"152"," al":"153","ae ":"154","ta ":"155","aik":"156"," hi":"157","ale":"158","ila":"159","lel":"160","ali":"161","eik":"162","olo":"163","onu":"164"," lo":"165","aua":"166","e o":"167","ola":"168","hon":"169","mam":"170","nan":"171"," au":"172","aha":"173","lau":"174","nua":"175","oho":"176","oma":"177"," ao":"178","ii ":"179","alu":"180","ima":"181","mau":"182","ike":"183","apa":"184","elo":"185","lii":"186","poe":"187","aia":"188","noa":"189"," in":"190","o m":"191","oka":"192","'u ":"193","aho":"194","ei ":"195","eka":"196","ha ":"197","lu ":"198","nei":"199","hol":"200","ino":"201","o e":"202","ema":"203","iwa":"204","olu":"205","ada":"206","naa":"207","pa ":"208","u k":"209","ewa":"210","hua":"211","lam":"212","lua":"213","o h":"214","ook":"215","u h":"216"," li":"217","ahu":"218","amu":"219","ui ":"220"," il":"221"," mo":"222"," se":"223","eia":"224","law":"225"," hu":"226"," ik":"227","ail":"228","e p":"229","li ":"230","lun":"231","uli":"232","io ":"233","kik":"234","noh":"235","u e":"236"," sa":"237","aaw":"238","awe":"239","ena":"240","hal":"241","kol":"242","lan":"243"," le":"244"," ne":"245","a'u":"246","ilo":"247","kap":"248","oko":"249","sa ":"250"," pe":"251","hop":"252","loa":"253","ope":"254","pe ":"255"," ad":"256"," pu":"257","ahe":"258","aol":"259","ia'":"260","lai":"261","loh":"262","na'":"263","oom":"264","aau":"265","eri":"266","kul":"267","we ":"268","ake":"269","kek":"270","laa":"271","ri ":"272","iku":"273","kak":"274","lim":"275","nah":"276","ner":"277","nui":"278","ono":"279","a u":"280","dam":"281","kum":"282","lok":"283","mua":"284","uma":"285","wal":"286","wi ":"287","'i ":"288","a'i":"289","aan":"290","alo":"291","eta":"292","mu ":"293","ohe":"294","u p":"295","ula":"296","uwa":"297"," nu":"298","amo":"299"},"hindi":{"\u0947\u0902 ":"0"," \u0939\u0948":"1","\u092e\u0947\u0902":"2"," \u092e\u0947":"3","\u0928\u0947 ":"4","\u0915\u0940 ":"5","\u0915\u0947 ":"6","\u0939\u0948 ":"7"," \u0915\u0947":"8"," \u0915\u0940":"9"," \u0915\u094b":"10","\u094b\u0902 ":"11","\u0915\u094b ":"12","\u093e \u0939":"13"," \u0915\u093e":"14","\u0938\u0947 ":"15","\u093e \u0915":"16","\u0947 \u0915":"17","\u0902 \u0915":"18","\u092f\u093e ":"19"," \u0915\u093f":"20"," \u0938\u0947":"21","\u0915\u093e ":"22","\u0940 \u0915":"23"," \u0928\u0947":"24"," \u0914\u0930":"25","\u0914\u0930 ":"26","\u0928\u093e ":"27","\u0915\u093f ":"28","\u092d\u0940 ":"29","\u0940 \u0938":"30"," \u091c\u093e":"31"," \u092a\u0930":"32","\u093e\u0930 ":"33"," \u0915\u0930":"34","\u0940 \u0939":"35"," \u0939\u094b":"36","\u0939\u0940 ":"37","\u093f\u092f\u093e":"38"," \u0907\u0938":"39"," \u0930\u0939":"40","\u0930 \u0915":"41","\u0941\u0928\u093e":"42","\u0924\u093e ":"43","\u093e\u0928 ":"44","\u0947 \u0938":"45"," \u092d\u0940":"46"," \u0930\u093e":"47","\u0947 \u0939":"48"," \u091a\u0941":"49"," \u092a\u093e":"50","\u092a\u0930 ":"51","\u091a\u0941\u0928":"52","\u0928\u093e\u0935":"53"," \u0915\u0939":"54","\u092a\u094d\u0930":"55"," \u092d\u093e":"56","\u0930\u093e\u091c":"57","\u0939\u0948\u0902":"58","\u093e \u0938":"59","\u0948 \u0915":"60","\u0948\u0902 ":"61","\u0928\u0940 ":"62","\u0932 \u0915":"63","\u0940\u0902 ":"64","\u093c\u0940 ":"65","\u0925\u093e ":"66","\u0930\u0940 ":"67","\u093e\u0935 ":"68","\u0947 \u092c":"69"," \u092a\u094d":"70","\u0915\u094d\u0937":"71","\u092a\u093e ":"72","\u0932\u0947 ":"73"," \u0926\u0947":"74","\u0932\u093e ":"75","\u0939\u093e ":"76","\u093e\u091c\u092a":"77"," \u0925\u093e":"78"," \u0928\u0939":"79","\u0907\u0938 ":"80","\u0915\u0930 ":"81","\u091c\u092a\u093e":"82","\u0928\u0939\u0940":"83","\u092d\u093e\u091c":"84","\u092f\u094b\u0902":"85","\u0930 \u0938":"86","\u0939\u0940\u0902":"87"," \u0905\u092e":"88"," \u092c\u093e":"89"," \u092e\u093e":"90"," \u0935\u093f":"91","\u0930\u0940\u0915":"92","\u093f\u090f ":"93","\u0947 \u092a":"94","\u094d\u092f\u093e":"95"," \u0939\u0940":"96","\u0902 \u092e":"97","\u0915\u093e\u0930":"98","\u093e \u091c":"99","\u0947 \u0932":"100"," \u0924\u093e":"101"," \u0926\u093f":"102"," \u0938\u093e":"103"," \u0939\u092e":"104","\u093e \u0928":"105","\u093e \u092e":"106","\u093e\u0915\u093c":"107","\u094d\u0924\u093e":"108"," \u090f\u0915":"109"," \u0938\u0902":"110"," \u0938\u094d":"111","\u0905\u092e\u0930":"112","\u0915\u093c\u0940":"113","\u0924\u093e\u091c":"114","\u092e\u0930\u0940":"115","\u0938\u094d\u0925":"116","\u093e \u0925":"117","\u093e\u0930\u094d":"118"," \u0939\u0941":"119","\u0907\u0930\u093e":"120","\u090f\u0915 ":"121","\u0928 \u0915":"122","\u0930 \u092e":"123","\u0930\u093e\u0915":"124","\u0940 \u091c":"125","\u0940 \u0928":"126"," \u0907\u0930":"127"," \u0909\u0928":"128"," \u092a\u0939":"129","\u0915\u0939\u093e":"130","\u0924\u0947 ":"131","\u0947 \u0905":"132"," \u0924\u094b":"133"," \u0938\u0941":"134","\u0924\u093f ":"135","\u0924\u0940 ":"136","\u0924\u094b ":"137","\u092e\u093f\u0932":"138","\u093f\u0915 ":"139","\u093f\u092f\u094b":"140","\u094d\u0930\u0947":"141"," \u0905\u092a":"142"," \u092b\u093c":"143"," \u0932\u093f":"144"," \u0932\u094b":"145"," \u0938\u092e":"146","\u092e \u0915":"147","\u0930\u094d\u091f":"148","\u0939\u094b ":"149","\u093e \u091a":"150","\u093e\u0908 ":"151","\u093e\u0928\u0947":"152","\u093f\u0928 ":"153","\u094d\u092f ":"154"," \u0909\u0938":"155"," \u0915\u093c":"156"," \u0938\u0915":"157"," \u0938\u0948":"158","\u0902 \u092a":"159","\u0902 \u0939":"160","\u0917\u0940 ":"161","\u0924 \u0915":"162","\u092e\u093e\u0928":"163","\u0930 \u0928":"164","\u0937\u094d\u091f":"165","\u0938 \u0915":"166","\u0938\u094d\u0924":"167","\u093e\u0901 ":"168","\u0940 \u092c":"169","\u0940 \u092e":"170","\u094d\u0930\u0940":"171"," \u0926\u094b":"172"," \u092e\u093f":"173"," \u092e\u0941":"174"," \u0932\u0947":"175"," \u0936\u093e":"176","\u0902 \u0938":"177","\u091c\u093c\u093e":"178","\u0924\u094d\u0930":"179","\u0925\u0940 ":"180","\u0932\u093f\u090f":"181","\u0938\u0940 ":"182","\u093c\u093e ":"183","\u093c\u093e\u0930":"184","\u093e\u0902\u0917":"185","\u0947 \u0926":"186","\u0947 \u092e":"187","\u094d\u0935 ":"188"," \u0928\u093e":"189"," \u092c\u0928":"190","\u0902\u0917\u094d":"191","\u0915\u093e\u0902":"192","\u0917\u093e ":"193","\u0917\u094d\u0930":"194","\u091c\u093e ":"195","\u091c\u094d\u092f":"196","\u0926\u0940 ":"197","\u0928 \u092e":"198","\u092a\u093e\u0930":"199","\u092d\u093e ":"200","\u0930\u0939\u0940":"201","\u0930\u0947 ":"202","\u0930\u0947\u0938":"203","\u0932\u0940 ":"204","\u0938\u092d\u093e":"205","\u093e \u0930":"206","\u093e\u0932 ":"207","\u0940 \u0905":"208","\u0940\u0915\u0940":"209","\u0947 \u0924":"210","\u0947\u0936 ":"211"," \u0905\u0902":"212"," \u0924\u0915":"213"," \u092f\u093e":"214","\u0908 \u0939":"215","\u0915\u0930\u0928":"216","\u0924\u0915 ":"217","\u0926\u0947\u0936":"218","\u0935\u0930\u094d":"219","\u093e\u092f\u093e":"220","\u0940 \u092d":"221","\u0947\u0938 ":"222","\u094d\u0937 ":"223"," \u0917\u092f":"224"," \u091c\u093f":"225"," \u0925\u0940":"226"," \u092c\u0921":"227"," \u092f\u0939":"228"," \u0935\u093e":"229","\u0902\u0924\u0930":"230","\u0905\u0902\u0924":"231","\u0915\u093c ":"232","\u0917\u092f\u093e":"233","\u091f\u0940 ":"234","\u0928\u093f\u0915":"235","\u0928\u094d\u0939":"236","\u092a\u0939\u0932":"237","\u092c\u0921\u093c":"238","\u092e\u093e\u0930":"239","\u0930 \u092a":"240","\u0930\u0928\u0947":"241","\u093e\u091c\u093c":"242","\u093f \u0907":"243","\u0940 \u0930":"244","\u0947 \u091c":"245","\u0947 \u0935":"246","\u094d\u091f ":"247","\u094d\u091f\u0940":"248"," \u0905\u092c":"249"," \u0932\u0917":"250"," \u0935\u0930":"251"," \u0938\u0940":"252","\u0902 \u092d":"253","\u0909\u0928\u094d":"254","\u0915 \u0915":"255","\u0915\u093f\u092f":"256","\u0926\u0947\u0916":"257","\u092a\u0942\u0930":"258","\u092b\u093c\u094d":"259","\u092f\u0939 ":"260","\u092f\u093e\u0928":"261","\u0930\u093f\u0915":"262","\u0930\u093f\u092f":"263","\u0930\u094d\u0921":"264","\u0932\u0947\u0915":"265","\u0938\u0915\u0924":"266","\u0939\u094b\u0902":"267","\u0939\u094b\u0917":"268","\u093e \u0905":"269","\u093e \u0926":"270","\u093e \u092a":"271","\u093e\u0926 ":"272","\u093e\u0930\u093e":"273","\u093f\u0924 ":"274","\u0940 \u0924":"275","\u0940 \u092a":"276","\u094b \u0915":"277","\u094b \u0926":"278"," \u0924\u0947":"279"," \u0928\u093f":"280"," \u0938\u0930":"281"," \u0939\u093e":"282","\u0902 \u0926":"283","\u0905\u092a\u0928":"284","\u091c\u093e\u0928":"285","\u0924 \u092e":"286","\u0925\u093f\u0924":"287","\u092a\u0928\u0940":"288","\u092e\u0939\u0932":"289","\u0930 \u0939":"290","\u0932\u094b\u0917":"291","\u0935 \u0915":"292","\u0939\u0928\u093e":"293","\u0939\u0932 ":"294","\u0939\u093e\u0901":"295","\u093e\u091c\u094d":"296","\u093e\u0928\u093e":"297","\u093f\u0915\u094d":"298","\u093f\u0938\u094d":"299"},"hungarian":{" a ":"0"," az":"1"," sz":"2","az ":"3"," me":"4","en ":"5"," el":"6"," ho":"7","ek ":"8","gy ":"9","tt ":"10","ett":"11","sze":"12"," fe":"13","\u00e9s ":"14"," ki":"15","tet":"16"," be":"17","et ":"18","ter":"19"," k\u00f6":"20"," \u00e9s":"21","hog":"22","meg":"23","ogy":"24","szt":"25","te ":"26","t a":"27","zet":"28","a m":"29","nek":"30","nt ":"31","s\u00e9g":"32","sz\u00e1":"33","ak ":"34"," va":"35","an ":"36","eze":"37","ra ":"38","ta ":"39"," mi":"40","int":"41","k\u00f6z":"42"," is":"43","esz":"44","fel":"45","min":"46","nak":"47","ors":"48","zer":"49"," te":"50","a a":"51","a k":"52","is ":"53"," cs":"54","ele":"55","er ":"56","men":"57","si ":"58","tek":"59","ti ":"60"," ne":"61","csa":"62","ent":"63","z e":"64","a t":"65","ala":"66","ere":"67","es ":"68","lom":"69","lte":"70","mon":"71","ond":"72","rsz":"73","sza":"74","tte":"75","z\u00e1g":"76","\u00e1ny":"77"," fo":"78"," ma":"79","ai ":"80","ben":"81","el ":"82","ene":"83","ik ":"84","jel":"85","t\u00e1s":"86","\u00e1ll":"87"," ha":"88"," le":"89"," \u00e1l":"90","agy":"91","al\u00e1":"92","isz":"93","y a":"94","zte":"95","\u00e1s ":"96"," al":"97","e a":"98","egy":"99","ely":"100","for":"101","lat":"102","lt ":"103","n a":"104","oga":"105","on ":"106","re ":"107","st ":"108","s\u00e1g":"109","t m":"110","\u00e1n ":"111","\u00e9t ":"112","\u00fclt":"113"," je":"114","gi ":"115","k a":"116","k\u00fcl":"117","lam":"118","len":"119","l\u00e1s":"120","m\u00e1s":"121","s k":"122","vez":"123","\u00e1so":"124","\u00f6z\u00f6":"125"," ta":"126","a s":"127","a v":"128","asz":"129","at\u00e1":"130","et\u0151":"131","kez":"132","let":"133","mag":"134","nem":"135","sz\u00e9":"136","z m":"137","\u00e1t ":"138","\u00e9te":"139","\u00f6lt":"140"," de":"141"," gy":"142"," k\u00e9":"143"," mo":"144"," v\u00e1":"145"," \u00e9r":"146","a b":"147","a f":"148","ami":"149","at ":"150","ato":"151","att":"152","bef":"153","dta":"154","gya":"155","hat":"156","i s":"157","las":"158","ndt":"159","rt ":"160","szo":"161","t k":"162","t\u00e1r":"163","t\u00e9s":"164","van":"165","\u00e1s\u00e1":"166","\u00f3l ":"167"," b\u00e9":"168"," eg":"169"," or":"170"," p\u00e1":"171"," p\u00e9":"172"," ve":"173","ban":"174","eke":"175","ek\u00fc":"176","el\u0151":"177","erv":"178","ete":"179","fog":"180","i a":"181","kis":"182","l\u00e1d":"183","nte":"184","nye":"185","nyi":"186","ok ":"187","om\u00e1":"188","os ":"189","r\u00e1n":"190","r\u00e1s":"191","sal":"192","t e":"193","v\u00e1l":"194","yar":"195","\u00e1go":"196","\u00e1la":"197","\u00e9ge":"198","\u00e9ny":"199","\u00f6tt":"200"," t\u00e1":"201","ad\u00f3":"202","elh":"203","fej":"204","het":"205","hoz":"206","ill":"207","j\u00e1r":"208","k\u00e9s":"209","llo":"210","mi ":"211","ny ":"212","ont":"213","ren":"214","res":"215","rin":"216","s a":"217","s e":"218","ssz":"219","zt ":"220"," ez":"221"," ka":"222"," ke":"223"," ko":"224"," re":"225","a h":"226","a n":"227","den":"228","d\u00f3 ":"229","efo":"230","gad":"231","gat":"232","gye":"233","hel":"234","k e":"235","ket":"236","les":"237","m\u00e1n":"238","nde":"239","nis":"240","ozz":"241","t b":"242","t i":"243","t \u00e9":"244","tat":"245","tos":"246","val":"247","z o":"248","zak":"249","\u00e1d ":"250","\u00e1ly":"251","\u00e1ra":"252","\u00e9si":"253","\u00e9sz":"254"," ak":"255"," am":"256"," es":"257"," h\u00e1":"258"," ny":"259"," t\u00f6":"260","aka":"261","art":"262","at\u00f3":"263","azt":"264","bbe":"265","ber":"266","ci\u00f3":"267","cso":"268","em ":"269","eti":"270","et\u00e9":"271","gal":"272","i t":"273","ini":"274","ist":"275","ja ":"276","ker":"277","ki ":"278","kor":"279","koz":"280","l \u00e9":"281","lj\u00e1":"282","lye":"283","n v":"284","ni ":"285","p\u00e1l":"286","ror":"287","r\u00f3l":"288","r\u00fcl":"289","s c":"290","s p":"291","s s":"292","s v":"293","sok":"294","t j":"295","t t":"296","tar":"297","tel":"298","vat":"299"},"icelandic":{"a\u00f0 ":"0","um ":"1"," a\u00f0":"2","ir ":"3","i\u00f0 ":"4","ur ":"5"," ve":"6"," \u00ed ":"7","na ":"8"," \u00e1 ":"9"," se":"10"," er":"11"," og":"12","ar ":"13","og ":"14","ver":"15"," mi":"16","inn":"17","nn ":"18"," fy":"19","er ":"20","fyr":"21"," ek":"22"," en":"23"," ha":"24"," he":"25","ekk":"26"," st":"27","ki ":"28","st ":"29","\u00f0i ":"30"," ba":"31"," me":"32"," vi":"33","ig ":"34","rir":"35","yri":"36"," um":"37","g f":"38","leg":"39","lei":"40","ns ":"41","\u00f0 s":"42"," ei":"43"," \u00fea":"44","in ":"45","kki":"46","r h":"47","r s":"48","egi":"49","ein":"50","ga ":"51","ing":"52","ra ":"53","sta":"54"," va":"55"," \u00fee":"56","ann":"57","en ":"58","mil":"59","sem":"60","tj\u00f3":"61","ar\u00f0":"62","di ":"63","eit":"64","haf":"65","ill":"66","ins":"67","ist":"68","llj":"69","ndi":"70","r a":"71","r e":"72","seg":"73","un ":"74","var":"75"," bi":"76"," el":"77"," fo":"78"," ge":"79"," yf":"80","and":"81","aug":"82","bau":"83","big":"84","ega":"85","eld":"86","er\u00f0":"87","fir":"88","foo":"89","gin":"90","itt":"91","n s":"92","ngi":"93","num":"94","od ":"95","ood":"96","sin":"97","ta ":"98","tt ":"99","vi\u00f0":"100","yfi":"101","\u00f0 e":"102","\u00f0 f":"103"," hr":"104"," s\u00e9":"105"," \u00fev":"106","a e":"107","a \u00e1":"108","em ":"109","gi ":"110","i f":"111","jar":"112","j\u00f3r":"113","lja":"114","m e":"115","r \u00e1":"116","rei":"117","rst":"118","r\u00f0a":"119","r\u00f0i":"120","r\u00f0u":"121","stj":"122","und":"123","veg":"124","v\u00ed ":"125","\u00f0 v":"126","\u00fea\u00f0":"127","\u00fev\u00ed":"128"," fj":"129"," ko":"130"," sl":"131","eik":"132","end":"133","ert":"134","ess":"135","fj\u00e1":"136","fur":"137","gir":"138","h\u00fas":"139","j\u00e1r":"140","n e":"141","ri ":"142","tar":"143","\u00f0 \u00fe":"144","\u00f0ar":"145","\u00f0ur":"146","\u00fees":"147"," br":"148"," h\u00fa":"149"," kr":"150"," le":"151"," up":"152","a s":"153","egg":"154","i s":"155","irt":"156","ja ":"157","ki\u00f0":"158","len":"159","me\u00f0":"160","mik":"161","n b":"162","nar":"163","nir":"164","nun":"165","r f":"166","r v":"167","ri\u00f0":"168","rt ":"169","sti":"170","t v":"171","ti ":"172","una":"173","upp":"174","\u00f0a ":"175","\u00f3na":"176"," al":"177"," fr":"178"," gr":"179","a v":"180","all":"181","an ":"182","da ":"183","ei\u00f0":"184","e\u00f0 ":"185","fa ":"186","fra":"187","g e":"188","ger":"189","gi\u00f0":"190","gt ":"191","han":"192","hef":"193","hel":"194","her":"195","hra":"196","i a":"197","i e":"198","i v":"199","i \u00fe":"200","iki":"201","j\u00f3n":"202","j\u00f6r":"203","ka ":"204","kr\u00f3":"205","l\u00edk":"206","m h":"207","n a":"208","nga":"209","r l":"210","ram":"211","ru ":"212","r\u00e1\u00f0":"213","r\u00f3n":"214","svo":"215","vin":"216","\u00ed b":"217","\u00ed h":"218","\u00f0 h":"219","\u00f0 k":"220","\u00f0 m":"221","\u00f6r\u00f0":"222"," af":"223"," fa":"224"," l\u00ed":"225"," r\u00e1":"226"," sk":"227"," sv":"228"," te":"229","a b":"230","a f":"231","a h":"232","a k":"233","a u":"234","afi":"235","agn":"236","arn":"237","ast":"238","ber":"239","efu":"240","enn":"241","erb":"242","erg":"243","fi ":"244","g a":"245","gar":"246","i\u00f0s":"247","ker":"248","kke":"249","lan":"250","lj\u00f3":"251","llt":"252","ma ":"253","mi\u00f0":"254","n v":"255","n \u00ed":"256","nan":"257","nda":"258","ndu":"259","ni\u00f0":"260","nna":"261","nnu":"262","nu ":"263","r o":"264","rbe":"265","rgi":"266","sl\u00f6":"267","s\u00e9 ":"268","t a":"269","t h":"270","til":"271","tin":"272","ugu":"273","vil":"274","ygg":"275","\u00e1 s":"276","\u00f0 a":"277","\u00f0 b":"278","\u00f3rn":"279","\u00f6gn":"280","\u00f6ku":"281"," at":"282"," fi":"283"," f\u00e9":"284"," ka":"285"," ma":"286"," no":"287"," sa":"288"," si":"289"," ti":"290"," \u00e1k":"291","a m":"292","a t":"293","a \u00ed":"294","a \u00fe":"295","afa":"296","afs":"297","ald":"298","arf":"299"},"indonesian":{"an ":"0"," me":"1","kan":"2","ang":"3","ng ":"4"," pe":"5","men":"6"," di":"7"," ke":"8"," da":"9"," se":"10","eng":"11"," be":"12","nga":"13","nya":"14"," te":"15","ah ":"16","ber":"17","aka":"18"," ya":"19","dan":"20","di ":"21","yan":"22","n p":"23","per":"24","a m":"25","ita":"26"," pa":"27","da ":"28","ata":"29","ada":"30","ya ":"31","ta ":"32"," in":"33","ala":"34","eri":"35","ia ":"36","a d":"37","n k":"38","am ":"39","ga ":"40","at ":"41","era":"42","n d":"43","ter":"44"," ka":"45","a p":"46","ari":"47","emb":"48","n m":"49","ri ":"50"," ba":"51","aan":"52","ak ":"53","ra ":"54"," it":"55","ara":"56","ela":"57","ni ":"58","ali":"59","ran":"60","ar ":"61","eru":"62","lah":"63","a b":"64","asi":"65","awa":"66","eba":"67","gan":"68","n b":"69"," ha":"70","ini":"71","mer":"72"," la":"73"," mi":"74","and":"75","ena":"76","wan":"77"," sa":"78","aha":"79","lam":"80","n i":"81","nda":"82"," wa":"83","a i":"84","dua":"85","g m":"86","mi ":"87","n a":"88","rus":"89","tel":"90","yak":"91"," an":"92","dal":"93","h d":"94","i s":"95","ing":"96","min":"97","ngg":"98","tak":"99","ami":"100","beb":"101","den":"102","gat":"103","ian":"104","ih ":"105","pad":"106","rga":"107","san":"108","ua ":"109"," de":"110","a t":"111","arg":"112","dar":"113","elu":"114","har":"115","i k":"116","i m":"117","i p":"118","ika":"119","in ":"120","iny":"121","itu":"122","mba":"123","n t":"124","ntu":"125","pan":"126","pen":"127","sah":"128","tan":"129","tu ":"130","a k":"131","ban":"132","edu":"133","eka":"134","g d":"135","ka ":"136","ker":"137","nde":"138","nta":"139","ora":"140","usa":"141"," du":"142"," ma":"143","a s":"144","ai ":"145","ant":"146","bas":"147","end":"148","i d":"149","ira":"150","kam":"151","lan":"152","n s":"153","uli":"154","al ":"155","apa":"156","ere":"157","ert":"158","lia":"159","mem":"160","rka":"161","si ":"162","tal":"163","ung":"164"," ak":"165","a a":"166","a w":"167","ani":"168","ask":"169","ent":"170","gar":"171","haa":"172","i i":"173","isa":"174","ked":"175","mbe":"176","ska":"177","tor":"178","uan":"179","uk ":"180","uka":"181"," ad":"182"," to":"183","asa":"184","aya":"185","bag":"186","dia":"187","dun":"188","erj":"189","mas":"190","na ":"191","rek":"192","rit":"193","sih":"194","us ":"195"," bi":"196","a h":"197","ama":"198","dib":"199","ers":"200","g s":"201","han":"202","ik ":"203","kem":"204","ma ":"205","n l":"206","nit":"207","r b":"208","rja":"209","sa ":"210"," ju":"211"," or":"212"," si":"213"," ti":"214","a y":"215","aga":"216","any":"217","as ":"218","cul":"219","eme":"220","emu":"221","eny":"222","epa":"223","erb":"224","erl":"225","gi ":"226","h m":"227","i a":"228","kel":"229","li ":"230","mel":"231","nia":"232","opa":"233","rta":"234","sia":"235","tah":"236","ula":"237","un ":"238","unt":"239"," at":"240"," bu":"241"," pu":"242"," ta":"243","agi":"244","alu":"245","amb":"246","bah":"247","bis":"248","er ":"249","i t":"250","ibe":"251","ir ":"252","ja ":"253","k m":"254","kar":"255","lai":"256","lal":"257","lu ":"258","mpa":"259","ngk":"260","nja":"261","or ":"262","pa ":"263","pas":"264","pem":"265","rak":"266","rik":"267","seb":"268","tam":"269","tem":"270","top":"271","tuk":"272","uni":"273","war":"274"," al":"275"," ga":"276"," ge":"277"," ir":"278"," ja":"279"," mu":"280"," na":"281"," pr":"282"," su":"283"," un":"284","ad ":"285","adi":"286","akt":"287","ann":"288","apo":"289","bel":"290","bul":"291","der":"292","ega":"293","eke":"294","ema":"295","emp":"296","ene":"297","enj":"298","esa":"299"},"italian":{" di":"0","to ":"1","la ":"2"," de":"3","di ":"4","no ":"5"," co":"6","re ":"7","ion":"8","e d":"9"," e ":"10","le ":"11","del":"12","ne ":"13","ti ":"14","ell":"15"," la":"16"," un":"17","ni ":"18","i d":"19","per":"20"," pe":"21","ent":"22"," in":"23","one":"24","he ":"25","ta ":"26","zio":"27","che":"28","o d":"29","a d":"30","na ":"31","ato":"32","e s":"33"," so":"34","i s":"35","lla":"36","a p":"37","li ":"38","te ":"39"," al":"40"," ch":"41","er ":"42"," pa":"43"," si":"44","con":"45","sta":"46"," pr":"47","a c":"48"," se":"49","el ":"50","ia ":"51","si ":"52","e p":"53"," da":"54","e i":"55","i p":"56","ont":"57","ano":"58","i c":"59","all":"60","azi":"61","nte":"62","on ":"63","nti":"64","o s":"65"," ri":"66","i a":"67","o a":"68","un ":"69"," an":"70","are":"71","ari":"72","e a":"73","i e":"74","ita":"75","men":"76","ri ":"77"," ca":"78"," il":"79"," no":"80"," po":"81","a s":"82","ant":"83","il ":"84","in ":"85","a l":"86","ati":"87","cia":"88","e c":"89","ro ":"90","ann":"91","est":"92","gli":"93","t\u00e0 ":"94"," qu":"95","e l":"96","nta":"97"," a ":"98","com":"99","o c":"100","ra ":"101"," le":"102"," ne":"103","ali":"104","ere":"105","ist":"106"," ma":"107"," \u00e8 ":"108","io ":"109","lle":"110","me ":"111","era":"112","ica":"113","ost":"114","pro":"115","tar":"116","una":"117"," pi":"118","da ":"119","tat":"120"," mi":"121","att":"122","ca ":"123","mo ":"124","non":"125","par":"126","sti":"127"," fa":"128"," i ":"129"," re":"130"," su":"131","ess":"132","ini":"133","nto":"134","o l":"135","ssi":"136","tto":"137","a e":"138","ame":"139","col":"140","ei ":"141","ma ":"142","o i":"143","za ":"144"," st":"145","a a":"146","ale":"147","anc":"148","ani":"149","i m":"150","ian":"151","o p":"152","oni":"153","sio":"154","tan":"155","tti":"156"," lo":"157","i r":"158","oci":"159","oli":"160","ona":"161","ono":"162","tra":"163"," l ":"164","a r":"165","eri":"166","ett":"167","lo ":"168","nza":"169","que":"170","str":"171","ter":"172","tta":"173"," ba":"174"," li":"175"," te":"176","ass":"177","e f":"178","enz":"179","for":"180","nno":"181","olo":"182","ori":"183","res":"184","tor":"185"," ci":"186"," vo":"187","a i":"188","al ":"189","chi":"190","e n":"191","lia":"192","pre":"193","ria":"194","uni":"195","ver":"196"," sp":"197","imo":"198","l a":"199","l c":"200","ran":"201","sen":"202","soc":"203","tic":"204"," fi":"205"," mo":"206","a n":"207","ce ":"208","dei":"209","ggi":"210","gio":"211","iti":"212","l s":"213","lit":"214","ll ":"215","mon":"216","ola":"217","pac":"218","sim":"219","tit":"220","utt":"221","vol":"222"," ar":"223"," fo":"224"," ha":"225"," sa":"226","acc":"227","e r":"228","ire":"229","man":"230","ntr":"231","rat":"232","sco":"233","tro":"234","tut":"235","va ":"236"," do":"237"," gi":"238"," me":"239"," sc":"240"," tu":"241"," ve":"242"," vi":"243","a m":"244","ber":"245","can":"246","cit":"247","i l":"248","ier":"249","it\u00e0":"250","lli":"251","min":"252","n p":"253","nat":"254","nda":"255","o e":"256","o f":"257","o u":"258","ore":"259","oro":"260","ort":"261","sto":"262","ten":"263","tiv":"264","van":"265","art":"266","cco":"267","ci ":"268","cos":"269","dal":"270","e v":"271","i i":"272","ila":"273","ino":"274","l p":"275","n c":"276","nit":"277","ole":"278","ome":"279","po ":"280","rio":"281","sa ":"282"," ce":"283"," es":"284"," tr":"285","a b":"286","and":"287","ata":"288","der":"289","ens":"290","ers":"291","gi ":"292","ial":"293","ina":"294","itt":"295","izi":"296","lan":"297","lor":"298","mil":"299"},"kazakh":{"\u0430\u043d ":"0","\u0435\u043d ":"1","\u044b\u04a3 ":"2"," \u049b\u0430":"3"," \u0431\u0430":"4","\u0430\u0439 ":"5","\u043d\u0434\u0430":"6","\u044b\u043d ":"7"," \u0441\u0430":"8"," \u0430\u043b":"9","\u0434\u0456 ":"10","\u0430\u0440\u044b":"11","\u0434\u044b ":"12","\u044b\u043f ":"13"," \u043c\u04b1":"14"," \u0431\u0456":"15","\u0430\u0441\u044b":"16","\u0434\u0430 ":"17","\u043d\u0430\u0439":"18"," \u0436\u0430":"19","\u043c\u04b1\u043d":"20","\u0441\u0442\u0430":"21","\u0493\u0430\u043d":"22","\u043d \u0431":"23","\u04b1\u043d\u0430":"24"," \u0431\u043e":"25","\u043d\u044b\u04a3":"26","\u0456\u043d ":"27","\u043b\u0430\u0440":"28","\u0441\u044b\u043d":"29"," \u0434\u0435":"30","\u0430\u0493\u0430":"31","\u0442\u0430\u043d":"32"," \u043a\u04e9":"33","\u0431\u0456\u0440":"34","\u0435\u0440 ":"35","\u043c\u0435\u043d":"36","\u0430\u0437\u0430":"37","\u044b\u043d\u0434":"38","\u044b\u043d\u044b":"39"," \u043c\u0435":"40","\u0430\u043d\u0434":"41","\u0435\u0440\u0456":"42","\u0431\u043e\u043b":"43","\u0434\u044b\u04a3":"44","\u049b\u0430\u0437":"45","\u0430\u0442\u044b":"46","\u0441\u044b ":"47","\u0442\u044b\u043d":"48","\u0493\u044b ":"49"," \u043a\u0435":"50","\u0430\u0440 ":"51","\u0437\u0430\u049b":"52","\u044b\u049b ":"53","\u0430\u043b\u0430":"54","\u0430\u043b\u044b":"55","\u0430\u043d\u044b":"56","\u0430\u0440\u0430":"57","\u0430\u0493\u044b":"58","\u0433\u0435\u043d":"59","\u0442\u0430\u0440":"60","\u0442\u0435\u0440":"61","\u0442\u044b\u0440":"62","\u0430\u0439\u0434":"63","\u0430\u0440\u0434":"64","\u0434\u0435 ":"65","\u0493\u0430 ":"66"," \u049b\u043e":"67","\u0431\u0430\u0440":"68","\u0456\u04a3 ":"69","\u049b\u0430\u043d":"70"," \u0431\u0435":"71"," \u049b\u044b":"72","\u0430\u049b\u0441":"73","\u0433\u0435\u0440":"74","\u0434\u0430\u043d":"75","\u0434\u0430\u0440":"76","\u043b\u044b\u049b":"77","\u043b\u0493\u0430":"78","\u044b\u043d\u0430":"79","\u0456\u0440 ":"80","\u0456\u0440\u0456":"81","\u0493\u0430\u0441":"82"," \u0442\u0430":"83","\u0430 \u0431":"84","\u0433\u0456 ":"85","\u0435\u0434\u0456":"86","\u0435\u043b\u0435":"87","\u0439\u0434\u044b":"88","\u043d \u043a":"89","\u043d \u0442":"90","\u043e\u043b\u0430":"91","\u0440\u044b\u043d":"92","\u0456\u043f ":"93","\u049b\u0441\u0442":"94","\u049b\u0442\u0430":"95","\u04a3 \u0431":"96"," \u0430\u0439":"97"," \u043e\u043b":"98"," \u0441\u043e":"99","\u0430\u0439\u0442":"100","\u0434\u0430\u0493":"101","\u0438\u0433\u0435":"102","\u043b\u0435\u0440":"103","\u043b\u044b\u043f":"104","\u043d \u0430":"105","\u0456\u043a ":"106","\u0430\u049b\u0442":"107","\u0431\u0430\u0493":"108","\u043a\u0435\u043d":"109","\u043d \u049b":"110","\u043d\u044b ":"111","\u0440\u0433\u0435":"112","\u0440\u0493\u0430":"113","\u044b\u0440 ":"114"," \u0430\u0440":"115","\u0430\u043b\u0493":"116","\u0430\u0441\u0430":"117","\u0431\u0430\u0441":"118","\u0431\u0435\u0440":"119","\u0433\u0435 ":"120","\u0435\u0442\u0456":"121","\u043d\u0430 ":"122","\u043d\u0434\u0435":"123","\u043d\u0435 ":"124","\u043d\u0438\u0433":"125","\u0440\u0434\u044b":"126","\u0440\u044b ":"127","\u0441\u0430\u0439":"128"," \u0430\u0443":"129"," \u043a\u04af":"130"," \u043d\u0438":"131"," \u043e\u0442":"132"," \u04e9\u0437":"133","\u0430\u0443\u0434":"134","\u0435\u043f ":"135","\u0438\u044f\u043b":"136","\u043b\u0442\u044b":"137","\u043d \u0436":"138","\u043d \u043e":"139","\u043e\u0441\u044b":"140","\u043e\u0442\u044b":"141","\u0440\u044b\u043f":"142","\u0440\u0456 ":"143","\u0442\u043a\u0435":"144","\u0442\u044b ":"145","\u044b \u0431":"146","\u044b \u0436":"147","\u044b\u043b\u044b":"148","\u044b\u0441\u044b":"149","\u0456 \u0441":"150","\u049b\u0430\u0440":"151"," \u0431\u04b1":"152"," \u0434\u0430":"153"," \u0436\u0435":"154"," \u0442\u04b1":"155"," \u049b\u04b1":"156","\u0430\u0434\u044b":"157","\u0430\u0439\u043b":"158","\u0430\u043f ":"159","\u0430\u0442\u0430":"160","\u0435\u043d\u0456":"161","\u0439\u043b\u0430":"162","\u043d \u043c":"163","\u043d \u0441":"164","\u043d\u0434\u044b":"165","\u043d\u0434\u0456":"166","\u0440 \u043c":"167","\u0442\u0430\u0439":"168","\u0442\u0456\u043d":"169","\u044b \u0442":"170","\u044b\u0441 ":"171","\u0456\u043d\u0434":"172"," \u0431\u0438":"173","\u0430 \u0436":"174","\u0430\u0443\u044b":"175","\u0434\u0435\u043f":"176","\u0434\u0456\u04a3":"177","\u0435\u043a\u0435":"178","\u0435\u0440\u0438":"179","\u0439\u044b\u043d":"180","\u043a\u0435\u043b":"181","\u043b\u0434\u044b":"182","\u043c\u0430 ":"183","\u043d\u0430\u043d":"184","\u043e\u043d\u044b":"185","\u043f \u0436":"186","\u043f \u043e":"187","\u0440 \u0431":"188","\u0440\u0438\u044f":"189","\u0440\u043b\u0430":"190","\u0443\u0434\u0430":"191","\u0448\u044b\u043b":"192","\u044b \u0430":"193","\u044b\u049b\u0442":"194","\u0456 \u0430":"195","\u0456 \u0431":"196","\u0456\u0437 ":"197","\u0456\u043b\u0456":"198","\u04a3 \u049b":"199"," \u0430\u0441":"200"," \u0435\u043a":"201"," \u0436\u043e":"202"," \u043c\u04d9":"203"," \u043e\u0441":"204"," \u0440\u0435":"205"," \u0441\u0435":"206","\u0430\u043b\u0434":"207","\u0434\u0430\u043b":"208","\u0434\u0435\u0433":"209","\u0434\u0435\u0439":"210","\u0435 \u0431":"211","\u0435\u0442 ":"212","\u0436\u0430\u0441":"213","\u0439 \u0431":"214","\u043b\u0430\u0443":"215","\u043b\u0434\u0430":"216","\u043c\u0435\u0442":"217","\u043d\u044b\u043d":"218","\u0441\u0430\u0440":"219","\u0441\u0456 ":"220","\u0442\u0456 ":"221","\u044b\u0440\u044b":"222","\u044b\u0442\u0430":"223","\u0456\u0441\u0456":"224","\u04a3 \u0430":"225","\u04e9\u0442\u0435":"226"," \u0430\u0442":"227"," \u0435\u043b":"228"," \u0436\u04af":"229"," \u043c\u0430":"230"," \u0442\u043e":"231"," \u0448\u044b":"232","\u0430 \u0430":"233","\u0430\u043b\u0442":"234","\u0430\u043c\u0430":"235","\u0430\u0440\u043b":"236","\u0430\u0441\u0442":"237","\u0431\u04b1\u043b":"238","\u0434\u0430\u0439":"239","\u0434\u044b\u049b":"240","\u0435\u043a ":"241","\u0435\u043b\u044c":"242","\u0435\u0441\u0456":"243","\u0437\u0434\u0456":"244","\u043a\u04e9\u0442":"245","\u043b\u0435\u043c":"246","\u043b\u044c ":"247","\u043d \u0435":"248","\u043f \u0430":"249","\u0440 \u0430":"250","\u0440\u0435\u0441":"251","\u0441\u0430 ":"252","\u0442\u0430 ":"253","\u0442\u0442\u0435":"254","\u0442\u04b1\u0440":"255","\u0448\u044b ":"256","\u044b \u0434":"257","\u044b \u049b":"258","\u044b\u0437 ":"259","\u049b\u044b\u0442":"260"," \u043a\u043e":"261"," \u043d\u0435":"262"," \u043e\u0439":"263"," \u043e\u0440":"264"," \u0441\u04b1":"265"," \u0442\u04af":"266","\u0430\u043b\u044c":"267","\u0430\u0440\u0435":"268","\u0430\u0442\u0442":"269","\u0434\u0456\u0440":"270","\u0435\u0432 ":"271","\u0435\u0433\u0456":"272","\u0435\u0434\u0430":"273","\u0435\u043a\u0456":"274","\u0435\u043b\u0434":"275","\u0435\u0440\u0433":"276","\u0435\u0440\u0434":"277","\u0438\u044f\u0434":"278","\u043a\u0435\u0440":"279","\u043a\u0435\u0442":"280","\u043b\u044b\u0441":"281","\u043b\u0456\u0441":"282","\u043c\u0435\u0434":"283","\u043c\u043f\u0438":"284","\u043d \u0434":"285","\u043d\u0456 ":"286","\u043d\u0456\u043d":"287","\u043f \u0442":"288","\u043f\u0435\u043a":"289","\u0440\u0435\u043b":"290","\u0440\u0442\u0430":"291","\u0440\u0456\u043b":"292","\u0440\u0456\u043d":"293","\u0441\u0435\u043d":"294","\u0442\u0430\u043b":"295","\u0448\u0456\u043b":"296","\u044b \u043a":"297","\u044b \u043c":"298","\u044b\u0441\u0442":"299"},"kyrgyz":{"\u044b\u043d ":"0","\u0430\u043d ":"1"," \u0436\u0430":"2","\u0435\u043d ":"3","\u0434\u0430 ":"4"," \u0442\u0430":"5","\u0430\u0440 ":"6","\u0438\u043d ":"7"," \u043a\u0430":"8","\u0430\u0440\u044b":"9"," \u0430\u043b":"10"," \u0431\u0430":"11"," \u0431\u0438":"12","\u043b\u0430\u0440":"13"," \u0431\u043e":"14"," \u043a\u044b":"15","\u0430\u043b\u0430":"16","\u043d \u043a":"17"," \u0441\u0430":"18","\u043d\u0434\u0430":"19","\u0433\u0430\u043d":"20","\u0442\u0430\u0440":"21"," \u0434\u0435":"22","\u0430\u043d\u0434":"23","\u043d \u0431":"24"," \u043a\u0435":"25","\u0430\u0440\u0434":"26","\u043c\u0435\u043d":"27","\u043d \u0442":"28","\u0430\u0440\u0430":"29","\u043d\u044b\u043d":"30"," \u0434\u0430":"31"," \u043c\u0435":"32","\u043a\u044b\u0440":"33"," \u0447\u0435":"34","\u043d \u0430":"35","\u0440\u044b ":"36"," \u043a\u043e":"37","\u0433\u0435\u043d":"38","\u0434\u0430\u0440":"39","\u043a\u0435\u043d":"40","\u043a\u0442\u0430":"41","\u0443\u0443 ":"42","\u0435\u043d\u0435":"43","\u0435\u0440\u0438":"44"," \u0448\u0430":"45","\u0430\u043b\u044b":"46","\u0430\u0442 ":"47","\u043d\u0430 ":"48"," \u043a\u04e9":"49"," \u044d\u043c":"50","\u0430\u0442\u044b":"51","\u0434\u0430\u043d":"52","\u0434\u0435\u043f":"53","\u0434\u044b\u043d":"54","\u0435\u043f ":"55","\u043d\u0435\u043d":"56","\u0440\u044b\u043d":"57"," \u0431\u0435":"58","\u043a\u0430\u043d":"59","\u043b\u0443\u0443":"60","\u0440\u0433\u044b":"61","\u0442\u0430\u043d":"62","\u0448\u0430\u0439":"63","\u044b\u0440\u0433":"64","\u04af\u043d ":"65"," \u0430\u0440":"66"," \u043c\u0430":"67","\u0430\u0433\u044b":"68","\u0430\u043a\u0442":"69","\u0430\u043d\u044b":"70","\u0433\u044b ":"71","\u0433\u044b\u0437":"72","\u0434\u044b ":"73","\u0440\u0434\u0430":"74","\u0430\u0439 ":"75","\u0431\u0438\u0440":"76","\u0431\u043e\u043b":"77","\u0435\u0440 ":"78","\u043d \u0441":"79","\u043d\u0434\u044b":"80","\u0443\u043d ":"81","\u0447\u0430 ":"82","\u044b\u043d\u0434":"83","\u0430 \u043a":"84","\u0430\u0433\u0430":"85","\u0430\u0439\u043b":"86","\u0430\u043d\u0430":"87","\u0430\u043f ":"88","\u0433\u0430 ":"89","\u043b\u0433\u0435":"90","\u043d\u0447\u0430":"91","\u043f \u043a":"92","\u0440\u0434\u044b":"93","\u0442\u0443\u0443":"94","\u044b\u043d\u044b":"95"," \u0430\u043d":"96"," \u04e9\u0437":"97","\u0430\u043c\u0430":"98","\u0430\u0442\u0430":"99","\u0434\u0438\u043d":"100","\u0439\u0442 ":"101","\u043b\u0433\u0430":"102","\u043b\u043e\u043e":"103","\u043e\u043e ":"104","\u0440\u0438 ":"105","\u0442\u0438\u043d":"106","\u044b\u0437 ":"107","\u044b\u043f ":"108","\u04e9\u0440\u04af":"109"," \u043f\u0430":"110"," \u044d\u043a":"111","\u0430 \u0431":"112","\u0430\u043b\u0433":"113","\u0430\u0441\u044b":"114","\u0430\u0448\u0442":"115","\u0431\u0438\u0437":"116","\u043a\u0435\u043b":"117","\u043a\u0442\u0435":"118","\u0442\u0430\u043b":"119"," \u043d\u0435":"120"," \u0441\u0443":"121","\u0430\u043a\u044b":"122","\u0435\u043d\u0442":"123","\u0438\u043d\u0434":"124","\u0438\u0440 ":"125","\u043a\u0430\u043b":"126","\u043d \u0434":"127","\u043d\u0434\u0435":"128","\u043e\u0433\u043e":"129","\u043e\u043d\u0434":"130","\u043e\u044e\u043d":"131","\u0440 \u0431":"132","\u0440 \u043c":"133","\u0440\u0430\u043d":"134","\u0441\u0430\u043b":"135","\u0441\u0442\u0430":"136","\u0441\u044b ":"137","\u0443\u0440\u0430":"138","\u044b\u0433\u044b":"139"," \u0430\u0448":"140"," \u043c\u0438":"141"," \u0441\u044b":"142"," \u0442\u0443":"143","\u0430\u043b ":"144","\u0430\u0440\u0442":"145","\u0431\u043e\u0440":"146","\u0435\u043b\u0433":"147","\u0435\u043d\u0438":"148","\u0435\u0442 ":"149","\u0436\u0430\u0442":"150","\u0439\u043b\u043e":"151","\u043a\u0430\u0440":"152","\u043d \u043c":"153","\u043e\u0433\u0443":"154","\u043f \u0430":"155","\u043f \u0436":"156","\u0440 \u044d":"157","\u0441\u044b\u043d":"158","\u044b\u043a ":"159","\u044e\u043d\u0447":"160"," \u0431\u0443":"161"," \u0443\u0440":"162","\u0430 \u0430":"163","\u0430\u043a ":"164","\u0430\u043b\u0434":"165","\u0430\u043b\u0443":"166","\u0431\u0430\u0440":"167","\u0431\u0435\u0440":"168","\u0431\u043e\u044e":"169","\u0433\u0435 ":"170","\u0434\u043e\u043d":"171","\u0435\u0433\u0438":"172","\u0435\u043a\u0442":"173","\u0435\u0444\u0442":"174","\u0438\u0437 ":"175","\u043a\u0430\u0442":"176","\u043b\u0434\u044b":"177","\u043d \u0447":"178","\u043d \u044d":"179","\u043d \u04e9":"180","\u043d\u0434\u043e":"181","\u043d\u0435\u0444":"182","\u043e\u043d ":"183","\u0441\u0430\u0442":"184","\u0442\u043e\u0440":"185","\u0442\u044b ":"186","\u0443\u0434\u0430":"187","\u0443\u043b ":"188","\u0443\u043b\u0430":"189","\u0443\u0443\u0434":"190","\u044b \u0431":"191","\u044b \u0436":"192","\u044b \u043a":"193","\u044b\u043b ":"194","\u044b\u043d\u0430":"195","\u044d\u043a\u0435":"196","\u044f\u0441\u044b":"197"," \u0430\u0442":"198"," \u0434\u043e":"199"," \u0436\u044b":"200"," \u0441\u043e":"201"," \u0447\u044b":"202","\u0430\u0430\u0441":"203","\u0430\u0439\u0442":"204","\u0430\u0441\u0442":"205","\u0431\u0430\u0430":"206","\u0431\u0430\u0448":"207","\u0433\u0430\u0440":"208","\u0433\u044b\u043d":"209","\u0434\u04e9 ":"210","\u0435 \u0431":"211","\u0435\u043a ":"212","\u0436\u044b\u043b":"213","\u0438 \u0431":"214","\u0438\u043a ":"215","\u0438\u044f\u0441":"216","\u043a\u044b\u0437":"217","\u043b\u0434\u0430":"218","\u043b\u044b\u043a":"219","\u043c\u0434\u0430":"220","\u043d \u0436":"221","\u043d\u0434\u0438":"222","\u043d\u0438 ":"223","\u043d\u0438\u043d":"224","\u043e\u0440\u0434":"225","\u0440\u0434\u043e":"226","\u0441\u0442\u043e":"227","\u0442\u0430 ":"228","\u0442\u0435\u0440":"229","\u0442\u0442\u0438":"230","\u0442\u0443\u0440":"231","\u0442\u044b\u043d":"232","\u0443\u043f ":"233","\u0443\u0448\u0443":"234","\u0444\u0442\u0438":"235","\u044b\u043a\u0442":"236","\u04af\u043f ":"237","\u04e9\u043d ":"238"," \u0430\u0439":"239"," \u0431\u04af":"240"," \u0438\u0447":"241"," \u0438\u0448":"242"," \u043c\u043e":"243"," \u043f\u0440":"244"," \u0440\u0435":"245"," \u04e9\u043a":"246"," \u04e9\u0442":"247","\u0430 \u0434":"248","\u0430 \u0443":"249","\u0430 \u044d":"250","\u0430\u0439\u043c":"251","\u0430\u043c\u0434":"252","\u0430\u0442\u0442":"253","\u0431\u0435\u043a":"254","\u0431\u0443\u043b":"255","\u0433\u043e\u043b":"256","\u0434\u0435\u0433":"257","\u0435\u0433\u0435":"258","\u0435\u0439\u0442":"259","\u0435\u043b\u0435":"260","\u0435\u043d\u0434":"261","\u0436\u0430\u043a":"262","\u0438 \u043a":"263","\u0438\u043d\u0438":"264","\u0438\u0440\u0438":"265","\u0439\u043c\u0430":"266","\u043a\u0442\u043e":"267","\u043b\u0438\u043a":"268","\u043c\u0430\u043a":"269","\u043c\u0435\u0441":"270","\u043d \u0443":"271","\u043d \u0448":"272","\u043d\u0442\u0442":"273","\u043e\u043b ":"274","\u043e\u043b\u043e":"275","\u043f\u0430\u0440":"276","\u0440\u0430\u043a":"277","\u0440\u04af\u04af":"278","\u0441\u044b\u0440":"279","\u0442\u0438 ":"280","\u0442\u0438\u043a":"281","\u0442\u0442\u0430":"282","\u0442\u04e9\u0440":"283","\u0443 \u0436":"284","\u0443 \u0441":"285","\u0448\u043a\u0430":"286","\u044b \u043c":"287","\u044b\u0437\u044b":"288","\u044b\u043b\u0434":"289","\u044d\u043c\u0435":"290","\u04af\u0440\u04af":"291","\u04e9\u043b\u04af":"292","\u04e9\u0442\u04e9":"293"," \u0436\u0435":"294"," \u0442\u04af":"295"," \u044d\u043b":"296"," \u04e9\u043d":"297","\u0430 \u0436":"298","\u0430\u0434\u044b":"299"},"latin":{"um ":"0","us ":"1","ut ":"2","et ":"3","is ":"4"," et":"5"," in":"6"," qu":"7","tur":"8"," pr":"9","est":"10","tio":"11"," au":"12","am ":"13","em ":"14","aut":"15"," di":"16","ent":"17","in ":"18","dic":"19","t e":"20"," es":"21","ur ":"22","ati":"23","ion":"24","st ":"25"," ut":"26","ae ":"27","qua":"28"," de":"29","nt ":"30"," su":"31"," si":"32","itu":"33","unt":"34","rum":"35","ia ":"36","es ":"37","ter":"38"," re":"39","nti":"40","rae":"41","s e":"42","qui":"43","io ":"44","pro":"45","it ":"46","per":"47","ita":"48","one":"49","ici":"50","ius":"51"," co":"52","t d":"53","bus":"54","pra":"55","m e":"56"," no":"57","edi":"58","tia":"59","ue ":"60","ibu":"61"," se":"62"," ad":"63","er ":"64"," fi":"65","ili":"66","que":"67","t i":"68","de ":"69","oru":"70"," te":"71","ali":"72"," pe":"73","aed":"74","cit":"75","m d":"76","t s":"77","tat":"78","tem":"79","tis":"80","t p":"81","sti":"82","te ":"83","cum":"84","ere":"85","ium":"86"," ex":"87","rat":"88","ta ":"89","con":"90","cti":"91","oni":"92","ra ":"93","s i":"94"," cu":"95"," sa":"96","eni":"97","nis":"98","nte":"99","eri":"100","omi":"101","re ":"102","s a":"103","min":"104","os ":"105","ti ":"106","uer":"107"," ma":"108"," ue":"109","m s":"110","nem":"111","t m":"112"," mo":"113"," po":"114"," ui":"115","gen":"116","ict":"117","m i":"118","ris":"119","s s":"120","t a":"121","uae":"122"," do":"123","m a":"124","t c":"125"," ge":"126","as ":"127","e i":"128","e p":"129","ne ":"130"," ca":"131","ine":"132","quo":"133","s p":"134"," al":"135","e e":"136","ntu":"137","ro ":"138","tri":"139","tus":"140","uit":"141","atu":"142","ini":"143","iqu":"144","m p":"145","ost":"146","res":"147","ura":"148"," ac":"149"," fu":"150","a e":"151","ant":"152","nes":"153","nim":"154","sun":"155","tra":"156","e a":"157","s d":"158"," pa":"159"," uo":"160","ecu":"161"," om":"162"," tu":"163","ad ":"164","cut":"165","omn":"166","s q":"167"," ei":"168","ex ":"169","icu":"170","tor":"171","uid":"172"," ip":"173"," me":"174","e s":"175","era":"176","eru":"177","iam":"178","ide":"179","ips":"180"," iu":"181","a s":"182","do ":"183","e d":"184","eiu":"185","ica":"186","im ":"187","m c":"188","m u":"189","tiu":"190"," ho":"191","cat":"192","ist":"193","nat":"194","on ":"195","pti":"196","reg":"197","rit":"198","s t":"199","sic":"200","spe":"201"," en":"202"," sp":"203","dis":"204","eli":"205","liq":"206","lis":"207","men":"208","mus":"209","num":"210","pos":"211","sio":"212"," an":"213"," gr":"214","abi":"215","acc":"216","ect":"217","ri ":"218","uan":"219"," le":"220","ecc":"221","ete":"222","gra":"223","non":"224","se ":"225","uen":"226","uis":"227"," fa":"228"," tr":"229","ate":"230","e c":"231","fil":"232","na ":"233","ni ":"234","pul":"235","s f":"236","ui ":"237","at ":"238","cce":"239","dam":"240","i e":"241","ina":"242","leg":"243","nos":"244","ori":"245","pec":"246","rop":"247","sta":"248","uia":"249","ene":"250","iue":"251","iui":"252","siu":"253","t t":"254","t u":"255","tib":"256","tit":"257"," da":"258"," ne":"259","a d":"260","and":"261","ege":"262","equ":"263","hom":"264","imu":"265","lor":"266","m m":"267","mni":"268","ndo":"269","ner":"270","o e":"271","r e":"272","sit":"273","tum":"274","utu":"275","a p":"276","bis":"277","bit":"278","cer":"279","cta":"280","dom":"281","fut":"282","i s":"283","ign":"284","int":"285","mod":"286","ndu":"287","nit":"288","rib":"289","rti":"290","tas":"291","und":"292"," ab":"293","err":"294","ers":"295","ite":"296","iti":"297","m t":"298","o p":"299"},"latvian":{"as ":"0"," la":"1"," pa":"2"," ne":"3","es ":"4"," un":"5","un ":"6"," ka":"7"," va":"8","ar ":"9","s p":"10"," ar":"11"," vi":"12","is ":"13","ai ":"14"," no":"15","ja ":"16","ija":"17","iem":"18","em ":"19","tu ":"20","tie":"21","vie":"22","lat":"23","aks":"24","ien":"25","kst":"26","ies":"27","s a":"28","rak":"29","atv":"30","tvi":"31"," ja":"32"," pi":"33","ka ":"34"," ir":"35","ir ":"36","ta ":"37"," sa":"38","ts ":"39"," k\u0101":"40","\u0101s ":"41"," ti":"42","ot ":"43","s n":"44"," ie":"45"," ta":"46","ar\u012b":"47","par":"48","pie":"49"," pr":"50","k\u0101 ":"51"," at":"52"," ra":"53","am ":"54","in\u0101":"55","t\u0101 ":"56"," iz":"57","jas":"58","lai":"59"," na":"60","aut":"61","ie\u0161":"62","s s":"63"," ap":"64"," ko":"65"," st":"66","iek":"67","iet":"68","jau":"69","us ":"70","r\u012b ":"71","tik":"72","\u012bba":"73","na ":"74"," ga":"75","cij":"76","s i":"77"," uz":"78","jum":"79","s v":"80","ms ":"81","var":"82"," ku":"83"," ma":"84","j\u0101 ":"85","sta":"86","s u":"87"," t\u0101":"88","die":"89","kai":"90","kas":"91","ska":"92"," ci":"93"," da":"94","kur":"95","lie":"96","tas":"97","a p":"98","est":"99","st\u0101":"100","\u0161an":"101","nes":"102","nie":"103","s d":"104","s m":"105","val":"106"," di":"107"," es":"108"," re":"109","no ":"110","to ":"111","umu":"112","vai":"113","\u0161i ":"114"," v\u0113":"115","kum":"116","nu ":"117","rie":"118","s t":"119","\u0101m ":"120","ad ":"121","et ":"122","mu ":"123","s l":"124"," be":"125","aud":"126","tur":"127","vij":"128","vi\u0146":"129","\u0101ju":"130","bas":"131","gad":"132","i n":"133","ika":"134","os ":"135","a v":"136","not":"137","oti":"138","sts":"139","aik":"140","u a":"141","\u0101 a":"142","\u0101k ":"143"," to":"144","ied":"145","stu":"146","ti ":"147","u p":"148","v\u0113l":"149","\u0101ci":"150"," \u0161o":"151","gi ":"152","ko ":"153","pro":"154","s r":"155","t\u0101j":"156","u s":"157","u v":"158","vis":"159","aun":"160","ks ":"161","str":"162","zin":"163","a a":"164","ad\u012b":"165","da ":"166","dar":"167","ena":"168","ici":"169","kra":"170","nas":"171","st\u012b":"172","\u0161u ":"173"," m\u0113":"174","a n":"175","eci":"176","i s":"177","ie ":"178","i\u0146a":"179","ju ":"180","las":"181","r t":"182","ums":"183","\u0161ie":"184","bu ":"185","cit":"186","i a":"187","ina":"188","ma ":"189","pus":"190","ra ":"191"," au":"192"," se":"193"," sl":"194","a s":"195","ais":"196","e\u0161i":"197","iec":"198","iku":"199","p\u0101r":"200","s b":"201","s k":"202","sot":"203","\u0101d\u0101":"204"," in":"205"," li":"206"," tr":"207","ana":"208","eso":"209","ikr":"210","man":"211","ne ":"212","u k":"213"," tu":"214","an ":"215","av ":"216","bet":"217","b\u016bt":"218","im ":"219","isk":"220","l\u012bd":"221","nav":"222","ras":"223","ri ":"224","s g":"225","sti":"226","\u012bdz":"227"," ai":"228","arb":"229","cin":"230","das":"231","ent":"232","gal":"233","i p":"234","lik":"235","m\u0101 ":"236","nek":"237","pat":"238","r\u0113t":"239","si ":"240","tra":"241","u\u0161i":"242","vei":"243"," br":"244"," pu":"245"," sk":"246","als":"247","ama":"248","edz":"249","eka":"250","e\u0161u":"251","ieg":"252","jis":"253","kam":"254","lst":"255","n\u0101k":"256","oli":"257","pre":"258","p\u0113c":"259","rot":"260","t\u0101s":"261","usi":"262","\u0113l ":"263","\u0113s ":"264"," bi":"265"," de":"266"," me":"267"," p\u0101":"268","a i":"269","aid":"270","aj\u0101":"271","ikt":"272","kat":"273","lic":"274","lod":"275","mi ":"276","ni ":"277","pri":"278","r\u0101d":"279","r\u012bg":"280","sim":"281","tr\u0101":"282","u l":"283","uto":"284","uz ":"285","\u0113c ":"286","\u012bt\u0101":"287"," ce":"288"," j\u0101":"289"," sv":"290","a t":"291","aga":"292","aiz":"293","atu":"294","ba ":"295","cie":"296","du ":"297","dzi":"298","dz\u012b":"299"},"lithuanian":{"as ":"0"," pa":"1"," ka":"2","ai ":"3","us ":"4","os ":"5","is ":"6"," ne":"7"," ir":"8","ir ":"9","ti ":"10"," pr":"11","aus":"12","ini":"13","s p":"14","pas":"15","i\u0173 ":"16"," ta":"17"," vi":"18","iau":"19"," ko":"20"," su":"21","kai":"22","o p":"23","usi":"24"," sa":"25","vo ":"26","tai":"27","ali":"28","t\u0173 ":"29","io ":"30","jo ":"31","s k":"32","sta":"33","iai":"34"," bu":"35"," nu":"36","ius":"37","mo ":"38"," po":"39","ien":"40","s s":"41","tas":"42"," me":"43","uvo":"44","kad":"45"," i\u0161":"46"," la":"47","to ":"48","ais":"49","ie ":"50","kur":"51","uri":"52"," ku":"53","ijo":"54","\u010dia":"55","au ":"56","met":"57","je ":"58"," va":"59","ad ":"60"," ap":"61","and":"62"," gr":"63"," ti":"64","kal":"65","asi":"66","i p":"67","i\u010di":"68","s i":"69","s v":"70","ink":"71","o n":"72","\u0117s ":"73","buv":"74","s a":"75"," ga":"76","aip":"77","avi":"78","mas":"79","pri":"80","tik":"81"," re":"82","etu":"83","jos":"84"," da":"85","ent":"86","oli":"87","par":"88","ant":"89","ara":"90","tar":"91","ama":"92","gal":"93","imo":"94","i\u0161k":"95","o s":"96"," at":"97"," be":"98"," \u012f ":"99","min":"100","tin":"101"," tu":"102","s n":"103"," jo":"104","dar":"105","ip ":"106","rei":"107"," te":"108","d\u017ei":"109","kas":"110","nin":"111","tei":"112","vie":"113"," li":"114"," se":"115","cij":"116","gar":"117","lai":"118","art":"119","lau":"120","ras":"121","no ":"122","o k":"123","t\u0105 ":"124"," ar":"125","\u0117jo":"126","vi\u010d":"127","iga":"128","pra":"129","vis":"130"," na":"131","men":"132","oki":"133","ra\u0161":"134","s t":"135","iet":"136","ika":"137","int":"138","kom":"139","tam":"140","aug":"141","avo":"142","rie":"143","s b":"144"," st":"145","eim":"146","ko ":"147","nus":"148","pol":"149","ria":"150","sau":"151","api":"152","me ":"153","ne ":"154","sik":"155"," \u0161i":"156","i n":"157","ia ":"158","ici":"159","oja":"160","sak":"161","sti":"162","ui ":"163","ame":"164","lie":"165","o t":"166","pie":"167","\u010diu":"168"," di":"169"," pe":"170","gri":"171","ios":"172","lia":"173","lin":"174","s d":"175","s g":"176","ta ":"177","uot":"178"," ja":"179"," u\u017e":"180","aut":"181","i s":"182","ino":"183","m\u0105 ":"184","oje":"185","rav":"186","d\u0117l":"187","nti":"188","o a":"189","toj":"190","\u0117l ":"191"," to":"192"," vy":"193","ar ":"194","ina":"195","lic":"196","o v":"197","sei":"198","su ":"199"," mi":"200"," pi":"201","din":"202","i\u0161 ":"203","lan":"204","si ":"205","tus":"206"," ba":"207","asa":"208","ata":"209","kla":"210","omi":"211","tat":"212"," an":"213"," ji":"214","als":"215","ena":"216","j\u0173 ":"217","nuo":"218","per":"219","rig":"220","s m":"221","val":"222","yta":"223","\u010dio":"224"," ra":"225","i k":"226","lik":"227","net":"228","n\u0117 ":"229","tis":"230","tuo":"231","yti":"232","\u0119s ":"233","\u0173 s":"234","ada":"235","ari":"236","do ":"237","eik":"238","eis":"239","ist":"240","lst":"241","ma ":"242","nes":"243","sav":"244","sio":"245","tau":"246"," ki":"247","aik":"248","aud":"249","ies":"250","ori":"251","s r":"252","ska":"253"," ge":"254","ast":"255","eig":"256","et ":"257","iam":"258","isa":"259","mis":"260","nam":"261","ome":"262","\u017eia":"263","aba":"264","aul":"265","ikr":"266","k\u0105 ":"267","nta":"268","ra ":"269","tur":"270"," ma":"271","die":"272","ei ":"273","i t":"274","nas":"275","rin":"276","sto":"277","tie":"278","tuv":"279","vos":"280","\u0173 p":"281"," d\u0117":"282","are":"283","ats":"284","en\u0117":"285","ili":"286","ima":"287","kar":"288","ms ":"289","nia":"290","r p":"291","rod":"292","s l":"293"," o ":"294","e p":"295","es ":"296","ide":"297","ik ":"298","ja ":"299"},"macedonian":{"\u043d\u0430 ":"0"," \u043d\u0430":"1","\u0442\u0430 ":"2","\u0430\u0442\u0430":"3","\u0438\u0458\u0430":"4"," \u043f\u0440":"5","\u0442\u043e ":"6","\u0458\u0430 ":"7"," \u0437\u0430":"8","\u0430 \u043d":"9"," \u0438 ":"10","\u0430 \u0441":"11","\u0442\u0435 ":"12","\u0438\u0442\u0435":"13"," \u043a\u043e":"14","\u043e\u0442 ":"15"," \u0434\u0435":"16"," \u043f\u043e":"17","\u0430 \u0434":"18","\u0432\u043e ":"19","\u0437\u0430 ":"20"," \u0432\u043e":"21"," \u043e\u0434":"22"," \u0441\u0435":"23"," \u043d\u0435":"24","\u0441\u0435 ":"25"," \u0434\u043e":"26","\u0430 \u0432":"27","\u043a\u0430 ":"28","\u0430\u045a\u0435":"29","\u0430 \u043f":"30","\u043e \u043f":"31","\u0443\u0432\u0430":"32","\u0446\u0438\u0458":"33","\u0430 \u043e":"34","\u0438\u0446\u0438":"35","\u0435\u0442\u043e":"36","\u043e \u043d":"37","\u0430\u043d\u0438":"38","\u043d\u0438 ":"39"," \u0432\u043b":"40","\u0434\u0435\u043a":"41","\u0435\u043a\u0430":"42","\u045a\u0435\u0442":"43","\u045c\u0435 ":"44"," \u0435 ":"45","\u0430 \u0437":"46","\u0430 \u0438":"47","\u0430\u0442 ":"48","\u0432\u043b\u0430":"49","\u0433\u043e ":"50","\u0435 \u043d":"51","\u043e\u0434 ":"52","\u043f\u0440\u0435":"53"," \u0433\u043e":"54"," \u0434\u0430":"55"," \u043c\u0430":"56"," \u0440\u0435":"57"," \u045c\u0435":"58","\u0430\u043b\u0438":"59","\u0438 \u0434":"60","\u0438 \u043d":"61","\u0438\u043e\u0442":"62","\u043d\u0430\u0442":"63","\u043e\u0432\u043e":"64"," \u043f\u0430":"65"," \u0440\u0430":"66"," \u0441\u043e":"67","\u043e\u0432\u0435":"68","\u043f\u0440\u0430":"69","\u0448\u0442\u043e":"70","\u045a\u0435 ":"71","\u0430 \u0435":"72","\u0434\u0430 ":"73","\u0434\u0430\u0442":"74","\u0434\u043e\u043d":"75","\u0435 \u0432":"76","\u0435 \u0434":"77","\u0435 \u0437":"78","\u0435 \u0441":"79","\u043a\u043e\u043d":"80","\u043d\u0438\u0442":"81","\u043d\u043e ":"82","\u043e\u043d\u0438":"83","\u043e\u0442\u043e":"84","\u043f\u0430\u0440":"85","\u043f\u0440\u0438":"86","\u0441\u0442\u0430":"87","\u0442 \u043d":"88"," \u0448\u0442":"89","\u0430 \u043a":"90","\u0430\u0446\u0438":"91","\u0432\u0430 ":"92","\u0432\u0430\u045a":"93","\u0435 \u043f":"94","\u0435\u043d\u0438":"95","\u043b\u0430 ":"96","\u043b\u0430\u0434":"97","\u043c\u0430\u043a":"98","\u043d\u0435\u0441":"99","\u043d\u043e\u0441":"100","\u043f\u0440\u043e":"101","\u0440\u0435\u043d":"102","\u0458\u0430\u0442":"103"," \u0438\u043d":"104"," \u043c\u0435":"105"," \u0442\u043e":"106","\u0430 \u0433":"107","\u0430 \u043c":"108","\u0430 \u0440":"109","\u0430\u043a\u0435":"110","\u0430\u043a\u043e":"111","\u0432\u043e\u0440":"112","\u0433\u043e\u0432":"113","\u0435\u0434\u043e":"114","\u0435\u043d\u0430":"115","\u0438 \u0438":"116","\u0438\u0440\u0430":"117","\u043a\u0435\u0434":"118","\u043d\u0435 ":"119","\u043d\u0438\u0446":"120","\u043d\u0438\u0458":"121","\u043e\u0441\u0442":"122","\u0440\u0430 ":"123","\u0440\u0430\u0442":"124","\u0440\u0435\u0434":"125","\u0441\u043a\u0430":"126","\u0442\u0435\u043d":"127"," \u043a\u0430":"128"," \u0441\u043f":"129"," \u0458\u0430":"130","\u0430 \u0442":"131","\u0430\u0434\u0435":"132","\u0430\u0440\u0442":"133","\u0435 \u0433":"134","\u0435 \u0438":"135","\u043a\u0430\u0442":"136","\u043b\u0430\u0441":"137","\u043d\u0438\u043e":"138","\u043e \u0441":"139","\u0440\u0438 ":"140"," \u0431\u0430":"141"," \u0431\u0438":"142","\u0430\u0432\u0430":"143","\u0430\u0442\u0435":"144","\u0432\u043d\u0438":"145","\u0434 \u043d":"146","\u0434\u0435\u043d":"147","\u0434\u043e\u0432":"148","\u0434\u0440\u0436":"149","\u0434\u0443\u0432":"150","\u0435 \u043e":"151","\u0435\u043d ":"152","\u0435\u0440\u0435":"153","\u0435\u0440\u0438":"154","\u0438 \u043f":"155","\u0438 \u0441":"156","\u0438\u043d\u0430":"157","\u043a\u043e\u0458":"158","\u043d\u0446\u0438":"159","\u043e \u043c":"160","\u043e \u043e":"161","\u043e\u0434\u043d":"162","\u043f\u043e\u0440":"163","\u0441\u043a\u0438":"164","\u0441\u043f\u043e":"165","\u0441\u0442\u0432":"166","\u0441\u0442\u0438":"167","\u0442\u0432\u043e":"168","\u0442\u0438 ":"169"," \u043e\u0431":"170"," \u043e\u0432":"171","\u0430 \u0431":"172","\u0430\u043b\u043d":"173","\u0430\u0440\u0430":"174","\u0431\u0430\u0440":"175","\u0435 \u043a":"176","\u0435\u0434 ":"177","\u0435\u043d\u0442":"178","\u0435\u0453\u0443":"179","\u0438 \u043e":"180","\u0438\u0438 ":"181","\u043c\u0435\u0453":"182","\u043e \u0434":"183","\u043e\u0458\u0430":"184","\u043f\u043e\u0442":"185","\u0440\u0430\u0437":"186","\u0440\u0430\u0448":"187","\u0441\u043f\u0440":"188","\u0441\u0442\u043e":"189","\u0442 \u0434":"190","\u0446\u0438 ":"191"," \u0431\u0435":"192"," \u0433\u0440":"193"," \u0434\u0440":"194"," \u0438\u0437":"195"," \u0441\u0442":"196","\u0430\u0430 ":"197","\u0431\u0438\u0434":"198","\u0432\u0435\u0434":"199","\u0433\u043b\u0430":"200","\u0435\u043a\u043e":"201","\u0435\u043d\u0434":"202","\u0435\u0441\u0435":"203","\u0435\u0442\u0441":"204","\u0437\u0430\u0446":"205","\u0438 \u0442":"206","\u0438\u0437\u0430":"207","\u0438\u043d\u0441":"208","\u0438\u0441\u0442":"209","\u043a\u0438 ":"210","\u043a\u043e\u0432":"211","\u043a\u043e\u043b":"212","\u043a\u0443 ":"213","\u043b\u0438\u0446":"214","\u043e \u0437":"215","\u043e \u0438":"216","\u043e\u0432\u0430":"217","\u043e\u043b\u043a":"218","\u043e\u0440\u0435":"219","\u043e\u0440\u0438":"220","\u043f\u043e\u0434":"221","\u0440\u0430\u045a":"222","\u0440\u0435\u0444":"223","\u0440\u0436\u0430":"224","\u0440\u043e\u0432":"225","\u0440\u0442\u0438":"226","\u0441\u043e ":"227","\u0442\u043e\u0440":"228","\u0444\u0435\u0440":"229","\u0446\u0435\u043d":"230","\u0446\u0438\u0442":"231"," \u0430 ":"232"," \u0432\u0440":"233"," \u0433\u043b":"234"," \u0434\u043f":"235"," \u043c\u043e":"236"," \u043d\u0438":"237"," \u043d\u043e":"238"," \u043e\u043f":"239"," \u043e\u0442":"240","\u0430 \u045c":"241","\u0430\u0431\u043e":"242","\u0430\u0434\u0430":"243","\u0430\u0441\u0430":"244","\u0430\u0448\u0430":"245","\u0431\u0430 ":"246","\u0431\u043e\u0442":"247","\u0432\u0430\u0430":"248","\u0432\u0430\u0442":"249","\u0432\u043e\u0442":"250","\u0433\u0438 ":"251","\u0433\u0440\u0430":"252","\u0434\u0435 ":"253","\u0434\u0438\u043d":"254","\u0434\u0443\u043c":"255","\u0435\u0432\u0440":"256","\u0435\u0434\u0443":"257","\u0435\u043d\u043e":"258","\u0435\u0440\u0430":"259","\u0435\u0441 ":"260","\u0435\u045a\u0435":"261","\u0436\u0435 ":"262","\u0437\u0430\u043a":"263","\u0438 \u0432":"264","\u0438\u043b\u0430":"265","\u0438\u0442\u0443":"266","\u043a\u043e\u0430":"267","\u043a\u043e\u0438":"268","\u043b\u0430\u043d":"269","\u043b\u043a\u0443":"270","\u043b\u043e\u0436":"271","\u043c\u043e\u0442":"272","\u043d\u0434\u0443":"273","\u043d\u0441\u0442":"274","\u043e \u0432":"275","\u043e\u0430 ":"276","\u043e\u0430\u043b":"277","\u043e\u0431\u0440":"278","\u043e\u0432 ":"279","\u043e\u0432\u0438":"280","\u043e\u0432\u043d":"281","\u043e\u0438 ":"282","\u043e\u0440 ":"283","\u043e\u0440\u043c":"284","\u043e\u0458 ":"285","\u0440\u0435\u0442":"286","\u0441\u0435\u0434":"287","\u0441\u0442 ":"288","\u0442\u0435\u0440":"289","\u0442\u0438\u0458":"290","\u0442\u043e\u0430":"291","\u0444\u043e\u0440":"292","\u0446\u0438\u0438":"293","\u0453\u0443 ":"294"," \u0430\u043b":"295"," \u0432\u0435":"296"," \u0432\u043c":"297"," \u0433\u0438":"298"," \u0434\u0443":"299"},"mongolian":{"\u044b\u043d ":"0"," \u0431\u0430":"1","\u0439\u043d ":"2","\u0431\u0430\u0439":"3","\u0438\u0439\u043d":"4","\u0443\u0443\u043b":"5"," \u0443\u043b":"6","\u0443\u043b\u0441":"7","\u0430\u043d ":"8"," \u0445\u0430":"9","\u043d\u0438\u0439":"10","\u043d \u0445":"11","\u0433\u0430\u0430":"12","\u0441\u044b\u043d":"13","\u0438\u0439 ":"14","\u043b\u0441\u044b":"15"," \u0431\u043e":"16","\u0439 \u0431":"17","\u044d\u043d ":"18","\u0430\u0445 ":"19","\u0431\u043e\u043b":"20","\u043e\u043b ":"21","\u043d \u0431":"22","\u043e\u043b\u043e":"23"," \u0445\u044d":"24","\u043e\u043d\u0433":"25","\u0433\u043e\u043b":"26","\u0433\u0443\u0443":"27","\u043d\u0433\u043e":"28","\u044b\u0433 ":"29","\u0436\u0438\u043b":"30"," \u043c\u043e":"31","\u043b\u0430\u0433":"32","\u043b\u043b\u0430":"33","\u043c\u043e\u043d":"34"," \u0442\u0454":"35"," \u0445\u0443":"36","\u0430\u0439\u0434":"37","\u043d\u044b ":"38","\u043e\u043d ":"39","\u0441\u0430\u043d":"40","\u0445\u0438\u0439":"41"," \u0430\u0436":"42"," \u043e\u0440":"43","\u043b \u0443":"44","\u043d \u0442":"45","\u0443\u043b\u0433":"46","\u0430\u0439\u0433":"47","\u0434\u043b\u044b":"48","\u0439\u0433 ":"49"," \u0437\u0430":"50","\u0434\u044d\u0441":"51","\u043d \u0430":"52","\u043d\u0434\u044d":"53","\u0443\u043b\u0430":"54","\u044d\u044d ":"55","\u0430\u0433\u0430":"56","\u0438\u0439\u0433":"57","v\u0439 ":"58","\u0430\u0430 ":"59","\u0439 \u0430":"60","\u043b\u044b\u043d":"61","\u043d \u0437":"62"," \u0430\u044e":"63"," \u0437\u0454":"64","\u0430\u0430\u0440":"65","\u0430\u0434 ":"66","\u0430\u0440 ":"67","\u0433v\u0439":"68","\u0437\u0454\u0432":"69","\u0430\u0436\u0438":"70","\u0430\u043b ":"71","\u0430\u044e\u0443":"72","\u0433 \u0445":"73","\u043b\u0433v":"74","\u043b\u0436 ":"75","\u0441\u043d\u0438":"76","\u044d\u0441\u043d":"77","\u044e\u0443\u043b":"78","\u0439\u0434\u043b":"79","\u043b\u044b\u0433":"80","\u043d\u0445\u0438":"81","\u0443\u0443\u0434":"82","\u0445\u0430\u043c":"83"," \u043d\u044d":"84"," \u0441\u0430":"85","\u0433\u0438\u0439":"86","\u043b\u0430\u0445":"87","\u043b\u0454\u043b":"88","\u0440\u0454\u043d":"89","\u0454\u0433\u0447":"90"," \u0442\u0430":"91","\u0438\u043b\u043b":"92","\u043b\u0438\u0439":"93","\u043b\u044d\u0445":"94","\u0440\u0438\u0439":"95","\u044d\u0445 ":"96"," \u0435\u0440":"97"," \u044d\u0440":"98","\u0432\u043b\u0454":"99","\u0435\u0440\u0454":"100","\u0438\u0439\u043b":"101","\u043b\u043e\u043d":"102","\u043b\u0454\u0433":"103","\u0454\u0432\u043b":"104","\u0454\u043d\u0445":"105"," \u0445\u043e":"106","\u0430\u0440\u0438":"107","\u0438\u0445 ":"108","\u0445\u0430\u043d":"109","\u044d\u0440 ":"110","\u0454\u043d ":"111","vv\u043b":"112","\u0436 \u0431":"113","\u0442\u044d\u0439":"114","\u0445 \u0445":"115","\u044d\u0440\u0445":"116"," v\u043d":"117"," \u043d\u044c":"118","v\u043d\u0434":"119","\u0430\u043b\u0442":"120","\u0439\u043b\u0454":"121","\u043d\u044c ":"122","\u0442\u0454\u0440":"123"," \u0433\u0430":"124"," \u0441\u0443":"125","\u0430\u0430\u043d":"126","\u0434\u0430\u0430":"127","\u0438\u043b\u0446":"128","\u0439\u0433\u0443":"129","\u043b \u0430":"130","\u043b\u0430\u0430":"131","\u043d \u043d":"132","\u0440\u0443\u0443":"133","\u044d\u0439 ":"134"," \u0442\u043e":"135","\u043d \u0441":"136","\u0440\u0438\u043b":"137","\u0454\u0440\u0438":"138","\u0430\u0430\u0433":"139","\u0433\u0447 ":"140","\u043b\u044d\u044d":"141","\u043d \u043e":"142","\u0440\u044d\u0433":"143","\u0441\u0443\u0443":"144","\u044d\u0440\u044d":"145","\u0457\u0457\u043b":"146"," y\u043d":"147"," \u0431\u0443":"148"," \u0434\u044d":"149"," \u043e\u043b":"150"," \u0442\u0443":"151"," \u0448\u0438":"152","y\u043d\u0434":"153","\u0430\u0448\u0438":"154","\u0433 \u0442":"155","\u0438\u0433 ":"156","\u0439\u043b ":"157","\u0445\u0430\u0440":"158","\u0448\u0438\u043d":"159","\u044d\u0433 ":"160","\u0454\u0440 ":"161"," \u0438\u0445":"162"," \u0445\u0454":"163"," \u0445\u0457":"164","\u0430\u043c ":"165","\u0430\u043d\u0433":"166","\u0438\u043d ":"167","\u0439\u0433\u0430":"168","\u043b\u0441\u0430":"169","\u043d v":"170","\u043d \u0435":"171","\u043d\u0430\u043b":"172","\u043d\u0434 ":"173","\u0445\u0443\u0443":"174","\u0446\u0430\u0430":"175","\u044d\u0434 ":"176","\u044d\u044d\u0440":"177","\u0454\u043b ":"178","v\u0439\u043b":"179","\u0430\u0434\u0430":"180","\u0430\u0439\u043d":"181","\u0430\u043b\u0430":"182","\u0430\u043c\u0442":"183","\u0433\u0430\u0445":"184","\u0434 \u0445":"185","\u0434\u0430\u043b":"186","\u0437\u0430\u0440":"187","\u043b \u0431":"188","\u043b\u0430\u043d":"189","\u043d \u0434":"190","\u0441\u044d\u043d":"191","\u0443\u043b\u043b":"192","\u0445 \u0431":"193","\u0445\u044d\u0440":"194"," \u0431v":"195"," \u0434\u0430":"196"," \u0437\u043e":"197","v\u0440\u044d":"198","\u0430\u0430\u0434":"199","\u0433\u044d\u044d":"200","\u043b\u044d\u043d":"201","\u043d \u0438":"202","\u043d \u044d":"203","\u043d\u0433\u0430":"204","\u043d\u044d ":"205","\u0442\u0430\u043b":"206","\u0442\u044b\u043d":"207","\u0445\u0443\u0440":"208","\u044d\u043b ":"209"," \u043d\u0430":"210"," \u043d\u0438":"211"," \u043e\u043d":"212","v\u043b\u044d":"213","\u0430\u0433 ":"214","\u0430\u0436 ":"215","\u0430\u0439 ":"216","\u0430\u0442\u0430":"217","\u0431\u0430\u0440":"218","\u0433 \u0431":"219","\u0433\u0430\u0434":"220","\u0433\u0457\u0439":"221","\u0439 \u0445":"222","\u043b\u0442 ":"223","\u043d \u043c":"224","\u043d\u0430 ":"225","\u043e\u0440\u043e":"226","\u0443\u043b\u044c":"227","\u0447\u0438\u043d":"228","\u044d\u0436 ":"229","\u044d\u043d\u044d":"230","\u044d\u044d\u0434":"231","\u0457\u0439 ":"232","\u0457\u043b\u044d":"233"," \u0431\u0438":"234"," \u0442\u044d":"235"," \u044d\u043d":"236","\u0430\u043d\u044b":"237","\u0434\u0438\u0439":"238","\u0434\u044d\u044d":"239","\u043b\u0430\u043b":"240","\u043b\u0433\u0430":"241","\u043b\u0434 ":"242","\u043b\u043e\u0433":"243","\u043b\u044c ":"244","\u043d \u0443":"245","\u043d \u0457":"246","\u0440 \u0431":"247","\u0440\u0430\u043b":"248","\u0441\u043e\u043d":"249","\u0442\u0430\u0439":"250","\u0443\u0434\u043b":"251","\u044d\u043b\u0442":"252","\u044d\u0440\u0433":"253","\u0454\u043b\u0454":"254"," v\u0439":"255"," \u0432 ":"256"," \u0433\u044d":"257"," \u0445v":"258","\u0430\u0440\u0430":"259","\u0431v\u0440":"260","\u0434 \u043d":"261","\u0434 \u043e":"262","\u043b \u0445":"263","\u043b\u0441 ":"264","\u043b\u0442\u044b":"265","\u043d \u0433":"266","\u043d\u044d\u0433":"267","\u043e\u0433\u0442":"268","\u043e\u043b\u044b":"269","\u043e\u0451\u0440":"270","\u0440 \u0442":"271","\u0440\u044d\u044d":"272","\u0442\u0430\u0432":"273","\u0442\u043e\u0433":"274","\u0443\u0443\u0440":"275","\u0445\u043e\u0451":"276","\u0445\u044d\u043b":"277","\u0445\u044d\u044d":"278","\u044d\u043b\u044d":"279","\u0451\u0440 ":"280"," \u0430\u0432":"281"," \u0430\u0441":"282"," \u0430\u0448":"283"," \u0434\u0443":"284"," \u0441\u043e":"285"," \u0447\u0438":"286"," \u044d\u0432":"287"," \u0454\u0440":"288","\u0430\u0430\u043b":"289","\u0430\u043b\u0434":"290","\u0430\u043c\u0436":"291","\u0430\u043d\u0434":"292","\u0430\u0441\u0443":"293","\u0432\u044d\u0440":"294","\u0433 \u0443":"295","\u0434\u0432\u044d":"296","\u0436vv":"297","\u043b\u0446\u0430":"298","\u043b\u044d\u043b":"299"},"nepali":{"\u0915\u094b ":"0","\u0915\u093e ":"1","\u092e\u093e ":"2","\u0939\u0930\u0941":"3"," \u0928\u0947":"4","\u0928\u0947\u092a":"5","\u092a\u093e\u0932":"6","\u0947\u092a\u093e":"7"," \u0938\u092e":"8","\u0932\u0947 ":"9"," \u092a\u094d":"10","\u092a\u094d\u0930":"11","\u0915\u093e\u0930":"12","\u093e \u0938":"13","\u090f\u0915\u094b":"14"," \u092d\u090f":"15"," \u091b ":"16"," \u092d\u093e":"17","\u094d\u0930\u092e":"18"," \u0917\u0930":"19","\u0930\u0941\u0915":"20"," \u0930 ":"21","\u092d\u093e\u0930":"22","\u093e\u0930\u0924":"23"," \u0915\u093e":"24"," \u0935\u093f":"25","\u092d\u090f\u0915":"26","\u093e\u0932\u0940":"27","\u0932\u0940 ":"28","\u093e \u092a":"29","\u0940\u0939\u0930":"30","\u093e\u0930\u094d":"31","\u094b \u091b":"32","\u0928\u093e ":"33","\u0930\u0941 ":"34","\u093e\u0932\u0915":"35","\u094d\u092f\u093e":"36"," \u092c\u093e":"37","\u090f\u0915\u093e":"38","\u0928\u0947 ":"39","\u0928\u094d\u0924":"40","\u093e \u092c":"41","\u093e\u0915\u094b":"42","\u093e\u0930 ":"43","\u093e \u092d":"44","\u093e\u0939\u0930":"45","\u094d\u0930\u094b":"46","\u0915\u094d\u0937":"47","\u0928\u094d ":"48","\u093e\u0930\u0940":"49"," \u0928\u093f":"50","\u093e \u0928":"51","\u0940 \u0938":"52"," \u0921\u0941":"53","\u0915\u094d\u0930":"54","\u091c\u0928\u093e":"55","\u092f\u094b ":"56","\u093e \u091b":"57","\u0947\u0935\u093e":"58","\u094d\u0924\u093e":"59"," \u0930\u093e":"60","\u0924\u094d\u092f":"61","\u0928\u094d\u0926":"62","\u0939\u0941\u0928":"63","\u093e \u0915":"64","\u093e\u092e\u093e":"65","\u0940 \u0928":"66","\u094d\u0926\u093e":"67"," \u0938\u0947":"68","\u091b\u0928\u094d":"69","\u092e\u094d\u092c":"70","\u0930\u094b\u0924":"71","\u0938\u0947\u0935":"72","\u0938\u094d\u0924":"73","\u0938\u094d\u0930":"74","\u0947\u0915\u093e":"75","\u094d\u0924 ":"76"," \u092c\u0940":"77"," \u0939\u0941":"78","\u0915\u094d\u0924":"79","\u0924\u094d\u0930":"80","\u0930\u0924 ":"81","\u0930\u094d\u0928":"82","\u0930\u094d\u092f":"83","\u093e \u0930":"84","\u093e\u0915\u093e":"85","\u0941\u0915\u094b":"86"," \u090f\u0915":"87"," \u0938\u0902":"88"," \u0938\u0941":"89","\u092c\u0940\u092c":"90","\u092c\u0940\u0938":"91","\u0932\u0915\u094b":"92","\u0938\u094d\u092f":"93","\u0940\u092c\u0940":"94","\u0940\u0938\u0940":"95","\u0947\u0915\u094b":"96","\u094b \u0938":"97","\u094d\u092f\u0915":"98"," \u091b\u0928":"99"," \u091c\u0928":"100"," \u092c\u093f":"101"," \u092e\u0941":"102"," \u0938\u094d":"103","\u0917\u0930\u094d":"104","\u0924\u093e\u0939":"105","\u0928\u094d\u0927":"106","\u092c\u093e\u0930":"107","\u092e\u0928\u094d":"108","\u092e\u0938\u094d":"109","\u0930\u0941\u0932":"110","\u0932\u093e\u0908":"111","\u093e \u0935":"112","\u093e\u0908 ":"113","\u093e\u0932 ":"114","\u093f\u0915\u093e":"115"," \u0924\u094d":"116"," \u092e\u093e":"117"," \u092f\u0938":"118"," \u0930\u0941":"119","\u0924\u093e\u0915":"120","\u092c\u0928\u094d":"121","\u0930 \u092c":"122","\u0930\u0923 ":"123","\u0930\u0941\u092a":"124","\u0930\u0947\u0915":"125","\u0937\u094d\u091f":"126","\u0938\u092e\u094d":"127","\u0938\u0940 ":"128","\u093e\u090f\u0915":"129","\u0941\u0915\u093e":"130","\u0941\u0915\u094d":"131"," \u0905\u0927":"132"," \u0905\u0928":"133"," \u0924\u0925":"134"," \u0925\u093f":"135"," \u0926\u0947":"136"," \u092a\u0930":"137"," \u092c\u0948":"138","\u0924\u0925\u093e":"139","\u0924\u093e ":"140","\u0926\u093e ":"141","\u0926\u094d\u0926":"142","\u0928\u0940 ":"143","\u092c\u093e\u091f":"144","\u092f\u0915\u094d":"145","\u0930\u0940 ":"146","\u0930\u0940\u0939":"147","\u0930\u094d\u092e":"148","\u0932\u0915\u093e":"149","\u0938\u092e\u0938":"150","\u093e \u0905":"151","\u093e \u090f":"152","\u093e\u091f ":"153","\u093f\u092f ":"154","\u094b \u092a":"155","\u094b \u092e":"156","\u094d\u0928 ":"157","\u094d\u0928\u0947":"158","\u094d\u0937\u093e":"159"," \u092a\u093e":"160"," \u092f\u094b":"161"," \u0939\u093e":"162","\u0905\u0927\u093f":"163","\u0921\u0941\u0935":"164","\u0924 \u092d":"165","\u0924 \u0938":"166","\u0925\u093e ":"167","\u0927\u093f\u0915":"168","\u092a\u092e\u093e":"169","\u092c\u0948\u0920":"170","\u092e\u0941\u0926":"171","\u092f\u093e ":"172","\u092f\u0941\u0915":"173","\u0930 \u0928":"174","\u0930\u0924\u093f":"175","\u0935\u093e\u0928":"176","\u0938\u093e\u0930":"177","\u093e \u0906":"178","\u093e \u091c":"179","\u093e \u0939":"180","\u0941\u0926\u094d":"181","\u0941\u092a\u092e":"182","\u0941\u0932\u0947":"183","\u0941\u0935\u093e":"184","\u0948\u0920\u0915":"185","\u094b \u092c":"186","\u094d\u0924\u0930":"187","\u094d\u092f ":"188","\u094d\u092f\u0938":"189"," \u0915\u094d":"190"," \u092e\u0928":"191"," \u0930\u0939":"192","\u091a\u093e\u0930":"193","\u0924\u093f\u092f":"194","\u0926\u0948 ":"195","\u0928\u093f\u0930":"196","\u0928\u0941 ":"197","\u092a\u0930\u094d":"198","\u0930\u0915\u094d":"199","\u0930\u094d\u0926":"200","\u0938\u092e\u093e":"201","\u0938\u0941\u0930":"202","\u093e\u0909\u0928":"203","\u093e\u0928 ":"204","\u093e\u0928\u092e":"205","\u093e\u0930\u0923":"206","\u093e\u0932\u0947":"207","\u093f \u092c":"208","\u093f\u092f\u094b":"209","\u0941\u0928\u094d":"210","\u0941\u0930\u0915":"211","\u094d\u0924\u094d":"212","\u094d\u092c\u0928":"213","\u094d\u0930\u093e":"214","\u094d\u0937 ":"215"," \u0906\u0930":"216"," \u091c\u0932":"217"," \u092c\u0947":"218"," \u092f\u093e":"219"," \u0938\u093e":"220","\u0906\u090f\u0915":"221","\u090f\u0915 ":"222","\u0915\u0930\u094d":"223","\u091c\u0932\u0938":"224","\u0923\u0915\u093e":"225","\u0924 \u0930":"226","\u0926\u094d\u0930":"227","\u0927\u093e\u0928":"228","\u0927\u093f ":"229","\u0928\u0915\u093e":"230","\u0928\u092e\u093e":"231","\u0928\u093f ":"232","\u092e\u092e\u093e":"233","\u0930\u092e ":"234","\u0930\u0939\u0947":"235","\u0930\u093e\u091c":"236","\u0932\u0938\u094d":"237","\u0932\u093e ":"238","\u0935\u093e\u0930":"239","\u0938\u0915\u093e":"240","\u0939\u093f\u0932":"241","\u0939\u0947\u0915":"242","\u093e \u0924":"243","\u093e\u0930\u0947":"244","\u093f\u0928\u094d":"245","\u093f\u0938\u094d":"246","\u0947 \u0938":"247","\u094b \u0928":"248","\u094b \u0930":"249","\u094b\u0924 ":"250","\u094d\u0927\u093f":"251","\u094d\u092e\u0940":"252","\u094d\u0930\u0938":"253"," \u0926\u0941":"254"," \u092a\u0928":"255"," \u092c\u0924":"256"," \u092c\u0928":"257"," \u092d\u0928":"258","\u0902\u092f\u0941":"259","\u0906\u0930\u092e":"260","\u0916\u093f ":"261","\u0923\u094d\u0921":"262","\u0924\u0915\u093e":"263","\u0924\u093e\u0932":"264","\u0926\u0940 ":"265","\u0926\u0947\u0916":"266","\u0928\u093f\u092f":"267","\u092a\u0928\u093f":"268","\u092a\u094d\u0924":"269","\u092c\u0924\u093e":"270","\u092e\u0940 ":"271","\u092e\u094d\u092d":"272","\u0930 \u0938":"273","\u0930\u092e\u094d":"274","\u0932\u092e\u093e":"275","\u0935\u093f\u0936":"276","\u0937\u093e\u0915":"277","\u0938\u0902\u092f":"278","\u093e \u0921":"279","\u093e \u092e":"280","\u093e\u0928\u0915":"281","\u093e\u0932\u092e":"282","\u093f \u092d":"283","\u093f\u0924 ":"284","\u0940 \u092a":"285","\u0940 \u0930":"286","\u0941 \u092d":"287","\u0941\u0928\u0947":"288","\u0947 \u0917":"289","\u0947\u0916\u093f":"290","\u0947\u0930 ":"291","\u094b \u092d":"292","\u094b \u0935":"293","\u094b \u0939":"294","\u094d\u092d ":"295","\u094d\u0930 ":"296"," \u0924\u093e":"297"," \u0928\u092e":"298"," \u0928\u093e":"299"},"norwegian":{"er ":"0","en ":"1","et ":"2"," de":"3","det":"4"," i ":"5","for":"6","il ":"7"," fo":"8"," me":"9","ing":"10","om ":"11"," ha":"12"," og":"13","ter":"14"," er":"15"," ti":"16"," st":"17","og ":"18","til":"19","ne ":"20"," vi":"21","re ":"22"," en":"23"," se":"24","te ":"25","or ":"26","de ":"27","kke":"28","ke ":"29","ar ":"30","ng ":"31","r s":"32","ene":"33"," so":"34","e s":"35","der":"36","an ":"37","som":"38","ste":"39","at ":"40","ed ":"41","r i":"42"," av":"43"," in":"44","men":"45"," at":"46"," ko":"47"," p\u00e5":"48","har":"49"," si":"50","ere":"51","p\u00e5 ":"52","nde":"53","and":"54","els":"55","ett":"56","tte":"57","lig":"58","t s":"59","den":"60","t i":"61","ikk":"62","med":"63","n s":"64","rt ":"65","ser":"66","ska":"67","t e":"68","ker":"69","sen":"70","av ":"71","ler":"72","r a":"73","ten":"74","e f":"75","r e":"76","r t":"77","ede":"78","ig ":"79"," re":"80","han":"81","lle":"82","ner":"83"," bl":"84"," fr":"85","le ":"86"," ve":"87","e t":"88","lan":"89","mme":"90","nge":"91"," be":"92"," ik":"93"," om":"94"," \u00e5 ":"95","ell":"96","sel":"97","sta":"98","ver":"99"," et":"100"," sk":"101","nte":"102","one":"103","ore":"104","r d":"105","ske":"106"," an":"107"," la":"108","del":"109","gen":"110","nin":"111","r f":"112","r v":"113","se ":"114"," po":"115","ir ":"116","jon":"117","mer":"118","nen":"119","omm":"120","sjo":"121"," fl":"122"," sa":"123","ern":"124","kom":"125","r m":"126","r o":"127","ren":"128","vil":"129","ale":"130","es ":"131","n a":"132","t f":"133"," le":"134","bli":"135","e e":"136","e i":"137","e v":"138","het":"139","ye ":"140"," ir":"141","al ":"142","e o":"143","ide":"144","iti":"145","lit":"146","nne":"147","ran":"148","t o":"149","tal":"150","tat":"151","tt ":"152"," ka":"153","ans":"154","asj":"155","ge ":"156","inn":"157","kon":"158","lse":"159","pet":"160","t d":"161","vi ":"162"," ut":"163","ent":"164","eri":"165","oli":"166","r p":"167","ret":"168","ris":"169","sto":"170","str":"171","t a":"172"," ga":"173","all":"174","ape":"175","g s":"176","ill":"177","ira":"178","kap":"179","nn ":"180","opp":"181","r h":"182","rin":"183"," br":"184"," op":"185","e m":"186","ert":"187","ger":"188","ion":"189","kal":"190","lsk":"191","nes":"192"," gj":"193"," mi":"194"," pr":"195","ang":"196","e h":"197","e r":"198","elt":"199","enn":"200","i s":"201","ist":"202","jen":"203","kan":"204","lt ":"205","nal":"206","res":"207","tor":"208","ass":"209","dre":"210","e b":"211","e p":"212","mel":"213","n t":"214","nse":"215","ort":"216","per":"217","reg":"218","sje":"219","t p":"220","t v":"221"," hv":"222"," n\u00e5":"223"," va":"224","ann":"225","ato":"226","e a":"227","est":"228","ise":"229","isk":"230","oil":"231","ord":"232","pol":"233","ra ":"234","rak":"235","sse":"236","toi":"237"," gr":"238","ak ":"239","eg ":"240","ele":"241","g a":"242","ige":"243","igh":"244","m e":"245","n f":"246","n v":"247","ndr":"248","nsk":"249","rer":"250","t m":"251","und":"252","var":"253","\u00e5r ":"254"," he":"255"," no":"256"," ny":"257","end":"258","ete":"259","fly":"260","g i":"261","ghe":"262","ier":"263","ind":"264","int":"265","lin":"266","n d":"267","n p":"268","rne":"269","sak":"270","sie":"271","t b":"272","tid":"273"," al":"274"," pa":"275"," tr":"276","ag ":"277","dig":"278","e d":"279","e k":"280","ess":"281","hol":"282","i d":"283","lag":"284","led":"285","n e":"286","n i":"287","n o":"288","pri":"289","r b":"290","st ":"291"," fe":"292"," li":"293"," ry":"294","air":"295","ake":"296","d s":"297","eas":"298","egi":"299"},"pashto":{" \u062f ":"0","\u0627\u0624 ":"1"," \u0627\u0624":"2","\u0646\u0648 ":"3","\u06d0 \u062f":"4","\u0631\u0647 ":"5"," \u067e\u0647":"6","\u0646\u0647 ":"7","\u0686\u06d0 ":"8"," \u0686\u06d0":"9","\u067e\u0647 ":"10","\u0647 \u062f":"11","\u062a\u0647 ":"12","\u0648 \u0627":"13","\u0648\u0646\u0648":"14","\u0648 \u062f":"15"," \u0627\u0648":"16","\u0627\u0646\u0648":"17","\u0648\u0646\u0647":"18","\u0647 \u06a9":"19"," \u062f\u0627":"20","\u0647 \u0627":"21","\u062f\u06d0 ":"22","\u069a\u06d0 ":"23"," \u06a9\u06d0":"24","\u0627\u0646 ":"25","\u0644\u0648 ":"26","\u0647\u0645 ":"27","\u0648 \u0645":"28","\u06a9\u069a\u06d0":"29","\u0647 \u0645":"30","\u0649 \u0627":"31"," \u0646\u0648":"32"," \u062a\u0647":"33"," \u06a9\u069a":"34","\u0631\u0648\u0646":"35","\u06a9\u06d0 ":"36","\u062f\u0647 ":"37","\u0644\u0647 ":"38","\u0628\u0647 ":"39","\u0631\u0648 ":"40"," \u0647\u0645":"41","\u0647 \u0648":"42","\u0648\u0649 ":"43","\u0627\u0648 ":"44","\u062a\u0648\u0646":"45","\u062f\u0627 ":"46"," \u06a9\u0648":"47"," \u06a9\u0693":"48","\u0642\u0627\u0645":"49"," \u062a\u0631":"50","\u0631\u0627\u0646":"51","\u0647 \u067e":"52","\u06d0 \u0648":"53","\u06d0 \u067e":"54"," \u0628\u0647":"55"," \u062e\u0648":"56","\u062a\u0648 ":"57","\u062f \u062f":"58","\u062f \u0627":"59","\u0647 \u062a":"60","\u0648 \u067e":"61","\u064a\u0627 ":"62"," \u062e\u067e":"63"," \u062f\u0648":"64"," \u0631\u0627":"65"," \u0645\u0634":"66"," \u067e\u0631":"67","\u0627\u0631\u0648":"68","\u0631\u06d0 ":"69","\u0645 \u062f":"70","\u0645\u0634\u0631":"71"," \u0634\u0648":"72"," \u0648\u0631":"73","\u0627\u0631 ":"74","\u062f\u0649 ":"75"," \u0627\u062f":"76"," \u062f\u0649":"77"," \u0645\u0648":"78","\u062f \u067e":"79","\u0644\u064a ":"80","\u0648 \u06a9":"81"," \u0645\u0642":"82"," \u064a\u0648":"83","\u0624 \u062f":"84","\u062e\u067e\u0644":"85","\u0633\u0631\u0647":"86","\u0647 \u0686":"87","\u0648\u0631 ":"88"," \u062a\u0627":"89"," \u062f\u06d0":"90"," \u0631\u0648":"91"," \u0633\u0631":"92"," \u0645\u0644":"93"," \u06a9\u0627":"94","\u0624 \u0627":"95","\u0627\u0631\u0647":"96","\u0628\u0631\u0648":"97","\u0645\u0647 ":"98","\u0647 \u0628":"99","\u0648 \u062a":"100","\u067e\u069a\u062a":"101"," \u0628\u0627":"102"," \u062f\u063a":"103"," \u0642\u0628":"104"," \u0644\u0647":"105"," \u0648\u0627":"106"," \u067e\u0627":"107"," \u067e\u069a":"108","\u062f \u0645":"109","\u062f \u0647":"110","\u0644\u06d0 ":"111","\u0645\u0627\u062a":"112","\u0645\u0648 ":"113","\u0647 \u0647":"114","\u0648\u064a ":"115","\u06d0 \u0628":"116","\u06d0 \u06a9":"117"," \u062f\u0647":"118"," \u0642\u0627":"119","\u0627\u0644 ":"120","\u0627\u0645\u0627":"121","\u062f \u0646":"122","\u0642\u0628\u0631":"123","\u0647 \u0646":"124","\u067e\u0627\u0631":"125"," \u0627\u062b":"126"," \u0628\u064a":"127"," \u0644\u0627":"128"," \u0644\u0631":"129","\u0627\u062b\u0627":"130","\u062f \u062e":"131","\u062f\u0627\u0631":"132","\u0631\u064a\u062e":"133","\u0634\u0631\u0627":"134","\u0645\u0642\u0627":"135","\u0646\u06cd ":"136","\u0647 \u0631":"137","\u0647 \u0644":"138","\u0648\u0644\u0648":"139","\u064a\u0648 ":"140","\u06a9\u0648\u0645":"141"," \u062f\u062f":"142"," \u0644\u0648":"143"," \u0645\u062d":"144"," \u0645\u0631":"145"," \u0648\u0648":"146","\u0627\u062a\u0648":"147","\u0627\u0631\u064a":"148","\u0627\u0644\u0648":"149","\u0627\u0646\u062f":"150","\u062e\u0627\u0646":"151","\u062f \u062a":"152","\u0633\u06d0 ":"153","\u0644\u0649 ":"154","\u0646\u0648\u0631":"155","\u0648 \u0644":"156","\u064a \u0686":"157","\u0693\u064a ":"158","\u069a\u062a\u0648":"159","\u06d0 \u0644":"160"," \u062c\u0648":"161"," \u0633\u064a":"162","\u0627\u0645 ":"163","\u0628\u0627\u0646":"164","\u062a\u0627\u0631":"165","\u062a\u0631 ":"166","\u062b\u0627\u0631":"167","\u062e\u0648 ":"168","\u062f\u0648 ":"169","\u0631 \u06a9":"170","\u0644 \u062f":"171","\u0645\u0648\u0646":"172","\u0646\u062f\u06d0":"173","\u0648 \u0646":"174","\u0648\u0644 ":"175","\u0648\u0647 ":"176","\u0649 \u0648":"177","\u064a \u062f":"178","\u06d0 \u0627":"179","\u06d0 \u062a":"180","\u06d0 \u064a":"181"," \u062d\u06a9":"182"," \u062e\u0628":"183"," \u0646\u0647":"184"," \u067e\u0648":"185","\u0627 \u062f":"186","\u062a\u06d0 ":"187","\u062c\u0648\u0693":"188","\u062d\u06a9\u0645":"189","\u062d\u06a9\u0648":"190","\u062e\u0628\u0631":"191","\u062f\u0627\u0646":"192","\u0631 \u062f":"193","\u063a\u0647 ":"194","\u0642\u0627\u0641":"195","\u0645\u062d\u06a9":"196","\u0648\u0627\u0644":"197","\u0648\u0645\u062a":"198","\u0648\u064a\u0644":"199","\u0649 \u062f":"200","\u0649 \u0645":"201","\u064a\u0631\u0647":"202","\u067e\u0631 ":"203","\u06a9\u0648\u0644":"204","\u06d0 \u0647":"205"," \u062a\u064a":"206"," \u062e\u0627":"207"," \u0648\u06a9":"208"," \u064a\u0627":"209"," \u0681\u0627":"210","\u0624 \u0642":"211","\u0627\u0646\u06cd":"212","\u0628\u0649 ":"213","\u063a\u0648 ":"214","\u0647 \u062e":"215","\u0648 \u0628":"216","\u0648\u062f\u0627":"217","\u064a\u062f\u0648":"218","\u0693\u06d0 ":"219","\u06a9\u0627\u0644":"220"," \u0628\u0631":"221"," \u0642\u062f":"222"," \u0645\u064a":"223"," \u0648\u064a":"224"," \u06a9\u0631":"225","\u0624 \u0645":"226","\u0627\u062a ":"227","\u0627\u064a\u064a":"228","\u062a\u0649 ":"229","\u062a\u064a\u0627":"230","\u062a\u064a\u0631":"231","\u062e\u0648\u0627":"232","\u062f\u063a\u0648":"233","\u062f\u0645 ":"234","\u062f\u064a\u0645":"235","\u0631 \u0648":"236","\u0642\u062f\u064a":"237","\u0645 \u062e":"238","\u0645\u0627\u0646":"239","\u0645\u06d0 ":"240","\u0646\u064a\u0648":"241","\u0646\u0696 ":"242","\u0647 \u064a":"243","\u0648 \u0633":"244","\u0648 \u0686":"245","\u0648\u0627\u0646":"246","\u0648\u0631\u0648":"247","\u0648\u0646\u0696":"248","\u067e\u0648\u0631":"249","\u0693\u0647 ":"250","\u0693\u0648 ":"251","\u06cd \u062f":"252","\u06d0 \u0646":"253"," \u0627\u0647":"254"," \u0632\u064a":"255"," \u0633\u0648":"256"," \u0634\u064a":"257"," \u0647\u0631":"258"," \u0647\u063a":"259"," \u069a\u0627":"260","\u0627\u062a\u0644":"261","\u0627\u0642 ":"262","\u0627\u0646\u064a":"263","\u0628\u0631\u064a":"264","\u0628\u06d0 ":"265","\u062a \u0627":"266","\u062f \u0628":"267","\u062f \u0633":"268","\u0631 \u0645":"269","\u0631\u0649 ":"270","\u0639\u0631\u0627":"271","\u0644\u0627\u0646":"272","\u0645\u0649 ":"273","\u0646\u0649 ":"274","\u0648 \u062e":"275","\u0648\u0626 ":"276","\u0648\u0631\u06a9":"277","\u0648\u0631\u06d0":"278","\u0648\u0646 ":"279","\u0648\u06a9\u0693":"280","\u0649 \u0686":"281","\u064a\u0645\u0647":"282","\u064a\u06d0 ":"283","\u069a\u062a\u0646":"284","\u06a9\u0647 ":"285","\u06a9\u0693\u064a":"286","\u06d0 \u062e":"287","\u06d2 \u0634":"288"," \u062a\u062d":"289"," \u062a\u0648":"290"," \u062f\u0631":"291"," \u062f\u067e":"292"," \u0635\u0648":"293"," \u0639\u0631":"294"," \u0648\u0644":"295"," \u064a\u0624":"296"," \u067e\u06c0":"297"," \u0685\u0648":"298","\u0627 \u0627":"299"},"pidgin":{" de":"0"," we":"1"," di":"2","di ":"3","dem":"4","em ":"5","ay ":"6"," sa":"7","or ":"8","say":"9","ke ":"10","ey ":"11"," an":"12"," go":"13"," e ":"14"," to":"15"," ma":"16","e d":"17","wey":"18","for":"19","nd ":"20","to ":"21"," be":"22"," fo":"23","ake":"24","im ":"25"," pe":"26","le ":"27","go ":"28","ll ":"29","de ":"30","e s":"31","on ":"32","get":"33","ght":"34","igh":"35"," ri":"36","et ":"37","rig":"38"," ge":"39","y d":"40"," na":"41","mak":"42","t t":"43"," no":"44","and":"45","tin":"46","ing":"47","eve":"48","ri ":"49"," im":"50"," am":"51"," or":"52","am ":"53","be ":"54"," ev":"55"," ta":"56","ht ":"57","e w":"58"," li":"59","eri":"60","ng ":"61","ver":"62","all":"63","e f":"64","ers":"65","ntr":"66","ont":"67"," do":"68","r d":"69"," ko":"70"," ti":"71","an ":"72","kon":"73","per":"74","tri":"75","y e":"76","rso":"77","son":"78","no ":"79","ome":"80","is ":"81","do ":"82","ne ":"83","one":"84","ion":"85","m g":"86","i k":"87"," al":"88","bod":"89","i w":"90","odi":"91"," so":"92"," wo":"93","o d":"94","st ":"95","t r":"96"," of":"97","aim":"98","e g":"99","nai":"100"," co":"101","dis":"102","me ":"103","of ":"104"," wa":"105","e t":"106"," ar":"107","e l":"108","ike":"109","lik":"110","t a":"111","wor":"112","alk":"113","ell":"114","eop":"115","lk ":"116","opl":"117","peo":"118","ple":"119","re ":"120","tal":"121","any":"122","e a":"123","o g":"124","art":"125","cle":"126","i p":"127","icl":"128","rti":"129","the":"130","tic":"131","we ":"132","f d":"133","in ":"134"," mu":"135","e n":"136","e o":"137","mus":"138","n d":"139","na ":"140","o m":"141","ust":"142","wel":"143","e e":"144","her":"145","m d":"146","nt ":"147"," fi":"148","at ":"149","e b":"150","it ":"151","m w":"152","o t":"153","wan":"154","com":"155","da ":"156","fit":"157","m b":"158","so ":"159"," fr":"160","ce ":"161","er ":"162","o a":"163"," if":"164"," on":"165","ent":"166","if ":"167","ind":"168","kin":"169","l d":"170","man":"171","o s":"172"," se":"173","y a":"174","y m":"175"," re":"176","ee ":"177","k a":"178","t s":"179","ve ":"180","y w":"181"," ki":"182","eti":"183","men":"184","ta ":"185","y n":"186","d t":"187","dey":"188","e c":"189","i o":"190","ibo":"191","ld ":"192","m t":"193","n b":"194","o b":"195","ow ":"196","ree":"197","rio":"198","t d":"199"," hu":"200"," su":"201","en ":"202","hts":"203","ive":"204","m n":"205","n g":"206","ny ":"207","oth":"208","ts ":"209"," as":"210"," wh":"211","as ":"212","gom":"213","hum":"214","k s":"215","oda":"216","ork":"217","se ":"218","uma":"219","ut ":"220"," ba":"221"," ot":"222","ano":"223","m a":"224","m s":"225","nod":"226","om ":"227","r a":"228","r i":"229","rk ":"230"," fa":"231"," si":"232"," th":"233","ad ":"234","e m":"235","eac":"236","m m":"237","n w":"238","nob":"239","orl":"240","out":"241","own":"242","r s":"243","r w":"244","rib":"245","rld":"246","s w":"247","ure":"248","wn ":"249"," ow":"250","a d":"251","bad":"252","ch ":"253","fre":"254","gs ":"255","m k":"256","nce":"257","ngs":"258","o f":"259","obo":"260","rea":"261","sur":"262","y o":"263"," ab":"264"," un":"265","abo":"266","ach":"267","bou":"268","d m":"269","dat":"270","e p":"271","g w":"272","hol":"273","i m":"274","i r":"275","m f":"276","m o":"277","n o":"278","now":"279","ry ":"280","s a":"281","t o":"282","tay":"283","wet":"284"," ag":"285"," bo":"286"," da":"287"," pr":"288","arr":"289","ati":"290","d d":"291","d p":"292","i g":"293","i t":"294","liv":"295","ly ":"296","n a":"297","od ":"298","ok ":"299"},"polish":{"ie ":"0","nie":"1","em ":"2"," ni":"3"," po":"4"," pr":"5","dzi":"6"," na":"7","\u017ce ":"8","rze":"9","na ":"10","\u0142em":"11","wie":"12"," w ":"13"," \u017ce":"14","go ":"15"," by":"16","prz":"17","owa":"18","i\u0119 ":"19"," do":"20"," si":"21","owi":"22"," pa":"23"," za":"24","ch ":"25","ego":"26","a\u0142 ":"27","si\u0119":"28","ej ":"29","wa\u0142":"30","ym ":"31","ani":"32","a\u0142e":"33","to ":"34"," i ":"35"," to":"36"," te":"37","e p":"38"," je":"39"," z ":"40","czy":"41","by\u0142":"42","pan":"43","sta":"44","kie":"45"," ja":"46","do ":"47"," ch":"48"," cz":"49"," wi":"50","ia\u0142":"51","a p":"52","pow":"53"," mi":"54","li ":"55","eni":"56","zie":"57"," ta":"58"," wa":"59","\u0142o ":"60","a\u0107 ":"61","dy ":"62","ak ":"63","e w":"64"," a ":"65"," od":"66"," st":"67","nia":"68","rzy":"69","ied":"70"," kt":"71","odz":"72","cie":"73","cze":"74","ia ":"75","iel":"76","kt\u00f3":"77","o p":"78","t\u00f3r":"79","\u015bci":"80"," sp":"81"," wy":"82","jak":"83","tak":"84","zy ":"85"," mo":"86","a\u0142\u0119":"87","pro":"88","ski":"89","tem":"90","\u0142\u0119s":"91"," tr":"92","e m":"93","jes":"94","my ":"95"," ro":"96","edz":"97","eli":"98","iej":"99"," rz":"100","a n":"101","ale":"102","an ":"103","e s":"104","est":"105","le ":"106","o s":"107","i p":"108","ki ":"109"," co":"110","ada":"111","czn":"112","e t":"113","e z":"114","ent":"115","ny ":"116","pre":"117","rz\u0105":"118","y s":"119"," ko":"120"," o ":"121","ach":"122","am ":"123","e n":"124","o t":"125","oli":"126","pod":"127","zia":"128"," go":"129"," ka":"130","by ":"131","ieg":"132","ier":"133","no\u015b":"134","roz":"135","spo":"136","ych":"137","z\u0105d":"138"," mn":"139","acz":"140","adz":"141","bie":"142","cho":"143","mni":"144","o n":"145","ost":"146","pra":"147","ze ":"148","\u0142a ":"149"," so":"150","a m":"151","cza":"152","iem":"153","i\u0107 ":"154","obi":"155","y\u0142 ":"156","y\u0142o":"157"," mu":"158"," m\u00f3":"159","a t":"160","acj":"161","ci ":"162","e b":"163","ich":"164","kan":"165","mi ":"166","mie":"167","o\u015bc":"168","row":"169","zen":"170","zyd":"171"," al":"172"," re":"173","a w":"174","den":"175","edy":"176","i\u0142 ":"177","ko ":"178","o w":"179","rac":"180","\u015bmy":"181"," ma":"182"," ra":"183"," sz":"184"," ty":"185","e j":"186","isk":"187","ji ":"188","ka ":"189","m s":"190","no ":"191","o z":"192","rez":"193","wa ":"194","\u00f3w ":"195","\u0142ow":"196","\u015b\u0107 ":"197"," ob":"198","ech":"199","ecz":"200","ezy":"201","i w":"202","ja ":"203","kon":"204","m\u00f3w":"205","ne ":"206","ni ":"207","now":"208","nym":"209","pol":"210","pot":"211","yde":"212"," dl":"213"," sy":"214","a s":"215","aki":"216","ali":"217","dla":"218","icz":"219","ku ":"220","ocz":"221","st ":"222","str":"223","szy":"224","trz":"225","wia":"226","y p":"227","za ":"228"," wt":"229","chc":"230","esz":"231","iec":"232","im ":"233","la ":"234","o m":"235","sa ":"236","wa\u0107":"237","y n":"238","zac":"239","zec":"240"," gd":"241","a z":"242","ard":"243","co ":"244","dar":"245","e r":"246","ien":"247","m n":"248","m w":"249","mia":"250","mo\u017c":"251","raw":"252","rdz":"253","tan":"254","ted":"255","teg":"256","wi\u0142":"257","wte":"258","y z":"259","zna":"260","z\u0142o":"261","a r":"262","awi":"263","bar":"264","cji":"265","cz\u0105":"266","dow":"267","e\u017c ":"268","gdy":"269","iek":"270","je ":"271","o d":"272","ta\u0142":"273","wal":"274","wsz":"275","zed":"276","\u00f3wi":"277","\u0119sa":"278"," ba":"279"," lu":"280"," wo":"281","aln":"282","arn":"283","ba ":"284","dzo":"285","e c":"286","hod":"287","igi":"288","lig":"289","m p":"290","my\u015b":"291","o c":"292","oni":"293","rel":"294","sku":"295","ste":"296","y w":"297","yst":"298","z w":"299"},"portuguese":{"de ":"0"," de":"1","os ":"2","as ":"3","que":"4"," co":"5","\u00e3o ":"6","o d":"7"," qu":"8","ue ":"9"," a ":"10","do ":"11","ent":"12"," se":"13","a d":"14","s d":"15","e a":"16","es ":"17"," pr":"18","ra ":"19","da ":"20"," es":"21"," pa":"22","to ":"23"," o ":"24","em ":"25","con":"26","o p":"27"," do":"28","est":"29","nte":"30","\u00e7\u00e3o":"31"," da":"32"," re":"33","ma ":"34","par":"35"," te":"36","ara":"37","ida":"38"," e ":"39","ade":"40","is ":"41"," um":"42"," po":"43","a a":"44","a p":"45","dad":"46","no ":"47","te ":"48"," no":"49","a\u00e7\u00e3":"50","pro":"51","al ":"52","com":"53","e d":"54","s a":"55"," as":"56","a c":"57","er ":"58","men":"59","s e":"60","ais":"61","nto":"62","res":"63","a s":"64","ado":"65","ist":"66","s p":"67","tem":"68","e c":"69","e s":"70","ia ":"71","o s":"72","o a":"73","o c":"74","e p":"75","sta":"76","ta ":"77","tra":"78","ura":"79"," di":"80"," pe":"81","ar ":"82","e e":"83","ser":"84","uma":"85","mos":"86","se ":"87"," ca":"88","o e":"89"," na":"90","a e":"91","des":"92","ont":"93","por":"94"," in":"95"," ma":"96","ect":"97","o q":"98","ria":"99","s c":"100","ste":"101","ver":"102","cia":"103","dos":"104","ica":"105","str":"106"," ao":"107"," em":"108","das":"109","e t":"110","ito":"111","iza":"112","pre":"113","tos":"114"," n\u00e3":"115","ada":"116","n\u00e3o":"117","ess":"118","eve":"119","or ":"120","ran":"121","s n":"122","s t":"123","tur":"124"," ac":"125"," fa":"126","a r":"127","ens":"128","eri":"129","na ":"130","sso":"131"," si":"132"," \u00e9 ":"133","bra":"134","esp":"135","mo ":"136","nos":"137","ro ":"138","um ":"139","a n":"140","ao ":"141","ico":"142","liz":"143","min":"144","o n":"145","ons":"146","pri":"147","ten":"148","tic":"149","\u00f5es":"150"," tr":"151","a m":"152","aga":"153","e n":"154","ili":"155","ime":"156","m a":"157","nci":"158","nha":"159","nta":"160","spe":"161","tiv":"162","am ":"163","ano":"164","arc":"165","ass":"166","cer":"167","e o":"168","ece":"169","emo":"170","ga ":"171","o m":"172","rag":"173","so ":"174","s\u00e3o":"175"," au":"176"," os":"177"," sa":"178","ali":"179","ca ":"180","ema":"181","emp":"182","ici":"183","ido":"184","inh":"185","iss":"186","l d":"187","la ":"188","lic":"189","m c":"190","mai":"191","onc":"192","pec":"193","ram":"194","s q":"195"," ci":"196"," en":"197"," fo":"198","a o":"199","ame":"200","car":"201","co ":"202","der":"203","eir":"204","ho ":"205","io ":"206","om ":"207","ora":"208","r a":"209","sen":"210","ter":"211"," br":"212"," ex":"213","a u":"214","cul":"215","dev":"216","e u":"217","ha ":"218","mpr":"219","nce":"220","oca":"221","ove":"222","rio":"223","s o":"224","sa ":"225","sem":"226","tes":"227","uni":"228","ven":"229","za\u00e7":"230","\u00e7\u00f5e":"231"," ad":"232"," al":"233"," an":"234"," mi":"235"," mo":"236"," ve":"237"," \u00e0 ":"238","a i":"239","a q":"240","ala":"241","amo":"242","bli":"243","cen":"244","col":"245","cos":"246","cto":"247","e m":"248","e v":"249","ede":"250","g\u00e1s":"251","ias":"252","ita":"253","iva":"254","ndo":"255","o t":"256","ore":"257","r d":"258","ral":"259","rea":"260","s f":"261","sid":"262","tro":"263","vel":"264","vid":"265","\u00e1s ":"266"," ap":"267"," ar":"268"," ce":"269"," ou":"270"," p\u00fa":"271"," so":"272"," vi":"273","a f":"274","act":"275","arr":"276","bil":"277","cam":"278","e f":"279","e i":"280","el ":"281","for":"282","lem":"283","lid":"284","lo ":"285","m d":"286","mar":"287","nde":"288","o o":"289","omo":"290","ort":"291","per":"292","p\u00fab":"293","r u":"294","rei":"295","rem":"296","ros":"297","rre":"298","ssi":"299"},"romanian":{" de":"0"," \u00een":"1","de ":"2"," a ":"3","ul ":"4"," co":"5","\u00een ":"6","re ":"7","e d":"8","ea ":"9"," di":"10"," pr":"11","le ":"12","\u015fi ":"13","are":"14","at ":"15","con":"16","ui ":"17"," \u015fi":"18","i d":"19","ii ":"20"," cu":"21","e a":"22","lui":"23","ern":"24","te ":"25","cu ":"26"," la":"27","a c":"28","c\u0103 ":"29","din":"30","e c":"31","or ":"32","ulu":"33","ne ":"34","ter":"35","la ":"36","s\u0103 ":"37","tat":"38","tre":"39"," ac":"40"," s\u0103":"41","est":"42","st ":"43","t\u0103 ":"44"," ca":"45"," ma":"46"," pe":"47","cur":"48","ist":"49","m\u00e2n":"50","a d":"51","i c":"52","nat":"53"," ce":"54","i a":"55","ia ":"56","in ":"57","scu":"58"," mi":"59","ato":"60","a\u0163i":"61","ie ":"62"," re":"63"," se":"64","a a":"65","int":"66","ntr":"67","tru":"68","uri":"69","\u0103 a":"70"," fo":"71"," pa":"72","ate":"73","ini":"74","tul":"75","ent":"76","min":"77","pre":"78","pro":"79","a p":"80","e p":"81","e s":"82","ei ":"83","n\u0103 ":"84","par":"85","rna":"86","rul":"87","tor":"88"," in":"89"," ro":"90"," tr":"91"," un":"92","al ":"93","ale":"94","art":"95","ce ":"96","e e":"97","e \u00ee":"98","fos":"99","ita":"100","nte":"101","om\u00e2":"102","ost":"103","rom":"104","ru ":"105","str":"106","ver":"107"," ex":"108"," na":"109","a f":"110","lor":"111","nis":"112","rea":"113","rit":"114"," al":"115"," eu":"116"," no":"117","ace":"118","cer":"119","ile":"120","nal":"121","pri":"122","ri ":"123","sta":"124","ste":"125","\u0163ie":"126"," au":"127"," da":"128"," ju":"129"," po":"130","ar ":"131","au ":"132","ele":"133","ere":"134","eri":"135","ina":"136","n a":"137","n c":"138","res":"139","se ":"140","t a":"141","tea":"142"," c\u0103":"143"," do":"144"," fi":"145","a s":"146","at\u0103":"147","com":"148","e \u015f":"149","eur":"150","guv":"151","i s":"152","ice":"153","ili":"154","na ":"155","rec":"156","rep":"157","ril":"158","rne":"159","rti":"160","uro":"161","uve":"162","\u0103 p":"163"," ar":"164"," o ":"165"," su":"166"," vi":"167","dec":"168","dre":"169","oar":"170","ons":"171","pe ":"172","rii":"173"," ad":"174"," ge":"175","a m":"176","a r":"177","ain":"178","ali":"179","car":"180","cat":"181","ecu":"182","ene":"183","ept":"184","ext":"185","ilo":"186","iu ":"187","n p":"188","ori":"189","sec":"190","u p":"191","une":"192","\u0103 c":"193","\u015fti":"194","\u0163ia":"195"," ch":"196"," gu":"197","ai ":"198","ani":"199","cea":"200","e f":"201","isc":"202","l a":"203","lic":"204","liu":"205","mar":"206","nic":"207","nt ":"208","nul":"209","ris":"210","t c":"211","t p":"212","tic":"213","tid":"214","u a":"215","ucr":"216"," as":"217"," dr":"218"," fa":"219"," nu":"220"," pu":"221"," to":"222","cra":"223","dis":"224","en\u0163":"225","esc":"226","gen":"227","it ":"228","ivi":"229","l d":"230","n d":"231","nd ":"232","nu ":"233","ond":"234","pen":"235","ral":"236","riv":"237","rte":"238","sti":"239","t d":"240","ta ":"241","to ":"242","uni":"243","xte":"244","\u00e2nd":"245","\u00eens":"246","\u0103 s":"247"," bl":"248"," st":"249"," uc":"250","a b":"251","a i":"252","a l":"253","air":"254","ast":"255","bla":"256","bri":"257","che":"258","duc":"259","dul":"260","e m":"261","eas":"262","edi":"263","esp":"264","i l":"265","i p":"266","ica":"267","ic\u0103":"268","ir ":"269","iun":"270","jud":"271","lai":"272","lul":"273","mai":"274","men":"275","ni ":"276","pus":"277","put":"278","ra ":"279","rai":"280","rop":"281","sil":"282","ti ":"283","tra":"284","u s":"285","ua ":"286","ude":"287","urs":"288","\u00e2n ":"289","\u00eent":"290","\u0163\u0103 ":"291"," lu":"292"," mo":"293"," s ":"294"," sa":"295"," sc":"296","a u":"297","an ":"298","atu":"299"},"russian":{" \u043d\u0430":"0"," \u043f\u0440":"1","\u0442\u043e ":"2"," \u043d\u0435":"3","\u043b\u0438 ":"4"," \u043f\u043e":"5","\u043d\u043e ":"6"," \u0432 ":"7","\u043d\u0430 ":"8","\u0442\u044c ":"9","\u043d\u0435 ":"10"," \u0438 ":"11"," \u043a\u043e":"12","\u043e\u043c ":"13","\u043f\u0440\u043e":"14"," \u0442\u043e":"15","\u0438\u0445 ":"16"," \u043a\u0430":"17","\u0430\u0442\u044c":"18","\u043e\u0442\u043e":"19"," \u0437\u0430":"20","\u0438\u0435 ":"21","\u043e\u0432\u0430":"22","\u0442\u0435\u043b":"23","\u0442\u043e\u0440":"24"," \u0434\u0435":"25","\u043e\u0439 ":"26","\u0441\u0442\u0438":"27"," \u043e\u0442":"28","\u0430\u0445 ":"29","\u043c\u0438 ":"30","\u0441\u0442\u0440":"31"," \u0431\u0435":"32"," \u0432\u043e":"33"," \u0440\u0430":"34","\u0430\u044f ":"35","\u0432\u0430\u0442":"36","\u0435\u0439 ":"37","\u0435\u0442 ":"38","\u0436\u0435 ":"39","\u0438\u0447\u0435":"40","\u0438\u044f ":"41","\u043e\u0432 ":"42","\u0441\u0442\u043e":"43"," \u043e\u0431":"44","\u0432\u0435\u0440":"45","\u0433\u043e ":"46","\u0438 \u0432":"47","\u0438 \u043f":"48","\u0438 \u0441":"49","\u0438\u0438 ":"50","\u0438\u0441\u0442":"51","\u043e \u0432":"52","\u043e\u0441\u0442":"53","\u0442\u0440\u0430":"54"," \u0442\u0435":"55","\u0435\u043b\u0438":"56","\u0435\u0440\u0435":"57","\u043a\u043e\u0442":"58","\u043b\u044c\u043d":"59","\u043d\u0438\u043a":"60","\u043d\u0442\u0438":"61","\u043e \u0441":"62","\u0440\u043e\u0440":"63","\u0441\u0442\u0432":"64","\u0447\u0435\u0441":"65"," \u0431\u043e":"66"," \u0432\u0435":"67"," \u0434\u0430":"68"," \u0438\u043d":"69"," \u043d\u043e":"70"," \u0441 ":"71"," \u0441\u043e":"72"," \u0441\u043f":"73"," \u0441\u0442":"74"," \u0447\u0442":"75","\u0430\u043b\u0438":"76","\u0430\u043c\u0438":"77","\u0432\u0438\u0434":"78","\u0434\u0435\u0442":"79","\u0435 \u043d":"80","\u0435\u043b\u044c":"81","\u0435\u0441\u043a":"82","\u0435\u0441\u0442":"83","\u0437\u0430\u043b":"84","\u0438 \u043d":"85","\u0438\u0432\u0430":"86","\u043a\u043e\u043d":"87","\u043e\u0433\u043e":"88","\u043e\u0434\u043d":"89","\u043e\u0436\u043d":"90","\u043e\u043b\u044c":"91","\u043e\u0440\u0438":"92","\u0440\u043e\u0432":"93","\u0441\u043a\u043e":"94","\u0441\u044f ":"95","\u0442\u0435\u0440":"96","\u0447\u0442\u043e":"97"," \u043c\u043e":"98"," \u0441\u0430":"99"," \u044d\u0442":"100","\u0430\u043d\u0442":"101","\u0432\u0441\u0435":"102","\u0435\u0440\u0440":"103","\u0435\u0441\u043b":"104","\u0438\u0434\u0435":"105","\u0438\u043d\u0430":"106","\u0438\u043d\u043e":"107","\u0438\u0440\u043e":"108","\u0438\u0442\u0435":"109","\u043a\u0430 ":"110","\u043a\u043e ":"111","\u043a\u043e\u043b":"112","\u043a\u043e\u043c":"113","\u043b\u0430 ":"114","\u043d\u0438\u044f":"115","\u043e \u0442":"116","\u043e\u043b\u043e":"117","\u0440\u0430\u043d":"118","\u0440\u0435\u0434":"119","\u0441\u044c ":"120","\u0442\u0438\u0432":"121","\u0442\u0438\u0447":"122","\u044b\u0445 ":"123"," \u0432\u0438":"124"," \u0432\u0441":"125"," \u0433\u043e":"126"," \u043c\u0430":"127"," \u0441\u043b":"128","\u0430\u043a\u043e":"129","\u0430\u043d\u0438":"130","\u0430\u0441\u0442":"131","\u0431\u0435\u0437":"132","\u0434\u0435\u043b":"133","\u0435 \u0434":"134","\u0435 \u043f":"135","\u0435\u043c ":"136","\u0436\u043d\u043e":"137","\u0438 \u0434":"138","\u0438\u043a\u0430":"139","\u043a\u0430\u0437":"140","\u043a\u0430\u043a":"141","\u043a\u0438 ":"142","\u043d\u043e\u0441":"143","\u043e \u043d":"144","\u043e\u043f\u0430":"145","\u043f\u0440\u0438":"146","\u0440\u0440\u043e":"147","\u0441\u043a\u0438":"148","\u0442\u0438 ":"149","\u0442\u043e\u0432":"150","\u044b\u0435 ":"151"," \u0432\u044b":"152"," \u0434\u043e":"153"," \u043c\u0435":"154"," \u043d\u0438":"155"," \u043e\u0434":"156"," \u0440\u043e":"157"," \u0441\u0432":"158"," \u0447\u0438":"159","\u0430 \u043d":"160","\u0430\u0435\u0442":"161","\u0430\u0437\u0430":"162","\u0430\u0442\u0435":"163","\u0431\u0435\u0441":"164","\u0432 \u043f":"165","\u0432\u0430 ":"166","\u0435 \u0432":"167","\u0435 \u043c":"168","\u0435 \u0441":"169","\u0435\u0437 ":"170","\u0435\u043d\u0438":"171","\u0437\u0430 ":"172","\u0437\u043d\u0430":"173","\u0438\u043d\u0438":"174","\u043a\u0430\u043c":"175","\u043a\u0430\u0445":"176","\u043a\u0442\u043e":"177","\u043b\u043e\u0432":"178","\u043c\u0435\u0440":"179","\u043c\u043e\u0436":"180","\u043d\u0430\u043b":"181","\u043d\u0438\u0446":"182","\u043d\u044b ":"183","\u043d\u044b\u043c":"184","\u043e\u0440\u0430":"185","\u043e\u0440\u043e":"186","\u043e\u0442 ":"187","\u043f\u043e\u0440":"188","\u0440\u0430\u0432":"189","\u0440\u0435\u0441":"190","\u0440\u0438\u0441":"191","\u0440\u043e\u0441":"192","\u0441\u043a\u0430":"193","\u0442 \u043d":"194","\u0442\u043e\u043c":"195","\u0447\u0438\u0442":"196","\u0448\u043a\u043e":"197"," \u0431\u044b":"198"," \u043e ":"199"," \u0442\u0440":"200"," \u0443\u0436":"201"," \u0447\u0443":"202"," \u0448\u043a":"203","\u0430 \u0431":"204","\u0430 \u0432":"205","\u0430 \u0440":"206","\u0430\u0431\u0438":"207","\u0430\u043b\u0430":"208","\u0430\u043b\u043e":"209","\u0430\u043b\u044c":"210","\u0430\u043d\u043d":"211","\u0430\u0442\u0438":"212","\u0431\u0438\u043d":"213","\u0432\u0435\u0441":"214","\u0432\u043d\u043e":"215","\u0432\u043e ":"216","\u0432\u0448\u0438":"217","\u0434\u0430\u043b":"218","\u0434\u0430\u0442":"219","\u0434\u043d\u043e":"220","\u0435 \u0437":"221","\u0435\u0433\u043e":"222","\u0435\u043b\u0435":"223","\u0435\u043d\u043d":"224","\u0435\u043d\u0442":"225","\u0435\u0442\u0435":"226","\u0438 \u043e":"227","\u0438\u043b\u0438":"228","\u0438\u0441\u044c":"229","\u0438\u0442 ":"230","\u0438\u0446\u0438":"231","\u043a\u043e\u0432":"232","\u043b\u0435\u043d":"233","\u043b\u044c\u043a":"234","\u043c\u0435\u043d":"235","\u043c\u044b ":"236","\u043d\u0435\u0442":"237","\u043d\u0438 ":"238","\u043d\u043d\u044b":"239","\u043d\u043e\u0433":"240","\u043d\u043e\u0439":"241","\u043d\u043e\u043c":"242","\u043e \u043f":"243","\u043e\u0431\u043d":"244","\u043e\u0432\u0435":"245","\u043e\u0432\u043d":"246","\u043e\u0440\u044b":"247","\u043f\u0435\u0440":"248","\u043f\u043e ":"249","\u043f\u0440\u0430":"250","\u043f\u0440\u0435":"251","\u0440\u0430\u0437":"252","\u0440\u043e\u043f":"253","\u0440\u044b ":"254","\u0441\u0435 ":"255","\u0441\u043b\u0438":"256","\u0441\u043e\u0432":"257","\u0442\u0440\u0435":"258","\u0442\u0441\u044f":"259","\u0443\u0440\u043e":"260","\u0446\u0435\u043b":"261","\u0447\u043d\u043e":"262","\u044c \u0432":"263","\u044c\u043a\u043e":"264","\u044c\u043d\u043e":"265","\u044d\u0442\u043e":"266","\u044e\u0442 ":"267","\u044f \u043d":"268"," \u0430\u043d":"269"," \u0435\u0441":"270"," \u0436\u0435":"271"," \u0438\u0437":"272"," \u043a\u0442":"273"," \u043c\u0438":"274"," \u043c\u044b":"275"," \u043f\u0435":"276"," \u0441\u0435":"277"," \u0446\u0435":"278","\u0430 \u043c":"279","\u0430 \u043f":"280","\u0430 \u0442":"281","\u0430\u0432\u0448":"282","\u0430\u0436\u0435":"283","\u0430\u043a ":"284","\u0430\u043b ":"285","\u0430\u043b\u0435":"286","\u0430\u043d\u0435":"287","\u0430\u0447\u0438":"288","\u0430\u044e\u0442":"289","\u0431\u043d\u0430":"290","\u0431\u043e\u043b":"291","\u0431\u044b ":"292","\u0432 \u0438":"293","\u0432 \u0441":"294","\u0432\u0430\u043d":"295","\u0433\u0440\u0430":"296","\u0434\u0430\u0436":"297","\u0434\u0435\u043d":"298","\u0435 \u043a":"299"},"serbian":{" \u043d\u0430":"0"," \u0458\u0435":"1"," \u043f\u043e":"2","\u0458\u0435 ":"3"," \u0438 ":"4"," \u043d\u0435":"5"," \u043f\u0440":"6","\u0433\u0430 ":"7"," \u0441\u0432":"8","\u043e\u0433 ":"9","\u0430 \u0441":"10","\u0438\u0445 ":"11","\u043d\u0430 ":"12","\u043a\u043e\u0458":"13","\u043e\u0433\u0430":"14"," \u0443 ":"15","\u0430 \u043f":"16","\u043d\u0435 ":"17","\u043d\u0438 ":"18","\u0442\u0438 ":"19"," \u0434\u0430":"20","\u043e\u043c ":"21"," \u0432\u0435":"22"," \u0441\u0440":"23","\u0438 \u0441":"24","\u0441\u043a\u043e":"25"," \u043e\u0431":"26","\u0430 \u043d":"27","\u0434\u0430 ":"28","\u0435 \u043d":"29","\u043d\u043e ":"30","\u043d\u043e\u0433":"31","\u043e \u0458":"32","\u043e\u0458 ":"33"," \u0437\u0430":"34","\u0432\u0430 ":"35","\u0435 \u0441":"36","\u0438 \u043f":"37","\u043c\u0430 ":"38","\u043d\u0438\u043a":"39","\u043e\u0431\u0440":"40","\u043e\u0432\u0430":"41"," \u043a\u043e":"42","\u0430 \u0438":"43","\u0434\u0438\u0458":"44","\u0435 \u043f":"45","\u043a\u0430 ":"46","\u043a\u043e ":"47","\u043a\u043e\u0433":"48","\u043e\u0441\u0442":"49","\u0441\u0432\u0435":"50","\u0441\u0442\u0432":"51","\u0441\u0442\u0438":"52","\u0442\u0440\u0430":"53","\u0435\u0434\u0438":"54","\u0438\u043c\u0430":"55","\u043f\u043e\u043a":"56","\u043f\u0440\u0430":"57","\u0440\u0430\u0437":"58","\u0442\u0435 ":"59"," \u0431\u043e":"60"," \u0432\u0438":"61"," \u0441\u0430":"62","\u0430\u0432\u043e":"63","\u0431\u0440\u0430":"64","\u0433\u043e\u0441":"65","\u0435 \u0438":"66","\u0435\u043b\u0438":"67","\u0435\u043d\u0438":"68","\u0437\u0430 ":"69","\u0438\u043a\u0438":"70","\u0438\u043e ":"71","\u043f\u0440\u0435":"72","\u0440\u0430\u0432":"73","\u0440\u0430\u0434":"74","\u0443 \u0441":"75","\u0458\u0443 ":"76","\u045a\u0430 ":"77"," \u0431\u0438":"78"," \u0434\u043e":"79"," \u0441\u0442":"80","\u0430\u0441\u0442":"81","\u0431\u043e\u0458":"82","\u0435\u0431\u043e":"83","\u0438 \u043d":"84","\u0438\u043c ":"85","\u043a\u0443 ":"86","\u043b\u0430\u043d":"87","\u043d\u0435\u0431":"88","\u043e\u0432\u043e":"89","\u043e\u0433\u043e":"90","\u043e\u0441\u043b":"91","\u043e\u0458\u0448":"92","\u043f\u0435\u0434":"93","\u0441\u0442\u0440":"94","\u0447\u0430\u0441":"95"," \u0433\u043e":"96"," \u043a\u0440":"97"," \u043c\u043e":"98"," \u0447\u043b":"99","\u0430 \u043c":"100","\u0430 \u043e":"101","\u0430\u043a\u043e":"102","\u0430\u0447\u0430":"103","\u0432\u0435\u043b":"104","\u0432\u0435\u0442":"105","\u0432\u043e\u0433":"106","\u0435\u0434\u0430":"107","\u0438\u0441\u0442":"108","\u0438\u0442\u0438":"109","\u0438\u0458\u0435":"110","\u043e\u043a\u043e":"111","\u0441\u043b\u043e":"112","\u0441\u0440\u0431":"113","\u0447\u043b\u0430":"114"," \u0431\u0435":"115"," \u043e\u0441":"116"," \u043e\u0442":"117"," \u0440\u0435":"118"," \u0441\u0435":"119","\u0430 \u0432":"120","\u0430\u043d ":"121","\u0431\u043e\u0433":"122","\u0431\u0440\u043e":"123","\u0432\u0435\u043d":"124","\u0433\u0440\u0430":"125","\u0435 \u043e":"126","\u0438\u043a\u0430":"127","\u0438\u0458\u0430":"128","\u043a\u0438\u0445":"129","\u043a\u043e\u043c":"130","\u043b\u0438 ":"131","\u043d\u0443 ":"132","\u043e\u0442\u0430":"133","\u043e\u0458\u043d":"134","\u043f\u043e\u0434":"135","\u0440\u0431\u0441":"136","\u0440\u0435\u0434":"137","\u0440\u043e\u0458":"138","\u0441\u0430 ":"139","\u0441\u043d\u0438":"140","\u0442\u0430\u0447":"141","\u0442\u0432\u0430":"142","\u0458\u0430 ":"143","\u0458\u0438 ":"144"," \u043a\u0430":"145"," \u043e\u0432":"146"," \u0442\u0440":"147","\u0430 \u0458":"148","\u0430\u0432\u0438":"149","\u0430\u0437 ":"150","\u0430\u043d\u043e":"151","\u0431\u0438\u043e":"152","\u0432\u0438\u043a":"153","\u0432\u043e ":"154","\u0433\u043e\u0432":"155","\u0434\u043d\u0438":"156","\u0435 \u0447":"157","\u0435\u0433\u043e":"158","\u0438 \u043e":"159","\u0438\u0432\u0430":"160","\u0438\u0432\u043e":"161","\u0438\u043a ":"162","\u0438\u043d\u0435":"163","\u0438\u043d\u0438":"164","\u0438\u043f\u0435":"165","\u043a\u0438\u043f":"166","\u043b\u0438\u043a":"167","\u043b\u043e ":"168","\u043d\u0430\u0448":"169","\u043d\u043e\u0441":"170","\u043e \u0442":"171","\u043e\u0434 ":"172","\u043e\u0434\u0438":"173","\u043e\u043d\u0430":"174","\u043e\u0458\u0438":"175","\u043f\u043e\u0447":"176","\u043f\u0440\u043e":"177","\u0440\u0430 ":"178","\u0440\u0438\u0441":"179","\u0440\u043e\u0434":"180","\u0440\u0441\u0442":"181","\u0441\u0435 ":"182","\u0441\u043f\u043e":"183","\u0441\u0442\u0430":"184","\u0442\u0438\u045b":"185","\u0443 \u0434":"186","\u0443 \u043d":"187","\u0443 \u043e":"188","\u0447\u0438\u043d":"189","\u0448\u0430 ":"190","\u0458\u0435\u0434":"191","\u0458\u043d\u0438":"192","\u045b\u0435 ":"193"," \u043c ":"194"," \u043c\u0435":"195"," \u043d\u0438":"196"," \u043e\u043d":"197"," \u043f\u0430":"198"," \u0441\u043b":"199"," \u0442\u0435":"200","\u0430 \u0443":"201","\u0430\u0432\u0430":"202","\u0430\u0432\u0435":"203","\u0430\u0432\u043d":"204","\u0430\u043d\u0430":"205","\u0430\u043e ":"206","\u0430\u0442\u0438":"207","\u0430\u0446\u0438":"208","\u0430\u0458\u0443":"209","\u0430\u045a\u0430":"210","\u0431\u0441\u043a":"211","\u0432\u043e\u0440":"212","\u0432\u043e\u0441":"213","\u0432\u0441\u043a":"214","\u0434\u0438\u043d":"215","\u0435 \u0443":"216","\u0435\u0434\u043d":"217","\u0435\u0437\u0438":"218","\u0435\u043a\u0430":"219","\u0435\u043d\u043e":"220","\u0435\u0442\u043e":"221","\u0435\u045a\u0430":"222","\u0436\u0438\u0432":"223","\u0438 \u0433":"224","\u0438 \u0438":"225","\u0438 \u043a":"226","\u0438 \u0442":"227","\u0438\u043a\u0443":"228","\u0438\u0447\u043a":"229","\u043a\u0438 ":"230","\u043a\u0440\u0441":"231","\u043b\u0430 ":"232","\u043b\u0430\u0432":"233","\u043b\u0438\u0442":"234","\u043c\u0435 ":"235","\u043c\u0435\u043d":"236","\u043d\u0430\u0446":"237","\u043e \u043d":"238","\u043e \u043f":"239","\u043e \u0443":"240","\u043e\u0434\u043d":"241","\u043e\u043b\u0438":"242","\u043e\u0440\u043d":"243","\u043e\u0441\u043d":"244","\u043e\u0441\u043f":"245","\u043e\u0447\u0435":"246","\u043f\u0441\u043a":"247","\u0440\u0435\u0447":"248","\u0440\u043f\u0441":"249","\u0441\u0432\u043e":"250","\u0441\u043a\u0438":"251","\u0441\u043b\u0430":"252","\u0441\u0440\u043f":"253","\u0441\u0443 ":"254","\u0442\u0430 ":"255","\u0442\u0430\u0432":"256","\u0442\u0432\u0435":"257","\u0443 \u0431":"258","\u0458\u0435\u0437":"259","\u045b\u0438 ":"260"," \u0435\u043d":"261"," \u0436\u0438":"262"," \u0438\u043c":"263"," \u043c\u0443":"264"," \u043e\u0434":"265"," \u0441\u0443":"266"," \u0442\u0430":"267"," \u0445\u0440":"268"," \u0447\u0430":"269"," \u0448\u0442":"270"," \u045a\u0435":"271","\u0430 \u0434":"272","\u0430 \u0437":"273","\u0430 \u043a":"274","\u0430 \u0442":"275","\u0430\u0434\u0443":"276","\u0430\u043b\u043e":"277","\u0430\u043d\u0438":"278","\u0430\u0441\u043e":"279","\u0432\u0430\u043d":"280","\u0432\u0430\u0447":"281","\u0432\u0430\u045a":"282","\u0432\u0435\u0434":"283","\u0432\u0438 ":"284","\u0432\u043d\u043e":"285","\u0432\u043e\u0442":"286","\u0432\u043e\u0458":"287","\u0432\u0443 ":"288","\u0434\u043e\u0431":"289","\u0434\u0440\u0443":"290","\u0434\u0441\u0435":"291","\u0434\u0443 ":"292","\u0435 \u0431":"293","\u0435 \u0434":"294","\u0435 \u043c":"295","\u0435\u043c ":"296","\u0435\u043c\u0430":"297","\u0435\u043d\u0442":"298","\u0435\u043d\u0446":"299"},"slovak":{" pr":"0"," po":"1"," ne":"2"," a ":"3","ch ":"4"," na":"5"," je":"6","n\u00ed ":"7","je ":"8"," do":"9","na ":"10","ova":"11"," v ":"12","to ":"13","ho ":"14","ou ":"15"," to":"16","ick":"17","ter":"18","\u017ee ":"19"," st":"20"," za":"21","ost":"22","\u00fdch":"23"," se":"24","pro":"25"," te":"26","e s":"27"," \u017ee":"28","a p":"29"," kt":"30","pre":"31"," by":"32"," o ":"33","se ":"34","kon":"35"," p\u0159":"36","a s":"37","n\u00e9 ":"38","n\u011b ":"39","sti":"40","ako":"41","ist":"42","mu ":"43","ame":"44","ent":"45","ky ":"46","la ":"47","pod":"48"," ve":"49"," ob":"50","om ":"51","vat":"52"," ko":"53","sta":"54","em ":"55","le ":"56","a v":"57","by ":"58","e p":"59","ko ":"60","eri":"61","kte":"62","sa ":"63","\u00e9ho":"64","e v":"65","mer":"66","tel":"67"," ak":"68"," sv":"69"," z\u00e1":"70","hla":"71","las":"72","lo ":"73"," ta":"74","a n":"75","ej ":"76","li ":"77","ne ":"78"," sa":"79","ak ":"80","ani":"81","ate":"82","ia ":"83","sou":"84"," so":"85","en\u00ed":"86","ie ":"87"," re":"88","ce ":"89","e n":"90","ori":"91","tic":"92"," vy":"93","a t":"94","k\u00e9 ":"95","nos":"96","o s":"97","str":"98","ti ":"99","uje":"100"," sp":"101","lov":"102","o p":"103","oli":"104","ov\u00e1":"105"," n\u00e1":"106","ale":"107","den":"108","e o":"109","ku ":"110","val":"111"," am":"112"," ro":"113"," si":"114","nie":"115","pol":"116","tra":"117"," al":"118","ali":"119","o v":"120","tor":"121"," mo":"122"," ni":"123","ci ":"124","o n":"125","\u00edm ":"126"," le":"127"," pa":"128"," s ":"129","al ":"130","ati":"131","ero":"132","ove":"133","rov":"134","v\u00e1n":"135","\u00edch":"136"," ja":"137"," z ":"138","ck\u00e9":"139","e z":"140"," od":"141","byl":"142","de ":"143","dob":"144","nep":"145","pra":"146","ric":"147","spo":"148","tak":"149"," v\u0161":"150","a a":"151","e t":"152","lit":"153","me ":"154","nej":"155","no ":"156","n\u00fdc":"157","o t":"158","a j":"159","e a":"160","en ":"161","est":"162","j\u00ed ":"163","mi ":"164","slo":"165","st\u00e1":"166","u v":"167","for":"168","nou":"169","pos":"170","p\u0159e":"171","si ":"172","tom":"173"," vl":"174","a z":"175","ly ":"176","orm":"177","ris":"178","za ":"179","z\u00e1k":"180"," k ":"181","at ":"182","ck\u00fd":"183","dno":"184","dos":"185","dy ":"186","jak":"187","kov":"188","ny ":"189","res":"190","ror":"191","sto":"192","van":"193"," op":"194","da ":"195","do ":"196","e j":"197","hod":"198","len":"199","n\u00fd ":"200","o z":"201","poz":"202","pri":"203","ran":"204","u s":"205"," ab":"206","aj ":"207","ast":"208","it ":"209","kto":"210","o o":"211","oby":"212","odo":"213","u p":"214","va ":"215","\u00e1n\u00ed":"216","\u00ed p":"217","\u00fdm ":"218"," in":"219"," mi":"220","a\u0165 ":"221","dov":"222","ka ":"223","nsk":"224","\u00e1ln":"225"," an":"226"," bu":"227"," sl":"228"," tr":"229","e m":"230","ech":"231","edn":"232","i n":"233","k\u00fdc":"234","n\u00edc":"235","ov ":"236","p\u0159\u00ed":"237","\u00ed a":"238"," aj":"239"," bo":"240","a d":"241","ide":"242","o a":"243","o d":"244","och":"245","pov":"246","svo":"247","\u00e9 s":"248"," kd":"249"," vo":"250"," v\u00fd":"251","bud":"252","ich":"253","il ":"254","ili":"255","ni ":"256","n\u00edm":"257","od ":"258","osl":"259","ouh":"260","rav":"261","roz":"262","st ":"263","stv":"264","tu ":"265","u a":"266","v\u00e1l":"267","y s":"268","\u00ed s":"269","\u00ed v":"270"," hl":"271"," li":"272"," me":"273","a m":"274","e b":"275","h s":"276","i p":"277","i s":"278","iti":"279","l\u00e1d":"280","nem":"281","nov":"282","opo":"283","uhl":"284","eno":"285","ens":"286","men":"287","nes":"288","obo":"289","te ":"290","ved":"291","vl\u00e1":"292","y n":"293"," ma":"294"," mu":"295"," v\u00e1":"296","bez":"297","byv":"298","cho":"299"},"slovene":{"je ":"0"," pr":"1"," po":"2"," je":"3"," v ":"4"," za":"5"," na":"6","pre":"7","da ":"8"," da":"9","ki ":"10","ti ":"11","ja ":"12","ne ":"13"," in":"14","in ":"15","li ":"16","no ":"17","na ":"18","ni ":"19"," bi":"20","jo ":"21"," ne":"22","nje":"23","e p":"24","i p":"25","pri":"26","o p":"27","red":"28"," do":"29","anj":"30","em ":"31","ih ":"32"," bo":"33"," ki":"34"," iz":"35"," se":"36"," so":"37","al ":"38"," de":"39","e v":"40","i s":"41","ko ":"42","bil":"43","ira":"44","ove":"45"," br":"46"," ob":"47","e b":"48","i n":"49","ova":"50","se ":"51","za ":"52","la ":"53"," ja":"54","ati":"55","so ":"56","ter":"57"," ta":"58","a s":"59","del":"60","e d":"61"," dr":"62"," od":"63","a n":"64","ar ":"65","jal":"66","ji ":"67","rit":"68"," ka":"69"," ko":"70"," pa":"71","a b":"72","ani":"73","e s":"74","er ":"75","ili":"76","lov":"77","o v":"78","tov":"79"," ir":"80"," ni":"81"," vo":"82","a j":"83","bi ":"84","bri":"85","iti":"86","let":"87","o n":"88","tan":"89","\u0161e ":"90"," le":"91"," te":"92","eni":"93","eri":"94","ita":"95","kat":"96","por":"97","pro":"98","ali":"99","ke ":"100","oli":"101","ov ":"102","pra":"103","ri ":"104","uar":"105","ve ":"106"," to":"107","a i":"108","a v":"109","ako":"110","arj":"111","ate":"112","di ":"113","do ":"114","ga ":"115","le ":"116","lo ":"117","mer":"118","o s":"119","oda":"120","oro":"121","pod":"122"," ma":"123"," mo":"124"," si":"125","a p":"126","bod":"127","e n":"128","ega":"129","ju ":"130","ka ":"131","lje":"132","rav":"133","ta ":"134","a o":"135","e t":"136","e z":"137","i d":"138","i v":"139","ila":"140","lit":"141","nih":"142","odo":"143","sti":"144","to ":"145","var":"146","ved":"147","vol":"148"," la":"149"," no":"150"," vs":"151","a d":"152","agu":"153","aja":"154","dej":"155","dnj":"156","eda":"157","gov":"158","gua":"159","jag":"160","jem":"161","kon":"162","ku ":"163","nij":"164","omo":"165","o\u010di":"166","pov":"167","rak":"168","rja":"169","sta":"170","tev":"171","a t":"172","aj ":"173","ed ":"174","eja":"175","ent":"176","ev ":"177","i i":"178","i o":"179","ijo":"180","ist":"181","ost":"182","ske":"183","str":"184"," ra":"185"," s ":"186"," tr":"187"," \u0161e":"188","arn":"189","bo ":"190","dr\u017e":"191","i j":"192","ilo":"193","izv":"194","jen":"195","lja":"196","nsk":"197","o d":"198","o i":"199","om ":"200","ora":"201","ovo":"202","raz":"203","r\u017ea":"204","tak":"205","va ":"206","ven":"207","\u017eav":"208"," me":"209"," \u010de":"210","ame":"211","avi":"212","e i":"213","e o":"214","eka":"215","gre":"216","i t":"217","ija":"218","il ":"219","ite":"220","kra":"221","lju":"222","mor":"223","nik":"224","o t":"225","obi":"226","odn":"227","ran":"228","re ":"229","sto":"230","stv":"231","udi":"232","v i":"233","van":"234"," am":"235"," sp":"236"," st":"237"," tu":"238"," ve":"239"," \u017ee":"240","ajo":"241","ale":"242","apo":"243","dal":"244","dru":"245","e j":"246","edn":"247","ejo":"248","elo":"249","est":"250","etj":"251","eva":"252","iji":"253","ik ":"254","im ":"255","itv":"256","mob":"257","nap":"258","nek":"259","pol":"260","pos":"261","rat":"262","ski":"263","ti\u010d":"264","tom":"265","ton":"266","tra":"267","tud":"268","tve":"269","v b":"270","vil":"271","vse":"272","\u010dit":"273"," av":"274"," gr":"275","a z":"276","ans":"277","ast":"278","avt":"279","dan":"280","e m":"281","eds":"282","for":"283","i z":"284","kot":"285","mi ":"286","nim":"287","o b":"288","o o":"289","od ":"290","odl":"291","oiz":"292","ot ":"293","par":"294","pot":"295","rje":"296","roi":"297","tem":"298","val":"299"},"somali":{"ka ":"0","ay ":"1","da ":"2"," ay":"3","aal":"4","oo ":"5","aan":"6"," ka":"7","an ":"8","in ":"9"," in":"10","ada":"11","maa":"12","aba":"13"," so":"14","ali":"15","bad":"16","add":"17","soo":"18"," na":"19","aha":"20","ku ":"21","ta ":"22"," wa":"23","yo ":"24","a s":"25","oma":"26","yaa":"27"," ba":"28"," ku":"29"," la":"30"," oo":"31","iya":"32","sha":"33","a a":"34","dda":"35","nab":"36","nta":"37"," da":"38"," ma":"39","nka":"40","uu ":"41","y i":"42","aya":"43","ha ":"44","raa":"45"," dh":"46"," qa":"47","a k":"48","ala":"49","baa":"50","doo":"51","had":"52","liy":"53","oom":"54"," ha":"55"," sh":"56","a d":"57","a i":"58","a n":"59","aar":"60","ee ":"61","ey ":"62","y k":"63","ya ":"64"," ee":"65"," iy":"66","aa ":"67","aaq":"68","gaa":"69","lam":"70"," bu":"71","a b":"72","a m":"73","ad ":"74","aga":"75","ama":"76","iyo":"77","la ":"78","a c":"79","a l":"80","een":"81","int":"82","she":"83","wax":"84","yee":"85"," si":"86"," uu":"87","a h":"88","aas":"89","alk":"90","dha":"91","gu ":"92","hee":"93","ii ":"94","ira":"95","mad":"96","o a":"97","o k":"98","qay":"99"," ah":"100"," ca":"101"," wu":"102","ank":"103","ash":"104","axa":"105","eed":"106","en ":"107","ga ":"108","haa":"109","n a":"110","n s":"111","naa":"112","nay":"113","o d":"114","taa":"115","u b":"116","uxu":"117","wux":"118","xuu":"119"," ci":"120"," do":"121"," ho":"122"," ta":"123","a g":"124","a u":"125","ana":"126","ayo":"127","dhi":"128","iin":"129","lag":"130","lin":"131","lka":"132","o i":"133","san":"134","u s":"135","una":"136","uun":"137"," ga":"138"," xa":"139"," xu":"140","aab":"141","abt":"142","aq ":"143","aqa":"144","ara":"145","arl":"146","caa":"147","cir":"148","eeg":"149","eel":"150","isa":"151","kal":"152","lah":"153","ney":"154","qaa":"155","rla":"156","sad":"157","sii":"158","u d":"159","wad":"160"," ad":"161"," ar":"162"," di":"163"," jo":"164"," ra":"165"," sa":"166"," u ":"167"," yi":"168","a j":"169","a q":"170","aad":"171","aat":"172","aay":"173","ah ":"174","ale":"175","amk":"176","ari":"177","as ":"178","aye":"179","bus":"180","dal":"181","ddu":"182","dii":"183","du ":"184","duu":"185","ed ":"186","ege":"187","gey":"188","hay":"189","hii":"190","ida":"191","ine":"192","joo":"193","laa":"194","lay":"195","mar":"196","mee":"197","n b":"198","n d":"199","n m":"200","no ":"201","o b":"202","o l":"203","oog":"204","oon":"205","rga":"206","sh ":"207","sid":"208","u q":"209","unk":"210","ush":"211","xa ":"212","y d":"213"," bi":"214"," gu":"215"," is":"216"," ke":"217"," lo":"218"," me":"219"," mu":"220"," qo":"221"," ug":"222","a e":"223","a o":"224","a w":"225","adi":"226","ado":"227","agu":"228","al ":"229","ant":"230","ark":"231","asa":"232","awi":"233","bta":"234","bul":"235","d a":"236","dag":"237","dan":"238","do ":"239","e s":"240","gal":"241","gay":"242","guu":"243","h e":"244","hal":"245","iga":"246","ihi":"247","iri":"248","iye":"249","ken":"250","lad":"251","lid":"252","lsh":"253","mag":"254","mun":"255","n h":"256","n i":"257","na ":"258","o n":"259","o w":"260","ood":"261","oor":"262","ora":"263","qab":"264","qor":"265","rab":"266","rit":"267","rta":"268","s o":"269","sab":"270","ska":"271","to ":"272","u a":"273","u h":"274","u u":"275","ud ":"276","ugu":"277","uls":"278","uud":"279","waa":"280","xus":"281","y b":"282","y q":"283","y s":"284","yad":"285","yay":"286","yih":"287"," aa":"288"," bo":"289"," br":"290"," go":"291"," ji":"292"," mi":"293"," of":"294"," ti":"295"," um":"296"," wi":"297"," xo":"298","a x":"299"},"spanish":{" de":"0","de ":"1"," la":"2","os ":"3","la ":"4","el ":"5","es ":"6"," qu":"7"," co":"8","e l":"9","as ":"10","que":"11"," el":"12","ue ":"13","en ":"14","ent":"15"," en":"16"," se":"17","nte":"18","res":"19","con":"20","est":"21"," es":"22","s d":"23"," lo":"24"," pr":"25","los":"26"," y ":"27","do ":"28","\u00f3n ":"29","i\u00f3n":"30"," un":"31","ci\u00f3":"32","del":"33","o d":"34"," po":"35","a d":"36","aci":"37","sta":"38","te ":"39","ado":"40","pre":"41","to ":"42","par":"43","a e":"44","a l":"45","ra ":"46","al ":"47","e e":"48","se ":"49","pro":"50","ar ":"51","ia ":"52","o e":"53"," re":"54","ida":"55","dad":"56","tra":"57","por":"58","s p":"59"," a ":"60","a p":"61","ara":"62","cia":"63"," pa":"64","com":"65","no ":"66"," di":"67"," in":"68","ien":"69","n l":"70","ad ":"71","ant":"72","e s":"73","men":"74","a c":"75","on ":"76","un ":"77","las":"78","nci":"79"," tr":"80","cio":"81","ier":"82","nto":"83","tiv":"84","n d":"85","n e":"86","or ":"87","s c":"88","enc":"89","ern":"90","io ":"91","a s":"92","ici":"93","s e":"94"," ma":"95","dos":"96","e a":"97","e c":"98","emp":"99","ica":"100","ivo":"101","l p":"102","n c":"103","r e":"104","ta ":"105","ter":"106","e d":"107","esa":"108","ez ":"109","mpr":"110","o a":"111","s a":"112"," ca":"113"," su":"114","ion":"115"," cu":"116"," ju":"117","an ":"118","da ":"119","ene":"120","ero":"121","na ":"122","rec":"123","ro ":"124","tar":"125"," al":"126"," an":"127","bie":"128","e p":"129","er ":"130","l c":"131","n p":"132","omp":"133","ten":"134"," em":"135","ist":"136","nes":"137","nta":"138","o c":"139","so ":"140","tes":"141","era":"142","l d":"143","l m":"144","les":"145","ntr":"146","o s":"147","ore":"148","r\u00e1 ":"149","s q":"150","s y":"151","sto":"152","a a":"153","a r":"154","ari":"155","des":"156","e q":"157","ivi":"158","lic":"159","lo ":"160","n a":"161","one":"162","ora":"163","per":"164","pue":"165","r l":"166","re ":"167","ren":"168","una":"169","\u00eda ":"170","ada":"171","cas":"172","ere":"173","ide":"174","min":"175","n s":"176","ndo":"177","ran":"178","rno":"179"," ac":"180"," ex":"181"," go":"182"," no":"183","a t":"184","aba":"185","ble":"186","ece":"187","ect":"188","l a":"189","l g":"190","lid":"191","nsi":"192","ons":"193","rac":"194","rio":"195","str":"196","uer":"197","ust":"198"," ha":"199"," le":"200"," mi":"201"," mu":"202"," ob":"203"," pe":"204"," pu":"205"," so":"206","a i":"207","ale":"208","ca ":"209","cto":"210","e i":"211","e u":"212","eso":"213","fer":"214","fic":"215","gob":"216","jo ":"217","ma ":"218","mpl":"219","o p":"220","obi":"221","s m":"222","sa ":"223","sep":"224","ste":"225","sti":"226","tad":"227","tod":"228","y s":"229"," ci":"230","and":"231","ces":"232","c\u00f3 ":"233","dor":"234","e m":"235","eci":"236","eco":"237","esi":"238","int":"239","iza":"240","l e":"241","lar":"242","mie":"243","ner":"244","orc":"245","rci":"246","ria":"247","tic":"248","tor":"249"," as":"250"," si":"251","ce ":"252","den":"253","e r":"254","e t":"255","end":"256","eri":"257","esp":"258","ial":"259","ido":"260","ina":"261","inc":"262","mit":"263","o l":"264","ome":"265","pli":"266","ras":"267","s t":"268","sid":"269","sup":"270","tab":"271","uen":"272","ues":"273","ura":"274","vo ":"275","vor":"276"," sa":"277"," ti":"278","abl":"279","ali":"280","aso":"281","ast":"282","cor":"283","cti":"284","cue":"285","div":"286","duc":"287","ens":"288","eti":"289","imi":"290","ini":"291","lec":"292","o q":"293","oce":"294","ort":"295","ral":"296","rma":"297","roc":"298","rod":"299"},"swahili":{" wa":"0","wa ":"1","a k":"2","a m":"3"," ku":"4"," ya":"5","a w":"6","ya ":"7","ni ":"8"," ma":"9","ka ":"10","a u":"11","na ":"12","za ":"13","ia ":"14"," na":"15","ika":"16","ma ":"17","ali":"18","a n":"19"," am":"20","ili":"21","kwa":"22"," kw":"23","ini":"24"," ha":"25","ame":"26","ana":"27","i n":"28"," za":"29","a h":"30","ema":"31","i m":"32","i y":"33","kuw":"34","la ":"35","o w":"36","a y":"37","ata":"38","sem":"39"," la":"40","ati":"41","chi":"42","i w":"43","uwa":"44","aki":"45","li ":"46","eka":"47","ira":"48"," nc":"49","a s":"50","iki":"51","kat":"52","nch":"53"," ka":"54"," ki":"55","a b":"56","aji":"57","amb":"58","ra ":"59","ri ":"60","rik":"61","ada":"62","mat":"63","mba":"64","mes":"65","yo ":"66","zi ":"67","da ":"68","hi ":"69","i k":"70","ja ":"71","kut":"72","tek":"73","wan":"74"," bi":"75","a a":"76","aka":"77","ao ":"78","asi":"79","cha":"80","ese":"81","eza":"82","ke ":"83","moj":"84","oja":"85"," hi":"86","a z":"87","end":"88","ha ":"89","ji ":"90","mu ":"91","shi":"92","wat":"93"," bw":"94","ake":"95","ara":"96","bw ":"97","i h":"98","imb":"99","tik":"100","wak":"101","wal":"102"," hu":"103"," mi":"104"," mk":"105"," ni":"106"," ra":"107"," um":"108","a l":"109","ate":"110","esh":"111","ina":"112","ish":"113","kim":"114","o k":"115"," ir":"116","a i":"117","ala":"118","ani":"119","aq ":"120","azi":"121","hin":"122","i a":"123","idi":"124","ima":"125","ita":"126","rai":"127","raq":"128","sha":"129"," ms":"130"," se":"131","afr":"132","ama":"133","ano":"134","ea ":"135","ele":"136","fri":"137","go ":"138","i i":"139","ifa":"140","iwa":"141","iyo":"142","kus":"143","lia":"144","lio":"145","maj":"146","mku":"147","no ":"148","tan":"149","uli":"150","uta":"151","wen":"152"," al":"153","a j":"154","aad":"155","aid":"156","ari":"157","awa":"158","ba ":"159","fa ":"160","nde":"161","nge":"162","nya":"163","o y":"164","u w":"165","ua ":"166","umo":"167","waz":"168","ye ":"169"," ut":"170"," vi":"171","a d":"172","a t":"173","aif":"174","di ":"175","ere":"176","ing":"177","kin":"178","nda":"179","o n":"180","oa ":"181","tai":"182","toa":"183","usa":"184","uto":"185","was":"186","yak":"187","zo ":"188"," ji":"189"," mw":"190","a p":"191","aia":"192","amu":"193","ang":"194","bik":"195","bo ":"196","del":"197","e w":"198","ene":"199","eng":"200","ich":"201","iri":"202","iti":"203","ito":"204","ki ":"205","kir":"206","ko ":"207","kuu":"208","mar":"209","mbo":"210","mil":"211","ngi":"212","ngo":"213","o l":"214","ong":"215","si ":"216","ta ":"217","tak":"218","u y":"219","umu":"220","usi":"221","uu ":"222","wam":"223"," af":"224"," ba":"225"," li":"226"," si":"227"," zi":"228","a v":"229","ami":"230","atu":"231","awi":"232","eri":"233","fan":"234","fur":"235","ger":"236","i z":"237","isi":"238","izo":"239","lea":"240","mbi":"241","mwa":"242","nye":"243","o h":"244","o m":"245","oni":"246","rez":"247","saa":"248","ser":"249","sin":"250","tat":"251","tis":"252","tu ":"253","uin":"254","uki":"255","ur ":"256","wi ":"257","yar":"258"," da":"259"," en":"260"," mp":"261"," ny":"262"," ta":"263"," ul":"264"," we":"265","a c":"266","a f":"267","ais":"268","apo":"269","ayo":"270","bar":"271","dhi":"272","e a":"273","eke":"274","eny":"275","eon":"276","hai":"277","han":"278","hiy":"279","hur":"280","i s":"281","imw":"282","kal":"283","kwe":"284","lak":"285","lam":"286","mak":"287","msa":"288","ne ":"289","ngu":"290","ru ":"291","sal":"292","swa":"293","te ":"294","ti ":"295","uku":"296","uma":"297","una":"298","uru":"299"},"swedish":{"en ":"0"," de":"1","et ":"2","er ":"3","tt ":"4","om ":"5","f\u00f6r":"6","ar ":"7","de ":"8","att":"9"," f\u00f6":"10","ing":"11"," in":"12"," at":"13"," i ":"14","det":"15","ch ":"16","an ":"17","gen":"18"," an":"19","t s":"20","som":"21","te ":"22"," oc":"23","ter":"24"," ha":"25","lle":"26","och":"27"," sk":"28"," so":"29","ra ":"30","r a":"31"," me":"32","var":"33","nde":"34","\u00e4r ":"35"," ko":"36","on ":"37","ans":"38","int":"39","n s":"40","na ":"41"," en":"42"," fr":"43"," p\u00e5":"44"," st":"45"," va":"46","and":"47","nte":"48","p\u00e5 ":"49","ska":"50","ta ":"51"," vi":"52","der":"53","\u00e4ll":"54","\u00f6rs":"55"," om":"56","da ":"57","kri":"58","ka ":"59","nst":"60"," ho":"61","as ":"62","st\u00e4":"63","r d":"64","t f":"65","upp":"66"," be":"67","nge":"68","r s":"69","tal":"70","t\u00e4l":"71","\u00f6r ":"72"," av":"73","ger":"74","ill":"75","ng ":"76","e s":"77","ekt":"78","ade":"79","era":"80","ers":"81","har":"82","ll ":"83","lld":"84","rin":"85","rna":"86","s\u00e4k":"87","und":"88","inn":"89","lig":"90","ns ":"91"," ma":"92"," pr":"93"," up":"94","age":"95","av ":"96","iva":"97","kti":"98","lda":"99","orn":"100","son":"101","ts ":"102","tta":"103","\u00e4kr":"104"," sj":"105"," ti":"106","avt":"107","ber":"108","els":"109","eta":"110","kol":"111","men":"112","n d":"113","t k":"114","vta":"115","\u00e5r ":"116","juk":"117","man":"118","n f":"119","nin":"120","r i":"121","rs\u00e4":"122","sju":"123","sso":"124"," \u00e4r":"125","a s":"126","ach":"127","ag ":"128","bac":"129","den":"130","ett":"131","fte":"132","hor":"133","nba":"134","oll":"135","rnb":"136","ste":"137","til":"138"," ef":"139"," si":"140","a a":"141","e h":"142","ed ":"143","eft":"144","ga ":"145","ig ":"146","it ":"147","ler":"148","med":"149","n i":"150","nd ":"151","s\u00e5 ":"152","tiv":"153"," bl":"154"," et":"155"," fi":"156"," s\u00e4":"157","at ":"158","des":"159","e a":"160","gar":"161","get":"162","lan":"163","lss":"164","ost":"165","r b":"166","r e":"167","re ":"168","ret":"169","sta":"170","t i":"171"," ge":"172"," he":"173"," re":"174","a f":"175","all":"176","bos":"177","ets":"178","lek":"179","let":"180","ner":"181","nna":"182","nne":"183","r f":"184","rit":"185","s s":"186","sen":"187","sto":"188","tor":"189","vav":"190","ygg":"191"," ka":"192"," s\u00e5":"193"," tr":"194"," ut":"195","ad ":"196","al ":"197","are":"198","e o":"199","gon":"200","kom":"201","n a":"202","n h":"203","nga":"204","r h":"205","ren":"206","t d":"207","tag":"208","tar":"209","tre":"210","\u00e4tt":"211"," f\u00e5":"212"," h\u00e4":"213"," se":"214","a d":"215","a i":"216","a p":"217","ale":"218","ann":"219","ara":"220","byg":"221","gt ":"222","han":"223","igt":"224","kan":"225","la ":"226","n o":"227","nom":"228","nsk":"229","omm":"230","r k":"231","r p":"232","r v":"233","s f":"234","s k":"235","t a":"236","t p":"237","ver":"238"," bo":"239"," br":"240"," ku":"241"," n\u00e5":"242","a b":"243","a e":"244","del":"245","ens":"246","es ":"247","fin":"248","ige":"249","m s":"250","n p":"251","n\u00e5g":"252","or ":"253","r o":"254","rbe":"255","rs ":"256","rt ":"257","s a":"258","s n":"259","skr":"260","t o":"261","ten":"262","tio":"263","ven":"264"," al":"265"," ja":"266"," p ":"267"," r ":"268"," sa":"269","a h":"270","bet":"271","cke":"272","dra":"273","e f":"274","e i":"275","eda":"276","eno":"277","er\u00e4":"278","ess":"279","ion":"280","jag":"281","m f":"282","ne ":"283","nns":"284","pro":"285","r t":"286","rar":"287","riv":"288","r\u00e4t":"289","t e":"290","t t":"291","ust":"292","vad":"293","\u00f6re":"294"," ar":"295"," by":"296"," kr":"297"," mi":"298","arb":"299"},"tagalog":{"ng ":"0","ang":"1"," na":"2"," sa":"3","an ":"4","nan":"5","sa ":"6","na ":"7"," ma":"8"," ca":"9","ay ":"10","n g":"11"," an":"12","ong":"13"," ga":"14","at ":"15"," pa":"16","ala":"17"," si":"18","a n":"19","ga ":"20","g n":"21","g m":"22","ito":"23","g c":"24","man":"25","san":"26","g s":"27","ing":"28","to ":"29","ila":"30","ina":"31"," di":"32"," ta":"33","aga":"34","iya":"35","aca":"36","g t":"37"," at":"38","aya":"39","ama":"40","lan":"41","a a":"42","qui":"43","a c":"44","a s":"45","nag":"46"," ba":"47","g i":"48","tan":"49","'t ":"50"," cu":"51","aua":"52","g p":"53"," ni":"54","os ":"55","'y ":"56","a m":"57"," n ":"58","la ":"59"," la":"60","o n":"61","yan":"62"," ay":"63","usa":"64","cay":"65","on ":"66","ya ":"67"," it":"68","al ":"69","apa":"70","ata":"71","t n":"72","uan":"73","aha":"74","asa":"75","pag":"76"," gu":"77","g l":"78","di ":"79","mag":"80","aba":"81","g a":"82","ara":"83","a p":"84","in ":"85","ana":"86","it ":"87","si ":"88","cus":"89","g b":"90","uin":"91","a t":"92","as ":"93","n n":"94","hin":"95"," hi":"96","a't":"97","ali":"98"," bu":"99","gan":"100","uma":"101","a d":"102","agc":"103","aqu":"104","g d":"105"," tu":"106","aon":"107","ari":"108","cas":"109","i n":"110","niy":"111","pin":"112","a i":"113","gca":"114","siy":"115","a'y":"116","yao":"117","ag ":"118","ca ":"119","han":"120","ili":"121","pan":"122","sin":"123","ual":"124","n s":"125","nam":"126"," lu":"127","can":"128","dit":"129","gui":"130","y n":"131","gal":"132","hat":"133","nal":"134"," is":"135","bag":"136","fra":"137"," fr":"138"," su":"139","a l":"140"," co":"141","ani":"142"," bi":"143"," da":"144","alo":"145","isa":"146","ita":"147","may":"148","o s":"149","sil":"150","una":"151"," in":"152"," pi":"153","l n":"154","nil":"155","o a":"156","pat":"157","sac":"158","t s":"159"," ua":"160","agu":"161","ail":"162","bin":"163","dal":"164","g h":"165","ndi":"166","oon":"167","ua ":"168"," ha":"169","ind":"170","ran":"171","s n":"172","tin":"173","ulo":"174","eng":"175","g f":"176","ini":"177","lah":"178","lo ":"179","rai":"180","rin":"181","ton":"182","g u":"183","inu":"184","lon":"185","o'y":"186","t a":"187"," ar":"188","a b":"189","ad ":"190","bay":"191","cal":"192","gya":"193","ile":"194","mat":"195","n a":"196","pau":"197","ra ":"198","tay":"199","y m":"200","ant":"201","ban":"202","i m":"203","nas":"204","nay":"205","no ":"206","sti":"207"," ti":"208","ags":"209","g g":"210","ta ":"211","uit":"212","uno":"213"," ib":"214"," ya":"215","a u":"216","abi":"217","ati":"218","cap":"219","ig ":"220","is ":"221","la'":"222"," do":"223"," pu":"224","api":"225","ayo":"226","gos":"227","gul":"228","lal":"229","tag":"230","til":"231","tun":"232","y c":"233","y s":"234","yon":"235","ano":"236","bur":"237","iba":"238","isi":"239","lam":"240","nac":"241","nat":"242","ni ":"243","nto":"244","od ":"245","pa ":"246","rgo":"247","urg":"248"," m ":"249","adr":"250","ast":"251","cag":"252","gay":"253","gsi":"254","i p":"255","ino":"256","len":"257","lin":"258","m g":"259","mar":"260","nah":"261","to'":"262"," de":"263","a h":"264","cat":"265","cau":"266","con":"267","iqu":"268","lac":"269","mab":"270","min":"271","og ":"272","par":"273","sal":"274"," za":"275","ao ":"276","doo":"277","ipi":"278","nod":"279","nte":"280","uha":"281","ula":"282"," re":"283","ill":"284","lit":"285","mac":"286","nit":"287","o't":"288","or ":"289","ora":"290","sum":"291","y p":"292"," al":"293"," mi":"294"," um":"295","aco":"296","ada":"297","agd":"298","cab":"299"},"turkish":{"lar":"0","en ":"1","ler":"2","an ":"3","in ":"4"," bi":"5"," ya":"6","eri":"7","de ":"8"," ka":"9","ir ":"10","ar\u0131":"11"," ba":"12"," de":"13"," ha":"14","\u0131n ":"15","ara":"16","bir":"17"," ve":"18"," sa":"19","ile":"20","le ":"21","nde":"22","da ":"23"," bu":"24","ana":"25","ini":"26","\u0131n\u0131":"27","er ":"28","ve ":"29"," y\u0131":"30","lma":"31","y\u0131l":"32"," ol":"33","ar ":"34","n b":"35","nda":"36","aya":"37","li ":"38","as\u0131":"39"," ge":"40","ind":"41","n k":"42","esi":"43","lan":"44","nla":"45","ak ":"46","an\u0131":"47","eni":"48","ni ":"49","n\u0131 ":"50","r\u0131n":"51","san":"52"," ko":"53"," ye":"54","maz":"55","ba\u015f":"56","ili":"57","rin":"58","al\u0131":"59","az ":"60","hal":"61","\u0131nd":"62"," da":"63"," g\u00fc":"64","ele":"65","\u0131lm":"66","\u0131\u011f\u0131":"67","eki":"68","g\u00fcn":"69","i b":"70","i\u00e7i":"71","den":"72","kar":"73","si ":"74"," il":"75","e y":"76","na ":"77","yor":"78","ek ":"79","n s":"80"," i\u00e7":"81","bu ":"82","e b":"83","im ":"84","ki ":"85","len":"86","ri ":"87","s\u0131n":"88"," so":"89","\u00fcn ":"90"," ta":"91","nin":"92","i\u011fi":"93","tan":"94","yan":"95"," si":"96","nat":"97","n\u0131n":"98","kan":"99","r\u0131 ":"100","\u00e7in":"101","\u011f\u0131 ":"102","eli":"103","n a":"104","\u0131r ":"105"," an":"106","ine":"107","n y":"108","ola":"109"," ar":"110","al ":"111","e s":"112","lik":"113","n d":"114","sin":"115"," al":"116"," d\u00fc":"117","anl":"118","ne ":"119","ya ":"120","\u0131m ":"121","\u0131na":"122"," be":"123","ada":"124","ala":"125","ama":"126","ilm":"127","or ":"128","s\u0131 ":"129","yen":"130"," me":"131","at\u0131":"132","di ":"133","eti":"134","ken":"135","la ":"136","l\u0131 ":"137","oru":"138"," g\u00f6":"139"," in":"140","and":"141","e d":"142","men":"143","un ":"144","\u00f6ne":"145","a d":"146","at ":"147","e a":"148","e g":"149","yar":"150"," ku":"151","ay\u0131":"152","dan":"153","edi":"154","iri":"155","\u00fcn\u00fc":"156","\u011fi ":"157","\u0131l\u0131":"158","eme":"159","e\u011fi":"160","i k":"161","i y":"162","\u0131la":"163"," \u00e7a":"164","a y":"165","alk":"166","d\u0131 ":"167","ede":"168","el ":"169","nd\u0131":"170","ra ":"171","\u00fcne":"172"," s\u00fc":"173","d\u0131r":"174","e k":"175","ere":"176","ik ":"177","imi":"178","i\u015fi":"179","mas":"180","n h":"181","s\u00fcr":"182","yle":"183"," ad":"184"," fi":"185"," gi":"186"," se":"187","a k":"188","arl":"189","a\u015f\u0131":"190","iyo":"191","kla":"192","l\u0131\u011f":"193","nem":"194","ney":"195","rme":"196","ste":"197","t\u0131 ":"198","unl":"199","ver":"200"," s\u0131":"201"," te":"202"," to":"203","a s":"204","a\u015fk":"205","ekl":"206","end":"207","kal":"208","li\u011f":"209","min":"210","t\u0131r":"211","ulu":"212","unu":"213","yap":"214","ye ":"215","\u0131 i":"216","\u015fka":"217","\u015ft\u0131":"218"," b\u00fc":"219"," ke":"220"," ki":"221","ard":"222","art":"223","a\u015fa":"224","n i":"225","ndi":"226","ti ":"227","top":"228","\u0131 b":"229"," va":"230"," \u00f6n":"231","aki":"232","cak":"233","ey ":"234","fil":"235","isi":"236","kle":"237","kur":"238","man":"239","nce":"240","nle":"241","nun":"242","rak":"243","\u0131k ":"244"," en":"245"," yo":"246","a g":"247","lis":"248","mak":"249","n g":"250","tir":"251","yas":"252"," i\u015f":"253"," y\u00f6":"254","ale":"255","bil":"256","bul":"257","et ":"258","i d":"259","iye":"260","kil":"261","ma ":"262","n e":"263","n t":"264","nu ":"265","olu":"266","rla":"267","te ":"268","y\u00f6n":"269","\u00e7\u0131k":"270"," ay":"271"," m\u00fc":"272"," \u00e7o":"273"," \u00e7\u0131":"274","a a":"275","a b":"276","ata":"277","der":"278","gel":"279","i g":"280","i i":"281","ill":"282","ist":"283","ld\u0131":"284","lu ":"285","mek":"286","mle":"287","n \u00e7":"288","onu":"289","opl":"290","ran":"291","rat":"292","rd\u0131":"293","rke":"294","siy":"295","son":"296","ta ":"297","t\u00e7\u0131":"298","t\u0131n":"299"},"ukrainian":{" \u043d\u0430":"0"," \u0437\u0430":"1","\u043d\u043d\u044f":"2","\u043d\u044f ":"3","\u043d\u0430 ":"4"," \u043f\u0440":"5","\u043e\u0433\u043e":"6","\u0433\u043e ":"7","\u0441\u044c\u043a":"8"," \u043f\u043e":"9"," \u0443 ":"10","\u0432\u0456\u0434":"11","\u0435\u0440\u0435":"12"," \u043c\u0456":"13"," \u043d\u0435":"14","\u0438\u0445 ":"15","\u0442\u044c ":"16","\u043f\u0435\u0440":"17"," \u0432\u0456":"18","\u0456\u0432 ":"19"," \u043f\u0435":"20"," \u0449\u043e":"21","\u043b\u044c\u043d":"22","\u043c\u0438 ":"23","\u043d\u0456 ":"24","\u043d\u0435 ":"25","\u0442\u0438 ":"26","\u0430\u0442\u0438":"27","\u0435\u043d\u043d":"28","\u043c\u0456\u0441":"29","\u043f\u0440\u0430":"30","\u0443\u0432\u0430":"31","\u043d\u0438\u043a":"32","\u043f\u0440\u043e":"33","\u0440\u0430\u0432":"34","\u0456\u0432\u043d":"35"," \u0442\u0430":"36","\u0431\u0443\u0434":"37","\u0432\u043b\u0456":"38","\u0440\u0456\u0432":"39"," \u043a\u043e":"40"," \u0440\u0456":"41","\u0430\u043b\u044c":"42","\u043d\u043e ":"43","\u043e\u043c\u0443":"44","\u0449\u043e ":"45"," \u0432\u0438":"46","\u043c\u0443 ":"47","\u0440\u0435\u0432":"48","\u0441\u044f ":"49","\u0456\u043d\u043d":"50"," \u0434\u043e":"51"," \u0443\u043f":"52","\u0430\u0432\u043b":"53","\u0430\u043d\u043d":"54","\u043a\u043e\u043c":"55","\u043b\u0438 ":"56","\u043b\u0456\u043d":"57","\u043d\u043e\u0433":"58","\u0443\u043f\u0440":"59"," \u0431\u0443":"60"," \u0437 ":"61"," \u0440\u043e":"62","\u0437\u0430 ":"63","\u0438 \u043d":"64","\u043d\u043e\u0432":"65","\u043e\u0440\u043e":"66","\u043e\u0441\u0442":"67","\u0441\u0442\u0430":"68","\u0442\u0456 ":"69","\u044e\u0442\u044c":"70"," \u043c\u043e":"71"," \u043d\u0456":"72"," \u044f\u043a":"73","\u0431\u043e\u0440":"74","\u0432\u0430 ":"75","\u0432\u0430\u043d":"76","\u0435\u043d\u044c":"77","\u0438 \u043f":"78","\u043d\u044c ":"79","\u043e\u0432\u0456":"80","\u0440\u043e\u043d":"81","\u0441\u0442\u0456":"82","\u0442\u0430 ":"83","\u0443 \u0432":"84","\u044c\u043a\u043e":"85","\u0456\u0441\u0442":"86"," \u0432 ":"87"," \u0440\u0435":"88","\u0434\u043e ":"89","\u0435 \u043f":"90","\u0437\u0430\u0431":"91","\u0438\u0439 ":"92","\u043d\u0441\u044c":"93","\u043e \u0432":"94","\u043e \u043f":"95","\u043f\u0440\u0438":"96","\u0456 \u043f":"97"," \u043a\u0443":"98"," \u043f\u0456":"99"," \u0441\u043f":"100","\u0430 \u043f":"101","\u0430\u0431\u043e":"102","\u0430\u043d\u0441":"103","\u0430\u0446\u0456":"104","\u0432\u0430\u0442":"105","\u0432\u043d\u0438":"106","\u0438 \u0432":"107","\u0438\u043c\u0438":"108","\u043a\u0430 ":"109","\u043d\u0435\u043d":"110","\u043d\u0456\u0447":"111","\u043e\u043d\u0430":"112","\u043e\u0457 ":"113","\u043f\u043e\u0432":"114","\u044c\u043a\u0438":"115","\u044c\u043d\u043e":"116","\u0456\u0437\u043d":"117","\u0456\u0447\u043d":"118"," \u0430\u0432":"119"," \u043c\u0430":"120"," \u043e\u0440":"121"," \u0441\u0443":"122"," \u0447\u0438":"123"," \u0456\u043d":"124","\u0430 \u0437":"125","\u0430\u043c ":"126","\u0430\u0454 ":"127","\u0432\u043d\u0435":"128","\u0432\u0442\u043e":"129","\u0434\u043e\u043c":"130","\u0435\u043d\u0442":"131","\u0436\u0438\u0442":"132","\u0437\u043d\u0438":"133","\u0438\u043c ":"134","\u0438\u0442\u043b":"135","\u043b\u0430 ":"136","\u043d\u0438\u0445":"137","\u043d\u0438\u0446":"138","\u043e\u0432\u0430":"139","\u043e\u0432\u0438":"140","\u043e\u043c ":"141","\u043f\u043e\u0440":"142","\u0442\u044c\u0441":"143","\u0443 \u0440":"144","\u044c\u0441\u044f":"145","\u0456\u0434\u043e":"146","\u0456\u043b\u044c":"147","\u0456\u0441\u044c":"148"," \u0432\u0430":"149"," \u0434\u0456":"150"," \u0436\u0438":"151"," \u0447\u0435":"152"," \u0456 ":"153","\u0430 \u0432":"154","\u0430 \u043d":"155","\u0430\u043b\u0438":"156","\u0432\u0435\u0437":"157","\u0432\u043d\u043e":"158","\u0435\u0432\u0435":"159","\u0435\u0437\u0435":"160","\u0437\u0435\u043d":"161","\u0438\u0446\u0442":"162","\u043a\u0438 ":"163","\u043a\u0438\u0445":"164","\u043a\u043e\u043d":"165","\u043a\u0443 ":"166","\u043b\u0430\u0441":"167","\u043b\u044f ":"168","\u043c\u043e\u0436":"169","\u043d\u0430\u0447":"170","\u043d\u0438\u043c":"171","\u043d\u043e\u0457":"172","\u043e \u0431":"173","\u043e\u0432\u0443":"174","\u043e\u0434\u0438":"175","\u043e\u044e ":"176","\u0440\u043e ":"177","\u0440\u043e\u043a":"178","\u0441\u043d\u043e":"179","\u0441\u043f\u043e":"180","\u0442\u0430\u043a":"181","\u0442\u0432\u0430":"182","\u0442\u0443 ":"183","\u0443 \u043f":"184","\u0446\u0442\u0432":"185","\u044c\u043d\u0438":"186","\u044f \u0437":"187","\u0456 \u043c":"188","\u0456\u0457 ":"189"," \u0432\u0441":"190"," \u0433\u0440":"191"," \u0434\u0435":"192"," \u043d\u043e":"193"," \u043f\u0430":"194"," \u0441\u0435":"195"," \u0443\u043a":"196"," \u0457\u0445":"197","\u0430 \u043e":"198","\u0430\u0432\u0442":"199","\u0430\u0441\u0442":"200","\u0430\u044e\u0442":"201","\u0432\u0430\u0440":"202","\u0434\u0435\u043d":"203","\u0434\u0438 ":"204","\u0434\u0443 ":"205","\u0437\u043d\u0430":"206","\u0438 \u0437":"207","\u0438\u043a\u043e":"208","\u0438\u0441\u044f":"209","\u0438\u0442\u0438":"210","\u043a\u043e\u0433":"211","\u043c\u0435\u043d":"212","\u043d\u043e\u043c":"213","\u043d\u0443 ":"214","\u043e \u043d":"215","\u043e \u0441":"216","\u043e\u0431\u0443":"217","\u043e\u0432\u043e":"218","\u043f\u043b\u0430":"219","\u0440\u0430\u043d":"220","\u0440\u0438\u0432":"221","\u0440\u043e\u0431":"222","\u0441\u043a\u0430":"223","\u0442\u0430\u043d":"224","\u0442\u0438\u043c":"225","\u0442\u0438\u0441":"226","\u0442\u043e ":"227","\u0442\u0440\u0430":"228","\u0443\u0434\u043e":"229","\u0447\u0438\u043d":"230","\u0447\u043d\u0438":"231","\u0456 \u0432":"232","\u0456\u044e ":"233"," \u0430 ":"234"," \u0432\u043e":"235"," \u0434\u0430":"236"," \u043a\u0432":"237"," \u043c\u0435":"238"," \u043e\u0431":"239"," \u0441\u043a":"240"," \u0442\u0438":"241"," \u0444\u0456":"242"," \u0454 ":"243","\u0430 \u0440":"244","\u0430 \u0441":"245","\u0430 \u0443":"246","\u0430\u043a ":"247","\u0430\u043d\u0456":"248","\u0430\u0440\u0442":"249","\u0430\u0441\u043d":"250","\u0432 \u0443":"251","\u0432\u0438\u043a":"252","\u0432\u0456\u0437":"253","\u0434\u043e\u0432":"254","\u0434\u043f\u043e":"255","\u0434\u0456\u0432":"256","\u0435\u0432\u0456":"257","\u0435\u043d\u0441":"258","\u0436\u0435 ":"259","\u0438 \u043c":"260","\u0438 \u0441":"261","\u0438\u043a\u0430":"262","\u0438\u0447\u043d":"263","\u043a\u0456 ":"264","\u043a\u0456\u0432":"265","\u043c\u0456\u0436":"266","\u043d\u0430\u043d":"267","\u043d\u043e\u0441":"268","\u043e \u0443":"269","\u043e\u0431\u043b":"270","\u043e\u0434\u043d":"271","\u043e\u043a ":"272","\u043e\u043b\u043e":"273","\u043e\u0442\u0440":"274","\u0440\u0435\u043d":"275","\u0440\u0438\u043c":"276","\u0440\u043e\u0437":"277","\u0441\u044c ":"278","\u0441\u0456 ":"279","\u0442\u043b\u0430":"280","\u0442\u0456\u0432":"281","\u0443 \u0437":"282","\u0443\u0433\u043e":"283","\u0443\u0434\u0456":"284","\u0447\u0438 ":"285","\u0448\u0435 ":"286","\u044f \u043d":"287","\u044f \u0443":"288","\u0456\u0434\u043f":"289","\u0456\u0439 ":"290","\u0456\u043d\u0430":"291","\u0456\u044f ":"292"," \u043a\u0430":"293"," \u043d\u0438":"294"," \u043e\u0441":"295"," \u0441\u0438":"296"," \u0442\u043e":"297"," \u0442\u0440":"298"," \u0443\u0433":"299"},"urdu":{"\u06cc\u06ba ":"0"," \u06a9\u06cc":"1","\u06a9\u06d2 ":"2"," \u06a9\u06d2":"3","\u0646\u06d2 ":"4"," \u06a9\u06c1":"5","\u06d2 \u06a9":"6","\u06a9\u06cc ":"7","\u0645\u06cc\u06ba":"8"," \u0645\u06cc":"9","\u06c1\u06d2 ":"10","\u0648\u06ba ":"11","\u06a9\u06c1 ":"12"," \u06c1\u06d2":"13","\u0627\u0646 ":"14","\u06c1\u06cc\u06ba":"15","\u0648\u0631 ":"16"," \u06a9\u0648":"17","\u06cc\u0627 ":"18"," \u0627\u0646":"19"," \u0646\u06d2":"20","\u0633\u06d2 ":"21"," \u0633\u06d2":"22"," \u06a9\u0631":"23","\u0633\u062a\u0627":"24"," \u0627\u0648":"25","\u0627\u0648\u0631":"26","\u062a\u0627\u0646":"27","\u0631 \u06a9":"28","\u06cc \u06a9":"29"," \u0627\u0633":"30","\u06d2 \u0627":"31"," \u067e\u0627":"32"," \u06c1\u0648":"33"," \u067e\u0631":"34","\u0631\u0641 ":"35"," \u06a9\u0627":"36","\u0627 \u06a9":"37","\u06cc \u0627":"38"," \u06c1\u06cc":"39","\u062f\u0631 ":"40","\u06a9\u0648 ":"41"," \u0627\u06cc":"42","\u06ba \u06a9":"43"," \u0645\u0634":"44"," \u0645\u0644":"45","\u0627\u062a ":"46","\u0635\u062f\u0631":"47","\u0627\u06a9\u0633":"48","\u0634\u0631\u0641":"49","\u0645\u0634\u0631":"50","\u067e\u0627\u06a9":"51","\u06a9\u0633\u062a":"52","\u06cc \u0645":"53"," \u062f\u06cc":"54"," \u0635\u062f":"55"," \u06cc\u06c1":"56","\u0627 \u06c1":"57","\u0646 \u06a9":"58","\u0648\u0627\u0644":"59","\u06cc\u06c1 ":"60","\u06d2 \u0648":"61"," \u0628\u06be":"62"," \u062f\u0648":"63","\u0627\u0633 ":"64","\u0631 \u0627":"65","\u0646\u06c1\u06cc":"66","\u06a9\u0627 ":"67","\u06d2 \u0633":"68","\u0626\u06cc ":"69","\u06c1 \u0627":"70","\u06cc\u062a ":"71","\u06d2 \u06c1":"72","\u062a \u06a9":"73"," \u0633\u0627":"74","\u0644\u06d2 ":"75","\u06c1\u0627 ":"76","\u06d2 \u0628":"77"," \u0648\u0627":"78","\u0627\u0631 ":"79","\u0646\u06cc ":"80","\u06a9\u06c1\u0627":"81","\u06cc \u06c1":"82","\u06d2 \u0645":"83"," \u0633\u06cc":"84"," \u0644\u06cc":"85","\u0627\u0646\u06c1":"86","\u0627\u0646\u06cc":"87","\u0631 \u0645":"88","\u0631 \u067e":"89","\u0631\u06cc\u062a":"90","\u0646 \u0645":"91","\u06be\u0627 ":"92","\u06cc\u0631 ":"93"," \u062c\u0627":"94"," \u062c\u0646":"95","\u0626\u06d2 ":"96","\u067e\u0631 ":"97","\u06ba \u0646":"98","\u06c1 \u06a9":"99","\u06cc \u0648":"100","\u06d2 \u062f":"101"," \u062a\u0648":"102"," \u062a\u06be":"103"," \u06af\u06cc":"104","\u0627\u06cc\u06a9":"105","\u0644 \u06a9":"106","\u0646\u0627 ":"107","\u06a9\u0631 ":"108","\u06ba \u0645":"109","\u06cc\u06a9 ":"110"," \u0628\u0627":"111","\u0627 \u062a":"112","\u062f\u06cc ":"113","\u0646 \u0633":"114","\u06a9\u06cc\u0627":"115","\u06cc\u0648\u06ba":"116","\u06d2 \u062c":"117","\u0627\u0644 ":"118","\u062a\u0648 ":"119","\u06ba \u0627":"120","\u06d2 \u067e":"121"," \u0686\u0627":"122","\u0627\u0645 ":"123","\u0628\u06be\u06cc":"124","\u062a\u06cc ":"125","\u062a\u06d2 ":"126","\u062f\u0648\u0633":"127","\u0633 \u06a9":"128","\u0645\u0644\u06a9":"129","\u0646 \u0627":"130","\u06c1\u0648\u0631":"131","\u06cc\u06d2 ":"132"," \u0645\u0648":"133"," \u0648\u06a9":"134","\u0627\u0626\u06cc":"135","\u0627\u0631\u062a":"136","\u0627\u0644\u06d2":"137","\u0628\u06be\u0627":"138","\u0631\u062f\u06cc":"139","\u0631\u06cc ":"140","\u0648\u06c1 ":"141","\u0648\u06cc\u0632":"142","\u06ba \u062f":"143","\u06be\u06cc ":"144","\u06cc \u0633":"145"," \u0631\u06c1":"146"," \u0645\u0646":"147"," \u0646\u06c1":"148"," \u0648\u0631":"149"," \u0648\u06c1":"150"," \u06c1\u0646":"151","\u0627 \u0627":"152","\u0627\u0633\u062a":"153","\u062a \u0627":"154","\u062a \u067e":"155","\u062f \u06a9":"156","\u0632 \u0645":"157","\u0646\u062f ":"158","\u0648\u0631\u062f":"159","\u0648\u06a9\u0644":"160","\u06af\u06cc ":"161","\u06af\u06cc\u0627":"162","\u06c1 \u067e":"163","\u06cc\u0632 ":"164","\u06d2 \u062a":"165"," \u0627\u0639":"166"," \u0627\u067e":"167"," \u062c\u0633":"168"," \u062c\u0645":"169"," \u062c\u0648":"170"," \u0633\u0631":"171","\u0627\u067e\u0646":"172","\u0627\u06a9\u062b":"173","\u062a\u06be\u0627":"174","\u062b\u0631\u06cc":"175","\u062f\u06cc\u0627":"176","\u0631 \u062f":"177","\u0631\u062a ":"178","\u0631\u0648\u06cc":"179","\u0633\u06cc ":"180","\u0645\u0644\u0627":"181","\u0646\u062f\u0648":"182","\u0648\u0633\u062a":"183","\u067e\u0631\u0648":"184","\u0686\u0627\u06c1":"185","\u06a9\u062b\u0631":"186","\u06a9\u0644\u0627":"187","\u06c1 \u06c1":"188","\u06c1\u0646\u062f":"189","\u06c1\u0648 ":"190","\u06d2 \u0644":"191"," \u0627\u06a9":"192"," \u062f\u0627":"193"," \u0633\u0646":"194"," \u0648\u0632":"195"," \u067e\u06cc":"196","\u0627 \u0686":"197","\u0627\u0621 ":"198","\u0627\u062a\u06be":"199","\u0627\u0642\u0627":"200","\u0627\u06c1 ":"201","\u062a\u06be ":"202","\u062f\u0648 ":"203","\u0631 \u0628":"204","\u0631\u0648\u0627":"205","\u0631\u06d2 ":"206","\u0633\u0627\u062a":"207","\u0641 \u06a9":"208","\u0642\u0627\u062a":"209","\u0644\u0627 ":"210","\u0644\u0627\u0621":"211","\u0645 \u0645":"212","\u0645 \u06a9":"213","\u0645\u0646 ":"214","\u0646\u0648\u06ba":"215","\u0648 \u0627":"216","\u06a9\u0631\u0646":"217","\u06ba \u06c1":"218","\u06be\u0627\u0631":"219","\u06c1\u0648\u0626":"220","\u06c1\u06cc ":"221","\u06cc\u0634 ":"222"," \u0627\u0645":"223"," \u0644\u0627":"224"," \u0645\u0633":"225"," \u067e\u0648":"226"," \u067e\u06c1":"227","\u0627\u0646\u06d2":"228","\u062a \u0645":"229","\u062a \u06c1":"230","\u062c \u06a9":"231","\u062f\u0648\u0646":"232","\u0632\u06cc\u0631":"233","\u0633 \u0633":"234","\u0634 \u06a9":"235","\u0641 \u0646":"236","\u0644 \u06c1":"237","\u0644\u0627\u0642":"238","\u0644\u06cc ":"239","\u0648\u0631\u06cc":"240","\u0648\u0632\u06cc":"241","\u0648\u0646\u0648":"242","\u06a9\u06be\u0646":"243","\u06af\u0627 ":"244","\u06ba \u0633":"245","\u06ba \u06af":"246","\u06be\u0646\u06d2":"247","\u06be\u06d2 ":"248","\u06c1 \u0628":"249","\u06c1 \u062c":"250","\u06c1\u0631 ":"251","\u06cc \u0622":"252","\u06cc \u067e":"253"," \u062d\u0627":"254"," \u0648\u0641":"255"," \u06af\u0627":"256","\u0627 \u062c":"257","\u0627 \u06af":"258","\u0627\u062f ":"259","\u0627\u062f\u06cc":"260","\u0627\u0639\u0638":"261","\u0627\u06c1\u062a":"262","\u062c\u0633 ":"263","\u062c\u0645\u06c1":"264","\u062c\u0648 ":"265","\u0631 \u0633":"266","\u0631 \u06c1":"267","\u0631\u0646\u06d2":"268","\u0633 \u0645":"269","\u0633\u0627 ":"270","\u0633\u0646\u062f":"271","\u0633\u0646\u06af":"272","\u0638\u0645 ":"273","\u0639\u0638\u0645":"274","\u0644 \u0645":"275","\u0644\u06cc\u06d2":"276","\u0645\u0644 ":"277","\u0645\u0648\u06c1":"278","\u0645\u06c1\u0648":"279","\u0646\u06af\u06be":"280","\u0648 \u0635":"281","\u0648\u0631\u0679":"282","\u0648\u06c1\u0646":"283","\u06a9\u0646 ":"284","\u06af\u06be ":"285","\u06af\u06d2 ":"286","\u06ba \u062c":"287","\u06ba \u0648":"288","\u06ba \u06cc":"289","\u06c1 \u062f":"290","\u06c1\u0646 ":"291","\u06c1\u0648\u06ba":"292","\u06d2 \u062d":"293","\u06d2 \u06af":"294","\u06d2 \u06cc":"295"," \u0627\u06af":"296"," \u0628\u0639":"297"," \u0631\u0648":"298"," \u0634\u0627":"299"},"uzbek":{"\u0430\u043d ":"0","\u0433\u0430\u043d":"1","\u043b\u0430\u0440":"2","\u0433\u0430 ":"3","\u043d\u0433 ":"4","\u0438\u043d\u0433":"5","\u043d\u0438\u043d":"6","\u0434\u0430 ":"7","\u043d\u0438 ":"8","\u0438\u0434\u0430":"9","\u0430\u0440\u0438":"10","\u0438\u0433\u0430":"11","\u0438\u043d\u0438":"12","\u0430\u0440 ":"13","\u0434\u0438 ":"14"," \u0431\u0438":"15","\u0430\u043d\u0438":"16"," \u0431\u043e":"17","\u0434\u0430\u043d":"18","\u043b\u0433\u0430":"19"," \u04b3\u0430":"20"," \u0432\u0430":"21"," \u0441\u0430":"22","\u0433\u0438 ":"23","\u0438\u043b\u0430":"24","\u043d \u0431":"25","\u0438 \u0431":"26"," \u043a\u045e":"27"," \u0442\u0430":"28","\u0438\u0440 ":"29"," \u043c\u0430":"30","\u0430\u0433\u0430":"31","\u0430\u043b\u0430":"32","\u0431\u0438\u0440":"33","\u0440\u0438 ":"34","\u0442\u0433\u0430":"35","\u043b\u0430\u043d":"36","\u043b\u0438\u043a":"37","\u0430 \u043a":"38","\u0430\u0433\u0438":"39","\u0430\u0442\u0438":"40","\u0442\u0430 ":"41","\u0430\u0434\u0438":"42","\u0434\u0430\u0433":"43","\u0440\u0433\u0430":"44"," \u0439\u0438":"45"," \u043c\u0438":"46"," \u043f\u0430":"47"," \u0431\u045e":"48"," \u049b\u0430":"49"," \u049b\u0438":"50","\u0430 \u0431":"51","\u0438\u043b\u043b":"52","\u043b\u0438 ":"53","\u0430\u0441\u0438":"54","\u0438 \u0442":"55","\u0438\u043a ":"56","\u0438\u043b\u0438":"57","\u043b\u043b\u0430":"58","\u0430\u0440\u0434":"59","\u0432\u0447\u0438":"60","\u0432\u0430 ":"61","\u0438\u0431 ":"62","\u0438\u0440\u0438":"63","\u043b\u0438\u0433":"64","\u043d\u0433\u0430":"65","\u0440\u0430\u043d":"66"," \u043a\u0435":"67"," \u045e\u0437":"68","\u0430 \u0441":"69","\u0430\u0445\u0442":"70","\u0431\u045e\u043b":"71","\u0438\u0433\u0438":"72","\u043a\u045e\u0440":"73","\u0440\u0434\u0430":"74","\u0440\u043d\u0438":"75","\u0441\u0430 ":"76"," \u0431\u0435":"77"," \u0431\u0443":"78"," \u0434\u0430":"79"," \u0436\u0430":"80","\u0430 \u0442":"81","\u0430\u0437\u0438":"82","\u0435\u0440\u0438":"83","\u0438 \u0430":"84","\u0438\u043b\u0433":"85","\u0439\u0438\u043b":"86","\u043c\u0430\u043d":"87","\u043f\u0430\u0445":"88","\u0440\u0438\u0434":"89","\u0442\u0438 ":"90","\u0443\u0432\u0447":"91","\u0445\u0442\u0430":"92"," \u043d\u0435":"93"," \u0441\u043e":"94"," \u0443\u0447":"95","\u0430\u0439\u0442":"96","\u043b\u043b\u0438":"97","\u0442\u043b\u0430":"98"," \u0430\u0439":"99"," \u0444\u0440":"100"," \u044d\u0442":"101"," \u04b3\u043e":"102","\u0430 \u049b":"103","\u0430\u043b\u0438":"104","\u0430\u0440\u043e":"105","\u0431\u0435\u0440":"106","\u0431\u0438\u043b":"107","\u0431\u043e\u0440":"108","\u0438\u043c\u0438":"109","\u0438\u0441\u0442":"110","\u043e\u043d ":"111","\u0440\u0438\u043d":"112","\u0442\u0435\u0440":"113","\u0442\u0438\u043b":"114","\u0443\u043d ":"115","\u0444\u0440\u0430":"116","\u049b\u0438\u043b":"117"," \u0431\u0430":"118"," \u043e\u043b":"119","\u0430\u043d\u0441":"120","\u0435\u0444\u0442":"121","\u0437\u0438\u0440":"122","\u043a\u0430\u0442":"123","\u043c\u0438\u043b":"124","\u043d\u0435\u0444":"125","\u0441\u0430\u0433":"126","\u0447\u0438 ":"127","\u045e\u0440\u0430":"128"," \u043d\u0430":"129"," \u0442\u0435":"130"," \u044d\u043d":"131","\u0430 \u044d":"132","\u0430\u043c ":"133","\u0430\u0440\u043d":"134","\u0430\u0442 ":"135","\u0438\u0448 ":"136","\u043c\u0430 ":"137","\u043d\u043b\u0430":"138","\u0440\u043b\u0438":"139","\u0447\u0438\u043b":"140","\u0448\u0433\u0430":"141"," \u0438\u0448":"142"," \u043c\u0443":"143"," \u045e\u049b":"144","\u0430\u0440\u0430":"145","\u0432\u0430\u0437":"146","\u0438 \u0443":"147","\u0438\u049b ":"148","\u043c\u043e\u049b":"149","\u0440\u0438\u043c":"150","\u0443\u0447\u0443":"151","\u0447\u0443\u043d":"152","\u0448\u0438 ":"153","\u044d\u043d\u0433":"154","\u049b\u0443\u0432":"155","\u04b3\u0430\u043c":"156"," \u0441\u045e":"157"," \u0448\u0438":"158","\u0431\u0430\u0440":"159","\u0431\u0435\u043a":"160","\u0434\u0430\u043c":"161","\u0438 \u04b3":"162","\u0438\u0448\u0438":"163","\u043b\u0430\u0434":"164","\u043e\u043b\u0438":"165","\u043e\u043b\u043b":"166","\u043e\u0440\u0438":"167","\u043e\u049b\u0434":"168","\u0440 \u0431":"169","\u0440\u0430 ":"170","\u0440\u043b\u0430":"171","\u0443\u043d\u0438":"172","\u0444\u0442 ":"173","\u045e\u043b\u0433":"174","\u045e\u049b\u0443":"175"," \u0434\u0435":"176"," \u043a\u0430":"177"," \u049b\u045e":"178","\u0430 \u045e":"179","\u0430\u0431\u0430":"180","\u0430\u043c\u043c":"181","\u0430\u0442\u043b":"182","\u0431 \u043a":"183","\u0431\u043e\u0448":"184","\u0437\u0431\u0435":"185","\u0438 \u0432":"186","\u0438\u043c ":"187","\u0438\u043d ":"188","\u0438\u0448\u043b":"189","\u043b\u0430\u0431":"190","\u043b\u0435\u0439":"191","\u043c\u0438\u043d":"192","\u043d \u0434":"193","\u043d\u0434\u0430":"194","\u043e\u049b ":"195","\u0440 \u043c":"196","\u0440\u0438\u043b":"197","\u0441\u0438\u0434":"198","\u0442\u0430\u043b":"199","\u0442\u0430\u043d":"200","\u0442\u0438\u0434":"201","\u0442\u043e\u043d":"202","\u045e\u0437\u0431":"203"," \u0430\u043c":"204"," \u043a\u0438":"205","\u0430 \u04b3":"206","\u0430\u043d\u0433":"207","\u0430\u043d\u0434":"208","\u0430\u0440\u0442":"209","\u0430\u0451\u0442":"210","\u0434\u0438\u0440":"211","\u0435\u043d\u0442":"212","\u0438 \u0434":"213","\u0438 \u043c":"214","\u0438 \u043e":"215","\u0438 \u044d":"216","\u0438\u0440\u043e":"217","\u0439\u0442\u0438":"218","\u043d\u0441\u0443":"219","\u043e\u0434\u0438":"220","\u043e\u0440 ":"221","\u0441\u0438 ":"222","\u0442\u0438\u0448":"223","\u0442\u043e\u0431":"224","\u044d\u0442\u0438":"225","\u049b\u0430\u0440":"226","\u049b\u0434\u0430":"227"," \u0431\u043b":"228"," \u0433\u0435":"229"," \u0434\u043e":"230"," \u0434\u0443":"231"," \u043d\u043e":"232"," \u043f\u0440":"233"," \u0440\u0430":"234"," \u0444\u043e":"235"," \u049b\u043e":"236","\u0430 \u043c":"237","\u0430 \u043e":"238","\u0430\u0439\u0434":"239","\u0430\u043b\u043e":"240","\u0430\u043c\u0430":"241","\u0431\u043b\u0435":"242","\u0433 \u043d":"243","\u0434\u043e\u043b":"244","\u0435\u0439\u0440":"245","\u0435\u043a ":"246","\u0435\u0440\u0433":"247","\u0436\u0430\u0440":"248","\u0437\u0438\u0434":"249","\u0438 \u043a":"250","\u0438 \u0444":"251","\u0438\u0439 ":"252","\u0438\u043b\u043e":"253","\u043b\u0434\u0438":"254","\u043b\u0438\u0431":"255","\u043b\u0438\u043d":"256","\u043c\u0438 ":"257","\u043c\u043c\u0430":"258","\u043d \u0432":"259","\u043d \u043a":"260","\u043d \u045e":"261","\u043d \u04b3":"262","\u043e\u0437\u0438":"263","\u043e\u0440\u0430":"264","\u043e\u0441\u0438":"265","\u0440\u0430\u0441":"266","\u0440\u0438\u0448":"267","\u0440\u043a\u0430":"268","\u0440\u043e\u049b":"269","\u0441\u0442\u043e":"270","\u0442\u0438\u043d":"271","\u0445\u0430\u0442":"272","\u0448\u0438\u0440":"273"," \u0430\u0432":"274"," \u0440\u045e":"275"," \u0442\u0443":"276"," \u045e\u0442":"277","\u0430 \u043f":"278","\u0430\u0432\u0442":"279","\u0430\u0434\u0430":"280","\u0430\u0437\u0430":"281","\u0430\u043d\u043b":"282","\u0431 \u0431":"283","\u0431\u043e\u0439":"284","\u0431\u0443 ":"285","\u0432\u0442\u043e":"286","\u0433 \u044d":"287","\u0433\u0438\u043d":"288","\u0434\u0430\u0440":"289","\u0434\u0435\u043d":"290","\u0434\u0443\u043d":"291","\u0438\u0434\u0435":"292","\u0438\u043e\u043d":"293","\u0438\u0440\u043b":"294","\u0438\u0448\u0433":"295","\u0439\u0445\u0430":"296","\u043a\u0435\u043b":"297","\u043a\u045e\u043f":"298","\u043b\u0438\u043e":"299"},"vietnamese":{"ng ":"0"," th":"1"," ch":"2","g t":"3"," nh":"4","\u00f4ng":"5"," kh":"6"," tr":"7","nh ":"8"," c\u00f4":"9","c\u00f4n":"10"," ty":"11","ty ":"12","i t":"13","n t":"14"," ng":"15","\u1ea1i ":"16"," ti":"17","ch ":"18","y l":"19","\u1ec1n ":"20"," \u0111\u01b0":"21","hi ":"22"," g\u1edf":"23","g\u1edfi":"24","i\u1ec1n":"25","ti\u1ec1":"26","\u1edfi ":"27"," gi":"28"," le":"29"," vi":"30","cho":"31","ho ":"32","kh\u00e1":"33"," v\u00e0":"34","h\u00e1c":"35"," ph":"36","am ":"37","h\u00e0n":"38","\u00e1ch":"39","\u00f4i ":"40","i n":"41","\u01b0\u1ee3c":"42","\u1ee3c ":"43"," t\u00f4":"44","ch\u00fa":"45","i\u1ec7t":"46","t\u00f4i":"47","\u00ean ":"48","\u00fang":"49","\u1ec7t ":"50"," c\u00f3":"51","c t":"52","c\u00f3 ":"53","h\u00fan":"54","vi\u1ec7":"55","\u0111\u01b0\u1ee3":"56"," na":"57","g c":"58","i c":"59","n c":"60","n n":"61","t n":"62","v\u00e0 ":"63","n l":"64","n \u0111":"65","\u00e0ng":"66","\u00e1c ":"67","\u1ea5t ":"68","h l":"69","nam":"70","\u00e2n ":"71","\u0103m ":"72"," h\u00e0":"73"," l\u00e0":"74"," n\u0103":"75"," qu":"76"," t\u1ea1":"77","g m":"78","n\u0103m":"79","t\u1ea1i":"80","\u1edbi ":"81"," l\u1eb9":"82","ay ":"83","e g":"84","h h":"85","i v":"86","i \u0111":"87","le ":"88","l\u1eb9 ":"89","\u1ec1u ":"90","\u1eddi ":"91","h\u00e2n":"92","nhi":"93","t t":"94"," c\u1ee7":"95"," m\u1ed9":"96"," v\u1ec1":"97"," \u0111i":"98","an ":"99","c\u1ee7a":"100","l\u00e0 ":"101","m\u1ed9t":"102","v\u1ec1 ":"103","\u00e0nh":"104","\u1ebft ":"105","\u1ed9t ":"106","\u1ee7a ":"107"," bi":"108"," c\u00e1":"109","a c":"110","anh":"111","c\u00e1c":"112","h c":"113","i\u1ec1u":"114","m t":"115","\u1ec7n ":"116"," ho":"117","'s ":"118","ave":"119","e's":"120","el ":"121","g n":"122","le'":"123","n v":"124","o c":"125","rav":"126","s t":"127","thi":"128","tra":"129","vel":"130","\u1eadn ":"131","\u1ebfn ":"132"," ba":"133"," cu":"134"," sa":"135"," \u0111\u00f3":"136"," \u0111\u1ebf":"137","c c":"138","chu":"139","hi\u1ec1":"140","huy":"141","khi":"142","nh\u00e2":"143","nh\u01b0":"144","ong":"145","ron":"146","thu":"147","th\u01b0":"148","tro":"149","y c":"150","\u00e0y ":"151","\u0111\u1ebfn":"152","\u01b0\u1eddi":"153","\u01b0\u1eddn":"154","\u1ec1 v":"155","\u1eddng":"156"," v\u1edb":"157","cu\u1ed9":"158","g \u0111":"159","i\u1ebft":"160","i\u1ec7n":"161","ng\u00e0":"162","o t":"163","u c":"164","u\u1ed9c":"165","v\u1edbi":"166","\u00e0 c":"167","\u00e0i ":"168","\u01a1ng":"169","\u01b0\u01a1n":"170","\u1ea3i ":"171","\u1ed9c ":"172","\u1ee9c ":"173"," an":"174"," l\u1ead":"175"," ra":"176"," s\u1ebd":"177"," s\u1ed1":"178"," t\u1ed5":"179","a k":"180","bi\u1ebf":"181","c n":"182","c \u0111":"183","ch\u1ee9":"184","g v":"185","gia":"186","g\u00e0y":"187","h\u00e1n":"188","h\u00f4n":"189","h\u01b0 ":"190","h\u1ee9c":"191","i g":"192","i h":"193","i k":"194","i p":"195","i\u00ean":"196","kh\u00f4":"197","l\u1eadp":"198","n k":"199","ra ":"200","r\u00ean":"201","s\u1ebd ":"202","t c":"203","th\u00e0":"204","tr\u00ea":"205","t\u1ed5 ":"206","u n":"207","y t":"208","\u00ecnh":"209","\u1ea5y ":"210","\u1eadp ":"211","\u1ed5 c":"212"," m\u00e1":"213"," \u0111\u1ec3":"214","ai ":"215","c s":"216","g\u01b0\u1edd":"217","h v":"218","hoa":"219","ho\u1ea1":"220","inh":"221","m n":"222","m\u00e1y":"223","n g":"224","ng\u01b0":"225","nh\u1ead":"226","o n":"227","oa ":"228","o\u00e0n":"229","p c":"230","s\u1ed1 ":"231","t \u0111":"232","y v":"233","\u00e0o ":"234","\u00e1y ":"235","\u0103n ":"236","\u0111\u00f3 ":"237","\u0111\u1ec3 ":"238","\u01b0\u1edbc":"239","\u1ea7n ":"240","\u1ec3n ":"241","\u1edbc ":"242"," b\u00e1":"243"," c\u01a1":"244"," c\u1ea3":"245"," c\u1ea7":"246"," h\u1ecd":"247"," k\u1ef3":"248"," li":"249"," m\u1ea1":"250"," s\u1edf":"251"," t\u1eb7":"252"," v\u00e9":"253"," v\u1ee5":"254"," \u0111\u1ea1":"255","a \u0111":"256","bay":"257","c\u01a1 ":"258","g s":"259","han":"260","h\u01b0\u01a1":"261","i s":"262","k\u1ef3 ":"263","m c":"264","n m":"265","n p":"266","o b":"267","o\u1ea1i":"268","qua":"269","s\u1edf ":"270","tha":"271","th\u00e1":"272","t\u1eb7n":"273","v\u00e0o":"274","v\u00e9 ":"275","v\u1ee5 ":"276","y b":"277","\u00e0n ":"278","\u00e1ng":"279","\u01a1 s":"280","\u1ea7u ":"281","\u1eadt ":"282","\u1eb7ng":"283","\u1ecdc ":"284","\u1edf t":"285","\u1eefng":"286"," du":"287"," lu":"288"," ta":"289"," to":"290"," t\u1eeb":"291"," \u1edf ":"292","a v":"293","ao ":"294","c v":"295","c\u1ea3 ":"296","du ":"297","g l":"298","gi\u1ea3":"299"},"welsh":{"yn ":"0","dd ":"1"," yn":"2"," y ":"3","ydd":"4","eth":"5","th ":"6"," i ":"7","aet":"8","d y":"9","ch ":"10","od ":"11","ol ":"12","edd":"13"," ga":"14"," gw":"15","'r ":"16","au ":"17","ddi":"18","ad ":"19"," cy":"20"," gy":"21"," ei":"22"," o ":"23","iad":"24","yr ":"25","an ":"26","bod":"27","wed":"28"," bo":"29"," dd":"30","el ":"31","n y":"32"," am":"33","di ":"34","edi":"35","on ":"36"," we":"37"," ym":"38"," ar":"39"," rh":"40","odd":"41"," ca":"42"," ma":"43","ael":"44","oed":"45","dae":"46","n a":"47","dda":"48","er ":"49","h y":"50","all":"51","ei ":"52"," ll":"53","am ":"54","eu ":"55","fod":"56","fyd":"57","l y":"58","n g":"59","wyn":"60","d a":"61","i g":"62","mae":"63","neu":"64","os ":"65"," ne":"66","d i":"67","dod":"68","dol":"69","n c":"70","r h":"71","wyd":"72","wyr":"73","ai ":"74","ar ":"75","in ":"76","rth":"77"," fy":"78"," he":"79"," me":"80"," yr":"81","'n ":"82","dia":"83","est":"84","h c":"85","hai":"86","i d":"87","id ":"88","r y":"89","y b":"90"," dy":"91"," ha":"92","ada":"93","i b":"94","n i":"95","ote":"96","rot":"97","tes":"98","y g":"99","yd ":"100"," ad":"101"," mr":"102"," un":"103","cyn":"104","dau":"105","ddy":"106","edo":"107","i c":"108","i w":"109","ith":"110","lae":"111","lla":"112","nd ":"113","oda":"114","ryd":"115","tho":"116"," a ":"117"," dr":"118","aid":"119","ain":"120","ddo":"121","dyd":"122","fyn":"123","gyn":"124","hol":"125","io ":"126","o a":"127","wch":"128","wyb":"129","ybo":"130","ych":"131"," br":"132"," by":"133"," di":"134"," fe":"135"," na":"136"," o'":"137"," pe":"138","art":"139","byd":"140","dro":"141","gal":"142","l e":"143","lai":"144","mr ":"145","n n":"146","r a":"147","rhy":"148","wn ":"149","ynn":"150"," on":"151"," r ":"152","cae":"153","d g":"154","d o":"155","d w":"156","gan":"157","gwy":"158","n d":"159","n f":"160","n o":"161","ned":"162","ni ":"163","o'r":"164","r d":"165","ud ":"166","wei":"167","wrt":"168"," an":"169"," cw":"170"," da":"171"," ni":"172"," pa":"173"," pr":"174"," wy":"175","d e":"176","dai":"177","dim":"178","eud":"179","gwa":"180","idd":"181","im ":"182","iri":"183","lwy":"184","n b":"185","nol":"186","r o":"187","rwy":"188"," ch":"189"," er":"190"," fo":"191"," ge":"192"," hy":"193"," i'":"194"," ro":"195"," sa":"196"," tr":"197","bob":"198","cwy":"199","cyf":"200","dio":"201","dyn":"202","eit":"203","hel":"204","hyn":"205","ich":"206","ll ":"207","mdd":"208","n r":"209","ond":"210","pro":"211","r c":"212","r g":"213","red":"214","rha":"215","u a":"216","u c":"217","u y":"218","y c":"219","ymd":"220","ymr":"221","yw ":"222"," ac":"223"," be":"224"," bl":"225"," co":"226"," os":"227","adw":"228","ae ":"229","af ":"230","d p":"231","efn":"232","eic":"233","en ":"234","eol":"235","es ":"236","fer":"237","gel":"238","h g":"239","hod":"240","ied":"241","ir ":"242","laf":"243","n h":"244","na ":"245","nyd":"246","odo":"247","ofy":"248","rdd":"249","rie":"250","ros":"251","stw":"252","twy":"253","yda":"254","yng":"255"," at":"256"," de":"257"," go":"258"," id":"259"," oe":"260"," \u00e2 ":"261","'ch":"262","ac ":"263","ach":"264","ae'":"265","al ":"266","bl ":"267","d c":"268","d l":"269","dan":"270","dde":"271","ddw":"272","dir":"273","dla":"274","ed ":"275","ela":"276","ell":"277","ene":"278","ewn":"279","gyd":"280","hau":"281","hyw":"282","i a":"283","i f":"284","iol":"285","ion":"286","l a":"287","l i":"288","lia":"289","med":"290","mon":"291","n s":"292","no ":"293","obl":"294","ola":"295","ref":"296","rn ":"297","thi":"298","un ":"299"}},"trigram-unicodemap":{"Basic Latin":{"albanian":661,"azeri":653,"bengali":1,"cebuano":750,"croatian":733,"czech":652,"danish":734,"dutch":741,"english":723,"estonian":739,"finnish":743,"french":733,"german":750,"hausa":752,"hawaiian":751,"hungarian":693,"icelandic":662,"indonesian":776,"italian":741,"latin":764,"latvian":693,"lithuanian":738,"mongolian":19,"norwegian":742,"pidgin":702,"polish":701,"portuguese":726,"romanian":714,"slovak":677,"slovene":740,"somali":755,"spanish":749,"swahili":770,"swedish":717,"tagalog":767,"turkish":673,"vietnamese":503,"welsh":728},"Latin-1 Supplement":{"albanian":68,"azeri":10,"czech":51,"danish":13,"estonian":19,"finnish":39,"french":21,"german":8,"hungarian":72,"icelandic":80,"italian":3,"norwegian":5,"polish":6,"portuguese":18,"romanian":9,"slovak":37,"spanish":6,"swedish":26,"turkish":25,"vietnamese":56,"welsh":1},"[Malformatted]":{"albanian":68,"arabic":724,"azeri":109,"bengali":1472,"bulgarian":750,"croatian":10,"czech":78,"danish":13,"estonian":19,"farsi":706,"finnish":39,"french":21,"german":8,"hausa":8,"hindi":1386,"hungarian":74,"icelandic":80,"italian":3,"kazakh":767,"kyrgyz":767,"latvian":56,"lithuanian":30,"macedonian":755,"mongolian":743,"nepali":1514,"norwegian":5,"pashto":677,"polish":45,"portuguese":18,"romanian":31,"russian":759,"serbian":757,"slovak":45,"slovene":10,"spanish":6,"swedish":26,"turkish":87,"ukrainian":748,"urdu":682,"uzbek":773,"vietnamese":289,"welsh":1},"Arabic":{"arabic":724,"farsi":706,"pashto":677,"urdu":682},"Latin Extended-B":{"azeri":73,"hausa":8,"vietnamese":19},"Latin Extended-A":{"azeri":25,"croatian":10,"czech":27,"hungarian":2,"latvian":56,"lithuanian":30,"polish":39,"romanian":22,"slovak":8,"slovene":10,"turkish":62,"vietnamese":20},"Combining Diacritical Marks":{"azeri":1},"Bengali":{"bengali":714},"Gujarati":{"bengali":16},"Gurmukhi":{"bengali":6},"Cyrillic":{"bulgarian":750,"kazakh":767,"kyrgyz":767,"macedonian":755,"mongolian":743,"russian":759,"serbian":757,"ukrainian":748,"uzbek":773},"Devanagari":{"hindi":693,"nepali":757},"Latin Extended Additional":{"vietnamese":97}}}
},{}],5:[function(require,module,exports){
module.exports=[["0x0000","0x007F","Basic Latin"],["0x0080","0x00FF","Latin-1 Supplement"],["0x0100","0x017F","Latin Extended-A"],["0x0180","0x024F","Latin Extended-B"],["0x0250","0x02AF","IPA Extensions"],["0x02B0","0x02FF","Spacing Modifier Letters"],["0x0300","0x036F","Combining Diacritical Marks"],["0x0370","0x03FF","Greek and Coptic"],["0x0400","0x04FF","Cyrillic"],["0x0500","0x052F","Cyrillic Supplement"],["0x0530","0x058F","Armenian"],["0x0590","0x05FF","Hebrew"],["0x0600","0x06FF","Arabic"],["0x0700","0x074F","Syriac"],["0x0750","0x077F","Arabic Supplement"],["0x0780","0x07BF","Thaana"],["0x0900","0x097F","Devanagari"],["0x0980","0x09FF","Bengali"],["0x0A00","0x0A7F","Gurmukhi"],["0x0A80","0x0AFF","Gujarati"],["0x0B00","0x0B7F","Oriya"],["0x0B80","0x0BFF","Tamil"],["0x0C00","0x0C7F","Telugu"],["0x0C80","0x0CFF","Kannada"],["0x0D00","0x0D7F","Malayalam"],["0x0D80","0x0DFF","Sinhala"],["0x0E00","0x0E7F","Thai"],["0x0E80","0x0EFF","Lao"],["0x0F00","0x0FFF","Tibetan"],["0x1000","0x109F","Myanmar"],["0x10A0","0x10FF","Georgian"],["0x1100","0x11FF","Hangul Jamo"],["0x1200","0x137F","Ethiopic"],["0x1380","0x139F","Ethiopic Supplement"],["0x13A0","0x13FF","Cherokee"],["0x1400","0x167F","Unified Canadian Aboriginal Syllabics"],["0x1680","0x169F","Ogham"],["0x16A0","0x16FF","Runic"],["0x1700","0x171F","Tagalog"],["0x1720","0x173F","Hanunoo"],["0x1740","0x175F","Buhid"],["0x1760","0x177F","Tagbanwa"],["0x1780","0x17FF","Khmer"],["0x1800","0x18AF","Mongolian"],["0x1900","0x194F","Limbu"],["0x1950","0x197F","Tai Le"],["0x1980","0x19DF","New Tai Lue"],["0x19E0","0x19FF","Khmer Symbols"],["0x1A00","0x1A1F","Buginese"],["0x1D00","0x1D7F","Phonetic Extensions"],["0x1D80","0x1DBF","Phonetic Extensions Supplement"],["0x1DC0","0x1DFF","Combining Diacritical Marks Supplement"],["0x1E00","0x1EFF","Latin Extended Additional"],["0x1F00","0x1FFF","Greek Extended"],["0x2000","0x206F","General Punctuation"],["0x2070","0x209F","Superscripts and Subscripts"],["0x20A0","0x20CF","Currency Symbols"],["0x20D0","0x20FF","Combining Diacritical Marks for Symbols"],["0x2100","0x214F","Letterlike Symbols"],["0x2150","0x218F","Number Forms"],["0x2190","0x21FF","Arrows"],["0x2200","0x22FF","Mathematical Operators"],["0x2300","0x23FF","Miscellaneous Technical"],["0x2400","0x243F","Control Pictures"],["0x2440","0x245F","Optical Character Recognition"],["0x2460","0x24FF","Enclosed Alphanumerics"],["0x2500","0x257F","Box Drawing"],["0x2580","0x259F","Block Elements"],["0x25A0","0x25FF","Geometric Shapes"],["0x2600","0x26FF","Miscellaneous Symbols"],["0x2700","0x27BF","Dingbats"],["0x27C0","0x27EF","Miscellaneous Mathematical Symbols-A"],["0x27F0","0x27FF","Supplemental Arrows-A"],["0x2800","0x28FF","Braille Patterns"],["0x2900","0x297F","Supplemental Arrows-B"],["0x2980","0x29FF","Miscellaneous Mathematical Symbols-B"],["0x2A00","0x2AFF","Supplemental Mathematical Operators"],["0x2B00","0x2BFF","Miscellaneous Symbols and Arrows"],["0x2C00","0x2C5F","Glagolitic"],["0x2C80","0x2CFF","Coptic"],["0x2D00","0x2D2F","Georgian Supplement"],["0x2D30","0x2D7F","Tifinagh"],["0x2D80","0x2DDF","Ethiopic Extended"],["0x2E00","0x2E7F","Supplemental Punctuation"],["0x2E80","0x2EFF","CJK Radicals Supplement"],["0x2F00","0x2FDF","Kangxi Radicals"],["0x2FF0","0x2FFF","Ideographic Description Characters"],["0x3000","0x303F","CJK Symbols and Punctuation"],["0x3040","0x309F","Hiragana"],["0x30A0","0x30FF","Katakana"],["0x3100","0x312F","Bopomofo"],["0x3130","0x318F","Hangul Compatibility Jamo"],["0x3190","0x319F","Kanbun"],["0x31A0","0x31BF","Bopomofo Extended"],["0x31C0","0x31EF","CJK Strokes"],["0x31F0","0x31FF","Katakana Phonetic Extensions"],["0x3200","0x32FF","Enclosed CJK Letters and Months"],["0x3300","0x33FF","CJK Compatibility"],["0x3400","0x4DBF","CJK Unified Ideographs Extension A"],["0x4DC0","0x4DFF","Yijing Hexagram Symbols"],["0x4E00","0x9FFF","CJK Unified Ideographs"],["0xA000","0xA48F","Yi Syllables"],["0xA490","0xA4CF","Yi Radicals"],["0xA700","0xA71F","Modifier Tone Letters"],["0xA800","0xA82F","Syloti Nagri"],["0xAC00","0xD7AF","Hangul Syllables"],["0xD800","0xDB7F","High Surrogates"],["0xDB80","0xDBFF","High Private Use Surrogates"],["0xDC00","0xDFFF","Low Surrogates"],["0xE000","0xF8FF","Private Use Area"],["0xF900","0xFAFF","CJK Compatibility Ideographs"],["0xFB00","0xFB4F","Alphabetic Presentation Forms"],["0xFB50","0xFDFF","Arabic Presentation Forms-A"],["0xFE00","0xFE0F","Variation Selectors"],["0xFE10","0xFE1F","Vertical Forms"],["0xFE20","0xFE2F","Combining Half Marks"],["0xFE30","0xFE4F","CJK Compatibility Forms"],["0xFE50","0xFE6F","Small Form Variants"],["0xFE70","0xFEFF","Arabic Presentation Forms-B"],["0xFF00","0xFFEF","Halfwidth and Fullwidth Forms"],["0xFFF0","0xFFFF","Specials"],["0x10000","0x1007F","Linear B Syllabary"],["0x10080","0x100FF","Linear B Ideograms"],["0x10100","0x1013F","Aegean Numbers"],["0x10140","0x1018F","Ancient Greek Numbers"],["0x10300","0x1032F","Old Italic"],["0x10330","0x1034F","Gothic"],["0x10380","0x1039F","Ugaritic"],["0x103A0","0x103DF","Old Persian"],["0x10400","0x1044F","Deseret"],["0x10450","0x1047F","Shavian"],["0x10480","0x104AF","Osmanya"],["0x10800","0x1083F","Cypriot Syllabary"],["0x10A00","0x10A5F","Kharoshthi"],["0x1D000","0x1D0FF","Byzantine Musical Symbols"],["0x1D100","0x1D1FF","Musical Symbols"],["0x1D200","0x1D24F","Ancient Greek Musical Notation"],["0x1D300","0x1D35F","Tai Xuan Jing Symbols"],["0x1D400","0x1D7FF","Mathematical Alphanumeric Symbols"],["0x20000","0x2A6DF","CJK Unified Ideographs Extension B"],["0x2F800","0x2FA1F","CJK Compatibility Ideographs Supplement"],["0xE0000","0xE007F","Tags"],["0xE0100","0xE01EF","Variation Selectors Supplement"],["0xF0000","0xFFFFF","Supplementary Private Use Area-A"],["0x100000","0x10FFFF","Supplementary Private Use Area-B"]]
},{}],6:[function(require,module,exports){
module.exports = require('./lib/LanguageDetect');
},{"./lib/LanguageDetect":8}],7:[function(require,module,exports){
var Languages = module.exports = {
  getCode2:function (lang) {
    return Languages.nameToCode2[String(lang).toLowerCase()] || null;
  },

  getCode3: function(lang) {
    return Languages.nameToCode3[String(lang).toLowerCase()] || null;
  },

  getName2: function(code) {
    return Languages.code2ToName[String(code).toLowerCase()] || null;
  },

  getName3: function(code) {
    return Languages.code3ToName[String(code).toLowerCase()] || null;
  },

  nameToCode2:{
    'albanian':'sq',
    'arabic':'ar',
    'azeri':'az',
    'bengali':'bn',
    'bulgarian':'bg',
    'cebuano':null,
    'croatian':'hr',
    'czech':'cs',
    'danish':'da',
    'dutch':'nl',
    'english':'en',
    'estonian':'et',
    'farsi':'fa',
    'finnish':'fi',
    'french':'fr',
    'german':'de',
    'hausa':'ha',
    'hawaiian':null,
    'hindi':'hi',
    'hungarian':'hu',
    'icelandic':'is',
    'indonesian':'id',
    'italian':'it',
    'kazakh':'kk',
    'kyrgyz':'ky',
    'latin':'la',
    'latvian':'lv',
    'lithuanian':'lt',
    'macedonian':'mk',
    'mongolian':'mn',
    'nepali':'ne',
    'norwegian':'no',
    'pashto':'ps',
    'pidgin':null,
    'polish':'pl',
    'portuguese':'pt',
    'romanian':'ro',
    'russian':'ru',
    'serbian':'sr',
    'slovak':'sk',
    'slovene':'sl',
    'somali':'so',
    'spanish':'es',
    'swahili':'sw',
    'swedish':'sv',
    'tagalog':'tl',
    'turkish':'tr',
    'ukrainian':'uk',
    'urdu':'ur',
    'uzbek':'uz',
    'vietnamese':'vi',
    'welsh':'cy'
  },

  nameToCode3:{
    'albanian':'sqi',
    'arabic':'ara',
    'azeri':'aze',
    'bengali':'ben',
    'bulgarian':'bul',
    'cebuano':'ceb',
    'croatian':'hrv',
    'czech':'ces',
    'danish':'dan',
    'dutch':'nld',
    'english':'eng',
    'estonian':'est',
    'farsi':'fas',
    'finnish':'fin',
    'french':'fra',
    'german':'deu',
    'hausa':'hau',
    'hawaiian':'haw',
    'hindi':'hin',
    'hungarian':'hun',
    'icelandic':'isl',
    'indonesian':'ind',
    'italian':'ita',
    'kazakh':'kaz',
    'kyrgyz':'kir',
    'latin':'lat',
    'latvian':'lav',
    'lithuanian':'lit',
    'macedonian':'mkd',
    'mongolian':'mon',
    'nepali':'nep',
    'norwegian':'nor',
    'pashto':'pus',
    'pidgin':'crp',
    'polish':'pol',
    'portuguese':'por',
    'romanian':'ron',
    'russian':'rus',
    'serbian':'srp',
    'slovak':'slk',
    'slovene':'slv',
    'somali':'som',
    'spanish':'spa',
    'swahili':'swa',
    'swedish':'swe',
    'tagalog':'tgl',
    'turkish':'tur',
    'ukrainian':'ukr',
    'urdu':'urd',
    'uzbek':'uzb',
    'vietnamese':'vie',
    'welsh':'cym'
  },
  code2ToName:{
    'ar':'arabic',
    'az':'azeri',
    'bg':'bulgarian',
    'bn':'bengali',
    'cs':'czech',
    'cy':'welsh',
    'da':'danish',
    'de':'german',
    'en':'english',
    'es':'spanish',
    'et':'estonian',
    'fa':'farsi',
    'fi':'finnish',
    'fr':'french',
    'ha':'hausa',
    'hi':'hindi',
    'hr':'croatian',
    'hu':'hungarian',
    'id':'indonesian',
    'is':'icelandic',
    'it':'italian',
    'kk':'kazakh',
    'ky':'kyrgyz',
    'la':'latin',
    'lt':'lithuanian',
    'lv':'latvian',
    'mk':'macedonian',
    'mn':'mongolian',
    'ne':'nepali',
    'nl':'dutch',
    'no':'norwegian',
    'pl':'polish',
    'ps':'pashto',
    'pt':'portuguese',
    'ro':'romanian',
    'ru':'russian',
    'sk':'slovak',
    'sl':'slovene',
    'so':'somali',
    'sq':'albanian',
    'sr':'serbian',
    'sv':'swedish',
    'sw':'swahili',
    'tl':'tagalog',
    'tr':'turkish',
    'uk':'ukrainian',
    'ur':'urdu',
    'uz':'uzbek',
    'vi':'vietnamese'
  },

  code3ToName:{
    'ara':'arabic',
    'aze':'azeri',
    'ben':'bengali',
    'bul':'bulgarian',
    'ceb':'cebuano',
    'ces':'czech',
    'crp':'pidgin',
    'cym':'welsh',
    'dan':'danish',
    'deu':'german',
    'eng':'english',
    'est':'estonian',
    'fas':'farsi',
    'fin':'finnish',
    'fra':'french',
    'hau':'hausa',
    'haw':'hawaiian',
    'hin':'hindi',
    'hrv':'croatian',
    'hun':'hungarian',
    'ind':'indonesian',
    'isl':'icelandic',
    'ita':'italian',
    'kaz':'kazakh',
    'kir':'kyrgyz',
    'lat':'latin',
    'lav':'latvian',
    'lit':'lithuanian',
    'mkd':'macedonian',
    'mon':'mongolian',
    'nep':'nepali',
    'nld':'dutch',
    'nor':'norwegian',
    'pol':'polish',
    'por':'portuguese',
    'pus':'pashto',
    'rom':'romanian',
    'rus':'russian',
    'slk':'slovak',
    'slv':'slovene',
    'som':'somali',
    'spa':'spanish',
    'sqi':'albanian',
    'srp':'serbian',
    'swa':'swahili',
    'swe':'swedish',
    'tgl':'tagalog',
    'tur':'turkish',
    'ukr':'ukrainian',
    'urd':'urdu',
    'uzb':'uzbek',
    'vie':'vietnamese'
  }
};
},{}],8:[function(require,module,exports){
/**
 *
 * Detects the language of a given piece of text.
 *
 * Attempts to detect the language of a sample of text by correlating ranked
 * 3-gram frequencies to a table of 3-gram frequencies of known languages.
 *
 * Implements a version of a technique originally proposed by Cavnar & Trenkle
 * (1994): "N-Gram-Based Text Categorization"
 *
 * Largely inspired from the PHP Pear Package Text_LanguageDetect by Nicholas Pisarro
 * Licence: http://www.debian.org/misc/bsd.license BSD
 *
 * @author Francois-Guillaume Ribreau - @FGRibreau
 * @author Ruslan Zavackiy - @Chaoser
 *
 * @see https://github.com/FGRibreau/node-language-detect
 *
 * Installation:
 *  npm install LanguageDetect
 *
 * @example
 * <code>
 * var LanguageDetect = require("../LanguageDetect");
 * var d = new LanguageDetect().detect('This is a test');
 * // d[0] == 'english'
 * // d[1] == 0.5969230769230769
 * // Good score are over 0.3
 * </code>
 */

var dbLang = require('../data/lang.json')
  , Parser = require('./Parser')
  , ISO639 = require('./ISO639');

var LanguageDetect = module.exports = function (languageType) {

  /**
   * The trigram data for comparison
   *
   * Will be loaded on start from $this->_db_filename
   *
   * May be set to a PEAR_Error object if there is an error during its
   * initialization
   *
   * @var      array
   * @access   private
   */
  this.langDb = {};

  /**
   * The size of the trigram data arrays
   *
   * @var     int
   * @access  private
   */
  this.threshold = 300;

  this.useUnicodeNarrowing = true;

  /**
   * Constructor
   *
   * Load the language database.
   *
   */
  this.langDb = dbLang['trigram'];
  this.unicodeMap = dbLang['trigram-unicodemap'];

  this.languageType = languageType || null;
};

LanguageDetect.prototype = {

  /**
   * Returns the number of languages that this object can detect
   *
   * @access public
   * @return int the number of languages
   */
  getLanguageCount:function () {
    return this.getLanguages().length;
  },

  setLanguageType:function (type) {
    return this.languageType = type;
  },

  /**
   * Returns the list of detectable languages
   *
   * @access public
   * @return object the names of the languages known to this object
   */
  getLanguages:function () {
    return Object.keys(this.langDb);
  },

  /**
   * Calculates a linear rank-order distance statistic between two sets of
   * ranked trigrams
   *
   * Sums the differences in rank for each trigram. If the trigram does not
   * appear in both, consider it a difference of $this->_threshold.
   *
   * This distance measure was proposed by Cavnar & Trenkle (1994). Despite
   * its simplicity it has been shown to be highly accurate for language
   * identification tasks.
   *
   * @access  private
   * @param   arr1  the reference set of trigram ranks
   * @param   arr2  the target set of trigram ranks
   * @return  int   the sum of the differences between the ranks of
   *                the two trigram sets
   */
  distance:function (arr1, arr2) {
    var me = this
      , sumdist = 0
      , keys = Object.keys(arr2)
      , i;

    for (i = keys.length; i--;) {
      sumdist += arr1[keys[i]] ? Math.abs(arr2[keys[i]] - arr1[keys[i]]) : me.threshold;
    }

    return sumdist;
  },

  /**
   * Normalizes the score returned by _distance()
   *
   * Different if perl compatible or not
   *
   * @access  private
   * @param   score       the score from _distance()
   * @param   baseCount   the number of trigrams being considered
   * @return  number      the normalized score
   *
   * @see     distance()
   */
  normalizeScore:function (score, baseCount) {
    return 1 - (score / (baseCount || this.threshold) / this.threshold);
  },

  /**
   * Detects the closeness of a sample of text to the known languages
   *
   * Calculates the statistical difference between the text and
   * the trigrams for each language, normalizes the score then
   * returns results for all languages in sorted order
   *
   * If perl compatible, the score is 300-0, 0 being most similar.
   * Otherwise, it's 0-1 with 1 being most similar.
   *
   * The $sample text should be at least a few sentences in length;
   * should be ascii-7 or utf8 encoded, if another and the mbstring extension
   * is present it will try to detect and convert. However, experience has
   * shown that mb_detect_encoding() *does not work very well* with at least
   * some types of encoding.
   *
   * @access  public
   * @param   sample  a sample of text to compare.
   * @param   limit  if specified, return an array of the most likely
   *                  $limit languages and their scores.
   * @return  Array   sorted array of language scores, blank array if no
   *                  useable text was found, or PEAR_Error if error
   *                  with the object setup
   *
   * @see     distance()
   */
  detect:function (sample, limit) {
    var me = this
      , scores = [];

    limit = +limit || 0;

    if (sample == '' || String(sample).length < 3) return [];

    var sampleObj = new Parser(sample);
    sampleObj.setPadStart(true);
    sampleObj.analyze();

    var trigramFreqs = sampleObj.getTrigramRanks()
      , trigramCount = Object.keys(trigramFreqs).length;

    if (trigramCount == 0) return [];

    var keys = [], i, lang;

    if (this.useUnicodeNarrowing) {
      var blocks = sampleObj.getUnicodeBlocks()
        , languages = Object.keys(blocks)
        , keysLength = languages.length;

      for (i = keysLength; i--;) {
        if (this.unicodeMap[languages[i]]) {
          for (lang in this.unicodeMap[languages[i]]) {
            if (!~keys.indexOf(lang)) keys.push(lang);
          }
        }
      }
    } else {
      keys = me.getLanguages();
    }

    for (i = keys.length; i--;) {
      var score = me.normalizeScore(me.distance(me.langDb[keys[i]], trigramFreqs), trigramCount);
      if (score) scores.push([keys[i], score]);
    }

    // Sort the array
    scores.sort(function (a, b) { return b[1] - a[1]; });
    var scoresLength = scores.length;

    if (!scoresLength) return [];

    switch (me.languageType) {
      case 'iso2':
        for (i = scoresLength; i--;) {
          scores[i][0] = ISO639.getCode2(scores[i][0]);
        }
        break;
      case 'iso3':
        for (i = scoresLength; i--;) {
          scores[i][0] = ISO639.getCode3(scores[i][0]);
        }
        break;
    }

    // limit the number of returned scores
    return limit > 0 ? scores.slice(0, limit) : scores;
  }
};

},{"../data/lang.json":4,"./ISO639":7,"./Parser":9}],9:[function(require,module,exports){
var dbUnicodeBlocks = require('../data/unicode_blocks.json');

/**
 * This class represents a text sample to be parsed.
 *
 * Largely inspired from the PHP Pear Package Text_LanguageDetect by Nicholas Pisarro
 * Licence: http://www.debian.org/misc/bsd.license BSD
 *
 * @author Francois-Guillaume Ribreau - @FGRibreau
 * @author Ruslan Zavackiy - @Chaoser
 *
 * @see https://github.com/FGRibreau/node-language-detect
 */
var Parser = module.exports = function (string) {
  /**
   * The size of the trigram data arrays
   *
   * @access   private
   * @var      int
   */
  this.threshold = 300;

  /**
   * stores the trigram ranks of the sample
   *
   * @access  private
   * @var     array
   */
  this.trigramRanks = {};

  /**
   * Whether the parser should compile trigrams
   *
   * @access  private
   * @var     bool
   */
  this.compileTrigram = true;

  this.compileUnicode = true;
  this.unicodeSkipAscii = true;
  this.unicodeBlocks = {};

  /**
   * Whether the trigram parser should pad the beginning of the string
   *
   * @access  private
   * @var     bool
   */
  this.trigramPadStart = false;

  this.trigram = {};

  /**
   * the piece of text being parsed
   *
   * @access  private
   * @var     string
   */

  /**
   * Constructor
   *
   * @access  private
   * @param   string  string to be parsed
   */
  this.string = string ? string.replace(/[~!@#$%^&*()_|+\-=?;:",.<>\{\}\[\]\\\/]/g, ' ') : '';
};

Parser.prototype = {
  /**
   * turn on/off padding the beginning of the sample string
   *
   * @access  public
   * @param   bool   true for on, false for off
   */
  setPadStart: function (bool) {
    this.trigramPadStart = bool || true;
  },

  /**
   * Returns the trigram ranks for the text sample
   *
   * @access  public
   * @return  array   trigram ranks in the text sample
   */
  getTrigramRanks: function () {
    return this.trigramRanks;
  },

  getBlockCount: function () {
    return dbUnicodeBlocks.length;
  },

  getUnicodeBlocks: function () {
    return this.unicodeBlocks;
  },

  /**
   * Executes the parsing operation
   *
   * Be sure to call the set*() functions to set options and the
   * prepare*() functions first to tell it what kind of data to compute
   *
   * Afterwards the get*() functions can be used to access the compiled
   * information.
   *
   * @access public
   */
  analyze: function () {
    var len = this.string.length
      , byteCounter = 0
      , a = ' ', b = ' '
      , dropone, c;

    if (this.compileUnicode) {
      var blocksCount = dbUnicodeBlocks.length;
    }

    // trigram startup
    if (this.compileTrigram) {
      // initialize them as blank so the parser will skip the first two
      // (since it skips trigrams with more than  2 contiguous spaces)
      a = ' ';
      b = ' ';

      // kludge
      // if it finds a valid trigram to start and the start pad option is
      // off, then set a variable that will be used to reduce this
      // trigram after parsing has finished
      if (!this.trigramPadStart) {
        a = this.string.charAt(byteCounter++).toLowerCase();

        if (a != ' ') {
          b = this.string.charAt(byteCounter).toLowerCase();
          dropone = ' ' + a + b;
        }

        byteCounter = 0;
        a = ' ';
        b = ' ';
      }
    }

    var skippedCount = 0;
    var unicodeChars = {};

    while (byteCounter < len) {
      c = this.string.charAt(byteCounter++).toLowerCase();

      // language trigram detection
      if (this.compileTrigram) {
        if (!(b == ' ' && (a == ' ' || c == ' '))) {
          var abc = a + b + c;
          this.trigram[abc] = this.trigram[abc] ? this.trigram[abc] += 1 : 1;
        }

        a = b;
        b = c;
      }

      if (this.compileUnicode) {
        var charCode = c.charCodeAt(0);

        if (this.unicodeSkipAscii
          && c.match(/[a-z ]/i)
          && (charCode < 65 || charCode > 122 || (charCode > 90 && charCode < 97))
          && c != "'") {

          skippedCount++;
          continue;
        }

        unicodeChars[c] = unicodeChars[c] ? unicodeChars[c] += 1 : 1;
      }
    }

    this.unicodeBlocks = {};

    if (this.compileUnicode) {
      var keys = Object.keys(unicodeChars)
        , keysLength = keys.length;

      for (var i = keysLength; i--;) {
        var unicode = keys[i].charCodeAt(0)
          , count = unicodeChars[keys[i]]
          , search = this.unicodeBlockName(unicode, blocksCount)
          , blockName = search != -1 ? search[2] : '[Malformatted]';

        this.unicodeBlocks[blockName] = this.unicodeBlocks[blockName] ? this.unicodeBlocks[blockName] += count : count;
      }
    }

    // trigram cleanup
    if (this.compileTrigram) {
      // pad the end
      if (b != ' ') {
        var ab = a + b + ' ';
        this.trigram[ab] = this.trigram[ab] ? this.trigram[ab] += 1 : 1;
      }

      // perl compatibility; Language::Guess does not pad the beginning
      // kludge
      if (typeof dropone != 'undefined' && this.trigram[dropone] == 1) {
        delete this.trigram[dropone];
      }

      if (this.trigram && Object.keys(this.trigram).length > 0) {
        this.trigramRanks = this.arrRank(this.trigram);
      } else {
        this.trigramRanks = {};
      }
    }
  },

  /**
   * Sorts an array by value breaking ties alphabetically
   *
   * @access private
   * @param arr the array to sort
   */
  bubleSort: function (arr) {
    // should do the same as this perl statement:
    // sort { $trigrams{$b} == $trigrams{$a} ?  $a cmp $b : $trigrams{$b} <=> $trigrams{$a} }

    // needs to sort by both key and value at once
    // using the key to break ties for the value

    // converts array into an array of arrays of each key and value
    // may be a better way of doing this
    var combined = [];

    for (var key in arr) {
      combined.push([key, arr[key]]);
    }

    combined = combined.sort(this.sortFunc);

    var replacement = {};

    var length = combined.length;

    for (var i = 0; i < length; i++) {
      replacement[combined[i][0]] = combined[i][1];
    }

    return replacement;
  },

  /**
   * Converts a set of trigrams from frequencies to ranks
   *
   * Thresholds (cuts off) the list at $this->_threshold
   *
   * @access  protected
   * @param   arr     array of trgram
   * @return  object  ranks of trigrams
   */
  arrRank: function (arr) {

    // sorts alphabetically first as a standard way of breaking rank ties
    arr = this.bubleSort(arr);

    var rank = {}, i = 0;

    for (var key in arr) {
      rank[key] = i++;

      // cut off at a standard threshold
      if (i >= this.threshold) {
        break;
      }
    }

    return rank;
  },

  /**
   * Sort function used by bubble sort
   *
   * Callback function for usort().
   *
   * @access   private
   * @param    a    first param passed by usort()
   * @param    b    second param passed by usort()
   * @return   int  1 if $a is greater, -1 if not
   *
   * @see      bubleSort()
   */
  sortFunc: function (a, b) {
    // each is actually a key/value pair, so that it can compare using both
    var aKey = a[0]
      , aValue = a[1]
      , bKey = b[0]
      , bValue = b[1];

    // if the values are the same, break ties using the key
    if (aValue == bValue) {
      return aKey.localeCompare(bKey);
    } else {
      return aValue > bValue ? -1 : 1;
    }
  },

  unicodeBlockName: function (unicode, blockCount) {
    if (unicode <= dbUnicodeBlocks[0][1]) {
      return dbUnicodeBlocks[0];
    }

    var high = blockCount ? blockCount - 1 : dbUnicodeBlocks.length
      , low = 1
      , mid;

    while (low <= high) {
      mid = Math.floor((low + high) / 2);

      if (unicode < dbUnicodeBlocks[mid][0]) {
        high = mid - 1;
      } else if (unicode > dbUnicodeBlocks[mid][1]) {
        low = mid + 1;
      } else {
        return dbUnicodeBlocks[mid];
      }
    }

    return -1;
  }
};
},{"../data/unicode_blocks.json":5}],10:[function(require,module,exports){
module.exports={
"😂": 1,
"❤": 3,
"♥": 3,
"😍": 3,
"😭": -1,
"😘": 3,
"😊": 3,
"👌": 2,
"💕": 3,
"👏": 2,
"😁": 2,
"☺": 3,
"♡": 3,
"👍": 2,
"😩": -2,
"🙏": 2,
"✌": 2,
"😏": 1,
"😉": 2,
"🙌": 2,
"🙈": 2,
"💪": 2,
"😄": 2,
"😒": -2,
"💃": 3,
"💖": 3,
"😃": 2,
"😔": -1,
"🎉": 3,
"😜": 2,
"🌸": 3,
"💜": 3,
"💙": 3,
"✨": 1,
"💗": 3,
"★": 1,
"█": -1,
"☀": 2,
"😡": -1,
"😎": 2,
"💋": 3,
"😋": 3,
"🙊": 2,
"😴": -1,
"🎶": 2,
"💞": 3,
"😌": 2,
"🔫": -1,
"💛": 3,
"💁": 1,
"💚": 3,
"♫": 1,
"😞": -1,
"😆": 2,
"😝": 2,
"😪": -1,
"😫": -1,
"👊": 1,
"💀": -2,
"😀": 2,
"😚": 3,
"😻": 3,
"💘": 3,
"☕": 1,
"👋": 2,
"🎊": 3,
"🍕": 2,
"❄": 2,
"😕": -2,
"💔": -1,
"😤": -2,
"😈": 1,
"✈": 2,
"🔝": 2,
"😰": -1,
"⚽": 3,
"😑": -2,
"👑": 3,
"👉": 1,
"🍃": 1,
"🎁": 3,
"😠": -2,
"🐧": 2,
"☆": 2,
"🍀": 1,
"🎈": 3,
"🎅": 1,
"😓": -1,
"😣": -2,
"😐": -2,
"✊": 2,
"😨": -1,
"😖": -1,
"💤": 1,
"💓": 3,
"👎": -1,
"💦": 2,
"✔": 1,
"😷": -1,
"🙋": 2,
"🎄": 2,
"💩": -1,
"🎵": 2,
"😛": 3,
"👯": 2,
"💎": 2,
"🌿": 1,
"🎂": 3,
"🌟": 1,
"🔮": 1,
"👫": 1,
"🏆": 3,
"✖": 1,
"☝": 1,
"😙": 3,
"⛄": 2,
"👅": 2,
"♪": 2,
"🍂": 2,
"💏": 1,
"🌴": 2,
"👈": 2,
"🌹": 3,
"🙆": 2,
"👻": 1,
"💰": 1,
"🍻": 2,
"🙅": -2,
"🌞": 2,
"🍁": 2,
"⭐": 2,
"▪": 1,
"🎀": 3,
"🐷": 1,
"🙉": 1,
"🌺": 2,
"💅": 1,
"🐶": 2,
"🌚": 2,
"👽": 1,
"🎤": 2,
"👭": 2,
"🎧": 2,
"👆": 1,
"🍸": 2,
"🍷": 2,
"®": 1,
"🍉": 3,
"😇": 3,
"🏃": 2,
"😿": -2,
"│": 1,
"🍺": 2,
"▶": 1,
"😲": -1,
"🎸": 2,
"🍹": 3,
"💫": 2,
"📚": 1,
"😶": -1,
"🌷": 2,
"💝": 3,
"💨": 1,
"🏈": 2,
"💍": 2,
"☔": 1,
"👸": 3,
"🇪": 3,
"░": -1,
"🍩": 1,
"👾": 1,
"☁": 1,
"🌻": 2,
"↿": 3,
"🐯": 2,
"👼": 1,
"🍔": 1,
"😸": 2,
"👶": 2,
"↾": 3,
"💐": 3,
"🌊": 2,
"🍦": 2,
"🍓": 3,
"👇": 1,
"💆": 1,
"🍴": 2,
"😧": -1,
"🇸": 2,
"😮": 1,
"🚫": -3,
"😽": 2,
"🌈": 2,
"🙀": 1,
"⚠": -1,
"🎮": 2,
"╯": -1,
"🍆": 2,
"🍰": 2,
"✓": 1,
"👐": -1,
"🍟": 1,
"🍌": 2,
"💑": 3,
"👬": -1,
"🐣": 2,
"🎃": 3,
"▬": 2,
"￼": -3,
"🐾": 3,
"🎓": 2,
"🏊": 2,
"📷": 2,
"👄": 2,
"🌼": 4,
"🚶": -1,
"🐱": 2,
"🐸": -1,
"🇺": 2,
"👿": -3,
"🚬": 2,
"✿": 1,
"🐒": 2,
"🌍": 3,
"┊": 5,
"🐥": 3,
"🐼": 1,
"🎥": 1,
"💄": 2,
"⛔": 2,
"🏀": 1,
"💉": 1,
"💟": 3,
"🚗": 1,
"📝": 1,
"♦": 2,
"💭": 1,
"🌙": 3,
"🐟": 3,
"👣": 1,
"✂": -3,
"🗿": 2,
"👪": -1,
"🍭": 1,
"🌃": 2,
"❌": 1,
"🐰": 3,
"💊": 2,
"🚨": 3,
"😦": -2,
"🍪": 1,
"🍣": -2,
"✧": 1,
"🎆": 3,
"🎎": 4,
"🇩": 3,
"✅": 2,
"📱": 1,
"🙍": -2,
"🍑": 1,
"🎼": 1,
"🔊": 2,
"🌌": 2,
"🍎": 1,
"🐻": 2,
"╰": -1,
"💇": 1,
"♬": 1,
"🔴": 2,
"🍱": -2,
"🍊": 2,
"🍒": 1,
"🐭": 3,
"👟": 2,
"🌎": 1,
"🍍": 2,
"🐮": 3,
"📲": 1,
"☼": 1,
"🌅": 1,
"🇷": 3,
"👠": 1,
"🌽": 2,
"💧": -1,
"🍬": 1,
"😺": 2,
"🚀": 2,
"¦": 3,
"💢": 1,
"🎬": 1,
"🍧": 1,
"🍜": 2,
"🐏": 3,
"🏄": 2,
"➤": 1,
"⬆": 1,
"🍋": 1,
"🆗": 2,
"⚪": 2,
"📺": 2,
"🍅": 1,
"⛅": 2,
"🐢": 1,
"👙": 2,
"🏡": 2,
"🌾": 2,
"◉": 1,
"✏": 1,
"🐬": 2,
"🇹": 3,
"♣": 1,
"🐝": 1,
"🌝": 1,
"🇮": 3,
"🔋": -3,
"🐍": 1,
"♔": 2,
"🔵": 1,
"😾": -2,
"🌕": 3,
"🐨": 2,
"🔐": 1,
"💿": 3,
"🌳": 2,
"👰": 2,
"❀": 2,
"⚓": 3,
"🚴": 3,
"▀": -1,
"👗": 1,
"➕": 2,
"💬": 2,
"▒": -1,
"🔜": 1,
"🍨": 1,
"💲": 1,
"🍙": 1,
"🍥": -4,
"▸": 1,
"♛": 1,
"😼": 1,
"🐙": 2,
"👨": 2,
"🍚": 2,
"♨": 4,
"🎹": 1,
"♕": 2,
"▃": 5,
"🇬": 1,
"🇧": 1,
"☠": -1,
"🐠": 2,
"🚹": 3,
"💵": 2,
"✰": 4,
"╠": 1,
"👛": 2,
"🌱": 3,
"💻": 1,
"🌏": 1,
"▄": -1,
"👓": 1,
"◄": 1,
"⚾": -1,
"🌲": 2,
"👴": 1,
"🏠": 2,
"🍇": 1,
"🍘": 2,
"🐇": 1,
"🔞": -1,
"👵": 2,
"◀": 1,
"🔙": 1,
"🌵": 1,
"🍮": -1,
"🎇": 3,
"🐎": 2,
"➔": -1,
"🐤": 2,
"╩": 1,
"🌑": 2,
"🚲": 2,
"🐑": -1,
"🏁": 2,
"🎾": 3,
"╚": 1,
"🈹": 1,
"👮": -2,
"☹": -3,
"🐵": 2,
"✪": 1,
"◕": 2,
"🗼": 3,
"▐": -1,
"♠": 1,
"┳": -2,
"👺": -2,
"🐚": 1,
"👂": -1,
"🗽": 1,
"🍵": 2,
"🆒": 2,
"🐺": 1,
"⇨": 2,
"🌓": 3,
"🔒": 1,
"╬": -1,
"👳": 3,
"🌂": 1,
"🚌": 1,
"♩": 3,
"🍡": -1,
"❥": 1,
"🎡": 1,
"💌": 2,
"🐩": 2,
"🌜": 2,
"⌚": 1,
"🚿": 3,
"🔆": 3,
"🌛": 3,
"💂": -1,
"🐔": 1,
"🙎": -1,
"🏩": 2,
"🇫": 2,
"🔨": -1,
"📢": 2,
"🐦": 2,
"🐲": -1,
"♻": 2,
"🌘": 3,
"🌔": 3,
"👖": 2,
"😗": 3,
"🐄": 1,
"◟": -1,
"🍢": -1,
"🎨": 1,
"⬇": 2,
"🚼": 3,
"🇴": 2,
"🌗": 3,
"🌖": 3,
"🔅": 5,
"👜": 1,
"🐌": 3,
"💼": 3,
"🐹": 1,
"🌠": 3,
"🐈": 1,
"🌁": 1,
"⚫": 1,
"♧": 2,
"🏰": 1,
"🚵": 2,
"🎢": 2,
"🎷": 3,
"🎐": 1,
"┈": -4,
"╗": 2,
"🌇": 3,
"⏰": 2,
"🚂": 1,
"◠": 2,
"🎿": 2,
"🆔": 4,
"🌒": 3,
"🐪": 3,
"╔": 1,
"╝": 2,
"👔": 2,
"🆓": 1,
"🐋": 1,
"▽": 2,
"🐛": 1,
"👕": 2,
"💳": 2,
"🏧": 5,
"💡": 3,
"⬅": 2,
"🐫": 2,
"🇱": 2,
"📹": 2,
"👞": 2,
"👚": 3,
"□": -2,
"🚣": 3,
"🏉": 3,
"🗻": 3,
"╦": 2,
"⛺": 3,
"🐕": 1,
"🏂": 2,
"👡": 2,
"📻": 2,
"✒": 1,
"🌰": 3,
"🏢": 1,
"🎒": 3,
"⌒": 3,
"🏫": -2,
"📴": 4,
"🚢": 1,
"🚚": -1,
"🐉": 1,
"❒": 1,
"🔔": 5,
"◢": 4,
"🏥": 1,
"🚖": -1,
"▌": -2,
"☛": 2,
"💒": 3,
"🚤": 2,
"🐐": 2,
"■": -2,
"🔚": 2,
"🎻": 2,
"🔷": 1,
"🎽": 2,
"📅": 1,
"🎺": 3,
"🍈": -3,
"✉": 1,
"◤": 5,
"○": 3,
"🍼": 3,
"🚛": -2,
"📓": 1,
"☉": 1,
"💴": -2,
"➰": -1,
"🔌": -1,
"📕": 1,
"📣": 2,
"🚓": 1,
"🐗": 3,
"⛳": 4,
"┻": -3,
"┛": 3,
"┃": 2,
"💺": 1,
"🏇": -1,
"☻": 1,
"📞": 2,
"Ⓐ": -1,
"🌉": 3,
"🚩": -2,
"✎": 3,
"📃": 2,
"🏨": 1,
"📌": -3,
"♎": -1,
"💷": 2,
"🚄": 3,
"▲": 3,
"⛵": 3,
"🔸": 1,
"🚜": 5,
"🐆": 2,
"👒": 1,
"❕": 1,
"🔛": 2,
"♢": 2,
"🇲": 2,
"❅": 4,
"👝": 2,
"✞": 2,
"◡": 1,
"🎋": 3,
"👥": 1,
"🐡": 1,
"◆": 4,
"🔭": 2,
"🎪": 1,
"🐜": 3,
"♌": 4,
"☐": -5,
"👷": 1,
"🔈": 1,
"📄": 5,
"🚐": 4,
"🌋": 3,
"📡": 1,
"🚳": 5,
"✘": 4,
"🅰": 1,
"🇼": 2,
"┓": 3,
"┣": 3,
"Ⓛ": 2,
"Ⓔ": 2,
"👤": 4,
"🚁": 1,
"🎠": 3,
"🐁": -2,
"📗": 1,
"┐": -1,
"♂": 1,
"📯": -1,
"🔩": 1,
"👢": 4,
"◂": 2,
"📰": 1,
"📶": 2,
"🌄": 1,
"🗾": 2,
"🔶": 2,
"🏤": 2,
"🎩": 2,
"Ⓜ": 1,
"🔧": -4,
"🐅": 1,
"♮": 1,
"🅾": -1,
"📦": 1,
"🚊": 1,
"🔲": 3,
"△": 1,
"📆": 5,
"❛": 2,
"📉": 2,
"▵": 2,
"🔎": 3,
"☜": 1,
"🇯": 2,
"🇵": 2,
"📘": 1,
"ⓔ": 3,
"🔑": 1,
"⭕": 2,
"🔘": 1,
"🚭": 5,
"🚉": 3,
"🚪": 3,
"➳": 2,
"🚃": 3,
"┯": -3,
"🆙": 2,
"🆖": 1,
"┗": 5,
"Ⓞ": 2,
"❇": 3,
"✴": 3,
"☊": 5,
"🔕": -2,
"⬛": -2,
"🚞": 3,
"🍶": 3,
"🌐": 3,
"♀": 1,
"🚅": 3,
"🚒": -2,
"♋": 1,
"♍": 3,
"🕝": -2,
"ⓐ": 5,
"📙": 1,
"Ⓢ": 1,
"📋": 3,
"🎱": 1,
"🐞": 1,
"🔺": 1,
"ⓡ": 5,
"♤": 3,
"🎯": 3,
"🔉": 3,
"↩": 5,
"🚾": 1,
"🎣": -4,
"🔣": 1,
"❎": -5,
"➥": 1,
"🎌": 5,
"◣": 1,
"⏬": 5,
"♭": 1,
"ⓞ": 5,
"🔳": 2,
"🏭": 2,
"🎳": -3,
"☚": 5,
"➽": 2,
"➫": 2,
"➖": -5,
"꒰": 2,
"꒱": 2,
"◝": -3,
"📑": 5,
"ⓧ": 5,
"🔟": 5,
"〓": 5,
"ⓜ": 2,
"➠": 5,
"🚆": 2,
"℅": -5,
"☃": 2,
"🚽": 5,
"ⓝ": 5,
"⇦": 5,
"👲": 2,
"🚡": -3,
"🔬": 5,
"➗": -3,
"📈": 2,
"⏪": 2,
"◎": 5,
"꒦": -5,
"📎": 5,
"⑅": 5,
"✭": 5,
"♓": 2,
"┏": 5,
"☇": 5,
"࿎": -5,
"👘": 5,
"↙": 5,
"Ⓕ": 2,
"Ⓦ": 2,
"Ⓟ": 2,
"🕑": 2,
"🕛": 5,
"♈": -5,
"↬": 5,
"✍": 5,
"🏦": 5,
"🔻": 5,
"ⓟ": 5,
"ⓕ": 5,
"ⓘ": 5,
"♿": 5,
"⇗": 5,
"⇘": 5,
"ⓨ": 5,
"ⓙ": 5,
"▫": 5,
"🔇": 5,
"⌃": -5,
"🔖": 5,
"📜": 5,
"🚝": 5,
"┘": -5,
"✝": -5,
"⍣": -5,
"📮": -5,
"🕕": -5,
"🔯": 5,
"➸": 5,
"꒵": 5,
"🕥": -5,
"✽": 5,
"📼": 5,
"🕐": -5,
"🀄": 5,
"✬": 5,
"✫": 5,
"🕔": -5,
"❣": 5,
"📫": 5,
"🉐": 5,
"🈂": -5,
"🎰": -5,
"҂": -5,
"╤": -5,
"📔": 5,
"gratis": 1,
"no": -1,
"nunca": -1,
"ayuda": 2,
"gusta": 2,
"arriba": 2,
"por favor": 1,
"apoyo": 2,
"mejor": 3,
"bueno": 3,
"estupendo": 3,
"unido": 1,
"querer": 1,
"cuidado": 2,
"grande": 1,
"amor": 3,
"calidad": 2,
"guardar": 2,
"unirse": 1,
"avanzado": 1,
"sí": 1,
"*mejor": 2,
"amigo": 1,
"legal": 1,
"problema": -2,
"importante": 2,
"regalo": 2,
"complicado": -1,
"pagar": -1,
"guerra": -2,
"fácil": 1,
"problemas": -2,
"interés": 1,
"compartir": 1,
"popular": 3,
"bienvenida": 2,
"dios": 1,
"acuerdo": 1,
"seguridad": 1,
"diversión": 4,
"oro": 2,
"limitado": -1,
"soluciones": 1,
"natural": 1,
"verdadero": 2,
"malo": -3,
"riesgo": -2,
"gracias": 2,
"error": -2,
"claro": 1,
"belleza": 3,
"activo": 1,
"fuego": -2,
"muerte": -2,
"pérdida": -3,
"aumento": 1,
"crecimiento": 2,
"detener": -1,
"beneficios": 2,
"efectivo": 2,
"extraviado": -3,
"esperanza": 2,
"deseo": 1,
"solución": 1,
"maduro": 2,
"cierto": 1,
"bien": 2,
"salir": -1,
"enorme": 1,
"amable": 2,
"oportunidades": 2,
"apropiado": 2,
"agradable": 3,
"permitir": 1,
"super": 3,
"materia": 1,
"responsable": 2,
"ganar": 4,
"cáncer": -1,
"amigable": 2,
"feliz": 3,
"agradecer": 2,
"seguro": 1,
"salvo": 2,
"culo": -4,
"favorito": 2,
"corte": -1,
"mejorar": 2,
"anti": -1,
"fuerte": 2,
"enfermedad": -1,
"excelente": 3,
"perfecto": 3,
"opportunit y": 2,
"premio": 3,
"asegurar": 1,
"éxito": 2,
"hermoso": 3,
"advertencia": -3,
"significativo": 1,
"útil": 2,
"autoridad": 1,
"sexy": 3,
"grand": 3,
"cool": 1,
"leading": 2,
"positive": 2,
"fitness": 1,
"greater": 3,
"responsibility": 1,
"resolución": 2,
"lealtad": 1,
"recomendado": 2,
"aprobado": 2,
"habilidad": 2,
"bonito": 1,
"violación": -4,
"presión": -1,
"deuda": -2,
"interesado": 2,
"premios": 3,
"disfrutar": 2,
"bloque": -1,
"aumentado": 1,
"justo": 2,
"incorrecto": -2,
"muerto": -3,
"respeto": 2,
"vale la pena": 2,
"pobre": -2,
"jodido": -4,
"paz": 2,
"creativo": 2,
"beneficio": 2,
"progreso": 2,
"concesión": 1,
"acuerda": 1,
"fan": 3,
"interesante": 2,
"aceptado": 1,
"morir": -3,
"servicial": 2,
"limpio": 2,
"justicia": 2,
"demanda": -1,
"posibilidad": 2,
"visión": 1,
"aceptar": 1,
"exitoso": 3,
"bajo": -1,
"emergencia": -2,
"difícil": -1,
"ajuste": 1,
"dolor": -2,
"recomendar": 2,
"desperdicio": -1,
"delito": -3,
"señorita": -2,
"garantía": 1,
"diamante": 1,
"solo": -2,
"intereses": 1,
"joder": -4,
"compatible": 2,
"rosa": 1 ,
"libertad": 2,
"nuevo": 1,
"creciente": 1,
"errores": -2,
"polla": -5,
"integral": 2,
"proteger": 1,
"soltar": -1,
"sólido": 2,
"prevenir": -1,
"rico": 2,
"mejora": 2,
"espíritu": 1,
"desafío": -1,
"aceptación": 1,
"cargos": -2,
"listo": 1,
"tetas": -2,
"evitar": -1,
"abuso": -3,
"liderazgo": 1,
"fe": 1,
"faltante": -2,
"murió": -3,
"alcance": 1,
"ataque": -1,
"perdón": -1,
"daño": -3,
"fracaso": -2,
"aprobación": 2,
"jesús": 1,
"aventura": 2,
"lucro": 2,
"determinada": 2,
"divertida": 4,
"dedicada": 2 ,
"criminal": -3,
"poderoso": 2,
"sueño": 1,
"falso": -1,
"promocionar": 1,
"ventaja": 2,
"ahorro": 1,
"ganando": 4 ,
"recto": 1,
"preparado": 1,
"alerta": -1,
"claramente": 1,
"dulce": 2,
"ganancia": 2,
"falta": -2,
"olvidado": -1,
"roto": -1,
"batalla": -1,
"compartido": 1,
"spam": -2,
"forzado": -1,
"pelea": -1,
"falló": -2,
"negativo": -2,
"favoritos": 2,
"saludable": 2,
"activos": 2,
"lesión": -2,
"protegido": 1,
"fallo": -2,
"ganó": 3 ,
"importa": 1,
"*ayuda": 2,
"ascenso": 1,
"famoso": 2,
"violencia": -3,
"exclusivo": 2,
"soporta": 2,
"maravilloso": 4,
"de acuerdo": 1,
"fuerza": 2,
"miedo": -2,
"acciones": 1,
"comodidad": 2,
"mejorado": 2,
"ocultar": -1,
"lujo": 2,
"increíble": 4,
"sentimiento": 1,
"importancia": 2,
"vacío": -1,
"estrés": -1,
"yeah": 1,
"mal": -3,
"más grande": 3 ,
"preocupado": -2,
"competitivo": 2,
"dick": -4,
"olvidar": -1,
"matar": -3,
"conflicto": -2,
"dificultad": -2,
"expandir": 1,
"apoyar": 1,
"ayudar": 2,
"afectado": -1,
"*favorito": 2,
"trampas": -3,
"enfermedades": -1,
"donaciones": 1,
"asesinado": -3,
"atracciones": 2,
"loco": -2,
"comedia": 1,
"compromiso": 2,
"pistola": -1,
"puro": 1,
"infierno": -4,
"confianza": 2,
"cálido": 1,
"desconectado": -1,
"chupar": -3,
"alcanzado": 1,
"supremo": 4,
"reconocimiento": 2,
"alentar": 2,
"cancelar": -1,
"límites": -1,
"retraso": -1,
"novela": 2,
"discapacidad": -2,
"ganador": 4,
"comprometido": 1,
"asequible": 2,
"excepcional": 5,
"jaja": 2,
"castigado": -2,
"castigada": -2,
"castigo": -2,
"*gris": -1,
"cargado": -3,
"odio": -3,
"ilegal": -3,
"consentimiento": 2,
"adecuado": 2,
"querido": 2,
"confiable": 2,
"duda": -1,
"incapaz": -2,
"ataques": -1,
"pelear": -2,
"romance": 2,
"cielo": 2,
"enfocado": 2,
"negociar": 2,
"bloquear": -1,
"cortar": -1,
"guau": 4,
"amado": 3,
"*favoritos": 2,
"superior": 2,
"guardado": 2,
"otorgado": 1,
"cómodo": 2,
"efectivamente": 2,
"crisis": -3,
"luminoso": 1,
"pobreza": -1,
"riesgos": -2,
"sueños": 1,
"accidente": -2,
"accesible": 1,
"huelga": -1,
"amenaza": -2,
"perdido": -2,
"extraño": -1,
"sostenible": 2,
"innovación": 1,
"gris": -1,
"negrita": 2,
"estable": 2,
"asset": 2,
"titulado": 1,
"severo": -2,
"humor": 2,
"exitosamente": 3,
"capacidades": 1,
"pecado": -2,
"lindo": 2,
"mejorando": 2,
"anhelo": 1,
"innovador": 2,
"gracia": 1,
"trastornos": -2,
"asentamiento": 1,
"fantástico": 4,
"cometido": 1,
"orgulloso": 2,
"desastre": -2,
"lesiones": -2,
"alarma": -2,
"robar": -2,
"peor": -3,
"peligroso": -2,
"emocionante": 3,
"fiabilidad": 2,
"placer": 3,
"honor": 2,
"suerte": 3 ,
"comic": 1,
"con cuidado": 2,
"ciego": -1,
"furioso": -3,
"asqueroso": -2,
"capaz": 1,
"victoria": 3,
"alegría": 3,
"discapacidades": -2,
"enfermo": -2,
"lol": 3,
"sucio": -2,
"donar": 2,
"quiebra": -3,
"vivo": 1,
"promesa": 1,
"mareado": -2,
"prisión": -2,
"popularidad": 3,
"empeorar": -3,
"víctimas": -3,
"escape": -1,
"sustancial": 1 ,
"premiado": 3,
"fraude": -4,
"awesome": 4,
"choque": -2,
"deseado": 2,
"infección": -2,
"extender": 1,
"asesinato": -2,
"adecuar": 1,
"rescate": 2,
"pérdidas": -3,
"combate": -1,
"detenido": -1,
"lanzado": 1,
"contaminación": -2,
"shock": -2,
"efectividad": 2,
"beso": 2,
"bromas": 2,
"aceptable": 1,
"satisfecho": 2,
"contento": 3,
"gana": 4,
"de confianza": 2,
"fantasma": -1,
"violar": -2,
"campeón": 2,
"oración": -2,
"ignorar": -1,
"excelencia": 3,
"riqueza": 3,
"olvidé": -1,
"inteligente": 2,
"estúpido": -2,
"enemigo": -2,
"mierda": -4,
"restringido": -2,
"afortunado": 3,
"penalización": -2,
"facilidad": 2,
"aventuras": 2,
"apreciar": 2,
"precioso": 3,
"sonrisa": 2,
"expuesto": -1,
"queja": -2,
"impulso": 1,
"capacidad": 1,
"daños": -3,
"resuelvo": 1,
"quejas": -2,
"pasión": 1,
"débil": -2,
"integridad": 2,
"preocupación": -3,
"alegre": 3,
"peligro": -2,
"vitamin": 1,
"paradise": 3,
"glory": 2,
"sad": -2,
"promoting": 1,
"hurt": -2,
"slip": -1,
"profit": 2,
"cortes": -1,
"funeral": -1,
"disfrutado": 2,
"talento": 2,
"sabiduría": 1,
"disparar": -1,
"alentado": 2,
"perder": -3,
"noble": 2,
"ventajas": 2,
"amores": 3,
"sueltos": -3,
"dolencia": -2,
"asegurado": 2,
"destrucción": -3,
"desorden": -2,
"héroe": 2,
"cayendo": -1,
"dejado": -1,
"tortura": -4,
"matando": -3,
"refinar": 1,
"falla": -2 ,
"meando": -3,
"atracción": 2,
"invitar": 1,
"terror": -3,
"prohibir": -2,
"impar": -2,
"favor": 2,
"atractivo": 2,
"víctima": -3,
"exige": -1,
"cuidadoso": 2,
"tops": 2,
"llorar": -1,
"simpático": 3,
"raro": -2,
"inspirado": 2,
"limpiador": 2,
"gustado": 2,
"adoptar": 1,
"denegado": -2,
"follado": -4,
"donación": 2,
"muertes": -2,
"disputa": -2,
"cansado": -2,
"honesto": 2,
"arriesgado": -3,
"restaurar": 1,
"demandar": -2,
"maldito": -2 ,
"suicidio": -2,
"fama": 1,
"cortesía": 2,
"crítica": -2,
"asustado": -2,
"engaño": -2,
"fortuna": 2,
"exploración": 1,
"gripe": -2,
"perfectamente": 3,
"esclavo": -3,
"litigio": -1,
"héroes": 2,
"terrorista": -2,
"ético": 2,
"lucha": -2,
"sufrimiento": -2,
"culpable": -3,
"encanto": 3,
"violento": -3,
"borracho": -2,
"crímenes": -3,
"resuelto": 2,
"rompió": -1,
"resolver": 2,
"asegurando": 1,
"resaltar": 2,
"ojalá": 2,
"brillante": 4,
"deseos": 1,
"amar": 2,
"elegante": 2,
"ganancias": 2,
"críticos": -2,
"fake": -3,
"bomba": -1,
"perjuicio": -2,
"asalto": -2,
"significado": 1,
"resolviendo": 1,
"participar": 1,
"engañar": -3,
"sospechoso": -1,
"obligatorio": -1,
"celebración": 3,
"amenazas": -2 ,
"llegar": 1,
"dañado": -3,
"mear": -4,
"reír": 1,
"destruir": -3,
"ofensivo": -2,
"gustas": 2,
"carga": -2,
"increible": 3,
"excitado": 3,
"supera": 2,
"equilibrado": 1,
"demorado": -1,
"excluir": -1,
"ansiedad": -2,
"indispuesto": -1,
"esperanzas": 2,
"puta": -5,
"victor": 3,
"aislado": -1,
"descontado": -1,
"desesperado": -3,
"demostración": -1,
"negado": -2,
"saludo": 1,
"desempleo": -2,
"lágrimas": -2,
"enojado": -3,
"amistad": 2,
"sol": 2,
"arrastre": -1,
"arrestado": -3,
"ganado": 2,
"muriendo": -3,
"atascado": -2,
"detiene": -1,
"sofisticado": 2,
"impuesto": -1,
"más fuerte": 2,
"tóxico": -3,
"oscuridad": -1,
"nueces": -3,
"broma": 2,
"rechazado": -1,
"destruido": -3,
"vulnerabilidad": -2,
"celebrar": 3,
"impresionante": 3,
"accidentes": -2,
"tierno": 2,
"violaciones": -2,
"alabanza": 3,
"esperando": 2,
"parcialidad": -1,
"admitido": -1,
"admitir": -1,
"sufrir": -2,
"caos": -2,
"confundido": -2,
"acusado": -2,
"corrupción": -3,
"terrible": -3,
"fiebre": -2,
"orar": 1,
"recomienda": 2,
"tesoro": 2,
"limitación": -1,
"golpeado": -1,
"advertencias": -3,
"inspiración": 2,
"curioso": 1,
"exquisito": 4,
"lesionado": -2,
"colapso": -2,
"improbable": -1,
"conflictos": -2,
"tributo": 2,
"inmune": 1,
"infectado": -2,
"barrera": -2,
"perra": -5,
"infecciones": -2,
"ofensa": -2,
"protesta": -2,
"intenso": 1,
"partidarios": 1,
"suciedad": -2,
"retirada": -3,
"culpa": -2,
"sufrido": -2,
"fallos": -2,
"devoto": 3,
"despedido": -2,
"desacuerdo": -2,
"ira": -3,
"posibilidades": 2,
"felicidad": 3,
"sustancialmente": 1,
"bizarro": -2,
"exento": -1,
"realizado": 2,
"nervioso": -2,
"rechazar": -2,
"extiende": 1,
"magnífico": 5,
"calmar": 2,
"campeones": 2,
"inapropiado": -2 ,
"apreciado": 2,
"armonía": 2,
"distinguido": 2,
"recompensa": 2,
"medalla": 3,
"apesta": -3,
"vulnerable": -2,
"unificado": 1,
"ignorado": -2,
"caído": -2,
"respaldado": 1,
"arresto": -2,
"tolerancia": 2,
"atraer": 1,
"tener éxito": 3,
"oops": -2,
"habilidades": 2,
"trampa": -1,
"solitario": -2,
"tonto": -2,
"suspendido": -1,
"segura": 2,
"delicioso": 3,
"con seguridad": 1,
"durable": 2,
"desagradable": -3,
"tumor": -2,
"feo": -3,
"invasión": -1,
"recompensas": 2,
"fortalecer": 2,
"agresivo": -2,
"robado": -2,
"perturbado": -2,
"motivación": 1,
"acepta": 1,
"aplausos": 2,
"apreciación": 2,
"restricción": -2,
"cuidando": 2,
"usad": -1,
"negar": -2,
"defectos": -3,
"puntos fuertes": 2,
"claridad": 2,
"alentando": 2,
"terroristas": -2,
"basura": -3,
"prometido": 1,
"robusto": 2,
"amenazado": -2,
"fabuloso": 4,
"prospecto": 1,
"tensión": -1,
"excluido": -2,
"perspectivas": 1,
"notable": 2,
"previnindo": -1,
"lío": -2,
"aceptando": 1,
"volcar": -1,
"saludos": 2,
"incompleto": -1,
"tumba": -2,
"presos": -2,
"digno": 2,
"lobby": -2,
"derrota": -2,
"sostenibilidad": 1,
"ridículo": -1 ,
"misericordia": 2,
"legalmente": 1,
"vergüenza": -2,
"fatal": -3,
"válido": 2,
"retiro": -1,
"reprobado": -2,
"retenido": -1,
"solucionado": 1 ,
"urgente": -1,
"felicitaciones": 2,
"venganza": -2,
"enemigos": -2,
"admite": 1,
"disfrutano": 2,
"promesas": 1,
"inquieto": -3,
"porquería": -1,
"aburrido": -3,
"alcanza": 1,
"déficit": -2,
"rebelde": -2,
"malvado": -2,
"mata": -3 ,
"impresionado": 3,
"fallas": -2,
"conspiración": -3,
"prominente": 2,
"favores": 2,
"pánico": -3,
"excusa": -1,
"reclamación": -2,
"desechar": -1,
"abandonado": -2,
"contenta": 3,
"pasivo": -1,
"coraje": 2,
"entretenido": 2,
"suspensión": -1,
"pacífico": 2,
"rabia": -2,
"confía": 1,
"robo": -2,
"refinado": 1,
"sin hogar": -2,
"horrible": -3,
"bloqueado": -1,
"golpes": -1,
"negación": -2,
"gema": 3,
"borrado": 1,
"lograr": 2,
"fatalidad": -2,
"mito": -1,
"infeccioso": -2,
"bloqueo": -1,
"restaurado": 1,
"caritativo": 2,
"convencido": 1,
"incumplimiento": -2,
"sospecha": -1,
"competente": 2 ,
"agradecido": 3,
"riendo": 1,
"deseable": 2,
"prohibido": -2,
"rápido": 2,
"milagro": 4,
"perezoso": -1,
"cualidades": 2 ,
"maravilla": 3,
"bla": -2,
"mortal": -3,
"coño": -5,
"oraciones": -2,
"exclusión": -1,
"entusiasta": 1,
"generoso": 2,
"locura": -3,
"fascinante": 3,
"salvación": 2,
"brutal": -3,
"adaptado": 2,
"orgullo": 2,
"deleite": 3,
"sobreviviente": 2,
"deteriorado": -2,
"joya": 1,
"tragedia": -2,
"doloroso": -2,
"funky": 2,
"cancelado": -1,
"aterrador": -2,
"sangriento": -3,
"encantador": 3,
"molesto": -2,
"respetado": 2,
"trastornado": -2,
"restringir": -2,
"endosado": 2,
"polución": -2,
"bendiga": 2,
"triunfo": 4,
"pulido": 2,
"controvertido": -2,
"trauma": -3,
"exigente": -1,
"censurado": -2,
"motivado": 2,
"lerdo": -3,
"hueco": -1,
"respaldo": 2,
"promovido": 1,
"hambre": -2,
"beneplácito": 2,
"disputas": -2,
"espléndido": 3,
"prontitud": 1,
"dañino": -2,
"tesoros": 2,
"advertido": -2,
"gravemente": -3,
"decepcionado": -2,
"primicia": 3,
"repulsivo": -3,
"excitación": 3,
"valiente": 2,
"atroz": -3,
"imponer": -1,
"acoso": -3,
"zorra": -4,
"*favor": 2,
"controversia": -2,
"simpatía": 2,
"bellamente": 3,
"promueve": 1,
"condenado": -2,
"amenazante": -2,
"preso": -2,
"alienta": 2,
"donado": 2,
"crudo": -1,
"*aburrido": -2,
"molestar": -2,
"atacado": -1,
"más seguro": 2,
"fortalecimiento": 2,
"desear": 1,
"espantado": -2,
"infracción": -2,
"veneno": -2
}
},{}],11:[function(require,module,exports){
module.exports={"acertado":{"pos":"a","pol":"0.708","std":"0.149"},"admirable":{"pos":"a","pol":"0.906","std":"0.125"},"admiración":{"pos":"n","pol":"0.45","std":"0.331"},"admirar":{"pos":"v","pol":"0.75","std":"0.177"},"afectivo":{"pos":"a","pol":"0.375","std":"0.0"},"afecto":{"pos":"n","pol":"0.321","std":"0.112"},"afectuoso":{"pos":"a","pol":"0.563","std":"0.131"},"afición":{"pos":"n","pol":"0.5","std":"0.425"},"afortunado":{"pos":"a","pol":"0.813","std":"0.063"},"agradable":{"pos":"a","pol":"0.75","std":"0.181"},"agradecido":{"pos":"a","pol":"0.5","std":"0.125"},"alegrar":{"pos":"v","pol":"0.458","std":"0.315"},"alegre":{"pos":"a","pol":"0.661","std":"0.185"},"alentador":{"pos":"n","pol":"0.25","std":"0.0"},"alentar":{"pos":"v","pol":"0.275","std":"0.418"},"amable":{"pos":"a","pol":"0.688","std":"0.165"},"amar":{"pos":"v","pol":"1.0","std":"0.0"},"amistoso":{"pos":"a","pol":"0.708","std":"0.125"},"amor":{"pos":"n","pol":"0.278","std":"0.171"},"animado":{"pos":"a","pol":"0.494","std":"0.276"},"animar":{"pos":"v","pol":"0.289","std":"0.232"},"apacible":{"pos":"a","pol":"0.313","std":"0.161"},"apasionado":{"pos":"a","pol":"0.469","std":"0.12"},"apego":{"pos":"n","pol":"0.375","std":"0.0"},"aprecio":{"pos":"n","pol":"0.344","std":"0.161"},"aprobar":{"pos":"v","pol":"0.375","std":"0.292"},"ardiente":{"pos":"a","pol":"0.313","std":"0.213"},"atractivo":{"pos":"n","pol":"0.5","std":"0.246"},"beneficio":{"pos":"n","pol":"0.396","std":"0.351"},"benevolencia":{"pos":"n","pol":"0.438","std":"0.277"},"benevolente":{"pos":"a","pol":"0.313","std":"0.177"},"bien":{"pos":"r","pol":"0.792","std":"0.361"},"bienestar":{"pos":"n","pol":"0.531","std":"0.258"},"bondad":{"pos":"n","pol":"0.25","std":"0.267"},"bonito":{"pos":"a","pol":"0.75","std":"0.217"},"buen":{"pos":"a","pol":"0.734","std":"0.2"},"bueno":{"pos":"n","pol":"0.5","std":"0.53"},"cariñoso":{"pos":"a","pol":"0.438","std":"0.188"},"cautivado":{"pos":"a","pol":"0.438","std":"0.0"},"cautivador":{"pos":"a","pol":"0.594","std":"0.438"},"cercano":{"pos":"a","pol":"0.354","std":"0.2"},"comodidad":{"pos":"n","pol":"0.406","std":"0.298"},"compañerismo":{"pos":"n","pol":"0.25","std":"0.191"},"competente":{"pos":"a","pol":"0.589","std":"0.315"},"complacencia":{"pos":"n","pol":"0.688","std":"0.177"},"complacer":{"pos":"v","pol":"0.475","std":"0.326"},"complaciente":{"pos":"a","pol":"0.643","std":"0.159"},"confianza":{"pos":"n","pol":"0.375","std":"0.267"},"confortar":{"pos":"v","pol":"0.375","std":"0.0"},"consolar":{"pos":"v","pol":"0.375","std":"0.0"},"contentarse":{"pos":"v","pol":"0.375","std":"0.177"},"contento":{"pos":"n","pol":"0.5","std":"0.0"},"correcto":{"pos":"a","pol":"0.806","std":"0.125"},"cortés":{"pos":"a","pol":"0.667","std":"0.184"},"cuidadoso":{"pos":"a","pol":"0.521","std":"0.102"},"cálido":{"pos":"a","pol":"0.411","std":"0.257"},"cándido":{"pos":"a","pol":"0.35","std":"0.306"},"cómodo":{"pos":"a","pol":"0.469","std":"0.217"},"decente":{"pos":"a","pol":"0.571","std":"0.2"},"deleitarse":{"pos":"v","pol":"0.475","std":"0.143"},"diestro":{"pos":"a","pol":"0.625","std":"0.331"},"disfrutar":{"pos":"v","pol":"0.536","std":"0.225"},"divertido":{"pos":"a","pol":"0.653","std":"0.132"},"divertir":{"pos":"v","pol":"0.281","std":"0.239"},"divertirse":{"pos":"v","pol":"0.542","std":"0.361"},"dulce":{"pos":"a","pol":"0.518","std":"0.385"},"emotivo":{"pos":"a","pol":"0.313","std":"0.051"},"encantado":{"pos":"a","pol":"0.417","std":"0.129"},"encantador":{"pos":"n","pol":"-0.375","std":"0.0"},"entusiasmo":{"pos":"n","pol":"0.661","std":"0.295"},"entusiasta":{"pos":"a","pol":"0.6","std":"0.105"},"estima":{"pos":"n","pol":"0.521","std":"0.188"},"estimulante":{"pos":"n","pol":"0.25","std":"0.0"},"estimular":{"pos":"v","pol":"0.262","std":"0.242"},"euforia":{"pos":"n","pol":"0.531","std":"0.161"},"eufórico":{"pos":"a","pol":"0.344","std":"0.329"},"excelente":{"pos":"a","pol":"0.75","std":"0.088"},"excitante":{"pos":"a","pol":"0.425","std":"0.137"},"experto":{"pos":"n","pol":"0.25","std":"0.0"},"fascinación":{"pos":"n","pol":"0.438","std":"0.354"},"fascinante":{"pos":"a","pol":"0.5","std":"0.413"},"favorable":{"pos":"a","pol":"0.844","std":"0.188"},"favorecer":{"pos":"v","pol":"0.268","std":"0.254"},"felicidad":{"pos":"n","pol":"0.708","std":"0.191"},"feliz":{"pos":"a","pol":"0.719","std":"0.176"},"ferviente":{"pos":"a","pol":"0.5","std":"0.12"},"fiable":{"pos":"a","pol":"0.75","std":"0.088"},"firmeza":{"pos":"n","pol":"0.278","std":"0.268"},"gozar":{"pos":"v","pol":"0.458","std":"0.072"},"gracioso":{"pos":"a","pol":"0.625","std":"0.112"},"gratificante":{"pos":"a","pol":"0.75","std":"0.191"},"gustar":{"pos":"v","pol":"0.406","std":"0.415"},"gusto":{"pos":"n","pol":"0.266","std":"0.369"},"honorable":{"pos":"a","pol":"0.583","std":"0.072"},"honrado":{"pos":"a","pol":"0.667","std":"0.171"},"honrar":{"pos":"v","pol":"0.5","std":"0.191"},"hábil":{"pos":"a","pol":"0.875","std":"0.125"},"ideal":{"pos":"a","pol":"0.425","std":"0.385"},"idóneo":{"pos":"a","pol":"0.7","std":"0.154"},"interés":{"pos":"n","pol":"0.321","std":"0.352"},"jovial":{"pos":"a","pol":"0.775","std":"0.137"},"joya":{"pos":"n","pol":"0.458","std":"0.191"},"jubiloso":{"pos":"a","pol":"0.563","std":"0.088"},"justo":{"pos":"a","pol":"0.675","std":"0.163"},"júbilo":{"pos":"n","pol":"0.542","std":"0.26"},"magnífico":{"pos":"a","pol":"0.804","std":"0.159"},"mañoso":{"pos":"a","pol":"0.563","std":"0.258"},"minucioso":{"pos":"a","pol":"0.438","std":"0.125"},"optimismo":{"pos":"n","pol":"0.458","std":"0.331"},"optimista":{"pos":"n","pol":"0.625","std":"0.0"},"placentero":{"pos":"a","pol":"0.875","std":"0.177"},"plácido":{"pos":"a","pol":"0.25","std":"0.177"},"positivo":{"pos":"a","pol":"0.594","std":"0.258"},"preferencia":{"pos":"n","pol":"0.281","std":"0.063"},"prometedor":{"pos":"a","pol":"0.875","std":"0.102"},"provecho":{"pos":"n","pol":"0.328","std":"0.313"},"reconfortante":{"pos":"a","pol":"0.375","std":"0.063"},"recrear":{"pos":"v","pol":"0.313","std":"0.421"},"recto":{"pos":"a","pol":"0.438","std":"0.301"},"refrescar":{"pos":"v","pol":"0.25","std":"0.2"},"regocijado":{"pos":"a","pol":"0.667","std":"0.125"},"regocijar":{"pos":"v","pol":"0.875","std":"0.177"},"regocijarse":{"pos":"v","pol":"0.313","std":"0.088"},"regocijo":{"pos":"n","pol":"0.25","std":"0.326"},"respetable":{"pos":"a","pol":"0.906","std":"0.12"},"saludable":{"pos":"a","pol":"0.768","std":"0.098"},"sano":{"pos":"a","pol":"0.8","std":"0.112"},"satisfacer":{"pos":"v","pol":"0.578","std":"0.236"},"satisfactorio":{"pos":"n","pol":"0.375","std":"0.0"},"satisfecho":{"pos":"a","pol":"0.6","std":"0.168"},"seductor":{"pos":"a","pol":"0.7","std":"0.163"},"seguro":{"pos":"r","pol":"0.375","std":"0.0"},"sereno":{"pos":"a","pol":"0.297","std":"0.124"},"simpatía":{"pos":"n","pol":"0.354","std":"0.292"},"simpático":{"pos":"a","pol":"0.653","std":"0.289"},"solazar":{"pos":"v","pol":"0.375","std":"0.0"},"sonriente":{"pos":"a","pol":"1.0","std":"0.0"},"sosegado":{"pos":"a","pol":"0.292","std":"0.144"},"superior":{"pos":"n","pol":"0.375","std":"0.177"},"ternura":{"pos":"n","pol":"0.313","std":"0.12"},"tierno":{"pos":"a","pol":"0.375","std":"0.224"},"tranquilizar":{"pos":"v","pol":"0.333","std":"0.144"},"tónico":{"pos":"a","pol":"0.375","std":"0.368"},"utilidad":{"pos":"n","pol":"0.344","std":"0.331"},"vigorizante":{"pos":"a","pol":"0.625","std":"0.125"},"vigorizar":{"pos":"v","pol":"0.375","std":"0.224"},"útil":{"pos":"n","pol":"0.25","std":"0.0"},"abatir":{"pos":"v","pol":"-0.554","std":"0.047"},"abochornado":{"pos":"a","pol":"-0.25","std":"0.0"},"abochornar":{"pos":"v","pol":"-0.5","std":"0.072"},"abominación":{"pos":"n","pol":"-0.425","std":"0.056"},"aborrecer":{"pos":"v","pol":"-0.625","std":"0.088"},"aborrecimiento":{"pos":"n","pol":"-0.425","std":"0.056"},"acongojarse":{"pos":"v","pol":"-0.687","std":"0.088"},"acosar":{"pos":"v","pol":"-0.304","std":"0.061"},"aflicción":{"pos":"n","pol":"-0.606","std":"0.109"},"afligido":{"pos":"a","pol":"-0.396","std":"0.113"},"afligir":{"pos":"v","pol":"-0.675","std":"0.04"},"afligirse":{"pos":"v","pol":"-0.687","std":"0.088"},"agravar":{"pos":"v","pol":"-0.281","std":"0.217"},"agresividad":{"pos":"n","pol":"-0.35","std":"0.068"},"alarmar":{"pos":"v","pol":"-0.25","std":"0.0"},"alboroto":{"pos":"n","pol":"-0.25","std":"0.09"},"amargura":{"pos":"n","pol":"-0.5","std":"0.125"},"angustia":{"pos":"n","pol":"-0.589","std":"0.112"},"angustiado":{"pos":"a","pol":"-0.65","std":"0.112"},"antipatía":{"pos":"n","pol":"-0.542","std":"0.094"},"antipático":{"pos":"n","pol":"0.25","std":"0.0"},"apesadumbrado":{"pos":"a","pol":"-0.5","std":"0.0"},"apocamiento":{"pos":"n","pol":"-0.406","std":"0.188"},"apurarse":{"pos":"v","pol":"-0.35","std":"0.088"},"arrepentido":{"pos":"a","pol":"-0.5","std":"0.0"},"arriesgado":{"pos":"a","pol":"-0.25","std":"0.142"},"asco":{"pos":"n","pol":"-0.357","std":"0.072"},"asquear":{"pos":"v","pol":"-0.437","std":"0.0"},"asqueroso":{"pos":"a","pol":"-0.575","std":"0.143"},"atormentar":{"pos":"v","pol":"-0.391","std":"0.129"},"atroz":{"pos":"a","pol":"-0.672","std":"0.146"},"avergonzado":{"pos":"a","pol":"-0.25","std":"0.0"},"avergonzar":{"pos":"v","pol":"-0.375","std":"0.12"},"aversión":{"pos":"n","pol":"-0.359","std":"0.08"},"cabreado":{"pos":"a","pol":"-0.75","std":"0.0"},"celoso":{"pos":"a","pol":"-0.25","std":"0.177"},"colérico":{"pos":"a","pol":"-0.458","std":"0.131"},"confundir":{"pos":"v","pol":"-0.333","std":"0.091"},"congoja":{"pos":"n","pol":"-0.75","std":"0.072"},"conmoción":{"pos":"n","pol":"-0.354","std":"0.151"},"consternado":{"pos":"a","pol":"-0.375","std":"0.161"},"contrariedad":{"pos":"n","pol":"-0.656","std":"0.188"},"contrito":{"pos":"a","pol":"-0.5","std":"0.0"},"crueldad":{"pos":"n","pol":"-0.525","std":"0.056"},"culpabilidad":{"pos":"n","pol":"-1.0","std":"0.0"},"culpable":{"pos":"a","pol":"-0.312","std":"0.265"},"dañino":{"pos":"a","pol":"-0.437","std":"0.157"},"decaído":{"pos":"a","pol":"-0.375","std":"0.072"},"defectuoso":{"pos":"a","pol":"-0.431","std":"0.127"},"degradante":{"pos":"a","pol":"-0.375","std":"0.213"},"deplorar":{"pos":"v","pol":"-0.406","std":"0.177"},"deprimente":{"pos":"a","pol":"-1.0","std":"0.0"},"deprimir":{"pos":"v","pol":"-0.687","std":"0.0"},"desagradable":{"pos":"n","pol":"0.25","std":"0.0"},"desagradar":{"pos":"v","pol":"-0.625","std":"0.088"},"desagrado":{"pos":"n","pol":"-0.667","std":"0.125"},"desalentador":{"pos":"a","pol":"-0.333","std":"0.289"},"desalentar":{"pos":"v","pol":"-0.589","std":"0.094"},"desaliento":{"pos":"n","pol":"-0.325","std":"0.105"},"desamparo":{"pos":"n","pol":"-0.275","std":"0.105"},"desaprobar":{"pos":"v","pol":"-0.292","std":"0.188"},"desasosiego":{"pos":"n","pol":"-0.344","std":"0.12"},"desconsolado":{"pos":"a","pol":"-0.875","std":"0.088"},"descuido":{"pos":"n","pol":"-0.281","std":"0.131"},"desdicha":{"pos":"n","pol":"-0.547","std":"0.08"},"desdichado":{"pos":"a","pol":"-0.35","std":"0.143"},"desdén":{"pos":"n","pol":"-0.363","std":"0.099"},"desesperado":{"pos":"a","pol":"-0.625","std":"0.19"},"deshonroso":{"pos":"a","pol":"-0.3","std":"0.163"},"desolado":{"pos":"a","pol":"-0.562","std":"0.265"},"despreciable":{"pos":"a","pol":"-0.406","std":"0.174"},"despreciar":{"pos":"v","pol":"-0.396","std":"0.151"},"desprecio":{"pos":"n","pol":"-0.406","std":"0.115"},"desánimo":{"pos":"n","pol":"-0.312","std":"0.112"},"detestar":{"pos":"v","pol":"-0.667","std":"0.072"},"devastador":{"pos":"a","pol":"-0.45","std":"0.068"},"difícil":{"pos":"a","pol":"-0.667","std":"0.125"},"disgustado":{"pos":"a","pol":"-0.437","std":"0.063"},"disgustar":{"pos":"v","pol":"-0.5","std":"0.0"},"disuadir":{"pos":"v","pol":"-0.25","std":"0.0"},"dolor":{"pos":"n","pol":"-0.488","std":"0.102"},"dolorido":{"pos":"a","pol":"-0.719","std":"0.102"},"doloroso":{"pos":"a","pol":"-0.625","std":"0.131"},"encolerizar":{"pos":"v","pol":"-0.437","std":"0.088"},"enemistad":{"pos":"n","pol":"-0.281","std":"0.072"},"enfadado":{"pos":"a","pol":"-0.625","std":"0.088"},"enfadar":{"pos":"v","pol":"-0.25","std":"0.0"},"enfurecer":{"pos":"v","pol":"-0.375","std":"0.072"},"enojado":{"pos":"a","pol":"-0.5","std":"0.0"},"enojar":{"pos":"v","pol":"-0.437","std":"0.088"},"enojoso":{"pos":"a","pol":"-0.875","std":"0.088"},"entristecer":{"pos":"v","pol":"-0.375","std":"0.0"},"escalofriante":{"pos":"a","pol":"-0.333","std":"0.166"},"espantar":{"pos":"v","pol":"-0.286","std":"0.098"},"espantoso":{"pos":"a","pol":"-0.643","std":"0.134"},"exacerbación":{"pos":"n","pol":"-0.375","std":"0.072"},"exasperar":{"pos":"v","pol":"-0.525","std":"0.163"},"fastidiar":{"pos":"v","pol":"-0.359","std":"0.065"},"fastidioso":{"pos":"a","pol":"-0.75","std":"0.153"},"fatal":{"pos":"a","pol":"-0.275","std":"0.185"},"frustrado":{"pos":"a","pol":"-0.5","std":"0.0"},"frío":{"pos":"n","pol":"-0.292","std":"0.144"},"furia":{"pos":"n","pol":"-0.4","std":"0.105"},"furioso":{"pos":"a","pol":"-0.3","std":"0.143"},"harto":{"pos":"a","pol":"-0.25","std":"0.0"},"hastío":{"pos":"n","pol":"-0.281","std":"0.111"},"herir":{"pos":"v","pol":"-0.458","std":"0.072"},"histeria":{"pos":"n","pol":"-0.437","std":"0.12"},"horrible":{"pos":"a","pol":"-0.429","std":"0.177"},"horripilante":{"pos":"a","pol":"-0.4","std":"0.198"},"horror":{"pos":"n","pol":"-0.354","std":"0.117"},"horrorizar":{"pos":"v","pol":"-0.437","std":"0.088"},"horroroso":{"pos":"a","pol":"-0.5","std":"0.173"},"hostigar":{"pos":"v","pol":"-0.35","std":"0.056"},"hostilidad":{"pos":"n","pol":"-0.344","std":"0.102"},"humillar":{"pos":"v","pol":"-0.458","std":"0.072"},"impaciencia":{"pos":"n","pol":"-0.333","std":"0.191"},"impotencia":{"pos":"n","pol":"-0.25","std":"0.12"},"inadecuado":{"pos":"a","pol":"-0.288","std":"0.138"},"inclemente":{"pos":"a","pol":"-0.25","std":"0.289"},"incomodar":{"pos":"v","pol":"-0.425","std":"0.068"},"incómodo":{"pos":"a","pol":"-0.271","std":"0.146"},"inoportuno":{"pos":"a","pol":"-0.361","std":"0.153"},"inquietante":{"pos":"a","pol":"-0.375","std":"0.161"},"inquieto":{"pos":"a","pol":"-0.275","std":"0.147"},"inquina":{"pos":"n","pol":"-0.25","std":"0.0"},"insatisfecho":{"pos":"a","pol":"-0.5","std":"0.102"},"inseguridad":{"pos":"n","pol":"-0.437","std":"0.188"},"insuficiente":{"pos":"a","pol":"-0.375","std":"0.0"},"intolerable":{"pos":"a","pol":"-0.25","std":"0.144"},"iracundo":{"pos":"a","pol":"-0.583","std":"0.072"},"irascible":{"pos":"a","pol":"-0.562","std":"0.063"},"irritación":{"pos":"n","pol":"-0.417","std":"0.088"},"irritante":{"pos":"a","pol":"-0.5","std":"0.185"},"irritar":{"pos":"v","pol":"-0.361","std":"0.108"},"lamentable":{"pos":"a","pol":"-0.4","std":"0.205"},"mal humor":{"pos":"n","pol":"-0.5","std":"0.12"},"malhumor":{"pos":"n","pol":"-0.531","std":"0.102"},"malicia":{"pos":"n","pol":"-0.375","std":"0.112"},"maligno":{"pos":"a","pol":"-0.469","std":"0.161"},"malévolo":{"pos":"a","pol":"-0.775","std":"0.137"},"melancolía":{"pos":"n","pol":"-0.375","std":"0.259"},"melancólico":{"pos":"n","pol":"-0.25","std":"0.0"},"menospreciar":{"pos":"v","pol":"-0.268","std":"0.159"},"menosprecio":{"pos":"n","pol":"-0.304","std":"0.098"},"miedoso":{"pos":"n","pol":"-0.25","std":"0.0"},"miserable":{"pos":"n","pol":"-0.3","std":"0.056"},"misoneísmo":{"pos":"n","pol":"-0.25","std":"0.0"},"mohína":{"pos":"n","pol":"-0.312","std":"0.0"},"molestar":{"pos":"v","pol":"-0.458","std":"0.042"},"molesto":{"pos":"a","pol":"-0.538","std":"0.158"},"monstruoso":{"pos":"a","pol":"-0.396","std":"0.129"},"mosqueado":{"pos":"a","pol":"-0.75","std":"0.0"},"nauseabundo":{"pos":"a","pol":"-0.25","std":"0.088"},"negro":{"pos":"n","pol":"-0.25","std":"0.125"},"nocivo":{"pos":"a","pol":"-0.437","std":"0.213"},"odiar":{"pos":"v","pol":"-1.0","std":"0.0"},"odio":{"pos":"n","pol":"-0.5","std":"0.177"},"ofender":{"pos":"v","pol":"-0.594","std":"0.125"},"ofensivo":{"pos":"a","pol":"-0.429","std":"0.191"},"opresión":{"pos":"n","pol":"-0.375","std":"0.177"},"oscuro":{"pos":"a","pol":"-0.575","std":"0.154"},"pavor":{"pos":"n","pol":"-0.437","std":"0.088"},"pena":{"pos":"n","pol":"-0.458","std":"0.104"},"penoso":{"pos":"a","pol":"-0.321","std":"0.173"},"perjudicial":{"pos":"a","pol":"-0.455","std":"0.175"},"perturbar":{"pos":"v","pol":"-0.406","std":"0.093"},"pesadumbre":{"pos":"n","pol":"-0.575","std":"0.105"},"pesar":{"pos":"n","pol":"-0.562","std":"0.104"},"pesaroso":{"pos":"a","pol":"-0.437","std":"0.0"},"pesimismo":{"pos":"n","pol":"-0.333","std":"0.144"},"pesimista":{"pos":"n","pol":"-0.375","std":"0.0"},"problema":{"pos":"n","pol":"-0.437","std":"0.128"},"pánico":{"pos":"n","pol":"-0.292","std":"0.217"},"quemazón":{"pos":"n","pol":"-0.281","std":"0.177"},"rabia":{"pos":"n","pol":"-0.271","std":"0.123"},"recelo":{"pos":"n","pol":"-0.25","std":"0.105"},"rechazar":{"pos":"v","pol":"-0.26","std":"0.154"},"rencor":{"pos":"n","pol":"-0.542","std":"0.144"},"repelo":{"pos":"n","pol":"-0.312","std":"0.0"},"repugnancia":{"pos":"n","pol":"-0.406","std":"0.08"},"repugnante":{"pos":"a","pol":"-0.422","std":"0.177"},"repulsivo":{"pos":"a","pol":"-0.25","std":"0.072"},"resentimiento":{"pos":"n","pol":"-0.594","std":"0.12"},"sombrío":{"pos":"a","pol":"-0.5","std":"0.134"},"temer":{"pos":"v","pol":"-0.583","std":"0.0"},"temeroso":{"pos":"a","pol":"-0.375","std":"0.131"},"temible":{"pos":"a","pol":"-0.417","std":"0.144"},"tener miedo":{"pos":"v","pol":"-0.562","std":"0.0"},"terrible":{"pos":"a","pol":"-0.562","std":"0.133"},"tormento":{"pos":"n","pol":"-0.482","std":"0.061"},"trastorno":{"pos":"n","pol":"-0.375","std":"0.079"},"tribulación":{"pos":"n","pol":"-0.281","std":"0.12"},"triste":{"pos":"a","pol":"-0.509","std":"0.154"},"tristeza":{"pos":"n","pol":"-0.45","std":"0.256"},"vergüenza":{"pos":"n","pol":"-0.375","std":"0.102"},"vilipendio":{"pos":"n","pol":"-0.917","std":"0.0"},"a gusto":{"pos":"a","pol":"0.75","std":"0.0"},"adorador":{"pos":"a","pol":"0.5","std":"0.0"},"afectividad":{"pos":"n","pol":"0.625","std":"0.0"},"afectuosidad":{"pos":"n","pol":"0.375","std":"0.0"},"agradado":{"pos":"a","pol":"0.75","std":"0.0"},"agradar":{"pos":"v","pol":"0.708","std":"0.25"},"alborozar":{"pos":"v","pol":"1.0","std":"0.0"},"alegrarse":{"pos":"v","pol":"1.0","std":"0.0"},"altruista":{"pos":"n","pol":"0.375","std":"0.0"},"amativo":{"pos":"a","pol":"0.25","std":"0.0"},"amigable":{"pos":"a","pol":"0.542","std":"0.125"},"amoroso":{"pos":"a","pol":"0.625","std":"0.088"},"animarse":{"pos":"v","pol":"0.25","std":"0.505"},"aprobado":{"pos":"n","pol":"0.625","std":"0.0"},"aprobativo":{"pos":"a","pol":"1.0","std":"0.0"},"aprobatorio":{"pos":"a","pol":"1.0","std":"0.0"},"arrebatador":{"pos":"n","pol":"-0.375","std":"0.0"},"autocomplacencia":{"pos":"n","pol":"0.625","std":"0.0"},"benefactor":{"pos":"a","pol":"0.938","std":"0.088"},"beneficencia":{"pos":"n","pol":"0.688","std":"0.265"},"beneficioso":{"pos":"a","pol":"0.917","std":"0.072"},"benéfico":{"pos":"a","pol":"0.625","std":"0.354"},"benévolo":{"pos":"a","pol":"0.438","std":"0.088"},"buen humor":{"pos":"n","pol":"0.813","std":"0.177"},"buena voluntad":{"pos":"n","pol":"0.5","std":"0.265"},"cariñosamente":{"pos":"r","pol":"0.375","std":"0.177"},"complacido":{"pos":"a","pol":"0.438","std":"0.088"},"confiadamente":{"pos":"a","pol":"0.5","std":"0.0"},"confort":{"pos":"n","pol":"0.5","std":"0.0"},"contentamiento":{"pos":"n","pol":"0.5","std":"0.0"},"convencido":{"pos":"a","pol":"0.25","std":"0.177"},"dar confianza":{"pos":"v","pol":"0.5","std":"0.0"},"dar ánimos":{"pos":"v","pol":"0.75","std":"0.289"},"desahogado":{"pos":"a","pol":"0.375","std":"0.0"},"devoto":{"pos":"a","pol":"0.5","std":"0.265"},"embebecimiento":{"pos":"n","pol":"0.5","std":"0.0"},"embeleso":{"pos":"n","pol":"0.375","std":"0.072"},"embriagar":{"pos":"v","pol":"0.5","std":"0.619"},"encandilamiento":{"pos":"n","pol":"0.313","std":"0.088"},"esperanzador":{"pos":"a","pol":"1.0","std":"0.0"},"estimulador":{"pos":"a","pol":"0.75","std":"0.0"},"exuberancia":{"pos":"n","pol":"0.625","std":"0.354"},"exultación":{"pos":"n","pol":"0.375","std":"0.0"},"fervoroso":{"pos":"a","pol":"0.75","std":"0.0"},"fraternal":{"pos":"a","pol":"0.375","std":"0.0"},"fraterno":{"pos":"a","pol":"0.375","std":"0.0"},"fácil":{"pos":"a","pol":"0.25","std":"0.12"},"fácilmente":{"pos":"r","pol":"0.25","std":"0.0"},"gratificar":{"pos":"v","pol":"0.417","std":"0.505"},"gratitud":{"pos":"n","pol":"0.417","std":"0.375"},"habilidoso":{"pos":"a","pol":"0.875","std":"0.177"},"hilarante":{"pos":"a","pol":"0.625","std":"0.0"},"hilaridad":{"pos":"n","pol":"0.375","std":"0.0"},"jocundidad":{"pos":"n","pol":"0.5","std":"0.0"},"jovialidad":{"pos":"n","pol":"0.583","std":"0.25"},"lealtad":{"pos":"n","pol":"0.313","std":"0.088"},"motivar":{"pos":"v","pol":"0.25","std":"0.088"},"optimístico":{"pos":"a","pol":"0.875","std":"0.0"},"placidez":{"pos":"n","pol":"0.25","std":"0.088"},"predilección":{"pos":"n","pol":"0.375","std":"0.0"},"regocijador":{"pos":"a","pol":"0.625","std":"0.0"},"risueño":{"pos":"a","pol":"0.833","std":"0.144"},"saciable":{"pos":"a","pol":"0.625","std":"0.0"},"satisfacible":{"pos":"a","pol":"0.625","std":"0.0"},"satisfecho de sí mismo":{"pos":"a","pol":"0.875","std":"0.0"},"suertudo":{"pos":"a","pol":"0.75","std":"0.0"},"tranquilizado":{"pos":"a","pol":"0.5","std":"0.0"},"tranquilizador":{"pos":"a","pol":"0.313","std":"0.088"},"triunfo":{"pos":"n","pol":"0.25","std":"0.0"},"triunfal":{"pos":"a","pol":"0.375","std":"0.354"},"triunfante":{"pos":"a","pol":"0.563","std":"0.0"},"ufano":{"pos":"a","pol":"0.438","std":"0.265"},"venturoso":{"pos":"a","pol":"0.875","std":"0.0"},"victorioso":{"pos":"a","pol":"0.583","std":"0.072"},"vigorizador":{"pos":"a","pol":"0.625","std":"0.177"},"vitorear":{"pos":"v","pol":"0.375","std":"0.0"},"abatido":{"pos":"a","pol":"-0.312","std":"0.088"},"abatimiento":{"pos":"n","pol":"-0.375","std":"0.088"},"abominar":{"pos":"v","pol":"-0.375","std":"0.088"},"aborrecible":{"pos":"a","pol":"-0.25","std":"0.0"},"acosar sexualmente":{"pos":"v","pol":"-0.375","std":"0.0"},"acoso":{"pos":"n","pol":"-0.5","std":"0.0"},"agravado":{"pos":"a","pol":"-0.375","std":"0.177"},"airado":{"pos":"a","pol":"-0.5","std":"0.0"},"alarmado":{"pos":"a","pol":"-0.25","std":"0.0"},"alterado":{"pos":"a","pol":"-0.375","std":"0.144"},"angustiosamente":{"pos":"r","pol":"-0.75","std":"0.0"},"animadversión":{"pos":"n","pol":"-0.5","std":"0.088"},"ansiosamente":{"pos":"r","pol":"-0.5","std":"0.0"},"apenado":{"pos":"a","pol":"-0.458","std":"0.125"},"apenar":{"pos":"v","pol":"-0.281","std":"0.144"},"apenarse":{"pos":"v","pol":"-0.875","std":"0.0"},"apocar":{"pos":"v","pol":"-0.687","std":"0.0"},"aprensivo":{"pos":"n","pol":"-0.25","std":"0.0"},"aprensión":{"pos":"n","pol":"-0.312","std":"0.063"},"arrepentimiento":{"pos":"n","pol":"-0.375","std":"0.0"},"asediar":{"pos":"v","pol":"-0.25","std":"0.072"},"asqueadamente":{"pos":"r","pol":"-0.5","std":"0.0"},"asqueado":{"pos":"a","pol":"-0.25","std":"0.0"},"asurarse":{"pos":"v","pol":"-0.375","std":"0.0"},"ataque de pánico":{"pos":"n","pol":"-0.5","std":"0.0"},"aterrorizado":{"pos":"a","pol":"-0.25","std":"0.0"},"autocompasión":{"pos":"n","pol":"-0.25","std":"0.0"},"avaricioso":{"pos":"a","pol":"-0.583","std":"0.217"},"avaro":{"pos":"a","pol":"-0.5","std":"0.265"},"avergonzante":{"pos":"a","pol":"-0.5","std":"0.0"},"avergonzarse":{"pos":"v","pol":"-0.25","std":"0.0"},"aversión homicida":{"pos":"n","pol":"-0.25","std":"0.0"},"basca":{"pos":"n","pol":"-0.25","std":"0.0"},"beligerancia":{"pos":"n","pol":"-0.312","std":"0.177"},"beligerante":{"pos":"a","pol":"-0.458","std":"0.125"},"berrinche":{"pos":"n","pol":"-0.625","std":"0.088"},"calamitoso":{"pos":"a","pol":"-0.5","std":"0.177"},"cargante":{"pos":"a","pol":"-0.562","std":"0.265"},"causar náuseas":{"pos":"v","pol":"-0.25","std":"0.0"},"celos":{"pos":"n","pol":"-0.25","std":"0.088"},"celosamente":{"pos":"r","pol":"-0.25","std":"0.0"},"codiciar":{"pos":"v","pol":"-0.5","std":"0.0"},"coléricamente":{"pos":"r","pol":"-0.75","std":"0.0"},"compadecer":{"pos":"v","pol":"-0.625","std":"0.0"},"compadecerse":{"pos":"v","pol":"-0.75","std":"0.0"},"compunción":{"pos":"n","pol":"-0.625","std":"0.177"},"concomerse":{"pos":"v","pol":"-0.25","std":"0.0"},"conmiseración":{"pos":"n","pol":"-0.375","std":"0.0"},"consternación":{"pos":"n","pol":"-0.375","std":"0.0"},"consternar":{"pos":"v","pol":"-0.344","std":"0.063"},"contrariado":{"pos":"a","pol":"-0.375","std":"0.088"},"contrición":{"pos":"n","pol":"-0.25","std":"0.0"},"conturbar":{"pos":"v","pol":"-0.25","std":"0.088"},"corazonada":{"pos":"n","pol":"-0.25","std":"0.0"},"cuita":{"pos":"n","pol":"-0.312","std":"0.177"},"cínico":{"pos":"n","pol":"0.313","std":"0.0"},"dar asco":{"pos":"v","pol":"-0.5","std":"0.0"},"dar náuseas":{"pos":"v","pol":"-0.25","std":"0.0"},"de forma asesina":{"pos":"r","pol":"-0.375","std":"0.0"},"decepcionante":{"pos":"a","pol":"-0.375","std":"0.0"},"deficiente":{"pos":"a","pol":"-0.25","std":"0.125"},"defraudado":{"pos":"a","pol":"-0.5","std":"0.0"},"demolidor":{"pos":"a","pol":"-0.375","std":"0.0"},"depre":{"pos":"n","pol":"-0.625","std":"0.0"},"deprimido":{"pos":"a","pol":"-0.5","std":"0.0"},"desacreditado":{"pos":"a","pol":"-0.375","std":"0.177"},"desagradablemente":{"pos":"r","pol":"-0.375","std":"0.0"},"desagradecimiento":{"pos":"n","pol":"-1.0","std":"0.0"},"desanimar":{"pos":"v","pol":"-0.687","std":"0.0"},"desasosegadamente":{"pos":"r","pol":"-0.5","std":"0.0"},"desasosegado":{"pos":"a","pol":"-0.562","std":"0.0"},"desazón":{"pos":"n","pol":"-0.25","std":"0.072"},"descompostura":{"pos":"n","pol":"-0.25","std":"0.0"},"desconsuelo":{"pos":"n","pol":"-0.75","std":"0.0"},"desdeñar":{"pos":"v","pol":"-1.0","std":"0.0"},"desecho":{"pos":"n","pol":"-0.5","std":"0.144"},"desesperadamente":{"pos":"r","pol":"-0.5","std":"0.0"},"desesperanzado":{"pos":"a","pol":"-0.5","std":"0.0"},"desfallecimiento":{"pos":"n","pol":"-0.5","std":"0.177"},"desgarrador":{"pos":"a","pol":"-0.333","std":"0.0"},"deshonrado":{"pos":"a","pol":"-0.75","std":"0.0"},"desmoralizador":{"pos":"a","pol":"-0.312","std":"0.088"},"desmoralizar":{"pos":"v","pol":"-0.375","std":"0.217"},"despavorido":{"pos":"a","pol":"-0.25","std":"0.0"},"despecho":{"pos":"n","pol":"-0.375","std":"0.177"},"destructivo":{"pos":"a","pol":"-0.583","std":"0.072"},"detestación":{"pos":"n","pol":"-0.625","std":"0.0"},"dificultoso":{"pos":"n","pol":"-0.25","std":"0.0"},"disforia":{"pos":"n","pol":"-0.75","std":"0.0"},"disgustoso":{"pos":"a","pol":"-0.75","std":"0.0"},"dolido":{"pos":"a","pol":"-0.625","std":"0.088"},"dolorosamente":{"pos":"r","pol":"-0.375","std":"0.088"},"embarazoso":{"pos":"a","pol":"-0.5","std":"0.0"},"encolerizarse":{"pos":"v","pol":"-0.625","std":"0.0"},"encono":{"pos":"n","pol":"-0.375","std":"0.0"},"enfadarse":{"pos":"v","pol":"-0.75","std":"0.0"},"enfadoso":{"pos":"a","pol":"-1.0","std":"0.0"},"enfurecerse":{"pos":"v","pol":"-0.5","std":"0.0"},"enfurecido":{"pos":"a","pol":"-0.5","std":"0.177"},"enfurecimiento":{"pos":"n","pol":"-0.25","std":"0.0"},"enfurruñarse":{"pos":"v","pol":"-0.375","std":"0.0"},"engorroso":{"pos":"a","pol":"-0.75","std":"0.0"},"enloquecido":{"pos":"a","pol":"-0.75","std":"0.0"},"enojarse":{"pos":"v","pol":"-0.75","std":"0.0"},"enojo":{"pos":"n","pol":"-0.333","std":"0.072"},"entristecerse":{"pos":"v","pol":"-0.708","std":"0.072"},"entristecido":{"pos":"a","pol":"-0.5","std":"0.0"},"espantado":{"pos":"a","pol":"-0.25","std":"0.0"},"estremecedor":{"pos":"a","pol":"-0.562","std":"0.0"},"exacerbar":{"pos":"v","pol":"-0.437","std":"0.265"},"exasperación":{"pos":"n","pol":"-0.312","std":"0.0"},"exasperante":{"pos":"a","pol":"-0.312","std":"0.265"},"execración":{"pos":"n","pol":"-0.417","std":"0.051"},"execrar":{"pos":"v","pol":"-0.375","std":"0.088"},"fastidiado":{"pos":"a","pol":"-0.75","std":"0.0"},"frenéticamente":{"pos":"r","pol":"-0.25","std":"0.088"},"frustrante":{"pos":"a","pol":"-0.5","std":"0.0"},"furibundo":{"pos":"a","pol":"-0.5","std":"0.177"},"furiosamente":{"pos":"r","pol":"-0.437","std":"0.088"},"grima":{"pos":"n","pol":"-0.25","std":"0.0"},"hormiguilla":{"pos":"n","pol":"-0.375","std":"0.0"},"horrendo":{"pos":"a","pol":"-0.625","std":"0.191"},"horrorizado":{"pos":"a","pol":"-0.625","std":"0.088"},"humillante":{"pos":"a","pol":"-0.75","std":"0.0"},"ignominioso":{"pos":"a","pol":"-0.5","std":"0.0"},"impropio":{"pos":"a","pol":"-0.375","std":"0.088"},"indignado":{"pos":"a","pol":"-0.5","std":"0.0"},"indignante":{"pos":"a","pol":"-0.5","std":"0.0"},"ingratitud":{"pos":"n","pol":"-1.0","std":"0.0"},"inhumanidad":{"pos":"n","pol":"-0.333","std":"0.144"},"inmundo":{"pos":"a","pol":"-0.312","std":"0.0"},"inquietarse":{"pos":"v","pol":"-0.333","std":"0.072"},"insidia":{"pos":"n","pol":"-0.437","std":"0.088"},"intimidado":{"pos":"a","pol":"-0.292","std":"0.072"},"iracundia":{"pos":"n","pol":"-0.375","std":"0.0"},"irascibilidad":{"pos":"n","pol":"-0.375","std":"0.0"},"irritado":{"pos":"a","pol":"-0.625","std":"0.072"},"lastimero":{"pos":"a","pol":"-0.75","std":"0.0"},"lóbregamente":{"pos":"r","pol":"-0.375","std":"0.0"},"lóbrego":{"pos":"a","pol":"-0.812","std":"0.0"},"lúgubre":{"pos":"a","pol":"-0.5","std":"0.0"},"lúgubremente":{"pos":"r","pol":"-0.375","std":"0.0"},"macabro":{"pos":"a","pol":"-0.75","std":"0.088"},"mal genio":{"pos":"n","pol":"-0.375","std":"0.088"},"mala leche":{"pos":"n","pol":"-0.312","std":"0.0"},"maleficencia":{"pos":"n","pol":"-0.562","std":"0.088"},"malevolencia":{"pos":"n","pol":"-0.562","std":"0.0"},"malignidad":{"pos":"n","pol":"-0.562","std":"0.088"},"malquerencia":{"pos":"n","pol":"-0.375","std":"0.0"},"maléfico":{"pos":"a","pol":"-0.875","std":"0.0"},"manto lúgubre":{"pos":"n","pol":"-0.25","std":"0.0"},"misantropía":{"pos":"n","pol":"-0.437","std":"0.088"},"misantrópico":{"pos":"a","pol":"-1.0","std":"0.0"},"misoginia":{"pos":"n","pol":"-0.625","std":"0.0"},"misántropo":{"pos":"a","pol":"-0.75","std":"0.0"},"misógino":{"pos":"a","pol":"-0.687","std":"0.177"},"mohíno":{"pos":"a","pol":"-0.75","std":"0.0"},"molestar repetidamente":{"pos":"v","pol":"-0.375","std":"0.0"},"mortificado":{"pos":"a","pol":"-0.25","std":"0.0"},"mortificante":{"pos":"a","pol":"-0.5","std":"0.088"},"mortificar":{"pos":"v","pol":"-0.562","std":"0.063"},"murria":{"pos":"n","pol":"-0.375","std":"0.0"},"mísero":{"pos":"a","pol":"-0.25","std":"0.188"},"nauseoso":{"pos":"a","pol":"-0.25","std":"0.0"},"oprobioso":{"pos":"a","pol":"-0.5","std":"0.0"},"pataleta":{"pos":"n","pol":"-0.625","std":"0.0"},"pavoroso":{"pos":"a","pol":"-0.75","std":"0.0"},"perra":{"pos":"n","pol":"-0.25","std":"0.072"},"perturbador":{"pos":"a","pol":"-0.625","std":"0.088"},"petrificado":{"pos":"a","pol":"-0.25","std":"0.0"},"picado":{"pos":"a","pol":"-0.333","std":"0.072"},"pie de guerra":{"pos":"n","pol":"-0.5","std":"0.0"},"preocupado":{"pos":"a","pol":"-0.292","std":"0.191"},"provocado":{"pos":"a","pol":"-0.75","std":"0.0"},"quejumbroso":{"pos":"a","pol":"-0.625","std":"0.088"},"rabieta":{"pos":"n","pol":"-0.625","std":"0.088"},"rabioso":{"pos":"a","pol":"-0.292","std":"0.191"},"reconcomerse":{"pos":"v","pol":"-0.25","std":"0.0"},"remordimiento":{"pos":"n","pol":"-0.333","std":"0.072"},"repugnar":{"pos":"v","pol":"-0.375","std":"0.072"},"repulsión":{"pos":"n","pol":"-0.458","std":"0.072"},"resentido":{"pos":"a","pol":"-0.458","std":"0.125"},"resignarse":{"pos":"v","pol":"-0.25","std":"0.0"},"retraído":{"pos":"a","pol":"-0.375","std":"0.0"},"sed de venganza":{"pos":"n","pol":"-0.25","std":"0.0"},"sentimiento de culpa":{"pos":"n","pol":"-1.0","std":"0.0"},"sin alegría":{"pos":"a","pol":"-0.375","std":"0.0"},"sulfurado":{"pos":"a","pol":"-0.312","std":"0.088"},"terrorífico":{"pos":"a","pol":"-0.625","std":"0.0"},"transtornado":{"pos":"a","pol":"-0.75","std":"0.0"},"trastorno de ansiedad":{"pos":"n","pol":"-0.625","std":"0.0"},"turbado":{"pos":"a","pol":"-0.5","std":"0.177"},"ultrajante":{"pos":"a","pol":"-0.5","std":"0.354"},"vejación":{"pos":"n","pol":"-0.542","std":"0.072"},"vejar":{"pos":"v","pol":"-0.312","std":"0.088"},"verecundia":{"pos":"n","pol":"-0.25","std":"0.0"},"verraquera":{"pos":"n","pol":"-0.625","std":"0.0"},"acaudalar":{"pos":"v","pol":"1.0","std":"0.0"},"acogedor":{"pos":"a","pol":"0.775","std":"0.112"},"afable":{"pos":"a","pol":"1.0","std":"0.0"},"afortunadamente":{"pos":"r","pol":"0.875","std":"0.0"},"alabar":{"pos":"v","pol":"1.0","std":"0.0"},"amenidad":{"pos":"n","pol":"1.0","std":"0.0"},"apreciado":{"pos":"a","pol":"0.875","std":"0.125"},"armonioso":{"pos":"a","pol":"0.792","std":"0.144"},"bendito":{"pos":"a","pol":"0.792","std":"0.191"},"bien parecido":{"pos":"a","pol":"0.875","std":"0.0"},"bonachón":{"pos":"a","pol":"1.0","std":"0.0"},"buen carácter":{"pos":"n","pol":"1.0","std":"0.0"},"buen estado físico":{"pos":"n","pol":"0.875","std":"0.0"},"buen tipo":{"pos":"n","pol":"0.875","std":"0.0"},"buena forma":{"pos":"n","pol":"0.875","std":"0.0"},"buena forma física":{"pos":"n","pol":"0.875","std":"0.0"},"citable":{"pos":"a","pol":"0.813","std":"0.265"},"clamoroso":{"pos":"a","pol":"1.0","std":"0.0"},"clavado":{"pos":"a","pol":"0.875","std":"0.0"},"conmovido":{"pos":"a","pol":"0.875","std":"0.0"},"cooperativo":{"pos":"a","pol":"0.875","std":"0.0"},"célebre":{"pos":"a","pol":"1.0","std":"0.0"},"dar aliento":{"pos":"v","pol":"1.0","std":"0.0"},"deleitoso":{"pos":"a","pol":"0.875","std":"0.0"},"destacable":{"pos":"a","pol":"1.0","std":"0.0"},"dotado":{"pos":"a","pol":"0.875","std":"0.0"},"en forma":{"pos":"a","pol":"0.875","std":"0.0"},"encomiable":{"pos":"a","pol":"1.0","std":"0.0"},"esplendoroso":{"pos":"a","pol":"1.0","std":"0.0"},"espléndido":{"pos":"a","pol":"0.771","std":"0.205"},"exculpar":{"pos":"v","pol":"0.875","std":"0.0"},"famoso":{"pos":"a","pol":"1.0","std":"0.0"},"favorecedor":{"pos":"a","pol":"0.875","std":"0.0"},"filántropo":{"pos":"n","pol":"0.375","std":"0.0"},"finísimo":{"pos":"a","pol":"0.875","std":"0.0"},"glorioso":{"pos":"a","pol":"0.833","std":"0.191"},"harmonioso":{"pos":"a","pol":"0.875","std":"0.0"},"hermoso":{"pos":"a","pol":"0.792","std":"0.172"},"heroicidad":{"pos":"n","pol":"1.0","std":"0.0"},"heroísmo":{"pos":"n","pol":"1.0","std":"0.0"},"honorabilidad":{"pos":"n","pol":"0.813","std":"0.265"},"honorado":{"pos":"a","pol":"0.875","std":"0.0"},"idealizado":{"pos":"a","pol":"0.875","std":"0.0"},"juicioso":{"pos":"a","pol":"0.833","std":"0.217"},"laudable":{"pos":"a","pol":"1.0","std":"0.0"},"lindo":{"pos":"a","pol":"0.875","std":"0.177"},"loable":{"pos":"a","pol":"1.0","std":"0.0"},"magistral":{"pos":"a","pol":"0.813","std":"0.265"},"manitas":{"pos":"a","pol":"0.875","std":"0.0"},"medrar":{"pos":"v","pol":"0.813","std":"0.265"},"merecedor":{"pos":"a","pol":"0.813","std":"0.265"},"meritorio":{"pos":"n","pol":"0.25","std":"0.0"},"modoso":{"pos":"a","pol":"0.875","std":"0.0"},"modélico":{"pos":"a","pol":"0.875","std":"0.0"},"notable":{"pos":"a","pol":"0.775","std":"0.137"},"pacífico":{"pos":"a","pol":"0.781","std":"0.063"},"perfectamente":{"pos":"r","pol":"0.875","std":"0.0"},"preferente":{"pos":"a","pol":"0.875","std":"0.0"},"presentable":{"pos":"a","pol":"0.875","std":"0.0"},"prosperar":{"pos":"v","pol":"0.813","std":"0.265"},"prosperidad":{"pos":"n","pol":"1.0","std":"0.0"},"punto fuerte":{"pos":"n","pol":"0.875","std":"0.0"},"querúbico":{"pos":"a","pol":"1.0","std":"0.0"},"respetabilidad":{"pos":"n","pol":"0.875","std":"0.0"},"respetado":{"pos":"a","pol":"0.875","std":"0.0"},"respetar":{"pos":"v","pol":"0.875","std":"0.0"},"rubicundo":{"pos":"a","pol":"0.813","std":"0.088"},"salvamento":{"pos":"n","pol":"1.0","std":"0.0"},"talentoso":{"pos":"a","pol":"0.875","std":"0.0"},"ventajoso":{"pos":"a","pol":"1.0","std":"0.0"},"óptimo":{"pos":"a","pol":"1.0","std":"0.0"},"adinamia":{"pos":"n","pol":"-0.875","std":"0.0"},"adulterino":{"pos":"a","pol":"-0.375","std":"0.0"},"agarrado":{"pos":"a","pol":"-0.875","std":"0.0"},"aguas movedizas":{"pos":"n","pol":"-0.875","std":"0.0"},"amenazador":{"pos":"a","pol":"-1.0","std":"0.0"},"ampollar":{"pos":"v","pol":"-0.875","std":"0.0"},"angustiar":{"pos":"v","pol":"-1.0","std":"0.0"},"antiestético":{"pos":"a","pol":"-1.0","std":"0.0"},"apestoso":{"pos":"a","pol":"-0.917","std":"0.072"},"asesino":{"pos":"n","pol":"-0.875","std":"0.0"},"asimetría":{"pos":"n","pol":"-0.875","std":"0.0"},"ataque de nervios":{"pos":"n","pol":"-0.875","std":"0.0"},"atrofia":{"pos":"n","pol":"-1.0","std":"0.0"},"autodestructivo":{"pos":"a","pol":"-0.875","std":"0.0"},"averno":{"pos":"n","pol":"-0.875","std":"0.0"},"calumniador":{"pos":"n","pol":"-0.25","std":"0.0"},"calumnioso":{"pos":"a","pol":"-1.0","std":"0.0"},"censurable":{"pos":"a","pol":"-0.917","std":"0.0"},"cerrilismo":{"pos":"n","pol":"-0.875","std":"0.0"},"ceño":{"pos":"n","pol":"-0.875","std":"0.0"},"ceño fruncido":{"pos":"n","pol":"-0.875","std":"0.0"},"cicatero":{"pos":"a","pol":"-1.0","std":"0.0"},"colapso nervioso":{"pos":"n","pol":"-0.875","std":"0.0"},"condenable":{"pos":"a","pol":"-1.0","std":"0.0"},"condenatorio":{"pos":"a","pol":"-1.0","std":"0.0"},"condolencia":{"pos":"n","pol":"-0.875","std":"0.0"},"condolencias":{"pos":"n","pol":"-0.875","std":"0.0"},"contrabandista":{"pos":"n","pol":"-1.0","std":"0.0"},"crisis nerviosa":{"pos":"n","pol":"-0.875","std":"0.0"},"criticable":{"pos":"a","pol":"-1.0","std":"0.0"},"de forma impersonal":{"pos":"r","pol":"-1.0","std":"0.0"},"declarar culpable":{"pos":"v","pol":"-0.875","std":"0.0"},"denigrador":{"pos":"a","pol":"-1.0","std":"0.0"},"denigratorio":{"pos":"a","pol":"-1.0","std":"0.0"},"depresión nerviosa":{"pos":"n","pol":"-0.875","std":"0.0"},"desacreditador":{"pos":"a","pol":"-1.0","std":"0.0"},"desamparar":{"pos":"v","pol":"-1.0","std":"0.0"},"desaprovechamiento":{"pos":"n","pol":"-1.0","std":"0.0"},"desarmonía":{"pos":"n","pol":"-0.875","std":"0.0"},"desasistir":{"pos":"v","pol":"-1.0","std":"0.0"},"desconocer":{"pos":"v","pol":"-1.0","std":"0.0"},"descorazonar":{"pos":"v","pol":"-1.0","std":"0.0"},"desequilibrio":{"pos":"n","pol":"-0.812","std":"0.0"},"desesperanzar":{"pos":"v","pol":"-1.0","std":"0.0"},"desgraciados":{"pos":"r","pol":"-1.0","std":"0.0"},"deshonor":{"pos":"n","pol":"-0.875","std":"0.088"},"desprestigiador":{"pos":"a","pol":"-1.0","std":"0.0"},"desventajoso":{"pos":"a","pol":"-0.875","std":"0.0"},"deteriorable":{"pos":"a","pol":"-0.875","std":"0.0"},"difamador":{"pos":"a","pol":"-1.0","std":"0.0"},"difamatorio":{"pos":"a","pol":"-1.0","std":"0.0"},"disconformidad":{"pos":"n","pol":"-0.875","std":"0.0"},"discontinuidad":{"pos":"n","pol":"-0.875","std":"0.0"},"disimulador":{"pos":"a","pol":"-1.0","std":"0.0"},"envilecimiento":{"pos":"n","pol":"-0.875","std":"0.0"},"escrofuloso":{"pos":"a","pol":"-1.0","std":"0.0"},"espurio":{"pos":"n","pol":"-1.0","std":"0.0"},"excoriación":{"pos":"n","pol":"-0.875","std":"0.0"},"expensas":{"pos":"n","pol":"-1.0","std":"0.0"},"falsario":{"pos":"n","pol":"-1.0","std":"0.0"},"faltar al respeto":{"pos":"v","pol":"-0.875","std":"0.0"},"fechoría":{"pos":"n","pol":"-1.0","std":"0.0"},"feo":{"pos":"a","pol":"-0.833","std":"0.144"},"fingir":{"pos":"v","pol":"-0.792","std":"0.0"},"frunción":{"pos":"n","pol":"-0.875","std":"0.0"},"fríamente":{"pos":"r","pol":"-0.875","std":"0.0"},"fétido":{"pos":"a","pol":"-0.875","std":"0.0"},"fóbico":{"pos":"a","pol":"-1.0","std":"0.0"},"garrapo":{"pos":"a","pol":"-1.0","std":"0.0"},"guindar":{"pos":"v","pol":"-0.875","std":"0.0"},"hijo de ganancia":{"pos":"n","pol":"-1.0","std":"0.0"},"hijo ilegítimo":{"pos":"n","pol":"-1.0","std":"0.0"},"hipocondríaco":{"pos":"n","pol":"-0.375","std":"0.0"},"homicida":{"pos":"n","pol":"-1.0","std":"0.0"},"huraño":{"pos":"a","pol":"-0.792","std":"0.144"},"idigno de":{"pos":"a","pol":"-1.0","std":"0.0"},"impasable":{"pos":"a","pol":"-1.0","std":"0.0"},"impersonalmente":{"pos":"r","pol":"-1.0","std":"0.0"},"inanidad":{"pos":"n","pol":"-0.875","std":"0.0"},"incompetencia":{"pos":"n","pol":"-0.844","std":"0.0"},"inconstructivo":{"pos":"a","pol":"-1.0","std":"0.0"},"incriminable":{"pos":"a","pol":"-1.0","std":"0.0"},"incultura":{"pos":"n","pol":"-0.875","std":"0.0"},"indigestible":{"pos":"a","pol":"-0.875","std":"0.0"},"ineficacia":{"pos":"n","pol":"-0.812","std":"0.0"},"ineficiencia":{"pos":"n","pol":"-0.875","std":"0.0"},"inelasticidad":{"pos":"n","pol":"-0.875","std":"0.0"},"ineligible":{"pos":"a","pol":"-0.875","std":"0.0"},"infierno":{"pos":"n","pol":"-0.8","std":"0.0"},"infranqueable":{"pos":"a","pol":"-0.937","std":"0.0"},"inhabilidad":{"pos":"n","pol":"-0.875","std":"0.0"},"injurioso":{"pos":"a","pol":"-1.0","std":"0.0"},"inobservancia":{"pos":"n","pol":"-0.812","std":"0.0"},"insubstancialidad":{"pos":"n","pol":"-0.875","std":"0.0"},"intransitable":{"pos":"a","pol":"-1.0","std":"0.0"},"irrepresentable":{"pos":"a","pol":"-0.875","std":"0.0"},"kitsch":{"pos":"n","pol":"-0.375","std":"0.0"},"lagrimar":{"pos":"v","pol":"-0.875","std":"0.0"},"lerdo":{"pos":"a","pol":"-0.812","std":"0.0"},"llamada de atención":{"pos":"n","pol":"-0.875","std":"0.0"},"mal carácter":{"pos":"n","pol":"-1.0","std":"0.0"},"malhumorado":{"pos":"a","pol":"-0.833","std":"0.072"},"maloliente":{"pos":"a","pol":"-1.0","std":"0.0"},"maniacodepresivo":{"pos":"n","pol":"-0.5","std":"0.0"},"matar violentamente":{"pos":"v","pol":"-1.0","std":"0.0"},"matutero":{"pos":"n","pol":"-1.0","std":"0.0"},"mentiroso":{"pos":"a","pol":"-0.25","std":"0.088"},"metedor":{"pos":"n","pol":"-1.0","std":"0.0"},"no cualificado":{"pos":"a","pol":"-0.875","std":"0.0"},"noluntad":{"pos":"n","pol":"-1.0","std":"0.0"},"orco":{"pos":"n","pol":"-0.875","std":"0.0"},"padecimiento":{"pos":"n","pol":"-1.0","std":"0.0"},"parásitos":{"pos":"n","pol":"-0.875","std":"0.0"},"perturbación violenta":{"pos":"n","pol":"-0.875","std":"0.0"},"pestilente":{"pos":"a","pol":"-1.0","std":"0.0"},"pillado":{"pos":"a","pol":"-0.875","std":"0.0"},"poco amable":{"pos":"a","pol":"-0.812","std":"0.0"},"poco atento":{"pos":"a","pol":"-0.875","std":"0.0"},"poco gentil":{"pos":"a","pol":"-0.875","std":"0.0"},"poco servicial":{"pos":"a","pol":"-0.875","std":"0.0"},"poner los cuernos":{"pos":"v","pol":"-0.875","std":"0.0"},"protestatario":{"pos":"a","pol":"-1.0","std":"0.0"},"protestativo":{"pos":"a","pol":"-1.0","std":"0.0"},"psicopatológico":{"pos":"a","pol":"-0.875","std":"0.0"},"psicopático":{"pos":"a","pol":"-0.875","std":"0.0"},"punto flaco":{"pos":"n","pol":"-1.0","std":"0.0"},"putada":{"pos":"n","pol":"-0.875","std":"0.0"},"putería":{"pos":"n","pol":"-1.0","std":"0.0"},"putrescible":{"pos":"a","pol":"-0.875","std":"0.0"},"pésame":{"pos":"n","pol":"-0.875","std":"0.0"},"quitar de enmedio":{"pos":"v","pol":"-1.0","std":"0.0"},"ramplonería":{"pos":"n","pol":"-0.875","std":"0.0"},"rata":{"pos":"a","pol":"-0.875","std":"0.0"},"recriminable":{"pos":"a","pol":"-1.0","std":"0.0"},"regañón":{"pos":"a","pol":"-1.0","std":"0.0"},"reino de las tinieblas":{"pos":"n","pol":"-0.875","std":"0.0"},"reprensible":{"pos":"a","pol":"-1.0","std":"0.0"},"reprochable":{"pos":"a","pol":"-1.0","std":"0.0"},"retraso mental":{"pos":"n","pol":"-0.875","std":"0.0"},"roncería":{"pos":"n","pol":"-1.0","std":"0.0"},"sacar de quicio":{"pos":"v","pol":"-0.812","std":"0.0"},"saqueado":{"pos":"a","pol":"-0.875","std":"0.0"},"ser infiel":{"pos":"v","pol":"-0.875","std":"0.0"},"sin amor":{"pos":"a","pol":"-1.0","std":"0.0"},"suicida":{"pos":"a","pol":"-0.875","std":"0.0"},"tacaño":{"pos":"a","pol":"-0.875","std":"0.0"},"tenebroso":{"pos":"a","pol":"-1.0","std":"0.0"},"tontamente":{"pos":"r","pol":"-0.875","std":"0.0"},"torcedor":{"pos":"n","pol":"-1.0","std":"0.0"},"veleidoso":{"pos":"a","pol":"-1.0","std":"0.0"},"abordable":{"pos":"a","pol":"0.75","std":"0.0"},"adecuada":{"pos":"a","pol":"0.75","std":"0.0"},"adoptable":{"pos":"a","pol":"0.75","std":"0.0"},"afirmativo":{"pos":"n","pol":"0.5","std":"0.0"},"alcista":{"pos":"n","pol":"0.5","std":"0.0"},"ameno":{"pos":"a","pol":"0.75","std":"0.0"},"apegado":{"pos":"a","pol":"0.75","std":"0.0"},"arrojado":{"pos":"a","pol":"0.75","std":"0.0"},"beato":{"pos":"a","pol":"0.75","std":"0.0"},"bendecido":{"pos":"a","pol":"0.75","std":"0.0"},"beneficiarse":{"pos":"v","pol":"0.75","std":"0.0"},"bien hecho":{"pos":"a","pol":"0.75","std":"0.0"},"bienaventuranza":{"pos":"n","pol":"0.75","std":"0.0"},"bienvenido":{"pos":"a","pol":"0.75","std":"0.0"},"bizarro":{"pos":"a","pol":"0.75","std":"0.0"},"buena disposición":{"pos":"n","pol":"0.75","std":"0.0"},"canjeable":{"pos":"a","pol":"0.75","std":"0.0"},"carismático":{"pos":"a","pol":"0.75","std":"0.0"},"chistoso":{"pos":"a","pol":"0.75","std":"0.125"},"cognoscible":{"pos":"a","pol":"0.75","std":"0.0"},"confidente":{"pos":"a","pol":"0.75","std":"0.0"},"confirmador":{"pos":"a","pol":"0.75","std":"0.0"},"confirmante":{"pos":"a","pol":"0.75","std":"0.0"},"congruencia":{"pos":"n","pol":"0.75","std":"0.0"},"conocible":{"pos":"a","pol":"0.75","std":"0.0"},"constructivo":{"pos":"a","pol":"0.75","std":"0.0"},"corroborante":{"pos":"a","pol":"0.75","std":"0.0"},"curativo":{"pos":"n","pol":"0.625","std":"0.0"},"dar permiso":{"pos":"v","pol":"0.75","std":"0.0"},"dar ventaja":{"pos":"v","pol":"0.75","std":"0.0"},"deseable":{"pos":"a","pol":"0.75","std":"0.0"},"dicha":{"pos":"n","pol":"0.75","std":"0.0"},"elegible":{"pos":"a","pol":"0.75","std":"0.0"},"enmendable":{"pos":"a","pol":"0.75","std":"0.0"},"entrañable":{"pos":"a","pol":"0.75","std":"0.0"},"escalable":{"pos":"a","pol":"0.75","std":"0.0"},"estandarizado":{"pos":"a","pol":"0.75","std":"0.0"},"estimado":{"pos":"a","pol":"0.75","std":"0.25"},"exhuberancia":{"pos":"n","pol":"0.75","std":"0.0"},"exitoso":{"pos":"a","pol":"0.75","std":"0.0"},"experimentado":{"pos":"a","pol":"0.75","std":"0.0"},"fastuoso":{"pos":"a","pol":"0.75","std":"0.354"},"fehaciente":{"pos":"a","pol":"0.75","std":"0.0"},"fidedigno":{"pos":"a","pol":"0.75","std":"0.0"},"fotogénico":{"pos":"a","pol":"0.75","std":"0.0"},"garboso":{"pos":"a","pol":"0.75","std":"0.265"},"grato":{"pos":"a","pol":"0.75","std":"0.143"},"guapo":{"pos":"a","pol":"0.75","std":"0.088"},"halagüeño":{"pos":"a","pol":"0.75","std":"0.0"},"harmonizado":{"pos":"a","pol":"0.75","std":"0.0"},"hedonístico":{"pos":"a","pol":"0.75","std":"0.0"},"hedónico":{"pos":"a","pol":"0.75","std":"0.0"},"honor":{"pos":"n","pol":"0.75","std":"0.25"},"honorablemente":{"pos":"r","pol":"0.75","std":"0.0"},"honorífico":{"pos":"a","pol":"0.75","std":"0.0"},"hospitalario":{"pos":"a","pol":"0.75","std":"0.0"},"idoneidad":{"pos":"n","pol":"0.75","std":"0.0"},"la verdad":{"pos":"n","pol":"0.75","std":"0.0"},"laudatorio":{"pos":"a","pol":"0.75","std":"0.0"},"mejoría":{"pos":"n","pol":"0.75","std":"0.354"},"obtener frutos":{"pos":"v","pol":"0.75","std":"0.0"},"panegírico":{"pos":"n","pol":"0.375","std":"0.0"},"perito":{"pos":"n","pol":"0.375","std":"0.0"},"plasticidad":{"pos":"n","pol":"0.75","std":"0.0"},"polifacético":{"pos":"a","pol":"0.75","std":"0.0"},"pujante":{"pos":"a","pol":"0.75","std":"0.0"},"realzado":{"pos":"a","pol":"0.75","std":"0.0"},"reconstructor":{"pos":"a","pol":"0.75","std":"0.0"},"reformable":{"pos":"a","pol":"0.75","std":"0.0"},"remediador":{"pos":"a","pol":"0.75","std":"0.0"},"reír":{"pos":"v","pol":"0.75","std":"0.0"},"sacar provecho":{"pos":"v","pol":"0.75","std":"0.0"},"sacar ventaja":{"pos":"v","pol":"0.75","std":"0.0"},"saciado":{"pos":"a","pol":"0.75","std":"0.0"},"salubre":{"pos":"a","pol":"0.75","std":"0.088"},"sanador":{"pos":"a","pol":"0.75","std":"0.0"},"sublime":{"pos":"a","pol":"0.75","std":"0.0"},"valedero":{"pos":"a","pol":"0.75","std":"0.0"},"verificador":{"pos":"a","pol":"0.75","std":"0.0"},"veterano":{"pos":"a","pol":"0.75","std":"0.0"},"virtuosillo":{"pos":"a","pol":"0.75","std":"0.0"},"virtuoso":{"pos":"a","pol":"0.75","std":"0.0"},"voluntariamente":{"pos":"r","pol":"0.75","std":"0.0"},"a toda prisa":{"pos":"r","pol":"-0.75","std":"0.0"},"a todo correr":{"pos":"r","pol":"-0.75","std":"0.0"},"abúlico":{"pos":"a","pol":"-0.75","std":"0.0"},"acongojado":{"pos":"a","pol":"-0.75","std":"0.0"},"agonizar":{"pos":"v","pol":"-0.75","std":"0.0"},"agónico":{"pos":"a","pol":"-0.75","std":"0.0"},"ahuecamiento":{"pos":"n","pol":"-0.75","std":"0.0"},"algofóbico":{"pos":"a","pol":"-0.75","std":"0.0"},"amencia":{"pos":"n","pol":"-0.75","std":"0.0"},"antipatriótico":{"pos":"a","pol":"-0.75","std":"0.0"},"aparatosidad":{"pos":"n","pol":"-0.75","std":"0.0"},"asesinato público":{"pos":"n","pol":"-0.75","std":"0.0"},"ataque sorpresa":{"pos":"n","pol":"-0.75","std":"0.0"},"autoincriminación":{"pos":"n","pol":"-0.75","std":"0.0"},"autoinculpación":{"pos":"n","pol":"-0.75","std":"0.0"},"autotormento":{"pos":"n","pol":"-0.75","std":"0.0"},"autotortura":{"pos":"n","pol":"-0.75","std":"0.0"},"aventurado":{"pos":"a","pol":"-0.75","std":"0.0"},"bastedad":{"pos":"n","pol":"-0.75","std":"0.0"},"bilioso":{"pos":"a","pol":"-0.75","std":"0.0"},"burlón":{"pos":"a","pol":"-0.75","std":"0.0"},"canallada":{"pos":"n","pol":"-0.75","std":"0.0"},"canallesco":{"pos":"a","pol":"-0.75","std":"0.088"},"caradura":{"pos":"a","pol":"-0.75","std":"0.0"},"carcomido":{"pos":"a","pol":"-0.75","std":"0.0"},"causar un trauma":{"pos":"v","pol":"-0.75","std":"0.0"},"ceguedad":{"pos":"n","pol":"-0.75","std":"0.0"},"ceguera":{"pos":"n","pol":"-0.75","std":"0.0"},"ceñudo":{"pos":"a","pol":"-0.75","std":"0.0"},"contumelia":{"pos":"n","pol":"-0.75","std":"0.0"},"cretino":{"pos":"a","pol":"-0.75","std":"0.177"},"culpa":{"pos":"n","pol":"-0.75","std":"0.0"},"debilidad mental":{"pos":"n","pol":"-0.75","std":"0.0"},"degradarse":{"pos":"v","pol":"-0.75","std":"0.0"},"denunciable":{"pos":"a","pol":"-0.75","std":"0.0"},"desafortunadamente":{"pos":"r","pol":"-0.75","std":"0.0"},"desesclarecedor":{"pos":"a","pol":"-0.75","std":"0.0"},"deshonrarse":{"pos":"v","pol":"-0.75","std":"0.0"},"deshonrosamente":{"pos":"r","pol":"-0.75","std":"0.0"},"despreciado":{"pos":"a","pol":"-0.75","std":"0.0"},"destructividad":{"pos":"n","pol":"-0.75","std":"0.0"},"desvancerse":{"pos":"v","pol":"-0.75","std":"0.0"},"detestado":{"pos":"a","pol":"-0.75","std":"0.0"},"dispéptico":{"pos":"a","pol":"-0.75","std":"0.0"},"echar una reprimenda":{"pos":"v","pol":"-0.75","std":"0.0"},"encontrón":{"pos":"n","pol":"-0.75","std":"0.0"},"encuentro violento":{"pos":"n","pol":"-0.75","std":"0.0"},"engravecer":{"pos":"v","pol":"-0.75","std":"0.0"},"envanecimiento":{"pos":"n","pol":"-0.75","std":"0.0"},"espúreo":{"pos":"a","pol":"-0.75","std":"0.0"},"esquizofrénico":{"pos":"a","pol":"-0.25","std":"0.125"},"falta de amabilidad":{"pos":"n","pol":"-0.75","std":"0.0"},"fraudulento":{"pos":"a","pol":"-0.75","std":"0.0"},"fruncir el entrecejo":{"pos":"v","pol":"-0.75","std":"0.0"},"gafe":{"pos":"n","pol":"0.375","std":"0.0"},"golpiza":{"pos":"n","pol":"-0.75","std":"0.0"},"hedor":{"pos":"n","pol":"-0.75","std":"0.0"},"hipocondría":{"pos":"n","pol":"-0.75","std":"0.0"},"hosco":{"pos":"a","pol":"-0.75","std":"0.125"},"idiota":{"pos":"a","pol":"-0.75","std":"0.12"},"imperfectamente":{"pos":"r","pol":"-0.75","std":"0.0"},"impetuoso":{"pos":"a","pol":"-0.75","std":"0.0"},"impopularidad":{"pos":"n","pol":"-0.75","std":"0.0"},"imprevisión":{"pos":"n","pol":"-0.75","std":"0.0"},"imprevisor":{"pos":"a","pol":"-0.75","std":"0.0"},"impropicio":{"pos":"a","pol":"-0.75","std":"0.0"},"inamovible":{"pos":"a","pol":"-0.75","std":"0.0"},"incombinable":{"pos":"a","pol":"-0.75","std":"0.0"},"inconsolable":{"pos":"a","pol":"-0.75","std":"0.0"},"indigerible":{"pos":"a","pol":"-0.75","std":"0.0"},"indigno":{"pos":"a","pol":"-0.75","std":"0.125"},"ineficiente":{"pos":"a","pol":"-0.75","std":"0.088"},"inexpiable":{"pos":"a","pol":"-0.75","std":"0.0"},"inextricable":{"pos":"a","pol":"-0.75","std":"0.0"},"infligir":{"pos":"v","pol":"-0.75","std":"0.0"},"inflingir":{"pos":"v","pol":"-0.75","std":"0.0"},"ingrato":{"pos":"a","pol":"-0.75","std":"0.125"},"inhospitalidad":{"pos":"n","pol":"-0.75","std":"0.0"},"insolvencia":{"pos":"n","pol":"-0.75","std":"0.0"},"insultante":{"pos":"a","pol":"-0.75","std":"0.177"},"invidencia":{"pos":"n","pol":"-0.75","std":"0.0"},"irreversible":{"pos":"a","pol":"-0.75","std":"0.0"},"linchar":{"pos":"v","pol":"-0.75","std":"0.0"},"lividez":{"pos":"n","pol":"-0.75","std":"0.0"},"luto":{"pos":"n","pol":"-0.75","std":"0.0"},"magnicidio":{"pos":"n","pol":"-0.75","std":"0.0"},"malparir":{"pos":"v","pol":"-0.75","std":"0.0"},"mefítico":{"pos":"a","pol":"-0.75","std":"0.0"},"misofóbico":{"pos":"a","pol":"-0.75","std":"0.0"},"nido de arañas":{"pos":"n","pol":"-0.75","std":"0.0"},"no autorizado":{"pos":"a","pol":"-0.75","std":"0.0"},"no cognoscible":{"pos":"a","pol":"-0.75","std":"0.0"},"no edificante":{"pos":"a","pol":"-0.75","std":"0.0"},"odiado":{"pos":"a","pol":"-0.75","std":"0.0"},"paroxismo":{"pos":"n","pol":"-0.75","std":"0.0"},"pasividad":{"pos":"n","pol":"-0.75","std":"0.0"},"pestazo":{"pos":"n","pol":"-0.75","std":"0.0"},"pleito":{"pos":"n","pol":"-0.75","std":"0.0"},"poco acogedor":{"pos":"a","pol":"-0.75","std":"0.0"},"poco creativa":{"pos":"a","pol":"-0.75","std":"0.0"},"poco creativo":{"pos":"a","pol":"-0.75","std":"0.0"},"poco favorable":{"pos":"a","pol":"-0.75","std":"0.0"},"poco fiable":{"pos":"a","pol":"-0.75","std":"0.0"},"poco pacífico":{"pos":"a","pol":"-0.75","std":"0.0"},"poner verde":{"pos":"v","pol":"-0.75","std":"0.0"},"profanado":{"pos":"a","pol":"-0.75","std":"0.088"},"pérdida auditiva":{"pos":"n","pol":"-0.75","std":"0.0"},"qué lástima":{"pos":"r","pol":"-0.75","std":"0.0"},"regañar":{"pos":"v","pol":"-0.75","std":"0.0"},"reprender a gritos":{"pos":"v","pol":"-0.75","std":"0.0"},"satanofobia":{"pos":"n","pol":"-0.75","std":"0.0"},"sin tratamiento":{"pos":"a","pol":"-0.75","std":"0.0"},"sin tratar":{"pos":"a","pol":"-0.75","std":"0.0"},"sordera":{"pos":"n","pol":"-0.75","std":"0.0"},"sucedáneo":{"pos":"a","pol":"-0.75","std":"0.0"},"sufrir un colapso nervioso":{"pos":"v","pol":"-0.75","std":"0.0"},"sufrir una crisis nerviosa":{"pos":"v","pol":"-0.75","std":"0.0"},"tener unas palabras":{"pos":"v","pol":"-0.75","std":"0.0"},"testaduro":{"pos":"a","pol":"-0.75","std":"0.0"},"tirón de orejas":{"pos":"n","pol":"-0.75","std":"0.0"},"tramposo":{"pos":"a","pol":"-0.75","std":"0.0"},"traumatizar":{"pos":"v","pol":"-0.75","std":"0.0"},"tufillo":{"pos":"n","pol":"-0.75","std":"0.0"},"tufo":{"pos":"n","pol":"-0.75","std":"0.0"},"vermiculado":{"pos":"a","pol":"-0.75","std":"0.0"},"verminoso":{"pos":"a","pol":"-0.75","std":"0.0"},"xenófobo":{"pos":"a","pol":"-0.75","std":"0.0"},"ñoño":{"pos":"n","pol":"-0.75","std":"0.0"},"abundante":{"pos":"a","pol":"0.589","std":"0.094"},"accesible":{"pos":"a","pol":"0.607","std":"0.125"},"aceptabilidad":{"pos":"n","pol":"0.688","std":"0.088"},"aceptable":{"pos":"a","pol":"0.688","std":"0.112"},"acomodado":{"pos":"a","pol":"0.563","std":"0.088"},"acompasado":{"pos":"a","pol":"0.625","std":"0.0"},"aconsejable":{"pos":"a","pol":"0.625","std":"0.0"},"acreditado":{"pos":"a","pol":"0.667","std":"0.315"},"adecuado":{"pos":"a","pol":"0.656","std":"0.149"},"administrable":{"pos":"a","pol":"0.625","std":"0.0"},"admirabilidad":{"pos":"n","pol":"0.625","std":"0.0"},"admirablemente":{"pos":"r","pol":"0.625","std":"0.0"},"admisible":{"pos":"a","pol":"0.625","std":"0.0"},"adornado":{"pos":"a","pol":"0.625","std":"0.0"},"afabilidad":{"pos":"n","pol":"0.583","std":"0.26"},"afectuosamente":{"pos":"r","pol":"0.625","std":"0.0"},"agrado":{"pos":"n","pol":"0.625","std":"0.442"},"alimenticio":{"pos":"a","pol":"0.625","std":"0.0"},"amabilidad":{"pos":"n","pol":"0.547","std":"0.265"},"angelical":{"pos":"a","pol":"0.583","std":"0.545"},"anglofilia":{"pos":"n","pol":"0.625","std":"0.0"},"antihelmíntico":{"pos":"a","pol":"0.625","std":"0.0"},"antimicrobiano":{"pos":"a","pol":"0.625","std":"0.0"},"apaciguable":{"pos":"a","pol":"0.625","std":"0.0"},"aplaudir":{"pos":"v","pol":"0.625","std":"0.177"},"apropiado":{"pos":"a","pol":"0.656","std":"0.112"},"aptitud":{"pos":"n","pol":"0.542","std":"0.144"},"apto":{"pos":"a","pol":"0.557","std":"0.247"},"apuesto":{"pos":"a","pol":"0.688","std":"0.265"},"asíduo":{"pos":"a","pol":"0.625","std":"0.0"},"atractividad":{"pos":"n","pol":"0.625","std":"0.0"},"atrayente":{"pos":"a","pol":"0.583","std":"0.19"},"autodidacta":{"pos":"n","pol":"0.25","std":"0.0"},"autoimpuesto":{"pos":"a","pol":"0.625","std":"0.0"},"auxiliar":{"pos":"a","pol":"0.542","std":"0.217"},"axénico":{"pos":"a","pol":"0.625","std":"0.0"},"bellaco":{"pos":"n","pol":"-0.25","std":"0.0"},"bello":{"pos":"a","pol":"0.708","std":"0.217"},"bienaventurado":{"pos":"a","pol":"0.625","std":"0.354"},"brillantez":{"pos":"n","pol":"0.594","std":"0.4"},"bruñido":{"pos":"n","pol":"0.25","std":"0.0"},"buena persona":{"pos":"n","pol":"0.625","std":"0.0"},"buena salud":{"pos":"n","pol":"0.625","std":"0.0"},"caballero":{"pos":"a","pol":"0.625","std":"0.0"},"caballeroso":{"pos":"a","pol":"0.625","std":"0.088"},"cachondo":{"pos":"a","pol":"0.625","std":"0.0"},"calidad superior":{"pos":"n","pol":"0.625","std":"0.0"},"campeón":{"pos":"a","pol":"0.625","std":"0.0"},"capaz":{"pos":"a","pol":"0.634","std":"0.258"},"carácter agradable":{"pos":"n","pol":"0.625","std":"0.0"},"casto":{"pos":"a","pol":"0.563","std":"0.0"},"catártico":{"pos":"a","pol":"0.688","std":"0.177"},"cauteloso":{"pos":"a","pol":"0.521","std":"0.094"},"cauto":{"pos":"a","pol":"0.531","std":"0.102"},"celebrado":{"pos":"a","pol":"0.625","std":"0.0"},"certificativo":{"pos":"a","pol":"0.625","std":"0.0"},"certificatorio":{"pos":"a","pol":"0.625","std":"0.0"},"chachi":{"pos":"a","pol":"0.688","std":"0.442"},"chic":{"pos":"a","pol":"0.625","std":"0.0"},"chusco":{"pos":"a","pol":"0.625","std":"0.0"},"circunspecto":{"pos":"a","pol":"0.625","std":"0.0"},"comedido":{"pos":"a","pol":"0.563","std":"0.177"},"comestible":{"pos":"a","pol":"0.625","std":"0.0"},"compatible":{"pos":"a","pol":"0.531","std":"0.188"},"con admiracion":{"pos":"r","pol":"0.625","std":"0.0"},"con tratamiento":{"pos":"a","pol":"0.625","std":"0.0"},"conceptivo":{"pos":"a","pol":"0.625","std":"0.0"},"conciliación":{"pos":"n","pol":"0.708","std":"0.072"},"conciliado":{"pos":"a","pol":"0.625","std":"0.0"},"confortable":{"pos":"a","pol":"0.625","std":"0.0"},"congraciador":{"pos":"a","pol":"0.563","std":"0.088"},"congruente":{"pos":"a","pol":"0.625","std":"0.315"},"consagrado":{"pos":"a","pol":"0.688","std":"0.125"},"consensuado":{"pos":"a","pol":"0.625","std":"0.0"},"controlable":{"pos":"a","pol":"0.625","std":"0.0"},"convalidar":{"pos":"v","pol":"0.625","std":"0.0"},"conveniente":{"pos":"a","pol":"0.659","std":"0.129"},"copioso":{"pos":"a","pol":"0.583","std":"0.072"},"cordial":{"pos":"a","pol":"0.646","std":"0.171"},"cordura":{"pos":"n","pol":"0.625","std":"0.0"},"correctivo":{"pos":"a","pol":"0.563","std":"0.0"},"corregible":{"pos":"a","pol":"0.625","std":"0.12"},"creatividad":{"pos":"n","pol":"0.625","std":"0.0"},"creativo":{"pos":"a","pol":"0.625","std":"0.0"},"cualificado":{"pos":"a","pol":"0.667","std":"0.26"},"culto":{"pos":"a","pol":"0.525","std":"0.056"},"cumplir lo prometido":{"pos":"v","pol":"0.625","std":"0.0"},"curativa":{"pos":"n","pol":"0.625","std":"0.0"},"célibe":{"pos":"a","pol":"0.625","std":"0.0"},"de confianza":{"pos":"a","pol":"0.625","std":"0.0"},"decencia":{"pos":"n","pol":"0.542","std":"0.26"},"decible":{"pos":"a","pol":"0.625","std":"0.0"},"decorado":{"pos":"a","pol":"0.625","std":"0.0"},"decoro":{"pos":"n","pol":"0.625","std":"0.217"},"decoroso":{"pos":"a","pol":"0.708","std":"0.125"},"deducible":{"pos":"a","pol":"0.625","std":"0.0"},"deferente":{"pos":"a","pol":"0.625","std":"0.0"},"demostrativo":{"pos":"a","pol":"0.625","std":"0.177"},"describible":{"pos":"a","pol":"0.625","std":"0.0"},"descriptible":{"pos":"a","pol":"0.625","std":"0.0"},"desenganchado":{"pos":"a","pol":"0.625","std":"0.0"},"desenterrado":{"pos":"a","pol":"0.625","std":"0.0"},"destreza":{"pos":"n","pol":"0.525","std":"0.271"},"detallado":{"pos":"a","pol":"0.563","std":"0.088"},"detenido":{"pos":"n","pol":"0.25","std":"0.0"},"digno":{"pos":"a","pol":"0.667","std":"0.194"},"disociar":{"pos":"v","pol":"0.625","std":"0.0"},"dispuesto":{"pos":"a","pol":"0.563","std":"0.088"},"distinguido":{"pos":"a","pol":"0.55","std":"0.125"},"divertidísimo":{"pos":"a","pol":"0.625","std":"0.0"},"docto":{"pos":"a","pol":"0.563","std":"0.088"},"domesticable":{"pos":"a","pol":"0.625","std":"0.0"},"edificante":{"pos":"a","pol":"0.625","std":"0.0"},"educable":{"pos":"a","pol":"0.625","std":"0.0"},"educado":{"pos":"a","pol":"0.609","std":"0.149"},"educativo":{"pos":"a","pol":"0.563","std":"0.088"},"efectividad":{"pos":"n","pol":"0.563","std":"0.088"},"eficaz":{"pos":"a","pol":"0.583","std":"0.0"},"eficiencia":{"pos":"n","pol":"0.625","std":"0.0"},"elástico":{"pos":"a","pol":"0.6","std":"0.224"},"embelesado":{"pos":"a","pol":"0.563","std":"0.088"},"enardecedor":{"pos":"a","pol":"0.563","std":"0.177"},"enciclopédico":{"pos":"a","pol":"0.625","std":"0.0"},"entregado":{"pos":"a","pol":"0.625","std":"0.0"},"entretenido":{"pos":"a","pol":"0.667","std":"0.072"},"entretenimiento":{"pos":"n","pol":"0.531","std":"0.237"},"equitativo":{"pos":"a","pol":"0.625","std":"0.0"},"erudito":{"pos":"a","pol":"0.542","std":"0.072"},"especializado":{"pos":"a","pol":"0.708","std":"0.191"},"especificable":{"pos":"a","pol":"0.625","std":"0.0"},"espíritu bueno":{"pos":"n","pol":"0.625","std":"0.0"},"estimable":{"pos":"a","pol":"0.563","std":"0.53"},"eudemónico":{"pos":"a","pol":"0.625","std":"0.0"},"exacto":{"pos":"a","pol":"0.625","std":"0.234"},"expansivo":{"pos":"a","pol":"0.6","std":"0.137"},"explicable":{"pos":"a","pol":"0.625","std":"0.0"},"explícit":{"pos":"a","pol":"0.625","std":"0.0"},"expresable":{"pos":"a","pol":"0.625","std":"0.0"},"factible":{"pos":"a","pol":"0.625","std":"0.0"},"fecundo":{"pos":"a","pol":"0.563","std":"0.0"},"fenomenal":{"pos":"a","pol":"0.563","std":"0.493"},"fiel":{"pos":"a","pol":"0.7","std":"0.156"},"flamante":{"pos":"a","pol":"0.625","std":"0.442"},"fogosidad":{"pos":"n","pol":"0.563","std":"0.088"},"formalizado":{"pos":"a","pol":"0.625","std":"0.0"},"formativo":{"pos":"a","pol":"0.625","std":"0.0"},"formidable":{"pos":"a","pol":"0.542","std":"0.331"},"fortalecido":{"pos":"a","pol":"0.625","std":"0.0"},"frutal":{"pos":"a","pol":"0.625","std":"0.0"},"fulgor":{"pos":"n","pol":"0.625","std":"0.0"},"fértil":{"pos":"a","pol":"0.563","std":"0.063"},"galante":{"pos":"a","pol":"0.625","std":"0.0"},"galantear":{"pos":"v","pol":"0.625","std":"0.0"},"gallardo":{"pos":"a","pol":"0.688","std":"0.239"},"ganador":{"pos":"a","pol":"0.625","std":"0.0"},"generosa":{"pos":"a","pol":"0.625","std":"0.0"},"generosamente":{"pos":"r","pol":"0.625","std":"0.0"},"genial":{"pos":"a","pol":"0.661","std":"0.361"},"guay":{"pos":"a","pol":"0.542","std":"0.361"},"habilitante":{"pos":"a","pol":"0.625","std":"0.0"},"habitable":{"pos":"a","pol":"0.625","std":"0.0"},"halagador":{"pos":"a","pol":"0.688","std":"0.088"},"harmonizable":{"pos":"a","pol":"0.625","std":"0.0"},"harmónico":{"pos":"a","pol":"0.625","std":"0.177"},"helmíntico":{"pos":"a","pol":"0.625","std":"0.0"},"hospitalidad":{"pos":"n","pol":"0.563","std":"0.088"},"identificable":{"pos":"a","pol":"0.625","std":"0.0"},"idílico":{"pos":"a","pol":"0.688","std":"0.0"},"igualado":{"pos":"a","pol":"0.625","std":"0.0"},"iluminarse":{"pos":"v","pol":"0.625","std":"0.0"},"ilustrado":{"pos":"a","pol":"0.542","std":"0.072"},"ilustre":{"pos":"a","pol":"0.708","std":"0.125"},"imaginativo":{"pos":"a","pol":"0.625","std":"0.0"},"imponente":{"pos":"a","pol":"0.667","std":"0.072"},"incontaminado":{"pos":"a","pol":"0.625","std":"0.0"},"indicado":{"pos":"a","pol":"0.679","std":"0.139"},"inferible":{"pos":"a","pol":"0.625","std":"0.0"},"informado":{"pos":"a","pol":"0.594","std":"0.12"},"ingenioso":{"pos":"a","pol":"0.531","std":"0.063"},"instruido":{"pos":"a","pol":"0.542","std":"0.072"},"intelectual":{"pos":"a","pol":"0.594","std":"0.277"},"inteligente":{"pos":"a","pol":"0.604","std":"0.146"},"interesante":{"pos":"a","pol":"0.563","std":"0.088"},"interesarse":{"pos":"v","pol":"0.563","std":"0.442"},"interpretable":{"pos":"a","pol":"0.625","std":"0.0"},"inventivo":{"pos":"a","pol":"0.625","std":"0.0"},"invicto":{"pos":"a","pol":"0.625","std":"0.088"},"iterativo":{"pos":"a","pol":"0.563","std":"0.088"},"juguetón":{"pos":"a","pol":"0.563","std":"0.0"},"justificable":{"pos":"a","pol":"0.625","std":"0.0"},"ladino":{"pos":"a","pol":"0.625","std":"0.0"},"leal":{"pos":"a","pol":"0.7","std":"0.137"},"letrado":{"pos":"a","pol":"0.563","std":"0.088"},"lisonjero":{"pos":"a","pol":"0.688","std":"0.088"},"lógico":{"pos":"a","pol":"0.625","std":"0.177"},"majestuoso":{"pos":"a","pol":"0.719","std":"0.306"},"manejable":{"pos":"a","pol":"0.625","std":"0.125"},"maravilloso":{"pos":"a","pol":"0.719","std":"0.298"},"medicinal":{"pos":"a","pol":"0.625","std":"0.177"},"mejor":{"pos":"n","pol":"0.375","std":"0.0"},"merecido":{"pos":"n","pol":"-0.25","std":"0.0"},"mesurado":{"pos":"a","pol":"0.542","std":"0.072"},"miramiento":{"pos":"n","pol":"0.688","std":"0.088"},"mitigable":{"pos":"a","pol":"0.625","std":"0.0"},"moralizador":{"pos":"a","pol":"0.625","std":"0.0"},"máximo":{"pos":"a","pol":"0.625","std":"0.0"},"no alarmante":{"pos":"a","pol":"0.625","std":"0.0"},"noble":{"pos":"a","pol":"0.542","std":"0.303"},"nutritivo":{"pos":"a","pol":"0.688","std":"0.088"},"obediente":{"pos":"a","pol":"0.542","std":"0.125"},"observable":{"pos":"a","pol":"0.625","std":"0.0"},"observancia":{"pos":"n","pol":"0.625","std":"0.0"},"ocurrente":{"pos":"a","pol":"0.625","std":"0.0"},"operable":{"pos":"a","pol":"0.625","std":"0.0"},"oportuno":{"pos":"a","pol":"0.542","std":"0.171"},"opulento":{"pos":"a","pol":"0.625","std":"0.0"},"parasiticida":{"pos":"a","pol":"0.625","std":"0.0"},"pasable":{"pos":"a","pol":"0.542","std":"0.25"},"patente":{"pos":"a","pol":"0.542","std":"0.125"},"pausado":{"pos":"a","pol":"0.625","std":"0.0"},"perfectibilidad":{"pos":"n","pol":"0.625","std":"0.0"},"perfecto":{"pos":"a","pol":"0.625","std":"0.143"},"perseverante":{"pos":"a","pol":"0.563","std":"0.088"},"pertinente":{"pos":"a","pol":"0.563","std":"0.177"},"pinchable":{"pos":"a","pol":"0.625","std":"0.0"},"plenario":{"pos":"a","pol":"0.625","std":"0.0"},"pletórico":{"pos":"a","pol":"0.625","std":"0.0"},"popularidad":{"pos":"n","pol":"0.625","std":"0.0"},"practicable":{"pos":"a","pol":"0.625","std":"0.0"},"precaución":{"pos":"n","pol":"0.583","std":"0.072"},"precioso":{"pos":"a","pol":"0.675","std":"0.163"},"preciso":{"pos":"a","pol":"0.641","std":"0.133"},"precocinado":{"pos":"a","pol":"0.625","std":"0.0"},"preferible":{"pos":"a","pol":"0.625","std":"0.0"},"preparado":{"pos":"a","pol":"0.531","std":"0.125"},"preponderante":{"pos":"a","pol":"0.625","std":"0.0"},"presciente":{"pos":"a","pol":"0.625","std":"0.0"},"preservable":{"pos":"a","pol":"0.625","std":"0.0"},"prestigioso":{"pos":"a","pol":"0.688","std":"0.177"},"previsor":{"pos":"a","pol":"0.542","std":"0.072"},"privilegiado":{"pos":"a","pol":"0.688","std":"0.265"},"probado":{"pos":"a","pol":"0.542","std":"0.072"},"procedencia":{"pos":"n","pol":"0.688","std":"0.354"},"productivo":{"pos":"a","pol":"0.521","std":"0.094"},"productor":{"pos":"a","pol":"0.625","std":"0.0"},"profiláctico":{"pos":"a","pol":"0.542","std":"0.0"},"progresar":{"pos":"v","pol":"0.688","std":"0.354"},"prolífero":{"pos":"a","pol":"0.563","std":"0.088"},"prolífico":{"pos":"a","pol":"0.563","std":"0.088"},"promover":{"pos":"v","pol":"0.583","std":"0.505"},"propiciador":{"pos":"a","pol":"0.625","std":"0.0"},"propicio":{"pos":"a","pol":"0.563","std":"0.213"},"proteccionista":{"pos":"a","pol":"0.625","std":"0.0"},"prudente":{"pos":"a","pol":"0.578","std":"0.16"},"práctico":{"pos":"a","pol":"0.521","std":"0.171"},"próspero":{"pos":"a","pol":"0.7","std":"0.137"},"purificado":{"pos":"a","pol":"0.563","std":"0.088"},"querido":{"pos":"a","pol":"0.625","std":"0.191"},"racional":{"pos":"a","pol":"0.604","std":"0.131"},"razonable":{"pos":"a","pol":"0.625","std":"0.237"},"reciclable":{"pos":"a","pol":"0.625","std":"0.0"},"reconciliador":{"pos":"a","pol":"0.625","std":"0.0"},"reconstituyente":{"pos":"a","pol":"0.563","std":"0.177"},"recuperativo":{"pos":"a","pol":"0.625","std":"0.0"},"rehabilitador":{"pos":"a","pol":"0.688","std":"0.088"},"reiterativo":{"pos":"a","pol":"0.563","std":"0.088"},"remedio":{"pos":"n","pol":"0.625","std":"0.0"},"remirado":{"pos":"a","pol":"0.625","std":"0.0"},"rentable":{"pos":"a","pol":"0.625","std":"0.0"},"repetible":{"pos":"a","pol":"0.625","std":"0.0"},"respetuoso":{"pos":"a","pol":"0.625","std":"0.125"},"retozón":{"pos":"a","pol":"0.625","std":"0.0"},"retribuido":{"pos":"a","pol":"0.625","std":"0.0"},"reverendo":{"pos":"a","pol":"0.625","std":"0.0"},"reverente":{"pos":"a","pol":"0.688","std":"0.177"},"revivificar":{"pos":"v","pol":"0.688","std":"0.442"},"sabio":{"pos":"a","pol":"0.625","std":"0.237"},"sagaz":{"pos":"a","pol":"0.534","std":"0.097"},"salir adelante":{"pos":"v","pol":"0.625","std":"0.0"},"salvador":{"pos":"n","pol":"-0.25","std":"0.072"},"santificado":{"pos":"a","pol":"0.625","std":"0.0"},"santo":{"pos":"n","pol":"0.25","std":"0.125"},"selecto":{"pos":"a","pol":"0.6","std":"0.088"},"semiconductor":{"pos":"a","pol":"0.625","std":"0.0"},"sensato":{"pos":"a","pol":"0.571","std":"0.247"},"sentido":{"pos":"a","pol":"0.625","std":"0.0"},"seriocómico":{"pos":"a","pol":"0.625","std":"0.0"},"servible":{"pos":"a","pol":"0.542","std":"0.125"},"servir para":{"pos":"v","pol":"0.625","std":"0.0"},"sexi":{"pos":"a","pol":"0.625","std":"0.0"},"sibarítico":{"pos":"a","pol":"0.625","std":"0.0"},"significante":{"pos":"a","pol":"0.542","std":"0.191"},"significativo":{"pos":"a","pol":"0.542","std":"0.072"},"simplificado":{"pos":"a","pol":"0.625","std":"0.0"},"sin enterrar":{"pos":"a","pol":"0.625","std":"0.0"},"sincero":{"pos":"a","pol":"0.7","std":"0.185"},"sobreabundante":{"pos":"a","pol":"0.625","std":"0.0"},"socarrón":{"pos":"a","pol":"0.625","std":"0.0"},"sociable":{"pos":"a","pol":"0.542","std":"0.171"},"soportador":{"pos":"a","pol":"0.625","std":"0.0"},"sostenible":{"pos":"a","pol":"0.563","std":"0.177"},"suficiente":{"pos":"a","pol":"0.563","std":"0.088"},"superabundante":{"pos":"a","pol":"0.625","std":"0.0"},"sustancioso":{"pos":"a","pol":"0.542","std":"0.125"},"súper":{"pos":"a","pol":"0.688","std":"0.442"},"tener éxito":{"pos":"v","pol":"0.625","std":"0.0"},"terapéutico":{"pos":"a","pol":"0.313","std":"0.53"},"testeado":{"pos":"a","pol":"0.625","std":"0.0"},"tibio":{"pos":"a","pol":"0.625","std":"0.0"},"tolerable":{"pos":"a","pol":"0.625","std":"0.0"},"torneado":{"pos":"a","pol":"0.688","std":"0.088"},"tratable":{"pos":"a","pol":"0.521","std":"0.166"},"triumfar":{"pos":"v","pol":"0.625","std":"0.0"},"valioso":{"pos":"a","pol":"0.688","std":"0.177"},"vencedor":{"pos":"a","pol":"0.625","std":"0.0"},"venerado":{"pos":"a","pol":"0.563","std":"0.0"},"veraz":{"pos":"a","pol":"0.563","std":"0.177"},"viable":{"pos":"a","pol":"0.563","std":"0.088"},"victoria":{"pos":"n","pol":"0.625","std":"0.0"},"vitalizante":{"pos":"a","pol":"0.625","std":"0.0"},"vivificante":{"pos":"a","pol":"0.625","std":"0.0"},"vocálico":{"pos":"a","pol":"0.625","std":"0.0"},"voluptuoso":{"pos":"a","pol":"0.583","std":"0.125"},"ético":{"pos":"a","pol":"0.625","std":"0.0"},"abetalipoproteinemia":{"pos":"n","pol":"-0.625","std":"0.0"},"acetoso":{"pos":"a","pol":"-0.562","std":"0.088"},"acriminación":{"pos":"n","pol":"-0.625","std":"0.0"},"adulterar":{"pos":"v","pol":"-0.562","std":"0.088"},"afanar":{"pos":"v","pol":"-0.687","std":"0.0"},"agobiar":{"pos":"v","pol":"-0.594","std":"0.125"},"agobio":{"pos":"n","pol":"-0.625","std":"0.0"},"agonía":{"pos":"n","pol":"-0.625","std":"0.068"},"agorero":{"pos":"a","pol":"-0.687","std":"0.177"},"agridulce":{"pos":"a","pol":"-0.562","std":"0.265"},"altercado":{"pos":"n","pol":"-0.531","std":"0.063"},"amnésico":{"pos":"a","pol":"-0.625","std":"0.0"},"amortecerse":{"pos":"v","pol":"-0.625","std":"0.0"},"anglofobia":{"pos":"n","pol":"-0.625","std":"0.0"},"angustia mental":{"pos":"n","pol":"-0.625","std":"0.0"},"apechar":{"pos":"v","pol":"-0.625","std":"0.0"},"apretura":{"pos":"n","pol":"-0.625","std":"0.0"},"aprieto":{"pos":"n","pol":"-0.625","std":"0.0"},"arisco":{"pos":"a","pol":"-0.675","std":"0.137"},"arrizar":{"pos":"v","pol":"-0.625","std":"0.0"},"arruinarse":{"pos":"v","pol":"-0.625","std":"0.0"},"asesinar":{"pos":"v","pol":"-0.625","std":"0.112"},"asesinato":{"pos":"n","pol":"-0.625","std":"0.0"},"asolador":{"pos":"a","pol":"-0.625","std":"0.0"},"atezado":{"pos":"a","pol":"-0.625","std":"0.0"},"atonía":{"pos":"n","pol":"-0.625","std":"0.0"},"atrofiarse":{"pos":"v","pol":"-0.625","std":"0.0"},"aturdimento":{"pos":"n","pol":"-0.625","std":"0.0"},"avinagrado":{"pos":"a","pol":"-0.562","std":"0.088"},"bastardo":{"pos":"a","pol":"-0.437","std":"0.177"},"basto":{"pos":"n","pol":"-0.25","std":"0.0"},"befar":{"pos":"v","pol":"-0.625","std":"0.0"},"birlar":{"pos":"v","pol":"-0.542","std":"0.0"},"bloqueo del escritor":{"pos":"n","pol":"-0.625","std":"0.0"},"brete":{"pos":"n","pol":"-0.625","std":"0.0"},"bufar":{"pos":"v","pol":"-0.625","std":"0.0"},"camorrero":{"pos":"n","pol":"-0.625","std":"0.0"},"cansancio":{"pos":"n","pol":"-0.625","std":"0.0"},"carente":{"pos":"a","pol":"-0.625","std":"0.0"},"cargarse":{"pos":"v","pol":"-0.625","std":"0.0"},"cascarrabias":{"pos":"n","pol":"-0.375","std":"0.0"},"castigar":{"pos":"v","pol":"-0.562","std":"0.125"},"censurador":{"pos":"n","pol":"-0.625","std":"0.0"},"chabacanería":{"pos":"n","pol":"-0.562","std":"0.177"},"chacoteo":{"pos":"n","pol":"-0.625","std":"0.0"},"chafarrinón":{"pos":"n","pol":"-0.625","std":"0.0"},"chaquetero":{"pos":"n","pol":"-0.625","std":"0.0"},"choquear":{"pos":"v","pol":"-0.625","std":"0.0"},"citación a comparecencia":{"pos":"n","pol":"-0.625","std":"0.0"},"combatir":{"pos":"v","pol":"-0.625","std":"0.0"},"comparendo":{"pos":"n","pol":"-0.625","std":"0.0"},"condena por asesinato":{"pos":"n","pol":"-0.625","std":"0.0"},"conflicto":{"pos":"n","pol":"-0.625","std":"0.056"},"contrasentido":{"pos":"n","pol":"-0.562","std":"0.088"},"contratar esquiroles":{"pos":"v","pol":"-0.625","std":"0.0"},"correría":{"pos":"n","pol":"-0.625","std":"0.0"},"corrupto":{"pos":"a","pol":"-0.542","std":"0.144"},"crisis de identidad":{"pos":"n","pol":"-0.625","std":"0.0"},"dar un chasco":{"pos":"v","pol":"-0.625","std":"0.0"},"dar un portazo":{"pos":"v","pol":"-0.625","std":"0.0"},"dañoso":{"pos":"a","pol":"-0.531","std":"0.161"},"defecto":{"pos":"n","pol":"-0.667","std":"0.065"},"deficiencia":{"pos":"n","pol":"-0.575","std":"0.068"},"delito":{"pos":"n","pol":"-0.687","std":"0.088"},"desaconsejado":{"pos":"a","pol":"-0.562","std":"0.088"},"desagradecido":{"pos":"a","pol":"-0.625","std":"0.088"},"desasimiento":{"pos":"n","pol":"-0.625","std":"0.0"},"desasistido":{"pos":"a","pol":"-0.625","std":"0.0"},"desautorizar":{"pos":"v","pol":"-0.625","std":"0.0"},"descalificado":{"pos":"a","pol":"-0.625","std":"0.0"},"descaramiento":{"pos":"n","pol":"-0.625","std":"0.0"},"descortesía":{"pos":"n","pol":"-0.521","std":"0.123"},"descortés":{"pos":"a","pol":"-0.525","std":"0.163"},"desenmadejar":{"pos":"v","pol":"-0.625","std":"0.0"},"desfavorable":{"pos":"a","pol":"-0.594","std":"0.161"},"deshonra":{"pos":"n","pol":"-0.719","std":"0.072"},"deshonrar":{"pos":"v","pol":"-0.708","std":"0.072"},"desigualmente":{"pos":"r","pol":"-0.625","std":"0.0"},"deslucimiento":{"pos":"n","pol":"-0.562","std":"0.177"},"desobedecer":{"pos":"v","pol":"-0.625","std":"0.0"},"desproporcionado":{"pos":"a","pol":"-0.667","std":"0.072"},"destructor":{"pos":"a","pol":"-0.687","std":"0.0"},"destruirse":{"pos":"v","pol":"-0.625","std":"0.0"},"desértico":{"pos":"a","pol":"-0.562","std":"0.265"},"detrimento":{"pos":"n","pol":"-0.625","std":"0.0"},"discordia":{"pos":"n","pol":"-0.542","std":"0.072"},"dismenorrea":{"pos":"n","pol":"-0.625","std":"0.0"},"disturbar":{"pos":"v","pol":"-0.687","std":"0.0"},"divisivo":{"pos":"a","pol":"-0.625","std":"0.0"},"doler":{"pos":"v","pol":"-0.525","std":"0.168"},"dramón":{"pos":"n","pol":"-0.625","std":"0.0"},"elegía":{"pos":"n","pol":"-0.625","std":"0.0"},"embabucar":{"pos":"v","pol":"-0.625","std":"0.0"},"embaucar":{"pos":"v","pol":"-0.594","std":"0.0"},"embaír":{"pos":"v","pol":"-0.625","std":"0.0"},"emboscada":{"pos":"n","pol":"-0.625","std":"0.0"},"en situación crítica":{"pos":"r","pol":"-0.625","std":"0.0"},"en un aprieto":{"pos":"r","pol":"-0.625","std":"0.0"},"encandilar":{"pos":"v","pol":"-0.625","std":"0.0"},"encargarse de":{"pos":"v","pol":"-0.625","std":"0.0"},"endiablado":{"pos":"a","pol":"-0.625","std":"0.265"},"engañosamente":{"pos":"r","pol":"-0.625","std":"0.0"},"engreimiento":{"pos":"n","pol":"-0.562","std":"0.177"},"enterrado":{"pos":"a","pol":"-0.625","std":"0.0"},"epilepsia generalizada":{"pos":"n","pol":"-0.625","std":"0.0"},"equilibrar riesgos":{"pos":"v","pol":"-0.625","std":"0.0"},"eritrodermia":{"pos":"n","pol":"-0.625","std":"0.0"},"escapatoria":{"pos":"n","pol":"-0.625","std":"0.0"},"escocedura":{"pos":"n","pol":"-0.625","std":"0.0"},"escozor":{"pos":"n","pol":"-0.625","std":"0.0"},"estar enfermo":{"pos":"v","pol":"-0.687","std":"0.0"},"estar indispuesto":{"pos":"v","pol":"-0.625","std":"0.0"},"estrago":{"pos":"n","pol":"-0.625","std":"0.0"},"estática":{"pos":"n","pol":"-0.625","std":"0.0"},"faccioso":{"pos":"a","pol":"-0.625","std":"0.0"},"falazmente":{"pos":"r","pol":"-0.625","std":"0.0"},"falsificar":{"pos":"v","pol":"-0.521","std":"0.065"},"falta de entendimiento":{"pos":"n","pol":"-0.625","std":"0.0"},"farfolla":{"pos":"n","pol":"-0.625","std":"0.0"},"filfa":{"pos":"n","pol":"-0.625","std":"0.0"},"fin del mundo":{"pos":"n","pol":"-0.625","std":"0.0"},"fracasar":{"pos":"v","pol":"-0.625","std":"0.0"},"fullería":{"pos":"n","pol":"-0.625","std":"0.0"},"fusilar":{"pos":"v","pol":"-0.625","std":"0.0"},"galbana":{"pos":"n","pol":"-0.625","std":"0.0"},"garabatos":{"pos":"n","pol":"-0.625","std":"0.0"},"garrapato":{"pos":"n","pol":"-0.625","std":"0.0"},"gilipollas":{"pos":"n","pol":"-0.583","std":"0.065"},"gris carbón":{"pos":"n","pol":"-0.625","std":"0.0"},"grosero":{"pos":"n","pol":"-0.437","std":"0.0"},"grosería":{"pos":"n","pol":"-0.589","std":"0.067"},"haber borrasca":{"pos":"v","pol":"-0.625","std":"0.0"},"haber ráfaga":{"pos":"v","pol":"-0.625","std":"0.0"},"haber temporal":{"pos":"v","pol":"-0.625","std":"0.0"},"hacer bromas":{"pos":"v","pol":"-0.625","std":"0.0"},"hambruna":{"pos":"n","pol":"-0.562","std":"0.0"},"hediondez":{"pos":"n","pol":"-0.542","std":"0.0"},"hijo de puta":{"pos":"n","pol":"-0.625","std":"0.072"},"hijoputa":{"pos":"n","pol":"-0.625","std":"0.072"},"hipognato":{"pos":"a","pol":"-0.625","std":"0.0"},"hipotiroidismo":{"pos":"n","pol":"-0.625","std":"0.0"},"holgazanería":{"pos":"n","pol":"-0.625","std":"0.0"},"hortera":{"pos":"a","pol":"-0.625","std":"0.0"},"hosquedad":{"pos":"n","pol":"-0.562","std":"0.177"},"hurtar":{"pos":"v","pol":"-0.687","std":"0.0"},"ido":{"pos":"n","pol":"-0.625","std":"0.0"},"ignorancia":{"pos":"n","pol":"-0.562","std":"0.063"},"ignorante":{"pos":"n","pol":"-0.25","std":"0.0"},"ilógico":{"pos":"a","pol":"-0.25","std":"0.0"},"imaginado":{"pos":"a","pol":"-0.625","std":"0.0"},"imaginario":{"pos":"a","pol":"-0.625","std":"0.0"},"impensable":{"pos":"a","pol":"-0.625","std":"0.0"},"imperdonable":{"pos":"a","pol":"-0.562","std":"0.088"},"implacable":{"pos":"a","pol":"-0.625","std":"0.088"},"imprecación":{"pos":"n","pol":"-0.625","std":"0.088"},"improperio":{"pos":"n","pol":"-0.542","std":"0.072"},"impropiedad":{"pos":"n","pol":"-0.625","std":"0.12"},"impás":{"pos":"n","pol":"-0.625","std":"0.0"},"inadmisible":{"pos":"a","pol":"-0.625","std":"0.217"},"inanimado":{"pos":"a","pol":"-0.687","std":"0.063"},"inapetente":{"pos":"a","pol":"-0.625","std":"0.0"},"inapetitoso":{"pos":"a","pol":"-0.625","std":"0.0"},"incognoscible":{"pos":"a","pol":"-0.625","std":"0.177"},"incomprensión":{"pos":"n","pol":"-0.625","std":"0.0"},"increpación":{"pos":"n","pol":"-0.562","std":"0.088"},"increpar":{"pos":"v","pol":"-0.625","std":"0.0"},"incriminación":{"pos":"n","pol":"-0.625","std":"0.0"},"inculpación":{"pos":"n","pol":"-0.562","std":"0.0"},"indecencia":{"pos":"n","pol":"-0.583","std":"0.072"},"indecoroso":{"pos":"a","pol":"-0.583","std":"0.072"},"indigesto":{"pos":"a","pol":"-0.687","std":"0.0"},"inexpugnable":{"pos":"a","pol":"-0.625","std":"0.0"},"infernal":{"pos":"a","pol":"-0.525","std":"0.125"},"infundir miedo":{"pos":"v","pol":"-0.625","std":"0.0"},"infundir temor":{"pos":"v","pol":"-0.625","std":"0.0"},"inhabilitado":{"pos":"a","pol":"-0.625","std":"0.0"},"inmerecido":{"pos":"a","pol":"-0.7","std":"0.153"},"inmutabilidad":{"pos":"n","pol":"-0.625","std":"0.0"},"insensitividad":{"pos":"n","pol":"-0.625","std":"0.0"},"irreconocible":{"pos":"a","pol":"-0.687","std":"0.088"},"irrecuperable":{"pos":"a","pol":"-0.625","std":"0.177"},"irreducible":{"pos":"a","pol":"-0.625","std":"0.0"},"irse de":{"pos":"v","pol":"-0.625","std":"0.0"},"jugar una broma":{"pos":"v","pol":"-0.625","std":"0.0"},"lanzar improperios contra":{"pos":"v","pol":"-0.625","std":"0.0"},"lasitud":{"pos":"n","pol":"-0.531","std":"0.072"},"llorar":{"pos":"v","pol":"-0.667","std":"0.0"},"lluvia radioactiva":{"pos":"n","pol":"-0.625","std":"0.0"},"lordosis":{"pos":"n","pol":"-0.625","std":"0.0"},"mal":{"pos":"n","pol":"-0.375","std":"0.157"},"maldición":{"pos":"n","pol":"-0.562","std":"0.094"},"mandinga":{"pos":"n","pol":"-0.625","std":"0.0"},"medida cautelar":{"pos":"n","pol":"-0.625","std":"0.0"},"melodramático":{"pos":"a","pol":"0.375","std":"0.0"},"mentir":{"pos":"v","pol":"-0.625","std":"0.0"},"mestizar":{"pos":"v","pol":"-0.625","std":"0.0"},"mácula":{"pos":"n","pol":"-0.562","std":"0.088"},"nada halagador":{"pos":"a","pol":"-0.625","std":"0.0"},"no elástico":{"pos":"a","pol":"-0.625","std":"0.0"},"obscuridad":{"pos":"n","pol":"-0.625","std":"0.125"},"odinofagia":{"pos":"n","pol":"-0.625","std":"0.0"},"oscurecerse":{"pos":"v","pol":"-0.625","std":"0.0"},"osteofito":{"pos":"n","pol":"-0.625","std":"0.0"},"padecer":{"pos":"v","pol":"-0.562","std":"0.088"},"pajarota":{"pos":"n","pol":"-0.625","std":"0.0"},"palabra malsonante":{"pos":"n","pol":"-0.625","std":"0.0"},"palabrota":{"pos":"n","pol":"-0.625","std":"0.0"},"paranoico":{"pos":"n","pol":"-0.375","std":"0.0"},"paraplejia":{"pos":"n","pol":"-0.625","std":"0.0"},"paraplejía":{"pos":"n","pol":"-0.625","std":"0.0"},"paraplégico":{"pos":"a","pol":"-0.625","std":"0.0"},"peleador":{"pos":"n","pol":"-0.625","std":"0.0"},"peligroso":{"pos":"a","pol":"-0.667","std":"0.144"},"penalizar":{"pos":"v","pol":"-0.542","std":"0.0"},"pendenciero":{"pos":"n","pol":"-0.417","std":"0.072"},"perdida":{"pos":"n","pol":"-0.625","std":"0.0"},"perdularia":{"pos":"n","pol":"-0.625","std":"0.0"},"peso muerto":{"pos":"n","pol":"-0.625","std":"0.0"},"picaresca":{"pos":"n","pol":"-0.625","std":"0.0"},"pitada":{"pos":"n","pol":"-0.625","std":"0.0"},"poco apetitoso":{"pos":"a","pol":"-0.625","std":"0.0"},"poco elástico":{"pos":"a","pol":"-0.625","std":"0.0"},"poco erudito":{"pos":"a","pol":"-0.625","std":"0.0"},"poco escrupulosamente":{"pos":"r","pol":"-0.625","std":"0.0"},"poco halagador":{"pos":"a","pol":"-0.625","std":"0.0"},"poco ilustrado":{"pos":"a","pol":"-0.625","std":"0.0"},"poco receptivo":{"pos":"a","pol":"-0.625","std":"0.0"},"precariedad":{"pos":"n","pol":"-0.562","std":"0.063"},"presagio negativo":{"pos":"n","pol":"-0.625","std":"0.0"},"principiante":{"pos":"a","pol":"-0.625","std":"0.0"},"problema de salud":{"pos":"n","pol":"-0.625","std":"0.0"},"prognato":{"pos":"a","pol":"-0.625","std":"0.0"},"prohibidor":{"pos":"n","pol":"-0.625","std":"0.0"},"provincianismo":{"pos":"n","pol":"-0.625","std":"0.0"},"pusilanimidad":{"pos":"n","pol":"-0.625","std":"0.088"},"quejido":{"pos":"n","pol":"-0.625","std":"0.0"},"rachear":{"pos":"v","pol":"-0.625","std":"0.0"},"rebato":{"pos":"n","pol":"-0.625","std":"0.0"},"recalcitrar":{"pos":"v","pol":"-0.625","std":"0.0"},"rechiflar":{"pos":"v","pol":"-0.625","std":"0.0"},"recular":{"pos":"v","pol":"-0.625","std":"0.0"},"regañina":{"pos":"n","pol":"-0.562","std":"0.088"},"regaño":{"pos":"n","pol":"-0.562","std":"0.088"},"reniego":{"pos":"n","pol":"-0.625","std":"0.0"},"reprochar":{"pos":"v","pol":"-0.667","std":"0.072"},"reproche":{"pos":"n","pol":"-0.583","std":"0.072"},"resentirse":{"pos":"v","pol":"-0.625","std":"0.0"},"resignacion":{"pos":"n","pol":"-0.625","std":"0.0"},"rosario raquítico":{"pos":"n","pol":"-0.625","std":"0.0"},"roñoso":{"pos":"a","pol":"-0.719","std":"0.125"},"rudo":{"pos":"a","pol":"-0.575","std":"0.153"},"ruin":{"pos":"a","pol":"-0.542","std":"0.191"},"rácano":{"pos":"a","pol":"-0.708","std":"0.144"},"saltarse":{"pos":"v","pol":"-0.583","std":"0.072"},"saprófito":{"pos":"n","pol":"-0.25","std":"0.0"},"silbas":{"pos":"n","pol":"-0.625","std":"0.0"},"sin éxito":{"pos":"r","pol":"-0.625","std":"0.0"},"siniestro":{"pos":"n","pol":"-0.25","std":"0.0"},"socorrer":{"pos":"v","pol":"-0.625","std":"0.0"},"soez":{"pos":"a","pol":"-0.625","std":"0.0"},"subdesarrollo":{"pos":"n","pol":"-0.625","std":"0.0"},"sueldo de hambre":{"pos":"n","pol":"-0.625","std":"0.0"},"sufrimiento":{"pos":"n","pol":"-0.578","std":"0.093"},"sufrir una regresión":{"pos":"v","pol":"-0.625","std":"0.0"},"tipo raro":{"pos":"n","pol":"-0.531","std":"0.063"},"tiranicidio":{"pos":"n","pol":"-0.625","std":"0.0"},"tirarse un farol":{"pos":"v","pol":"-0.625","std":"0.0"},"tomar prestado":{"pos":"v","pol":"-0.625","std":"0.0"},"tosquedad":{"pos":"n","pol":"-0.625","std":"0.0"},"traicionar":{"pos":"v","pol":"-0.687","std":"0.063"},"trastorno maníaco":{"pos":"n","pol":"-0.625","std":"0.0"},"trastornos biliares":{"pos":"n","pol":"-0.625","std":"0.0"},"tísico":{"pos":"a","pol":"-0.625","std":"0.0"},"vaya":{"pos":"n","pol":"-0.625","std":"0.0"},"vituperación":{"pos":"n","pol":"-0.625","std":"0.0"},"volteado":{"pos":"n","pol":"-0.625","std":"0.0"},"volubilidad":{"pos":"n","pol":"-0.625","std":"0.0"},"voluble":{"pos":"a","pol":"-0.562","std":"0.265"},"yerto":{"pos":"a","pol":"-0.625","std":"0.0"},"zafiedad":{"pos":"n","pol":"-0.667","std":"0.144"},"zafio":{"pos":"a","pol":"-0.625","std":"0.088"},"a buena fé":{"pos":"r","pol":"0.5","std":"0.0"},"absorto":{"pos":"a","pol":"0.5","std":"0.088"},"abundoso":{"pos":"a","pol":"0.5","std":"0.0"},"acaudalado":{"pos":"a","pol":"0.5","std":"0.0"},"acelerado":{"pos":"a","pol":"0.5","std":"0.0"},"aceptador":{"pos":"a","pol":"0.5","std":"0.0"},"acicalado":{"pos":"a","pol":"0.5","std":"0.0"},"aclamación":{"pos":"n","pol":"0.5","std":"0.0"},"acomodaticio":{"pos":"a","pol":"0.5","std":"0.265"},"aconsejado":{"pos":"a","pol":"0.5","std":"0.0"},"actualizado":{"pos":"a","pol":"0.5","std":"0.0"},"adaptado":{"pos":"a","pol":"0.5","std":"0.0"},"adecuación":{"pos":"n","pol":"0.5","std":"0.144"},"adinerado":{"pos":"n","pol":"0.375","std":"0.0"},"admisibilidad":{"pos":"n","pol":"0.5","std":"0.177"},"admisivo":{"pos":"a","pol":"0.5","std":"0.0"},"adorable":{"pos":"a","pol":"0.5","std":"0.144"},"adorado":{"pos":"a","pol":"0.5","std":"0.088"},"adrenocorticotrópico":{"pos":"a","pol":"0.5","std":"0.0"},"ahorrador":{"pos":"a","pol":"0.5","std":"0.072"},"ahorrativo":{"pos":"a","pol":"0.5","std":"0.0"},"airosidad":{"pos":"n","pol":"0.5","std":"0.177"},"ajustable":{"pos":"a","pol":"0.5","std":"0.0"},"al día":{"pos":"a","pol":"0.5","std":"0.0"},"alabanza":{"pos":"n","pol":"0.5","std":"0.0"},"alabar con exceso":{"pos":"v","pol":"0.5","std":"0.0"},"aligerar":{"pos":"v","pol":"0.5","std":"0.707"},"allegro con spirito":{"pos":"n","pol":"0.5","std":"0.0"},"alquilable":{"pos":"a","pol":"0.5","std":"0.0"},"altilocuente":{"pos":"a","pol":"0.5","std":"0.0"},"amado":{"pos":"a","pol":"0.5","std":"0.088"},"amalgamado":{"pos":"a","pol":"0.5","std":"0.0"},"ambidiestro":{"pos":"n","pol":"0.375","std":"0.0"},"ameliorar":{"pos":"v","pol":"0.5","std":"0.0"},"amentífero":{"pos":"a","pol":"0.5","std":"0.0"},"amovible":{"pos":"a","pol":"0.5","std":"0.0"},"anacorítico":{"pos":"a","pol":"0.5","std":"0.0"},"antimonopolio":{"pos":"a","pol":"0.5","std":"0.0"},"antiséptico":{"pos":"a","pol":"0.5","std":"0.0"},"apaciguador":{"pos":"a","pol":"0.5","std":"0.0"},"apareado":{"pos":"a","pol":"0.5","std":"0.0"},"apasionante":{"pos":"a","pol":"0.5","std":"0.072"},"aplanético":{"pos":"a","pol":"0.5","std":"0.0"},"aplicable":{"pos":"a","pol":"0.5","std":"0.0"},"aplicado":{"pos":"a","pol":"0.5","std":"0.0"},"apodíctico":{"pos":"a","pol":"0.5","std":"0.0"},"apoyado":{"pos":"a","pol":"0.5","std":"0.0"},"aprendido":{"pos":"a","pol":"0.5","std":"0.0"},"arable":{"pos":"a","pol":"0.5","std":"0.0"},"ascendible":{"pos":"a","pol":"0.5","std":"0.0"},"asociable":{"pos":"a","pol":"0.5","std":"0.0"},"aséptico":{"pos":"a","pol":"0.5","std":"0.0"},"autosuficiente":{"pos":"a","pol":"0.5","std":"0.0"},"averiguable":{"pos":"a","pol":"0.5","std":"0.0"},"aviejarse":{"pos":"v","pol":"0.5","std":"0.0"},"avivado":{"pos":"a","pol":"0.5","std":"0.265"},"azul marino":{"pos":"n","pol":"-0.5","std":"0.0"},"bastante":{"pos":"a","pol":"0.5","std":"0.0"},"beatificado":{"pos":"a","pol":"0.5","std":"0.088"},"beatífico":{"pos":"a","pol":"0.5","std":"0.0"},"bebido":{"pos":"a","pol":"0.5","std":"0.0"},"bien definidos":{"pos":"a","pol":"0.5","std":"0.0"},"bien educado":{"pos":"a","pol":"0.5","std":"0.0"},"bienintencionado":{"pos":"a","pol":"0.5","std":"0.144"},"bordeado":{"pos":"a","pol":"0.5","std":"0.0"},"bromista":{"pos":"a","pol":"0.5","std":"0.0"},"buen gusto":{"pos":"n","pol":"0.5","std":"0.0"},"buen tiempo":{"pos":"n","pol":"0.5","std":"0.0"},"buenas condiciones":{"pos":"n","pol":"0.5","std":"0.0"},"cadencioso":{"pos":"a","pol":"0.5","std":"0.0"},"cadente":{"pos":"a","pol":"0.5","std":"0.0"},"cantable":{"pos":"a","pol":"0.5","std":"0.0"},"característico":{"pos":"a","pol":"0.5","std":"0.0"},"caritativo":{"pos":"a","pol":"0.5","std":"0.265"},"casadero":{"pos":"a","pol":"0.5","std":"0.0"},"centralizador":{"pos":"a","pol":"0.5","std":"0.0"},"civilidad":{"pos":"n","pol":"0.5","std":"0.177"},"colmado":{"pos":"a","pol":"0.5","std":"0.177"},"combustible":{"pos":"a","pol":"0.5","std":"0.0"},"comedia":{"pos":"n","pol":"0.5","std":"0.0"},"compatiblemente":{"pos":"r","pol":"0.5","std":"0.0"},"comprimible":{"pos":"a","pol":"0.5","std":"0.0"},"comprobable":{"pos":"a","pol":"0.5","std":"0.088"},"concienciable":{"pos":"a","pol":"0.5","std":"0.0"},"conciliador":{"pos":"a","pol":"0.5","std":"0.177"},"condicionado":{"pos":"a","pol":"0.5","std":"0.0"},"conductivo":{"pos":"a","pol":"0.5","std":"0.0"},"conductor":{"pos":"a","pol":"0.5","std":"0.0"},"conformar":{"pos":"v","pol":"0.5","std":"0.0"},"consentimiento tácito":{"pos":"n","pol":"0.5","std":"0.0"},"constitucional":{"pos":"a","pol":"0.5","std":"0.0"},"constructividad":{"pos":"n","pol":"0.5","std":"0.0"},"consumado":{"pos":"a","pol":"0.5","std":"0.246"},"consumar":{"pos":"v","pol":"0.5","std":"0.0"},"contestable":{"pos":"a","pol":"0.5","std":"0.177"},"copetudo":{"pos":"a","pol":"0.5","std":"0.0"},"correctitud":{"pos":"n","pol":"0.5","std":"0.0"},"cuaderno de escritura":{"pos":"n","pol":"0.5","std":"0.0"},"cultivable":{"pos":"a","pol":"0.5","std":"0.0"},"curable":{"pos":"a","pol":"0.5","std":"0.088"},"cursi":{"pos":"a","pol":"0.5","std":"0.0"},"dadivoso":{"pos":"a","pol":"0.5","std":"0.0"},"dar el éxito":{"pos":"v","pol":"0.5","std":"0.0"},"de la estación":{"pos":"r","pol":"0.5","std":"0.0"},"definible":{"pos":"a","pol":"0.5","std":"0.0"},"delectable":{"pos":"a","pol":"0.5","std":"0.0"},"desafectado":{"pos":"a","pol":"0.5","std":"0.0"},"desambiguedad":{"pos":"n","pol":"0.5","std":"0.0"},"descansado":{"pos":"a","pol":"0.5","std":"0.0"},"desconfiadamente":{"pos":"r","pol":"0.5","std":"0.0"},"descubrible":{"pos":"a","pol":"0.5","std":"0.0"},"desegregación":{"pos":"n","pol":"0.5","std":"0.0"},"desencantar":{"pos":"v","pol":"0.5","std":"0.354"},"desgravable":{"pos":"a","pol":"0.5","std":"0.0"},"desinflación":{"pos":"n","pol":"0.5","std":"0.0"},"desmontable":{"pos":"a","pol":"0.5","std":"0.0"},"despavilado":{"pos":"a","pol":"0.5","std":"0.0"},"despejado":{"pos":"a","pol":"0.5","std":"0.063"},"determinable":{"pos":"a","pol":"0.5","std":"0.0"},"diagnosticable":{"pos":"a","pol":"0.5","std":"0.0"},"digestibilidad":{"pos":"n","pol":"0.5","std":"0.0"},"digestible":{"pos":"a","pol":"0.5","std":"0.0"},"discernible":{"pos":"a","pol":"0.5","std":"0.088"},"disciplinal":{"pos":"a","pol":"0.5","std":"0.0"},"diserto":{"pos":"a","pol":"0.5","std":"0.0"},"disputable":{"pos":"a","pol":"0.5","std":"0.0"},"distinguible":{"pos":"a","pol":"0.5","std":"0.0"},"dorado":{"pos":"a","pol":"0.5","std":"0.289"},"dúctil":{"pos":"a","pol":"0.5","std":"0.157"},"ecléctico":{"pos":"n","pol":"0.25","std":"0.0"},"elocuente":{"pos":"a","pol":"0.5","std":"0.0"},"emancipador":{"pos":"a","pol":"0.5","std":"0.0"},"embergadura":{"pos":"n","pol":"0.5","std":"0.0"},"embriagador":{"pos":"a","pol":"0.5","std":"0.0"},"emocionante":{"pos":"a","pol":"0.5","std":"0.063"},"emplumado":{"pos":"a","pol":"0.5","std":"0.0"},"empático":{"pos":"a","pol":"0.5","std":"0.0"},"en términos morales":{"pos":"r","pol":"0.5","std":"0.0"},"encadenado":{"pos":"a","pol":"0.5","std":"0.0"},"energizante":{"pos":"a","pol":"0.5","std":"0.0"},"energético":{"pos":"a","pol":"0.5","std":"0.0"},"enfundado":{"pos":"a","pol":"0.5","std":"0.0"},"enjoyado":{"pos":"a","pol":"0.5","std":"0.0"},"ennoblecedor":{"pos":"a","pol":"0.5","std":"0.0"},"envainado":{"pos":"a","pol":"0.5","std":"0.0"},"envejecerse":{"pos":"v","pol":"0.5","std":"0.0"},"epicúreo":{"pos":"n","pol":"0.375","std":"0.0"},"epigramático":{"pos":"a","pol":"0.5","std":"0.0"},"equilibrio mental":{"pos":"n","pol":"0.5","std":"0.0"},"eremitíco":{"pos":"a","pol":"0.5","std":"0.0"},"escogido":{"pos":"n","pol":"0.375","std":"0.0"},"esmaltado":{"pos":"a","pol":"0.5","std":"0.0"},"espaldarazo":{"pos":"n","pol":"0.5","std":"0.0"},"espavilado":{"pos":"a","pol":"0.5","std":"0.0"},"especialización":{"pos":"n","pol":"0.5","std":"0.375"},"espiritualidad":{"pos":"n","pol":"0.5","std":"0.0"},"estabilidad":{"pos":"n","pol":"0.5","std":"0.088"},"estabilizador":{"pos":"a","pol":"0.5","std":"0.0"},"estudioso":{"pos":"a","pol":"0.5","std":"0.072"},"estético":{"pos":"a","pol":"0.5","std":"0.52"},"eufonía":{"pos":"n","pol":"0.5","std":"0.0"},"eufónico":{"pos":"a","pol":"0.5","std":"0.144"},"eugenesia":{"pos":"n","pol":"0.5","std":"0.0"},"eugenismo":{"pos":"n","pol":"0.5","std":"0.0"},"evidencial":{"pos":"a","pol":"0.5","std":"0.0"},"evitable":{"pos":"a","pol":"0.5","std":"0.0"},"exhaustivo":{"pos":"a","pol":"0.5","std":"0.0"},"exhausto":{"pos":"a","pol":"0.5","std":"0.0"},"exhortatorio":{"pos":"a","pol":"0.5","std":"0.0"},"exotérico":{"pos":"a","pol":"0.5","std":"0.0"},"expeditivo":{"pos":"a","pol":"0.5","std":"0.0"},"explicitación":{"pos":"n","pol":"0.5","std":"0.0"},"explicitud":{"pos":"n","pol":"0.5","std":"0.0"},"extensísimo":{"pos":"a","pol":"0.5","std":"0.0"},"extenuado":{"pos":"a","pol":"0.5","std":"0.0"},"fama":{"pos":"n","pol":"0.5","std":"0.0"},"fascinado":{"pos":"a","pol":"0.5","std":"0.0"},"fascinador":{"pos":"a","pol":"0.5","std":"0.0"},"fatigado":{"pos":"a","pol":"0.5","std":"0.0"},"fertilidad":{"pos":"n","pol":"0.5","std":"0.26"},"festejo":{"pos":"n","pol":"0.5","std":"0.191"},"fiducial":{"pos":"a","pol":"0.5","std":"0.354"},"filmable":{"pos":"a","pol":"0.5","std":"0.0"},"fisionable":{"pos":"a","pol":"0.5","std":"0.0"},"flexionado":{"pos":"a","pol":"0.5","std":"0.0"},"focalizado":{"pos":"a","pol":"0.5","std":"0.0"},"forrado":{"pos":"a","pol":"0.5","std":"0.0"},"fortalecedor":{"pos":"a","pol":"0.5","std":"0.0"},"galanteo":{"pos":"n","pol":"0.5","std":"0.265"},"ganancioso":{"pos":"a","pol":"0.5","std":"0.0"},"ganarse el cariño":{"pos":"v","pol":"0.5","std":"0.0"},"gazmoño":{"pos":"n","pol":"0.25","std":"0.0"},"germinal":{"pos":"a","pol":"0.5","std":"0.0"},"gozo":{"pos":"n","pol":"0.5","std":"0.289"},"graciosidad":{"pos":"n","pol":"0.5","std":"0.177"},"grandiosidad":{"pos":"n","pol":"0.5","std":"0.402"},"hacer atractivo":{"pos":"v","pol":"0.5","std":"0.0"},"hacer atrayente":{"pos":"v","pol":"0.5","std":"0.0"},"halagar":{"pos":"v","pol":"0.5","std":"0.125"},"higiénico":{"pos":"a","pol":"0.5","std":"0.0"},"hipertónico":{"pos":"a","pol":"0.313","std":"0.088"},"hipnotizado":{"pos":"a","pol":"0.5","std":"0.0"},"histriónico":{"pos":"a","pol":"0.5","std":"0.0"},"homeopatía":{"pos":"n","pol":"0.5","std":"0.0"},"honores":{"pos":"n","pol":"0.5","std":"0.0"},"immaculado":{"pos":"a","pol":"0.5","std":"0.0"},"impresionable":{"pos":"a","pol":"0.5","std":"0.0"},"impudente":{"pos":"a","pol":"0.5","std":"0.0"},"incambiable":{"pos":"a","pol":"0.5","std":"0.0"},"incitante":{"pos":"a","pol":"0.5","std":"0.0"},"inclusivo":{"pos":"a","pol":"0.5","std":"0.0"},"incorrupción":{"pos":"n","pol":"0.5","std":"0.0"},"indisimulado":{"pos":"a","pol":"0.5","std":"0.0"},"influenciable":{"pos":"a","pol":"0.5","std":"0.0"},"innovador":{"pos":"a","pol":"0.5","std":"0.237"},"insolvente":{"pos":"a","pol":"0.5","std":"0.0"},"intachable":{"pos":"a","pol":"0.5","std":"0.144"},"intencional":{"pos":"a","pol":"0.5","std":"0.0"},"invalorable":{"pos":"a","pol":"0.5","std":"0.0"},"jocoso":{"pos":"a","pol":"0.5","std":"0.191"},"juego de salón":{"pos":"n","pol":"0.5","std":"0.0"},"justiciable":{"pos":"a","pol":"0.5","std":"0.0"},"labrantío":{"pos":"a","pol":"0.5","std":"0.0"},"laureado":{"pos":"a","pol":"0.5","std":"0.442"},"laurear":{"pos":"v","pol":"0.5","std":"0.265"},"laureles":{"pos":"n","pol":"0.5","std":"0.0"},"lavorable":{"pos":"a","pol":"0.5","std":"0.0"},"legalidad":{"pos":"n","pol":"0.5","std":"0.0"},"leído":{"pos":"a","pol":"0.5","std":"0.0"},"liberador":{"pos":"n","pol":"0.25","std":"0.0"},"limitador":{"pos":"a","pol":"0.5","std":"0.0"},"liricidad":{"pos":"n","pol":"0.5","std":"0.0"},"loar":{"pos":"v","pol":"0.5","std":"0.0"},"lustroso":{"pos":"a","pol":"0.5","std":"0.072"},"macro":{"pos":"a","pol":"0.5","std":"0.0"},"madurado":{"pos":"a","pol":"0.5","std":"0.0"},"magnánime":{"pos":"a","pol":"0.5","std":"0.0"},"maniatado":{"pos":"a","pol":"0.5","std":"0.0"},"maniobrable":{"pos":"a","pol":"0.5","std":"0.0"},"marinería":{"pos":"n","pol":"0.5","std":"0.0"},"medicamentoso":{"pos":"a","pol":"0.5","std":"0.0"},"meditado":{"pos":"a","pol":"0.5","std":"0.0"},"melodioso":{"pos":"a","pol":"0.5","std":"0.161"},"mezclable":{"pos":"a","pol":"0.5","std":"0.0"},"miopía":{"pos":"n","pol":"0.5","std":"0.0"},"miramento":{"pos":"n","pol":"0.5","std":"0.0"},"mismísimo":{"pos":"a","pol":"0.5","std":"0.0"},"modernizado":{"pos":"a","pol":"0.5","std":"0.0"},"mojigato":{"pos":"n","pol":"0.375","std":"0.0"},"moldeable":{"pos":"a","pol":"0.5","std":"0.088"},"moralmente":{"pos":"r","pol":"0.5","std":"0.0"},"nato":{"pos":"a","pol":"0.5","std":"0.0"},"neutralizado":{"pos":"a","pol":"0.5","std":"0.0"},"novel":{"pos":"a","pol":"0.5","std":"0.0"},"nutrido":{"pos":"a","pol":"0.5","std":"0.0"},"náutica":{"pos":"n","pol":"0.5","std":"0.0"},"núbil":{"pos":"a","pol":"0.5","std":"0.0"},"obligación simple":{"pos":"n","pol":"0.5","std":"0.0"},"obligación sin garantía":{"pos":"n","pol":"0.5","std":"0.0"},"ocurrencia oportuna":{"pos":"n","pol":"0.5","std":"0.0"},"orientarse":{"pos":"v","pol":"0.5","std":"0.0"},"ortotropo":{"pos":"a","pol":"0.5","std":"0.0"},"ovacionar":{"pos":"v","pol":"0.5","std":"0.0"},"paciente interno":{"pos":"n","pol":"0.5","std":"0.0"},"panorámico":{"pos":"a","pol":"0.5","std":"0.354"},"papel de regalo":{"pos":"n","pol":"0.5","std":"0.0"},"participativo":{"pos":"a","pol":"0.5","std":"0.0"},"patricio":{"pos":"a","pol":"0.5","std":"0.0"},"patriótico":{"pos":"a","pol":"0.5","std":"0.0"},"payaso":{"pos":"a","pol":"0.5","std":"0.0"},"perfeccionado":{"pos":"a","pol":"0.5","std":"0.331"},"permisividad":{"pos":"n","pol":"0.5","std":"0.0"},"permutable":{"pos":"a","pol":"0.5","std":"0.0"},"persuasión":{"pos":"n","pol":"0.5","std":"0.0"},"petulante":{"pos":"a","pol":"0.5","std":"0.0"},"piadoso":{"pos":"a","pol":"0.5","std":"0.265"},"pintoresco":{"pos":"a","pol":"0.5","std":"0.26"},"plegable":{"pos":"a","pol":"0.5","std":"0.0"},"poner a salvo":{"pos":"v","pol":"0.5","std":"0.0"},"ponerse bien":{"pos":"v","pol":"0.5","std":"0.0"},"pormenorizado":{"pos":"a","pol":"0.5","std":"0.0"},"pornográfico":{"pos":"a","pol":"0.5","std":"0.0"},"precavido":{"pos":"a","pol":"0.5","std":"0.088"},"preciosura":{"pos":"n","pol":"0.5","std":"0.0"},"preeminente":{"pos":"a","pol":"0.5","std":"0.088"},"premiar":{"pos":"v","pol":"0.5","std":"0.265"},"preservado":{"pos":"a","pol":"0.5","std":"0.0"},"prevención":{"pos":"n","pol":"0.5","std":"0.217"},"profundizable":{"pos":"a","pol":"0.5","std":"0.0"},"profuso":{"pos":"a","pol":"0.5","std":"0.0"},"programa de rehabilitación":{"pos":"n","pol":"0.5","std":"0.0"},"prometido":{"pos":"a","pol":"0.5","std":"0.0"},"propiciación":{"pos":"n","pol":"0.5","std":"0.298"},"propiciatoriedad":{"pos":"n","pol":"0.5","std":"0.0"},"protagonismo":{"pos":"n","pol":"0.5","std":"0.0"},"prudencial":{"pos":"a","pol":"0.5","std":"0.0"},"pudiente":{"pos":"a","pol":"0.5","std":"0.0"},"puntería":{"pos":"n","pol":"0.5","std":"0.0"},"pío":{"pos":"a","pol":"0.5","std":"0.265"},"racionalidad":{"pos":"n","pol":"0.5","std":"0.27"},"rastrero":{"pos":"a","pol":"0.5","std":"0.0"},"ratificar":{"pos":"v","pol":"0.5","std":"0.0"},"realizable":{"pos":"a","pol":"0.5","std":"0.072"},"reanimado":{"pos":"a","pol":"0.5","std":"0.088"},"recepción cordial":{"pos":"n","pol":"0.5","std":"0.0"},"recepción favorable":{"pos":"n","pol":"0.5","std":"0.0"},"recio":{"pos":"a","pol":"0.5","std":"0.0"},"reconciliable":{"pos":"a","pol":"0.5","std":"0.0"},"rectificable":{"pos":"a","pol":"0.5","std":"0.0"},"rectitud":{"pos":"n","pol":"0.5","std":"0.354"},"recubierto":{"pos":"a","pol":"0.5","std":"0.0"},"recuperable":{"pos":"a","pol":"0.5","std":"0.0"},"refinar":{"pos":"v","pol":"0.5","std":"0.375"},"reflectante":{"pos":"a","pol":"0.5","std":"0.088"},"reformatorio":{"pos":"n","pol":"0.25","std":"0.0"},"refrendada":{"pos":"v","pol":"0.5","std":"0.0"},"refrescante":{"pos":"a","pol":"0.5","std":"0.0"},"regente":{"pos":"a","pol":"0.5","std":"0.0"},"regulable":{"pos":"a","pol":"0.5","std":"0.0"},"rendido":{"pos":"a","pol":"0.5","std":"0.0"},"rentabilidad":{"pos":"n","pol":"0.5","std":"0.0"},"reparable":{"pos":"a","pol":"0.5","std":"0.0"},"replegable":{"pos":"a","pol":"0.5","std":"0.0"},"reponerse":{"pos":"v","pol":"0.5","std":"0.0"},"representable":{"pos":"a","pol":"0.5","std":"0.0"},"representante":{"pos":"a","pol":"0.5","std":"0.0"},"resoluble":{"pos":"a","pol":"0.5","std":"0.0"},"respaldado":{"pos":"a","pol":"0.5","std":"0.0"},"respingón":{"pos":"a","pol":"0.5","std":"0.0"},"resplandeciente":{"pos":"a","pol":"0.5","std":"0.289"},"retenido":{"pos":"a","pol":"0.5","std":"0.0"},"revalidar":{"pos":"v","pol":"0.5","std":"0.0"},"revelador":{"pos":"a","pol":"0.5","std":"0.0"},"revitalizado":{"pos":"a","pol":"0.5","std":"0.0"},"rosáceo":{"pos":"a","pol":"0.5","std":"0.0"},"rumboso":{"pos":"a","pol":"0.5","std":"0.0"},"sacrosanto":{"pos":"a","pol":"0.5","std":"0.0"},"salud mental":{"pos":"n","pol":"0.5","std":"0.0"},"savoir-faire":{"pos":"n","pol":"0.5","std":"0.0"},"seleccionado":{"pos":"a","pol":"0.5","std":"0.0"},"selectivo":{"pos":"a","pol":"0.5","std":"0.0"},"semiprecioso":{"pos":"a","pol":"0.5","std":"0.0"},"sentido común":{"pos":"n","pol":"0.5","std":"0.0"},"seráfico":{"pos":"a","pol":"0.5","std":"0.619"},"sexuado":{"pos":"a","pol":"0.5","std":"0.177"},"sinvergüenza":{"pos":"n","pol":"-0.333","std":"0.094"},"solvencia":{"pos":"n","pol":"0.5","std":"0.0"},"solvente":{"pos":"a","pol":"0.5","std":"0.177"},"sublimado":{"pos":"a","pol":"0.5","std":"0.0"},"subsanable":{"pos":"a","pol":"0.5","std":"0.0"},"subsistir":{"pos":"v","pol":"0.5","std":"0.0"},"suertero":{"pos":"a","pol":"0.5","std":"0.0"},"sujetable":{"pos":"a","pol":"0.5","std":"0.0"},"sumergible":{"pos":"a","pol":"0.5","std":"0.0"},"sumo":{"pos":"a","pol":"0.5","std":"0.0"},"super":{"pos":"r","pol":"0.25","std":"0.0"},"superno":{"pos":"a","pol":"0.5","std":"0.0"},"sustancialidad":{"pos":"n","pol":"0.5","std":"0.0"},"sómatico":{"pos":"a","pol":"0.5","std":"0.0"},"tapizado":{"pos":"a","pol":"0.5","std":"0.0"},"taraceado":{"pos":"a","pol":"0.5","std":"0.0"},"tasable":{"pos":"a","pol":"0.5","std":"0.0"},"templado":{"pos":"n","pol":"-0.25","std":"0.0"},"tentador":{"pos":"a","pol":"0.5","std":"0.063"},"tonicidad":{"pos":"n","pol":"0.5","std":"0.0"},"tonificado":{"pos":"a","pol":"0.5","std":"0.0"},"transitivo":{"pos":"a","pol":"0.5","std":"0.0"},"transplantable":{"pos":"a","pol":"0.5","std":"0.0"},"transportable":{"pos":"a","pol":"0.5","std":"0.0"},"trasmisible":{"pos":"a","pol":"0.5","std":"0.0"},"trasplantable":{"pos":"a","pol":"0.5","std":"0.0"},"trata":{"pos":"v","pol":"0.5","std":"0.0"},"turístico":{"pos":"a","pol":"0.5","std":"0.0"},"técnico":{"pos":"n","pol":"0.292","std":"0.191"},"unánime":{"pos":"a","pol":"0.5","std":"0.0"},"usabilidad":{"pos":"n","pol":"0.5","std":"0.0"},"usual":{"pos":"a","pol":"0.5","std":"0.0"},"utilitarismo":{"pos":"n","pol":"0.5","std":"0.0"},"validado":{"pos":"a","pol":"0.5","std":"0.0"},"valorable":{"pos":"a","pol":"0.5","std":"0.0"},"varonil":{"pos":"a","pol":"0.5","std":"0.0"},"vendido":{"pos":"a","pol":"0.5","std":"0.0"},"venerable":{"pos":"a","pol":"0.5","std":"0.265"},"verificado":{"pos":"a","pol":"0.5","std":"0.0"},"verismo":{"pos":"n","pol":"0.5","std":"0.0"},"vigorizado":{"pos":"a","pol":"0.5","std":"0.0"},"voto de confianza":{"pos":"n","pol":"0.5","std":"0.0"},"válido":{"pos":"a","pol":"0.5","std":"0.12"},"zurdo":{"pos":"a","pol":"0.25","std":"0.354"},"ablandabrevas":{"pos":"n","pol":"-0.5","std":"0.0"},"abombar":{"pos":"v","pol":"-0.5","std":"0.0"},"abordabilidad":{"pos":"n","pol":"-0.5","std":"0.0"},"abroncar":{"pos":"v","pol":"-0.5","std":"0.0"},"aburrir":{"pos":"v","pol":"-0.5","std":"0.0"},"abusión":{"pos":"n","pol":"-0.5","std":"0.0"},"acalorar":{"pos":"v","pol":"-0.5","std":"0.0"},"aciago":{"pos":"a","pol":"-0.5","std":"0.0"},"acidez de estómago":{"pos":"n","pol":"-0.5","std":"0.0"},"acoquinado":{"pos":"a","pol":"-0.5","std":"0.0"},"acracia":{"pos":"n","pol":"-0.5","std":"0.0"},"acusación falsa":{"pos":"n","pol":"-0.5","std":"0.0"},"adiposo":{"pos":"a","pol":"-0.5","std":"0.0"},"adustez":{"pos":"n","pol":"-0.5","std":"0.177"},"agentes":{"pos":"n","pol":"-0.5","std":"0.0"},"agranulocítico":{"pos":"a","pol":"-0.5","std":"0.0"},"alarmismo":{"pos":"n","pol":"-0.5","std":"0.0"},"albuminuria":{"pos":"n","pol":"-0.5","std":"0.0"},"algómetro":{"pos":"n","pol":"-0.5","std":"0.0"},"alopécico":{"pos":"a","pol":"-0.5","std":"0.0"},"aminorado":{"pos":"a","pol":"-0.5","std":"0.0"},"amnesia retrógrada":{"pos":"n","pol":"-0.5","std":"0.0"},"analfabetismo":{"pos":"n","pol":"-0.5","std":"0.0"},"anarquía":{"pos":"n","pol":"-0.5","std":"0.0"},"anatematizar":{"pos":"v","pol":"-0.5","std":"0.0"},"anestesia":{"pos":"n","pol":"-0.5","std":"0.0"},"anginal":{"pos":"a","pol":"-0.5","std":"0.0"},"anginoso":{"pos":"a","pol":"-0.5","std":"0.0"},"angustioso":{"pos":"a","pol":"-0.5","std":"0.0"},"aniquilación":{"pos":"n","pol":"-0.5","std":"0.0"},"aniquilamiento":{"pos":"n","pol":"-0.5","std":"0.0"},"anodino":{"pos":"n","pol":"-0.25","std":"0.0"},"anquilosis":{"pos":"n","pol":"-0.5","std":"0.0"},"antagonizar":{"pos":"v","pol":"-0.5","std":"0.0"},"ante-mortem":{"pos":"a","pol":"-0.5","std":"0.0"},"apelante":{"pos":"n","pol":"-0.5","std":"0.0"},"apocalipsis":{"pos":"n","pol":"-0.5","std":"0.0"},"ardentía":{"pos":"n","pol":"-0.5","std":"0.0"},"ardor de estómago":{"pos":"n","pol":"-0.5","std":"0.0"},"ardores":{"pos":"n","pol":"-0.5","std":"0.0"},"arrasamiento":{"pos":"n","pol":"-0.5","std":"0.0"},"arremeter contra":{"pos":"v","pol":"-0.5","std":"0.088"},"arruinamiento":{"pos":"n","pol":"-0.5","std":"0.0"},"arteria cerebelosa inferior":{"pos":"n","pol":"-0.5","std":"0.0"},"artralgia":{"pos":"n","pol":"-0.5","std":"0.0"},"asaltante":{"pos":"n","pol":"-0.25","std":"0.088"},"asesinato mafioso":{"pos":"n","pol":"-0.5","std":"0.0"},"asolar":{"pos":"v","pol":"-0.5","std":"0.0"},"astrafobia":{"pos":"n","pol":"-0.5","std":"0.0"},"astuta":{"pos":"n","pol":"-0.5","std":"0.0"},"astuto":{"pos":"a","pol":"0.268","std":"0.225"},"atacante":{"pos":"a","pol":"-0.5","std":"0.0"},"ataque repentino":{"pos":"n","pol":"-0.5","std":"0.0"},"aterrador":{"pos":"a","pol":"-0.5","std":"0.0"},"atolladero":{"pos":"n","pol":"-0.5","std":"0.0"},"atormentarse":{"pos":"v","pol":"-0.5","std":"0.0"},"atrasarse":{"pos":"v","pol":"-0.5","std":"0.0"},"aventar":{"pos":"v","pol":"-0.5","std":"0.0"},"avitaminosis B1":{"pos":"n","pol":"-0.5","std":"0.0"},"ay":{"pos":"n","pol":"-0.5","std":"0.0"},"azarosamente":{"pos":"r","pol":"-0.5","std":"0.0"},"aztreonam":{"pos":"n","pol":"-0.5","std":"0.0"},"añadir una imperfección":{"pos":"v","pol":"-0.5","std":"0.0"},"baja de personal":{"pos":"n","pol":"-0.5","std":"0.0"},"baldado":{"pos":"n","pol":"-0.5","std":"0.0"},"batracomiomaquia":{"pos":"n","pol":"-0.5","std":"0.0"},"befa":{"pos":"n","pol":"-0.5","std":"0.0"},"bellacamente":{"pos":"r","pol":"-0.5","std":"0.0"},"berenjenal":{"pos":"n","pol":"-0.5","std":"0.0"},"beriberi":{"pos":"n","pol":"-0.5","std":"0.0"},"bibos":{"pos":"n","pol":"-0.5","std":"0.0"},"biserrado":{"pos":"a","pol":"-0.5","std":"0.0"},"blanquito":{"pos":"n","pol":"-0.5","std":"0.0"},"bluff":{"pos":"n","pol":"-0.5","std":"0.0"},"bombardeo aéreo":{"pos":"n","pol":"-0.5","std":"0.0"},"bragas":{"pos":"n","pol":"-0.5","std":"0.0"},"brazal de luto":{"pos":"n","pol":"-0.5","std":"0.0"},"broncoespasmo":{"pos":"n","pol":"-0.5","std":"0.0"},"bronquítico":{"pos":"a","pol":"-0.5","std":"0.0"},"caballo rojo":{"pos":"n","pol":"-0.5","std":"0.0"},"cabezudo":{"pos":"a","pol":"-0.5","std":"0.0"},"cabezón":{"pos":"a","pol":"-0.5","std":"0.0"},"cacofonía":{"pos":"n","pol":"-0.5","std":"0.0"},"cacofónico":{"pos":"a","pol":"-0.5","std":"0.0"},"cadaverina":{"pos":"n","pol":"-0.5","std":"0.0"},"caer de plano":{"pos":"v","pol":"-0.5","std":"0.0"},"cafre":{"pos":"n","pol":"-0.5","std":"0.0"},"cagarla":{"pos":"v","pol":"-0.5","std":"0.0"},"cagón":{"pos":"n","pol":"-0.5","std":"0.0"},"calambrazo":{"pos":"n","pol":"-0.5","std":"0.0"},"calambre":{"pos":"n","pol":"-0.5","std":"0.0"},"calumnia":{"pos":"n","pol":"-0.5","std":"0.063"},"canotier":{"pos":"n","pol":"-0.5","std":"0.0"},"canotié":{"pos":"n","pol":"-0.5","std":"0.0"},"canto fúnebre":{"pos":"n","pol":"-0.5","std":"0.0"},"cantonero":{"pos":"n","pol":"-0.5","std":"0.0"},"cariadura":{"pos":"n","pol":"-0.5","std":"0.0"},"casa de locos":{"pos":"n","pol":"-0.5","std":"0.0"},"castigable":{"pos":"a","pol":"-0.5","std":"0.0"},"cataclísmico":{"pos":"a","pol":"-0.5","std":"0.0"},"catastrofismo":{"pos":"n","pol":"-0.5","std":"0.0"},"chapuza":{"pos":"n","pol":"-0.25","std":"0.088"},"charro":{"pos":"n","pol":"-0.5","std":"0.0"},"cheposo":{"pos":"n","pol":"-0.5","std":"0.0"},"chiquilicuatro":{"pos":"n","pol":"-0.5","std":"0.0"},"chirriante":{"pos":"n","pol":"-0.5","std":"0.0"},"chismosa":{"pos":"n","pol":"-0.5","std":"0.0"},"chucho":{"pos":"n","pol":"-0.5","std":"0.0"},"cita errónea":{"pos":"n","pol":"-0.5","std":"0.0"},"cizañar":{"pos":"v","pol":"-0.5","std":"0.0"},"cleptómano":{"pos":"n","pol":"-0.5","std":"0.0"},"cnidiosporidios":{"pos":"n","pol":"-0.5","std":"0.0"},"colchoneta":{"pos":"n","pol":"-0.5","std":"0.0"},"cominero":{"pos":"a","pol":"-0.5","std":"0.0"},"comisar":{"pos":"v","pol":"-0.5","std":"0.0"},"complicar":{"pos":"v","pol":"-0.5","std":"0.177"},"comprometedor":{"pos":"a","pol":"-0.5","std":"0.0"},"con escepticismo":{"pos":"r","pol":"-0.5","std":"0.0"},"condenar de antemano":{"pos":"v","pol":"-0.5","std":"0.0"},"condolerse":{"pos":"v","pol":"-0.5","std":"0.0"},"confrontar":{"pos":"v","pol":"-0.5","std":"0.0"},"conmoción cerebral":{"pos":"n","pol":"-0.5","std":"0.0"},"consolable":{"pos":"a","pol":"-0.5","std":"0.0"},"contrabandear":{"pos":"v","pol":"-0.5","std":"0.0"},"contrahacimiento":{"pos":"n","pol":"-0.5","std":"0.0"},"contrahecho":{"pos":"a","pol":"0.25","std":"0.0"},"corcovado":{"pos":"n","pol":"-0.5","std":"0.0"},"cosa indispensable":{"pos":"n","pol":"-0.5","std":"0.0"},"crepuscular":{"pos":"a","pol":"-0.5","std":"0.0"},"criminalmente":{"pos":"r","pol":"-0.5","std":"0.0"},"criticón":{"pos":"a","pol":"-0.5","std":"0.354"},"crueldad asesina":{"pos":"n","pol":"-0.5","std":"0.0"},"cruz papal":{"pos":"n","pol":"-0.5","std":"0.0"},"cruz patriarcal":{"pos":"n","pol":"-0.5","std":"0.0"},"cruz pontificia":{"pos":"n","pol":"-0.5","std":"0.0"},"cruzarse de brazos":{"pos":"v","pol":"-0.5","std":"0.0"},"crédulo":{"pos":"n","pol":"-0.5","std":"0.0"},"cubil":{"pos":"n","pol":"-0.5","std":"0.0"},"curco":{"pos":"n","pol":"-0.5","std":"0.0"},"curioseo":{"pos":"n","pol":"-0.5","std":"0.0"},"de forma indecorosa":{"pos":"r","pol":"-0.5","std":"0.0"},"de reojo":{"pos":"r","pol":"-0.5","std":"0.0"},"decoloración":{"pos":"n","pol":"-0.5","std":"0.0"},"deletereo":{"pos":"a","pol":"-0.5","std":"0.0"},"demandante en casación":{"pos":"n","pol":"-0.5","std":"0.0"},"demente":{"pos":"n","pol":"-0.312","std":"0.0"},"deprecación":{"pos":"n","pol":"-0.5","std":"0.0"},"derecho penal":{"pos":"n","pol":"-0.5","std":"0.0"},"desabrido":{"pos":"a","pol":"-0.5","std":"0.0"},"desanimadamente":{"pos":"r","pol":"-0.5","std":"0.0"},"desapacible":{"pos":"a","pol":"-0.5","std":"0.0"},"desaprensión":{"pos":"n","pol":"-0.5","std":"0.0"},"desatención":{"pos":"n","pol":"-0.5","std":"0.0"},"descariñado":{"pos":"a","pol":"-0.5","std":"0.0"},"descolorido":{"pos":"n","pol":"-0.5","std":"0.0"},"desdeñable":{"pos":"a","pol":"-0.5","std":"0.0"},"desenmarañado":{"pos":"a","pol":"-0.5","std":"0.0"},"deseo de muerte":{"pos":"n","pol":"-0.5","std":"0.0"},"desequilibrio emocional":{"pos":"n","pol":"-0.5","std":"0.0"},"desfavorecer":{"pos":"v","pol":"-0.5","std":"0.0"},"desgraciadamente":{"pos":"r","pol":"-0.5","std":"0.177"},"deshonestamente":{"pos":"r","pol":"-0.5","std":"0.0"},"deshonesto":{"pos":"a","pol":"-0.5","std":"0.177"},"desinclinado":{"pos":"a","pol":"-0.5","std":"0.0"},"desmejorar":{"pos":"v","pol":"-0.5","std":"0.0"},"desmesura":{"pos":"n","pol":"-0.5","std":"0.088"},"desorientamiento":{"pos":"n","pol":"-0.5","std":"0.0"},"desprotección":{"pos":"n","pol":"-0.5","std":"0.0"},"desproveído":{"pos":"a","pol":"-0.5","std":"0.0"},"destructibilidad":{"pos":"n","pol":"-0.5","std":"0.0"},"dificultad":{"pos":"n","pol":"-0.5","std":"0.117"},"disimulación":{"pos":"n","pol":"-0.5","std":"0.0"},"disonancia":{"pos":"n","pol":"-0.5","std":"0.088"},"disparejo":{"pos":"a","pol":"-0.5","std":"0.0"},"disuria":{"pos":"n","pol":"-0.5","std":"0.0"},"dolor agudo":{"pos":"n","pol":"-0.5","std":"0.0"},"dura crítica":{"pos":"n","pol":"-0.5","std":"0.0"},"elegiaco":{"pos":"a","pol":"-0.5","std":"0.0"},"embastecido":{"pos":"a","pol":"-0.5","std":"0.0"},"embravecido":{"pos":"a","pol":"-0.5","std":"0.177"},"empalidecer":{"pos":"v","pol":"-0.5","std":"0.0"},"empeorarse":{"pos":"v","pol":"-0.5","std":"0.0"},"en demasía":{"pos":"r","pol":"-0.5","std":"0.0"},"en la inconsciencia":{"pos":"r","pol":"-0.5","std":"0.0"},"en modo profano":{"pos":"r","pol":"-0.5","std":"0.0"},"encame":{"pos":"n","pol":"-0.5","std":"0.0"},"endecha":{"pos":"n","pol":"-0.5","std":"0.0"},"enemigo mortal":{"pos":"n","pol":"-0.5","std":"0.0"},"enemistar":{"pos":"v","pol":"-0.5","std":"0.0"},"enervado":{"pos":"a","pol":"-0.5","std":"0.0"},"enfermedad de la sangre":{"pos":"n","pol":"-0.5","std":"0.0"},"enfrentamiento":{"pos":"n","pol":"-0.5","std":"0.063"},"enfrentar":{"pos":"v","pol":"-0.5","std":"0.0"},"ennegrecer":{"pos":"v","pol":"-0.5","std":"0.072"},"ennegrecerse":{"pos":"v","pol":"-0.5","std":"0.0"},"enrarecido":{"pos":"a","pol":"-0.5","std":"0.0"},"entorpecer":{"pos":"v","pol":"-0.5","std":"0.0"},"entrometida":{"pos":"n","pol":"-0.5","std":"0.0"},"entumecido":{"pos":"a","pol":"-0.5","std":"0.0"},"envilecido":{"pos":"a","pol":"-0.5","std":"0.0"},"eritema":{"pos":"n","pol":"-0.5","std":"0.0"},"escarcharse":{"pos":"v","pol":"-0.5","std":"0.0"},"escarnecedor":{"pos":"n","pol":"-0.5","std":"0.0"},"esclerosis múltiple":{"pos":"n","pol":"-0.5","std":"0.0"},"esguince":{"pos":"n","pol":"-0.5","std":"0.0"},"esmerarse":{"pos":"v","pol":"-0.5","std":"0.0"},"espasmo":{"pos":"n","pol":"-0.5","std":"0.0"},"espasmo muscular":{"pos":"n","pol":"-0.5","std":"0.0"},"especiosidad":{"pos":"n","pol":"-0.5","std":"0.0"},"espermicida":{"pos":"a","pol":"-0.5","std":"0.0"},"espondilitis":{"pos":"n","pol":"-0.5","std":"0.0"},"esporádico":{"pos":"a","pol":"-0.5","std":"0.0"},"estado incompleto":{"pos":"n","pol":"-0.5","std":"0.0"},"estar pendiente":{"pos":"n","pol":"-0.5","std":"0.0"},"estereotipado":{"pos":"a","pol":"-0.5","std":"0.0"},"estranguladores":{"pos":"n","pol":"-0.5","std":"0.0"},"estremecido":{"pos":"a","pol":"-0.5","std":"0.0"},"estresante":{"pos":"a","pol":"-0.5","std":"0.0"},"estribación":{"pos":"n","pol":"-0.5","std":"0.0"},"estúpidamente":{"pos":"r","pol":"-0.5","std":"0.088"},"evasivo":{"pos":"a","pol":"-0.292","std":"0.191"},"exasperado":{"pos":"a","pol":"-0.5","std":"0.0"},"excesivamente":{"pos":"r","pol":"-0.5","std":"0.0"},"excrecencia":{"pos":"n","pol":"-0.5","std":"0.0"},"exponer al peligro":{"pos":"v","pol":"-0.5","std":"0.0"},"extremado":{"pos":"a","pol":"-0.5","std":"0.0"},"extremista":{"pos":"a","pol":"-0.5","std":"0.0"},"faisandé":{"pos":"a","pol":"-0.5","std":"0.0"},"fake":{"pos":"n","pol":"-0.5","std":"0.0"},"falsear":{"pos":"v","pol":"-0.5","std":"0.0"},"falta":{"pos":"n","pol":"-0.5","std":"0.068"},"falta de respeto":{"pos":"n","pol":"-0.5","std":"0.0"},"falta de sabor":{"pos":"n","pol":"-0.5","std":"0.0"},"faltar a clases":{"pos":"v","pol":"-0.5","std":"0.0"},"familia Ixodidae":{"pos":"n","pol":"-0.5","std":"0.0"},"fanafarronada":{"pos":"n","pol":"-0.5","std":"0.0"},"fantaseador":{"pos":"n","pol":"-0.5","std":"0.0"},"fatalidad":{"pos":"n","pol":"-0.5","std":"0.0"},"fatídico":{"pos":"a","pol":"-0.5","std":"0.0"},"ferocidad":{"pos":"n","pol":"-0.5","std":"0.072"},"feúcho":{"pos":"a","pol":"-0.5","std":"0.0"},"fiebre blackwater":{"pos":"n","pol":"-0.5","std":"0.0"},"fiebre hemoglobinúrica":{"pos":"n","pol":"-0.5","std":"0.0"},"fiereza":{"pos":"n","pol":"-0.5","std":"0.125"},"fingimiento":{"pos":"n","pol":"-0.5","std":"0.12"},"fisgoneo":{"pos":"n","pol":"-0.5","std":"0.0"},"fosilizado":{"pos":"a","pol":"-0.5","std":"0.0"},"fragilidad":{"pos":"n","pol":"-0.5","std":"0.144"},"fragor":{"pos":"n","pol":"-0.5","std":"0.0"},"fuerzas del orden":{"pos":"n","pol":"-0.5","std":"0.0"},"fuerzas del orden público":{"pos":"n","pol":"-0.5","std":"0.0"},"gangrenoso":{"pos":"a","pol":"-0.5","std":"0.0"},"gemfibrozil":{"pos":"n","pol":"-0.5","std":"0.0"},"genus bibos":{"pos":"n","pol":"-0.5","std":"0.0"},"genus sivapithecus":{"pos":"n","pol":"-0.5","std":"0.0"},"giboso":{"pos":"n","pol":"-0.5","std":"0.0"},"ginofobia":{"pos":"n","pol":"-0.5","std":"0.0"},"glosalgia":{"pos":"n","pol":"-0.5","std":"0.0"},"glosodinia":{"pos":"n","pol":"-0.5","std":"0.0"},"gorigori":{"pos":"n","pol":"-0.5","std":"0.0"},"grado de reacción":{"pos":"n","pol":"-0.5","std":"0.0"},"graffiti":{"pos":"n","pol":"-0.5","std":"0.0"},"granítico":{"pos":"a","pol":"-0.5","std":"0.0"},"graso":{"pos":"a","pol":"-0.5","std":"0.0"},"graznidos":{"pos":"n","pol":"-0.5","std":"0.0"},"guanaco":{"pos":"n","pol":"-0.5","std":"0.0"},"guasón":{"pos":"n","pol":"-0.5","std":"0.0"},"guerrillero":{"pos":"n","pol":"-0.5","std":"0.0"},"gustillo":{"pos":"n","pol":"-0.5","std":"0.0"},"género Branta":{"pos":"n","pol":"-0.5","std":"0.0"},"hacer novillos":{"pos":"v","pol":"-0.5","std":"0.0"},"hacer pedazos":{"pos":"v","pol":"-0.5","std":"0.088"},"hacer peligrar":{"pos":"v","pol":"-0.5","std":"0.0"},"hacer pucheros":{"pos":"v","pol":"-0.5","std":"0.0"},"hampa":{"pos":"n","pol":"-0.5","std":"0.0"},"hastiar":{"pos":"v","pol":"-0.5","std":"0.0"},"hediondo":{"pos":"a","pol":"-0.5","std":"0.0"},"hemopatía":{"pos":"n","pol":"-0.5","std":"0.0"},"hemosiderosis":{"pos":"n","pol":"-0.5","std":"0.0"},"hepatomegalia":{"pos":"n","pol":"-0.5","std":"0.0"},"heterodoxo":{"pos":"a","pol":"-0.5","std":"0.0"},"heterogeneidad":{"pos":"n","pol":"-0.5","std":"0.0"},"hiperadrenocorticalismo":{"pos":"n","pol":"-0.5","std":"0.0"},"hipoglucemia":{"pos":"a","pol":"-0.375","std":"0.0"},"histeria de angustia":{"pos":"n","pol":"-0.5","std":"0.0"},"histeria de conversión":{"pos":"n","pol":"-0.5","std":"0.0"},"histérico":{"pos":"a","pol":"-0.5","std":"0.0"},"huelga de celo":{"pos":"n","pol":"-0.5","std":"0.0"},"husmeo":{"pos":"n","pol":"-0.5","std":"0.0"},"hórrido":{"pos":"a","pol":"-0.5","std":"0.0"},"iconoclasia":{"pos":"n","pol":"-0.5","std":"0.0"},"iconoclasía":{"pos":"n","pol":"-0.5","std":"0.0"},"ignorado":{"pos":"a","pol":"-0.5","std":"0.0"},"impiedad":{"pos":"n","pol":"-0.5","std":"0.177"},"impolítico":{"pos":"a","pol":"-0.5","std":"0.0"},"imposible de oponérsele":{"pos":"a","pol":"-0.5","std":"0.0"},"impropiamente":{"pos":"r","pol":"-0.5","std":"0.0"},"impunidad":{"pos":"n","pol":"-0.5","std":"0.0"},"inanición":{"pos":"n","pol":"-0.5","std":"0.072"},"inaplicabilidad":{"pos":"n","pol":"-0.5","std":"0.0"},"inatención":{"pos":"n","pol":"-0.5","std":"0.0"},"inceremonioso":{"pos":"a","pol":"-0.5","std":"0.0"},"inclumplir":{"pos":"v","pol":"-0.5","std":"0.0"},"incompatiblemente":{"pos":"r","pol":"-0.5","std":"0.0"},"inconcebible":{"pos":"a","pol":"-0.5","std":"0.0"},"inconstitucional":{"pos":"a","pol":"-0.5","std":"0.0"},"inconveniente":{"pos":"n","pol":"-0.375","std":"0.191"},"incriminatorio":{"pos":"a","pol":"-0.5","std":"0.0"},"inculpatorio":{"pos":"a","pol":"-0.5","std":"0.0"},"indecoro":{"pos":"n","pol":"-0.5","std":"0.088"},"indefensión":{"pos":"n","pol":"-0.5","std":"0.0"},"indestructibilidad":{"pos":"n","pol":"-0.5","std":"0.0"},"indignidad":{"pos":"n","pol":"-0.5","std":"0.088"},"inelegancia":{"pos":"n","pol":"-0.5","std":"0.0"},"inelegantemente":{"pos":"r","pol":"-0.5","std":"0.0"},"inescrupuloso":{"pos":"a","pol":"-0.5","std":"0.0"},"inexcusablemente":{"pos":"r","pol":"-0.5","std":"0.0"},"inexperiencia":{"pos":"n","pol":"-0.5","std":"0.088"},"inexplicable":{"pos":"a","pol":"-0.5","std":"0.0"},"inexplicación":{"pos":"n","pol":"-0.5","std":"0.0"},"infección respiratoria inferior":{"pos":"n","pol":"-0.5","std":"0.0"},"inframaxilar":{"pos":"a","pol":"-0.5","std":"0.0"},"ininteligente":{"pos":"a","pol":"-0.5","std":"0.0"},"injustificadamente":{"pos":"r","pol":"-0.5","std":"0.0"},"inmolar":{"pos":"v","pol":"-0.5","std":"0.0"},"innavegable":{"pos":"a","pol":"-0.5","std":"0.0"},"inoperable":{"pos":"a","pol":"-0.5","std":"0.0"},"insalvable":{"pos":"a","pol":"-0.5","std":"0.0"},"insalvables":{"pos":"a","pol":"-0.5","std":"0.0"},"insatisfacible":{"pos":"a","pol":"-0.5","std":"0.0"},"insensibilizado":{"pos":"a","pol":"-0.5","std":"0.0"},"insincero":{"pos":"a","pol":"-0.5","std":"0.177"},"insoportable":{"pos":"n","pol":"-0.25","std":"0.0"},"insostenible":{"pos":"a","pol":"-0.5","std":"0.191"},"instinto de muerte":{"pos":"n","pol":"-0.5","std":"0.0"},"insulsez":{"pos":"n","pol":"-0.5","std":"0.0"},"insulto":{"pos":"n","pol":"-0.5","std":"0.177"},"insustancialidad":{"pos":"n","pol":"-0.5","std":"0.0"},"intimidante":{"pos":"a","pol":"-0.5","std":"0.0"},"investigación judicial":{"pos":"n","pol":"-0.5","std":"0.0"},"invidente":{"pos":"n","pol":"-0.5","std":"0.0"},"irrespetuoso":{"pos":"a","pol":"-0.5","std":"0.217"},"ixódidos":{"pos":"n","pol":"-0.5","std":"0.0"},"jeremiada":{"pos":"n","pol":"-0.5","std":"0.0"},"jorobado":{"pos":"n","pol":"-0.5","std":"0.0"},"lado bueno":{"pos":"n","pol":"-0.5","std":"0.0"},"lado positivo":{"pos":"n","pol":"-0.5","std":"0.0"},"lamentablemente":{"pos":"r","pol":"-0.5","std":"0.0"},"lamentación":{"pos":"n","pol":"-0.5","std":"0.068"},"lamentado":{"pos":"a","pol":"-0.5","std":"0.0"},"laringofaringe":{"pos":"n","pol":"-0.5","std":"0.0"},"lenguaje soez":{"pos":"n","pol":"-0.5","std":"0.0"},"licopeno":{"pos":"n","pol":"-0.5","std":"0.0"},"lisiado":{"pos":"n","pol":"-0.5","std":"0.0"},"litera de abajo":{"pos":"n","pol":"-0.5","std":"0.0"},"liza":{"pos":"n","pol":"-0.5","std":"0.0"},"llevar duelo":{"pos":"v","pol":"-0.5","std":"0.0"},"llorado":{"pos":"a","pol":"-0.5","std":"0.0"},"llorón":{"pos":"a","pol":"-0.5","std":"0.0"},"loquera":{"pos":"n","pol":"-0.5","std":"0.0"},"majara":{"pos":"n","pol":"-0.5","std":"0.0"},"majareta":{"pos":"n","pol":"-0.5","std":"0.0"},"mala fe":{"pos":"n","pol":"-0.5","std":"0.0"},"mala jugada":{"pos":"n","pol":"-0.5","std":"0.0"},"maletudo":{"pos":"n","pol":"-0.5","std":"0.0"},"malintencionado":{"pos":"a","pol":"-0.5","std":"0.217"},"malograrse":{"pos":"v","pol":"-0.5","std":"0.0"},"mandibular":{"pos":"a","pol":"-0.5","std":"0.0"},"mangar":{"pos":"v","pol":"-0.5","std":"0.0"},"manida":{"pos":"n","pol":"-0.5","std":"0.0"},"mantenerse fresco":{"pos":"v","pol":"-0.5","std":"0.0"},"manzana podrida":{"pos":"n","pol":"-0.5","std":"0.0"},"marcha sindical":{"pos":"n","pol":"-0.5","std":"0.0"},"martirio":{"pos":"n","pol":"-0.5","std":"0.068"},"mastalgia":{"pos":"n","pol":"-0.5","std":"0.0"},"matar a tiros":{"pos":"n","pol":"-0.5","std":"0.0"},"maximalista":{"pos":"a","pol":"-0.5","std":"0.0"},"megalomaníaco":{"pos":"n","pol":"-0.375","std":"0.0"},"mequetrefe":{"pos":"n","pol":"-0.5","std":"0.0"},"metralgia":{"pos":"n","pol":"-0.5","std":"0.0"},"microsporidios":{"pos":"n","pol":"-0.5","std":"0.0"},"misofobia":{"pos":"n","pol":"-0.5","std":"0.0"},"mitigado":{"pos":"a","pol":"-0.5","std":"0.0"},"mixosporidios":{"pos":"n","pol":"-0.5","std":"0.0"},"mofador":{"pos":"n","pol":"-0.5","std":"0.0"},"monstruosidad":{"pos":"n","pol":"-0.5","std":"0.072"},"muela del juicio":{"pos":"n","pol":"-0.5","std":"0.0"},"multable":{"pos":"a","pol":"-0.5","std":"0.0"},"mundo del crimen":{"pos":"n","pol":"-0.5","std":"0.0"},"muslo de pavo":{"pos":"n","pol":"-0.5","std":"0.0"},"mutilado":{"pos":"a","pol":"-0.25","std":"0.0"},"muyahid":{"pos":"n","pol":"-0.5","std":"0.0"},"narcosis":{"pos":"n","pol":"-0.5","std":"0.0"},"narcotismo":{"pos":"n","pol":"-0.5","std":"0.0"},"necedad":{"pos":"n","pol":"-0.5","std":"0.088"},"nefando":{"pos":"a","pol":"-0.5","std":"0.0"},"negro-azulado":{"pos":"a","pol":"-0.5","std":"0.0"},"nictalopía":{"pos":"n","pol":"-0.5","std":"0.0"},"ninfómana":{"pos":"a","pol":"-0.375","std":"0.0"},"no comprometido":{"pos":"a","pol":"-0.5","std":"0.0"},"no demostrado":{"pos":"a","pol":"-0.5","std":"0.0"},"no excitable":{"pos":"a","pol":"-0.5","std":"0.0"},"no pagar":{"pos":"v","pol":"-0.5","std":"0.0"},"no reconocido":{"pos":"a","pol":"-0.5","std":"0.0"},"no resbaladizo":{"pos":"a","pol":"-0.5","std":"0.0"},"no resbaloso":{"pos":"a","pol":"-0.5","std":"0.0"},"no saludable":{"pos":"a","pol":"-0.5","std":"0.0"},"no susceptible":{"pos":"a","pol":"-0.5","std":"0.0"},"no tradicional":{"pos":"a","pol":"-0.5","std":"0.0"},"novato":{"pos":"a","pol":"-0.5","std":"0.088"},"nubarrón":{"pos":"n","pol":"-0.5","std":"0.0"},"nubes de guerra":{"pos":"n","pol":"-0.5","std":"0.0"},"obseso":{"pos":"a","pol":"-0.5","std":"0.0"},"odiosidad":{"pos":"n","pol":"-0.5","std":"0.0"},"ofenderse":{"pos":"v","pol":"-0.5","std":"0.088"},"oftalmia":{"pos":"n","pol":"-0.5","std":"0.0"},"oftalmía":{"pos":"n","pol":"-0.5","std":"0.0"},"orden de ejecución":{"pos":"n","pol":"-0.5","std":"0.0"},"ordinariez":{"pos":"n","pol":"-0.5","std":"0.125"},"oscurecido":{"pos":"a","pol":"-0.5","std":"0.177"},"osteoporosis":{"pos":"n","pol":"-0.5","std":"0.0"},"pajarraca":{"pos":"n","pol":"-0.5","std":"0.0"},"pajarraco":{"pos":"n","pol":"-0.5","std":"0.0"},"palidecer":{"pos":"v","pol":"-0.5","std":"0.0"},"paludismo hemolítico":{"pos":"n","pol":"-0.5","std":"0.0"},"pandear":{"pos":"v","pol":"-0.5","std":"0.0"},"parafilia":{"pos":"n","pol":"-0.5","std":"0.0"},"paralogismo":{"pos":"n","pol":"-0.5","std":"0.0"},"parquedad":{"pos":"n","pol":"-0.5","std":"0.0"},"parte inferior":{"pos":"n","pol":"-0.5","std":"0.0"},"patetismo":{"pos":"n","pol":"-0.5","std":"0.0"},"patéticamente":{"pos":"r","pol":"-0.5","std":"0.0"},"patético":{"pos":"a","pol":"-0.5","std":"0.0"},"pejiguero":{"pos":"a","pol":"-0.5","std":"0.0"},"pelafustán":{"pos":"n","pol":"-0.5","std":"0.0"},"pena capital":{"pos":"n","pol":"-0.5","std":"0.0"},"pena de muerte":{"pos":"n","pol":"-0.5","std":"0.0"},"penitenciario":{"pos":"a","pol":"-0.5","std":"0.0"},"pequeño burgués":{"pos":"n","pol":"-0.5","std":"0.0"},"perecedero":{"pos":"a","pol":"-0.5","std":"0.0"},"perplejo":{"pos":"a","pol":"-0.5","std":"0.177"},"perro mestizo":{"pos":"n","pol":"-0.5","std":"0.0"},"perrucho":{"pos":"n","pol":"-0.5","std":"0.0"},"picotada":{"pos":"n","pol":"-0.5","std":"0.0"},"picotazo":{"pos":"n","pol":"-0.5","std":"0.0"},"pifiado":{"pos":"a","pol":"-0.5","std":"0.0"},"piloto de combate":{"pos":"n","pol":"-0.5","std":"0.0"},"piquetazo":{"pos":"n","pol":"-0.5","std":"0.0"},"piromanía":{"pos":"n","pol":"-0.5","std":"0.0"},"pirosis":{"pos":"n","pol":"-0.5","std":"0.0"},"plomizo":{"pos":"a","pol":"-0.5","std":"0.0"},"poco cariñoso":{"pos":"a","pol":"-0.5","std":"0.0"},"poco dispuesto":{"pos":"a","pol":"-0.5","std":"0.0"},"poco estimulante":{"pos":"a","pol":"-0.5","std":"0.0"},"poco excitable":{"pos":"a","pol":"-0.5","std":"0.0"},"poco excitante":{"pos":"a","pol":"-0.5","std":"0.0"},"poco femenino":{"pos":"a","pol":"-0.5","std":"0.0"},"poco naturalmente":{"pos":"r","pol":"-0.5","std":"0.0"},"poco ortodoxo":{"pos":"a","pol":"-0.5","std":"0.0"},"poco saludable":{"pos":"a","pol":"-0.5","std":"0.0"},"poco simpatizante":{"pos":"a","pol":"-0.5","std":"0.0"},"poco solidario":{"pos":"a","pol":"-0.5","std":"0.0"},"poeta elegíaco":{"pos":"n","pol":"-0.5","std":"0.0"},"poltergeist":{"pos":"n","pol":"-0.5","std":"0.0"},"ponerse tenso":{"pos":"v","pol":"-0.5","std":"0.0"},"por accidente":{"pos":"r","pol":"-0.5","std":"0.0"},"por ahora":{"pos":"r","pol":"-0.5","std":"0.0"},"por azar":{"pos":"r","pol":"-0.5","std":"0.0"},"posse comitatus":{"pos":"n","pol":"-0.5","std":"0.0"},"prevaricación":{"pos":"n","pol":"-0.5","std":"0.0"},"prodrómico":{"pos":"a","pol":"-0.5","std":"0.0"},"producción insuficiente":{"pos":"n","pol":"-0.5","std":"0.0"},"profanidad":{"pos":"n","pol":"-0.5","std":"0.088"},"profesor agregado":{"pos":"n","pol":"-0.5","std":"0.0"},"pronóstico médico":{"pos":"n","pol":"-0.5","std":"0.0"},"proteinuria":{"pos":"n","pol":"-0.5","std":"0.0"},"provisionalmente":{"pos":"r","pol":"-0.5","std":"0.0"},"psicopatología":{"pos":"n","pol":"-0.5","std":"0.0"},"punch":{"pos":"n","pol":"-0.5","std":"0.0"},"punible":{"pos":"a","pol":"-0.5","std":"0.0"},"punitivo":{"pos":"a","pol":"-0.5","std":"0.0"},"punto débil":{"pos":"n","pol":"-0.5","std":"0.0"},"puñetazo":{"pos":"n","pol":"-0.5","std":"0.0"},"puñete":{"pos":"n","pol":"-0.5","std":"0.0"},"puñetero":{"pos":"a","pol":"-0.5","std":"0.0"},"pájara":{"pos":"n","pol":"-0.5","std":"0.0"},"pérdida del autocontrol":{"pos":"n","pol":"-0.5","std":"0.0"},"pícara":{"pos":"n","pol":"-0.5","std":"0.0"},"quebradero":{"pos":"n","pol":"-0.5","std":"0.0"},"quebradero de cabeza":{"pos":"n","pol":"-0.5","std":"0.0"},"queja constante":{"pos":"n","pol":"-0.5","std":"0.0"},"quejica":{"pos":"a","pol":"-0.5","std":"0.0"},"quejicoso":{"pos":"a","pol":"-0.5","std":"0.0"},"quejosamente":{"pos":"r","pol":"-0.5","std":"0.0"},"quejumbre":{"pos":"n","pol":"-0.5","std":"0.0"},"quemadura de segundo grado":{"pos":"n","pol":"-0.5","std":"0.0"},"queratalgia":{"pos":"n","pol":"-0.5","std":"0.0"},"querencia":{"pos":"n","pol":"-0.5","std":"0.0"},"quijotesco":{"pos":"a","pol":"-0.5","std":"0.0"},"rarito":{"pos":"n","pol":"-0.5","std":"0.0"},"rascada":{"pos":"n","pol":"-0.5","std":"0.0"},"rascadura":{"pos":"n","pol":"-0.5","std":"0.0"},"rasposo":{"pos":"a","pol":"-0.5","std":"0.0"},"reclamar legalmente":{"pos":"v","pol":"-0.5","std":"0.0"},"recurrente":{"pos":"a","pol":"0.25","std":"0.0"},"redoble":{"pos":"n","pol":"-0.5","std":"0.0"},"reducción de precios":{"pos":"n","pol":"-0.5","std":"0.0"},"refocilo":{"pos":"n","pol":"-0.5","std":"0.265"},"regodeo":{"pos":"n","pol":"-0.5","std":"0.265"},"reino monera":{"pos":"n","pol":"-0.5","std":"0.0"},"rencoroso":{"pos":"a","pol":"-0.5","std":"0.125"},"repelón":{"pos":"n","pol":"-0.5","std":"0.0"},"replegarse":{"pos":"v","pol":"-0.5","std":"0.177"},"reprensión":{"pos":"n","pol":"-0.5","std":"0.0"},"requiescat":{"pos":"n","pol":"-0.5","std":"0.0"},"resabio":{"pos":"n","pol":"-0.5","std":"0.0"},"retraïdo":{"pos":"a","pol":"-0.5","std":"0.0"},"rookie":{"pos":"n","pol":"-0.5","std":"0.0"},"ropa de luto":{"pos":"n","pol":"-0.5","std":"0.0"},"rucio":{"pos":"n","pol":"-0.5","std":"0.0"},"rusticidad":{"pos":"n","pol":"-0.5","std":"0.177"},"rutinario":{"pos":"a","pol":"-0.5","std":"0.265"},"sabotaje":{"pos":"n","pol":"-0.5","std":"0.0"},"salobre":{"pos":"a","pol":"-0.5","std":"0.0"},"saturnino":{"pos":"a","pol":"-0.5","std":"0.0"},"scratch":{"pos":"n","pol":"-0.5","std":"0.0"},"sin comprobar":{"pos":"a","pol":"-0.5","std":"0.0"},"sin demostrar":{"pos":"a","pol":"-0.5","std":"0.0"},"sin evidencia":{"pos":"a","pol":"-0.5","std":"0.0"},"sin pruebas":{"pos":"a","pol":"-0.5","std":"0.0"},"sin sentido":{"pos":"r","pol":"-0.5","std":"0.0"},"sobreexcitación":{"pos":"n","pol":"-0.5","std":"0.0"},"sobresalto":{"pos":"n","pol":"-0.5","std":"0.0"},"sociopático":{"pos":"a","pol":"-0.5","std":"0.0"},"sofisma":{"pos":"n","pol":"-0.5","std":"0.088"},"sofocador":{"pos":"a","pol":"-0.5","std":"0.0"},"sordera de transmisión":{"pos":"n","pol":"-0.5","std":"0.0"},"sordo":{"pos":"a","pol":"-0.3","std":"0.088"},"speakeasy":{"pos":"n","pol":"-0.5","std":"0.0"},"stogie":{"pos":"n","pol":"-0.5","std":"0.0"},"stogy":{"pos":"n","pol":"-0.5","std":"0.0"},"subalimentado":{"pos":"a","pol":"-0.5","std":"0.0"},"subproducción":{"pos":"n","pol":"-0.5","std":"0.0"},"subyugado":{"pos":"a","pol":"-0.5","std":"0.0"},"sueño eterno":{"pos":"n","pol":"-0.5","std":"0.0"},"suicidarse":{"pos":"v","pol":"-0.5","std":"0.0"},"superstición":{"pos":"n","pol":"-0.5","std":"0.0"},"síndrome de Cushing":{"pos":"n","pol":"-0.5","std":"0.0"},"sínfisis":{"pos":"n","pol":"-0.5","std":"0.0"},"taberna clandestina":{"pos":"n","pol":"-0.5","std":"0.0"},"tanatofobia":{"pos":"n","pol":"-0.5","std":"0.0"},"teatro de revista":{"pos":"n","pol":"-0.5","std":"0.0"},"teniente de policía":{"pos":"n","pol":"-0.5","std":"0.0"},"terracota":{"pos":"n","pol":"-0.5","std":"0.0"},"terrorismo":{"pos":"n","pol":"-0.5","std":"0.0"},"thuggee":{"pos":"n","pol":"-0.5","std":"0.0"},"tono áspero":{"pos":"n","pol":"-0.5","std":"0.0"},"tormenta":{"pos":"n","pol":"-0.5","std":"0.072"},"torpedear":{"pos":"v","pol":"-0.5","std":"0.0"},"toxicidad":{"pos":"n","pol":"-0.5","std":"0.088"},"trabajo sucio":{"pos":"n","pol":"-0.5","std":"0.0"},"traducción incorrecta":{"pos":"n","pol":"-0.5","std":"0.0"},"trastornado":{"pos":"a","pol":"-0.5","std":"0.191"},"trastorno de personalidad":{"pos":"n","pol":"-0.5","std":"0.0"},"trastorno metabólico":{"pos":"n","pol":"-0.5","std":"0.0"},"trato inhumano":{"pos":"n","pol":"-0.5","std":"0.0"},"traumático":{"pos":"a","pol":"-0.5","std":"0.177"},"treno":{"pos":"n","pol":"-0.5","std":"0.0"},"tribunal superior":{"pos":"n","pol":"-0.5","std":"0.0"},"trifulca":{"pos":"n","pol":"-0.5","std":"0.0"},"tristemente":{"pos":"r","pol":"-0.5","std":"0.191"},"tullido":{"pos":"n","pol":"-0.5","std":"0.0"},"tunco":{"pos":"n","pol":"-0.5","std":"0.0"},"turbador":{"pos":"a","pol":"-0.5","std":"0.0"},"tórtola":{"pos":"n","pol":"-0.5","std":"0.0"},"urodinia":{"pos":"n","pol":"-0.5","std":"0.0"},"vacunado":{"pos":"n","pol":"-0.375","std":"0.0"},"vamos":{"pos":"r","pol":"-0.5","std":"0.0"},"vena sigmoide":{"pos":"n","pol":"-0.5","std":"0.0"},"vencido":{"pos":"a","pol":"-0.5","std":"0.0"},"vermut dulce":{"pos":"n","pol":"-0.5","std":"0.0"},"vermú dulce":{"pos":"n","pol":"-0.5","std":"0.0"},"vermú negro":{"pos":"n","pol":"-0.5","std":"0.0"},"viciado":{"pos":"a","pol":"-0.5","std":"0.0"},"vieja bruja":{"pos":"n","pol":"-0.5","std":"0.0"},"vieja fea":{"pos":"n","pol":"-0.5","std":"0.0"},"viejuja":{"pos":"n","pol":"-0.5","std":"0.0"},"viento":{"pos":"n","pol":"-0.5","std":"0.0"},"vil":{"pos":"a","pol":"-0.446","std":"0.144"},"vileza":{"pos":"n","pol":"-0.5","std":"0.144"},"vituperioso":{"pos":"a","pol":"-0.5","std":"0.0"},"vociferación":{"pos":"n","pol":"-0.5","std":"0.0"},"voluntariedad":{"pos":"n","pol":"-0.5","std":"0.0"},"voluntarismo":{"pos":"n","pol":"-0.5","std":"0.0"},"volátil":{"pos":"a","pol":"-0.5","std":"0.0"},"víctima mortal":{"pos":"n","pol":"-0.5","std":"0.0"},"zambombo":{"pos":"n","pol":"-0.5","std":"0.0"},"zarrapastroso":{"pos":"a","pol":"-0.5","std":"0.0"},"zona peligrosa":{"pos":"n","pol":"-0.5","std":"0.0"},"abad":{"pos":"n","pol":"0.375","std":"0.0"},"abadesa":{"pos":"n","pol":"0.375","std":"0.0"},"abanderar":{"pos":"v","pol":"0.375","std":"0.0"},"abandonarse a algo":{"pos":"v","pol":"0.375","std":"0.0"},"abatible":{"pos":"a","pol":"0.375","std":"0.0"},"abdicable":{"pos":"a","pol":"0.375","std":"0.0"},"abilidad":{"pos":"n","pol":"0.313","std":"0.088"},"ablandado":{"pos":"a","pol":"0.375","std":"0.0"},"abonado":{"pos":"n","pol":"0.375","std":"0.0"},"abonamiento":{"pos":"n","pol":"0.375","std":"0.0"},"abotonar":{"pos":"v","pol":"0.375","std":"0.0"},"absorbible":{"pos":"a","pol":"0.375","std":"0.0"},"abstemio":{"pos":"a","pol":"0.375","std":"0.0"},"absuelto":{"pos":"a","pol":"0.375","std":"0.0"},"acallamiento":{"pos":"n","pol":"0.375","std":"0.0"},"acatar":{"pos":"v","pol":"0.375","std":"0.0"},"accesibilidad":{"pos":"n","pol":"0.417","std":"0.191"},"aceitunado":{"pos":"a","pol":"0.375","std":"0.0"},"achispado":{"pos":"a","pol":"0.375","std":"0.0"},"acierto":{"pos":"n","pol":"0.375","std":"0.354"},"acomodación":{"pos":"n","pol":"0.292","std":"0.144"},"acomodar":{"pos":"v","pol":"0.469","std":"0.157"},"acompañante":{"pos":"a","pol":"0.375","std":"0.0"},"acoplado":{"pos":"a","pol":"0.375","std":"0.088"},"acorazado":{"pos":"a","pol":"0.313","std":"0.0"},"acorazonado":{"pos":"a","pol":"0.375","std":"0.0"},"acordado":{"pos":"a","pol":"0.375","std":"0.0"},"acordarse":{"pos":"v","pol":"0.438","std":"0.0"},"acostumbrado":{"pos":"a","pol":"0.333","std":"0.072"},"acristalado":{"pos":"a","pol":"0.375","std":"0.0"},"activado":{"pos":"a","pol":"0.292","std":"0.125"},"actividad extracurricular":{"pos":"n","pol":"0.375","std":"0.0"},"activista":{"pos":"a","pol":"0.375","std":"0.0"},"activo":{"pos":"n","pol":"0.375","std":"0.0"},"activo de garantía":{"pos":"n","pol":"0.375","std":"0.0"},"actuado":{"pos":"a","pol":"0.375","std":"0.0"},"acuerdo escrito":{"pos":"n","pol":"0.375","std":"0.0"},"acullá":{"pos":"r","pol":"0.375","std":"0.0"},"acumulativo":{"pos":"a","pol":"0.375","std":"0.088"},"acústicamente":{"pos":"r","pol":"0.375","std":"0.0"},"adaptabilidad":{"pos":"n","pol":"0.313","std":"0.265"},"adaptable":{"pos":"a","pol":"0.313","std":"0.088"},"adaptar":{"pos":"v","pol":"0.3","std":"0.301"},"adecuar":{"pos":"v","pol":"0.281","std":"0.188"},"aderezar":{"pos":"v","pol":"0.313","std":"0.088"},"adherente":{"pos":"a","pol":"0.375","std":"0.0"},"adiestrado":{"pos":"a","pol":"0.375","std":"0.0"},"adiestrar":{"pos":"v","pol":"0.375","std":"0.0"},"adoxografía":{"pos":"n","pol":"0.375","std":"0.0"},"adquirible":{"pos":"a","pol":"0.375","std":"0.0"},"adulto":{"pos":"a","pol":"0.375","std":"0.088"},"aerobio":{"pos":"n","pol":"0.25","std":"0.0"},"aerotransportado":{"pos":"a","pol":"0.375","std":"0.0"},"afeminado":{"pos":"a","pol":"0.313","std":"0.0"},"aficionarse":{"pos":"v","pol":"0.375","std":"0.0"},"afilado":{"pos":"a","pol":"0.375","std":"0.086"},"afinar":{"pos":"v","pol":"0.304","std":"0.36"},"afluencia":{"pos":"n","pol":"0.375","std":"0.545"},"agasajar":{"pos":"v","pol":"0.333","std":"0.072"},"agil":{"pos":"a","pol":"0.375","std":"0.0"},"agotable":{"pos":"a","pol":"0.375","std":"0.0"},"agregado":{"pos":"a","pol":"0.458","std":"0.25"},"agua potable":{"pos":"n","pol":"0.375","std":"0.0"},"aguafiestas":{"pos":"n","pol":"0.375","std":"0.0"},"agudizar":{"pos":"v","pol":"0.3","std":"0.088"},"ahusar":{"pos":"v","pol":"0.375","std":"0.0"},"ajustado":{"pos":"a","pol":"0.375","std":"0.112"},"ajustar":{"pos":"v","pol":"0.292","std":"0.251"},"alado":{"pos":"a","pol":"0.313","std":"0.088"},"alcanzado":{"pos":"a","pol":"0.375","std":"0.0"},"alerta":{"pos":"a","pol":"0.375","std":"0.0"},"alfabetismo":{"pos":"n","pol":"0.375","std":"0.0"},"aliciente":{"pos":"n","pol":"0.438","std":"0.0"},"aliento":{"pos":"n","pol":"0.313","std":"0.387"},"alineado":{"pos":"a","pol":"0.275","std":"0.112"},"allegro":{"pos":"n","pol":"0.375","std":"0.0"},"allunyat":{"pos":"a","pol":"0.375","std":"0.0"},"allá":{"pos":"r","pol":"0.375","std":"0.0"},"alta fidelidad":{"pos":"n","pol":"0.313","std":"0.088"},"altruísta":{"pos":"n","pol":"0.375","std":"0.0"},"alucinante":{"pos":"a","pol":"0.375","std":"0.0"},"amaestrado":{"pos":"a","pol":"0.375","std":"0.0"},"amaestrar":{"pos":"v","pol":"0.375","std":"0.0"},"amamantar":{"pos":"v","pol":"0.375","std":"0.0"},"amarillo":{"pos":"a","pol":"0.375","std":"0.0"},"amarillo canario":{"pos":"a","pol":"0.375","std":"0.0"},"amatista":{"pos":"a","pol":"0.375","std":"0.0"},"ambivalencia":{"pos":"n","pol":"0.375","std":"0.0"},"ambivalente":{"pos":"a","pol":"0.375","std":"0.0"},"ambrosiaco":{"pos":"a","pol":"0.375","std":"0.0"},"ambrosíaco":{"pos":"a","pol":"0.375","std":"0.0"},"ametista":{"pos":"a","pol":"0.375","std":"0.0"},"amigo por correspondencia":{"pos":"n","pol":"0.375","std":"0.0"},"amor fraternal":{"pos":"n","pol":"0.375","std":"0.0"},"amotinador":{"pos":"a","pol":"0.375","std":"0.0"},"ampliamente":{"pos":"r","pol":"0.313","std":"0.354"},"amplio":{"pos":"a","pol":"0.393","std":"0.142"},"anacoreta":{"pos":"n","pol":"0.375","std":"0.0"},"anaerobio":{"pos":"a","pol":"0.375","std":"0.0"},"anaeróbico":{"pos":"a","pol":"0.375","std":"0.0"},"analéptico":{"pos":"a","pol":"0.375","std":"0.0"},"anaranjado":{"pos":"a","pol":"0.375","std":"0.0"},"anchura":{"pos":"n","pol":"0.292","std":"0.191"},"anejo":{"pos":"a","pol":"0.438","std":"0.354"},"anexo":{"pos":"a","pol":"0.344","std":"0.237"},"anfipróstilo":{"pos":"a","pol":"0.375","std":"0.0"},"anfiprótico":{"pos":"a","pol":"0.375","std":"0.0"},"anfípodo":{"pos":"n","pol":"0.375","std":"0.0"},"anfótero":{"pos":"a","pol":"0.375","std":"0.0"},"angélico":{"pos":"a","pol":"0.375","std":"0.619"},"aniñado":{"pos":"a","pol":"0.375","std":"0.0"},"antender":{"pos":"v","pol":"0.375","std":"0.0"},"antheraea":{"pos":"n","pol":"0.375","std":"0.0"},"antiadherente":{"pos":"a","pol":"0.375","std":"0.0"},"antiaéreo":{"pos":"a","pol":"-0.375","std":"0.0"},"antitóxico":{"pos":"a","pol":"0.375","std":"0.0"},"antiácido":{"pos":"a","pol":"0.375","std":"0.0"},"antropofagia":{"pos":"n","pol":"0.375","std":"0.0"},"anuencia":{"pos":"n","pol":"0.313","std":"0.177"},"análogo":{"pos":"a","pol":"0.292","std":"0.125"},"apaciguarse":{"pos":"v","pol":"0.375","std":"0.0"},"aparato acústico":{"pos":"n","pol":"0.375","std":"0.0"},"apetitoso":{"pos":"a","pol":"0.292","std":"0.243"},"apical":{"pos":"a","pol":"0.375","std":"0.0"},"aplacable":{"pos":"a","pol":"0.375","std":"0.0"},"aplacamiento":{"pos":"n","pol":"0.469","std":"0.237"},"aplauso":{"pos":"n","pol":"0.458","std":"0.072"},"aplicabilidad":{"pos":"n","pol":"0.375","std":"0.0"},"apocárpico":{"pos":"a","pol":"0.375","std":"0.0"},"apología":{"pos":"n","pol":"0.333","std":"0.072"},"apreciar":{"pos":"v","pol":"0.375","std":"0.246"},"aprobación":{"pos":"n","pol":"0.359","std":"0.17"},"aprobar formalmente":{"pos":"v","pol":"0.375","std":"0.0"},"aprovechable":{"pos":"a","pol":"0.375","std":"0.0"},"aprovechar":{"pos":"v","pol":"0.417","std":"0.217"},"arbitrable":{"pos":"a","pol":"0.375","std":"0.0"},"arbitrario":{"pos":"a","pol":"0.313","std":"0.0"},"arcano":{"pos":"a","pol":"0.25","std":"0.0"},"archimandita":{"pos":"n","pol":"0.375","std":"0.0"},"archimandrita":{"pos":"n","pol":"0.375","std":"0.0"},"argot":{"pos":"a","pol":"0.375","std":"0.0"},"argénteo":{"pos":"a","pol":"0.375","std":"0.0"},"aristocrático":{"pos":"a","pol":"0.438","std":"0.088"},"aristotelismo":{"pos":"n","pol":"0.375","std":"0.0"},"aritméticamente":{"pos":"r","pol":"0.375","std":"0.0"},"arlequinada":{"pos":"n","pol":"0.375","std":"0.0"},"armado":{"pos":"a","pol":"0.333","std":"0.072"},"armonía":{"pos":"n","pol":"0.3","std":"0.311"},"arrollador":{"pos":"a","pol":"0.375","std":"0.0"},"arte teatral":{"pos":"n","pol":"0.375","std":"0.0"},"artefacto":{"pos":"n","pol":"0.375","std":"0.0"},"artes":{"pos":"n","pol":"0.375","std":"0.0"},"artesanal":{"pos":"a","pol":"0.375","std":"0.0"},"artesanía":{"pos":"n","pol":"0.417","std":"0.191"},"artístico":{"pos":"a","pol":"0.417","std":"0.505"},"ascendente":{"pos":"a","pol":"0.375","std":"0.177"},"ascendiente":{"pos":"a","pol":"0.417","std":"0.191"},"aseado":{"pos":"a","pol":"0.313","std":"0.088"},"asegurado":{"pos":"a","pol":"0.375","std":"0.0"},"aserrar":{"pos":"v","pol":"0.375","std":"0.0"},"asesor":{"pos":"a","pol":"0.25","std":"0.0"},"asesora":{"pos":"n","pol":"0.375","std":"0.0"},"asibilación":{"pos":"n","pol":"0.375","std":"0.0"},"asimilable":{"pos":"a","pol":"0.375","std":"0.0"},"asimilador":{"pos":"a","pol":"0.375","std":"0.177"},"asintomático":{"pos":"a","pol":"0.375","std":"0.0"},"asistido":{"pos":"a","pol":"0.375","std":"0.0"},"asociado":{"pos":"a","pol":"0.313","std":"0.088"},"asombro":{"pos":"n","pol":"0.375","std":"0.402"},"asombroso":{"pos":"a","pol":"0.333","std":"0.217"},"astado":{"pos":"a","pol":"0.375","std":"0.0"},"asustadizo":{"pos":"a","pol":"0.375","std":"0.0"},"atado":{"pos":"a","pol":"0.271","std":"0.282"},"ataráxico":{"pos":"a","pol":"0.375","std":"0.0"},"ataviarse":{"pos":"v","pol":"0.417","std":"0.144"},"atención de enfermería":{"pos":"n","pol":"0.375","std":"0.0"},"atento":{"pos":"a","pol":"0.341","std":"0.141"},"atestado":{"pos":"a","pol":"0.375","std":"0.0"},"atribuible":{"pos":"a","pol":"0.375","std":"0.0"},"atuendo":{"pos":"n","pol":"0.375","std":"0.0"},"atávico":{"pos":"a","pol":"0.375","std":"0.0"},"audibilidad":{"pos":"n","pol":"0.375","std":"0.0"},"augusto":{"pos":"a","pol":"0.375","std":"0.265"},"autentificar":{"pos":"v","pol":"0.292","std":"0.191"},"autofecundado":{"pos":"a","pol":"0.375","std":"0.0"},"autogénesis":{"pos":"n","pol":"0.375","std":"0.0"},"automatizado":{"pos":"a","pol":"0.375","std":"0.0"},"autopolinizado":{"pos":"a","pol":"0.375","std":"0.0"},"autorizado":{"pos":"a","pol":"0.437","std":"0.129"},"auténtico":{"pos":"a","pol":"0.268","std":"0.213"},"auxilio":{"pos":"v","pol":"0.375","std":"0.0"},"avanzado":{"pos":"a","pol":"0.281","std":"0.249"},"avanzarse":{"pos":"v","pol":"0.375","std":"0.53"},"avançat":{"pos":"a","pol":"0.375","std":"0.177"},"avispado":{"pos":"a","pol":"0.458","std":"0.072"},"ayuda":{"pos":"v","pol":"0.375","std":"0.0"},"ayuda exterior":{"pos":"n","pol":"0.375","std":"0.0"},"ayudado":{"pos":"a","pol":"0.375","std":"0.0"},"ayudar":{"pos":"v","pol":"0.275","std":"0.112"},"azul celeste":{"pos":"n","pol":"0.25","std":"0.0"},"añadible":{"pos":"a","pol":"0.375","std":"0.0"},"bactericida":{"pos":"a","pol":"0.375","std":"0.0"},"balance final":{"pos":"n","pol":"0.375","std":"0.0"},"ballet clásico":{"pos":"n","pol":"0.375","std":"0.0"},"balonvolea":{"pos":"n","pol":"0.375","std":"0.0"},"barato":{"pos":"a","pol":"0.292","std":"0.0"},"barrigudo":{"pos":"a","pol":"0.292","std":"0.072"},"barrigón":{"pos":"a","pol":"0.375","std":"0.0"},"bastar":{"pos":"v","pol":"0.375","std":"0.0"},"beatitud":{"pos":"n","pol":"0.375","std":"0.0"},"benchmark":{"pos":"n","pol":"0.375","std":"0.0"},"beneficiar":{"pos":"v","pol":"0.417","std":"0.402"},"beneficios":{"pos":"n","pol":"0.375","std":"0.0"},"beneplácito":{"pos":"n","pol":"0.313","std":"0.177"},"benignidad":{"pos":"n","pol":"0.375","std":"0.0"},"benigno":{"pos":"a","pol":"0.469","std":"0.359"},"bermejo":{"pos":"a","pol":"0.375","std":"0.0"},"bienhablado":{"pos":"a","pol":"0.375","std":"0.0"},"billete de autobús":{"pos":"n","pol":"0.375","std":"0.0"},"billete de tren":{"pos":"n","pol":"0.375","std":"0.0"},"bimestral":{"pos":"a","pol":"0.313","std":"0.088"},"biologismo":{"pos":"n","pol":"0.375","std":"0.0"},"bioluminiscente":{"pos":"a","pol":"0.375","std":"0.0"},"bioquímico":{"pos":"n","pol":"0.375","std":"0.0"},"bipartido":{"pos":"a","pol":"0.375","std":"0.0"},"blasonado":{"pos":"a","pol":"0.375","std":"0.0"},"bocón":{"pos":"a","pol":"0.375","std":"0.0"},"bonanza":{"pos":"n","pol":"0.417","std":"0.072"},"bondadoso":{"pos":"a","pol":"0.357","std":"0.152"},"boquiabierto":{"pos":"a","pol":"0.438","std":"0.0"},"borrable":{"pos":"a","pol":"0.375","std":"0.0"},"braco":{"pos":"a","pol":"0.375","std":"0.0"},"brillante":{"pos":"a","pol":"0.49","std":"0.158"},"bruno":{"pos":"a","pol":"0.375","std":"0.0"},"brutal":{"pos":"a","pol":"0.264","std":"0.305"},"brío":{"pos":"n","pol":"0.313","std":"0.177"},"buena prenda":{"pos":"n","pol":"0.375","std":"0.0"},"buena racha":{"pos":"n","pol":"0.375","std":"0.0"},"buena suerte":{"pos":"n","pol":"0.438","std":"0.265"},"buenas noticias":{"pos":"n","pol":"0.375","std":"0.0"},"buenaventura":{"pos":"n","pol":"0.438","std":"0.265"},"butiráceo":{"pos":"a","pol":"0.375","std":"0.0"},"caballerosidad":{"pos":"n","pol":"0.375","std":"0.0"},"caballería medieval":{"pos":"n","pol":"0.375","std":"0.0"},"cabalístico":{"pos":"a","pol":"0.375","std":"0.0"},"cachet":{"pos":"n","pol":"0.375","std":"0.0"},"caer a plomo":{"pos":"v","pol":"0.375","std":"0.0"},"calculado":{"pos":"a","pol":"0.375","std":"0.0"},"calcular cumulativamente":{"pos":"v","pol":"0.375","std":"0.0"},"calentado":{"pos":"a","pol":"0.313","std":"0.088"},"calentar el banquillo":{"pos":"v","pol":"0.375","std":"0.0"},"caliente":{"pos":"a","pol":"0.406","std":"0.161"},"caligrafía":{"pos":"n","pol":"0.375","std":"0.0"},"calloso":{"pos":"a","pol":"0.438","std":"0.088"},"calmante":{"pos":"n","pol":"0.25","std":"0.0"},"cambiable":{"pos":"a","pol":"0.313","std":"0.0"},"cambiante":{"pos":"a","pol":"0.333","std":"0.217"},"caminito de rosas":{"pos":"n","pol":"0.375","std":"0.0"},"camino de herradura":{"pos":"n","pol":"0.375","std":"0.0"},"camino de rosas":{"pos":"n","pol":"0.375","std":"0.0"},"campanilleo":{"pos":"n","pol":"0.375","std":"0.0"},"canción religiosa":{"pos":"n","pol":"0.375","std":"0.0"},"canibalismo":{"pos":"n","pol":"0.375","std":"0.0"},"canon":{"pos":"n","pol":"0.281","std":"0.063"},"canonizado":{"pos":"a","pol":"0.375","std":"0.0"},"cantar las alabanzas":{"pos":"v","pol":"0.438","std":"0.088"},"canto de villancicos":{"pos":"n","pol":"0.375","std":"0.0"},"capacidad":{"pos":"n","pol":"0.307","std":"0.244"},"capacitar":{"pos":"v","pol":"0.438","std":"0.12"},"capado":{"pos":"a","pol":"0.375","std":"0.0"},"capital":{"pos":"a","pol":"0.281","std":"0.277"},"carioca":{"pos":"n","pol":"0.375","std":"0.0"},"carisma":{"pos":"n","pol":"0.375","std":"0.0"},"carmesí":{"pos":"a","pol":"0.375","std":"0.0"},"carminativo":{"pos":"a","pol":"0.375","std":"0.0"},"carácter festivo":{"pos":"n","pol":"0.375","std":"0.0"},"casado":{"pos":"a","pol":"0.438","std":"0.0"},"castigador":{"pos":"a","pol":"0.375","std":"0.0"},"castrado":{"pos":"n","pol":"-0.375","std":"0.0"},"casuística":{"pos":"n","pol":"0.375","std":"0.0"},"casuístico":{"pos":"a","pol":"0.375","std":"0.0"},"cata":{"pos":"n","pol":"0.375","std":"0.0"},"catequesis":{"pos":"n","pol":"0.313","std":"0.088"},"catequizar":{"pos":"v","pol":"0.375","std":"0.0"},"cañón antiaéreo":{"pos":"n","pol":"0.375","std":"0.0"},"celebración":{"pos":"n","pol":"0.458","std":"0.072"},"celebridad":{"pos":"n","pol":"0.375","std":"0.0"},"centelleante":{"pos":"a","pol":"0.375","std":"0.177"},"centralizar":{"pos":"v","pol":"0.375","std":"0.0"},"centrista":{"pos":"a","pol":"0.313","std":"0.088"},"centro de actividades":{"pos":"n","pol":"0.375","std":"0.0"},"centrípeto":{"pos":"a","pol":"0.375","std":"0.0"},"cepillado":{"pos":"a","pol":"0.313","std":"0.177"},"ceremonia religiosa":{"pos":"n","pol":"0.375","std":"0.0"},"ceremonial":{"pos":"a","pol":"0.25","std":"0.0"},"cereza":{"pos":"a","pol":"0.375","std":"0.0"},"cerrar con pestillo":{"pos":"v","pol":"0.375","std":"0.0"},"cerrar puntos":{"pos":"v","pol":"0.375","std":"0.0"},"certificado":{"pos":"n","pol":"0.313","std":"0.088"},"ceñido":{"pos":"a","pol":"0.438","std":"0.088"},"chanchullero":{"pos":"n","pol":"0.375","std":"0.0"},"charlotada":{"pos":"n","pol":"0.375","std":"0.0"},"chauvinista":{"pos":"a","pol":"0.25","std":"0.0"},"cicatrizado":{"pos":"a","pol":"0.375","std":"0.0"},"científico espacial":{"pos":"n","pol":"0.375","std":"0.0"},"cigomorfo":{"pos":"a","pol":"0.375","std":"0.0"},"cinta azul":{"pos":"n","pol":"0.375","std":"0.0"},"cintilar":{"pos":"v","pol":"0.375","std":"0.0"},"circunstancial":{"pos":"a","pol":"0.313","std":"0.088"},"circunstanciar":{"pos":"v","pol":"0.375","std":"0.0"},"civil":{"pos":"a","pol":"0.275","std":"0.112"},"clandestino":{"pos":"a","pol":"0.375","std":"0.0"},"clarificativo":{"pos":"a","pol":"0.375","std":"0.0"},"claro":{"pos":"r","pol":"-0.25","std":"0.0"},"clasista":{"pos":"a","pol":"0.375","std":"0.0"},"claudicar":{"pos":"v","pol":"0.375","std":"0.0"},"clemente":{"pos":"a","pol":"0.438","std":"0.188"},"clo":{"pos":"n","pol":"0.375","std":"0.0"},"clásico":{"pos":"a","pol":"0.25","std":"0.227"},"coactivo":{"pos":"a","pol":"0.375","std":"0.0"},"cobrado":{"pos":"a","pol":"0.375","std":"0.0"},"codiciado":{"pos":"a","pol":"0.375","std":"0.0"},"coercitivo":{"pos":"a","pol":"0.375","std":"0.0"},"coexistente":{"pos":"a","pol":"0.375","std":"0.0"},"coextensivo":{"pos":"a","pol":"0.375","std":"0.0"},"cognitivamente":{"pos":"r","pol":"0.375","std":"0.0"},"coherencia":{"pos":"n","pol":"0.313","std":"0.088"},"coherente":{"pos":"a","pol":"0.406","std":"0.144"},"coincidente":{"pos":"a","pol":"0.292","std":"0.125"},"cojinete":{"pos":"n","pol":"0.375","std":"0.0"},"colectivo":{"pos":"a","pol":"0.313","std":"0.217"},"colorado":{"pos":"a","pol":"0.375","std":"0.088"},"coloreado":{"pos":"a","pol":"0.375","std":"0.0"},"colosal":{"pos":"a","pol":"0.375","std":"0.072"},"columnario":{"pos":"a","pol":"0.313","std":"0.0"},"combinable":{"pos":"a","pol":"0.438","std":"0.088"},"combinador":{"pos":"a","pol":"0.375","std":"0.0"},"combinatorio":{"pos":"a","pol":"0.375","std":"0.0"},"comburente":{"pos":"a","pol":"0.375","std":"0.0"},"comerciable":{"pos":"a","pol":"0.375","std":"0.191"},"como contestación":{"pos":"r","pol":"0.375","std":"0.0"},"comodidades":{"pos":"n","pol":"0.375","std":"0.0"},"compartimentado":{"pos":"a","pol":"0.313","std":"0.0"},"compatibilidad":{"pos":"n","pol":"0.313","std":"0.177"},"competencia":{"pos":"n","pol":"0.344","std":"0.277"},"completado":{"pos":"a","pol":"0.375","std":"0.0"},"completo":{"pos":"a","pol":"0.469","std":"0.186"},"comprensibilidad":{"pos":"n","pol":"0.375","std":"0.0"},"comprensible":{"pos":"a","pol":"0.375","std":"0.191"},"compresible":{"pos":"a","pol":"0.375","std":"0.0"},"comprobado":{"pos":"a","pol":"0.333","std":"0.072"},"comprometido":{"pos":"a","pol":"0.417","std":"0.072"},"compromiso matrimonial":{"pos":"n","pol":"0.375","std":"0.0"},"comunicativo":{"pos":"a","pol":"0.313","std":"0.329"},"comunidad de intereses":{"pos":"n","pol":"0.375","std":"0.0"},"con bastante seguridad":{"pos":"r","pol":"0.375","std":"0.0"},"con certeza":{"pos":"r","pol":"0.375","std":"0.0"},"con colores":{"pos":"n","pol":"0.375","std":"0.0"},"con seguridad":{"pos":"r","pol":"0.375","std":"0.0"},"con vivacidad":{"pos":"r","pol":"0.375","std":"0.0"},"concentrado":{"pos":"a","pol":"0.268","std":"0.177"},"concepto":{"pos":"n","pol":"0.375","std":"0.0"},"concertación":{"pos":"n","pol":"0.375","std":"0.0"},"concienzudo":{"pos":"a","pol":"0.292","std":"0.144"},"concierto benéfico":{"pos":"n","pol":"0.375","std":"0.0"},"conciso":{"pos":"a","pol":"0.375","std":"0.0"},"concomitante":{"pos":"a","pol":"0.375","std":"0.0"},"condecorar":{"pos":"v","pol":"0.375","std":"0.0"},"conducido":{"pos":"a","pol":"0.375","std":"0.0"},"conector":{"pos":"a","pol":"0.375","std":"0.0"},"confiabilidad":{"pos":"n","pol":"0.375","std":"0.0"},"confiado":{"pos":"a","pol":"0.375","std":"0.144"},"confidencial":{"pos":"a","pol":"0.313","std":"0.243"},"confinado":{"pos":"a","pol":"0.375","std":"0.0"},"confirmar":{"pos":"v","pol":"0.313","std":"0.188"},"confluente":{"pos":"a","pol":"0.375","std":"0.0"},"conforme":{"pos":"a","pol":"0.375","std":"0.12"},"conformista":{"pos":"n","pol":"0.375","std":"0.0"},"confucionismo":{"pos":"n","pol":"0.375","std":"0.0"},"confundido":{"pos":"a","pol":"0.375","std":"0.0"},"congratulación":{"pos":"n","pol":"0.417","std":"0.144"},"conjeturable":{"pos":"a","pol":"0.375","std":"0.0"},"conjetural":{"pos":"a","pol":"0.375","std":"0.0"},"conmemoración":{"pos":"n","pol":"0.375","std":"0.0"},"conmemorativo":{"pos":"a","pol":"0.375","std":"0.0"},"conmensurable":{"pos":"a","pol":"0.375","std":"0.0"},"conmovedor":{"pos":"a","pol":"0.344","std":"0.0"},"conmutable":{"pos":"a","pol":"0.292","std":"0.144"},"conmutativo":{"pos":"a","pol":"0.375","std":"0.0"},"connivencia":{"pos":"n","pol":"0.281","std":"0.125"},"conocedor":{"pos":"n","pol":"0.375","std":"0.0"},"conocido":{"pos":"n","pol":"0.25","std":"0.0"},"conocimiento general":{"pos":"n","pol":"0.375","std":"0.0"},"conocimiento práctico":{"pos":"n","pol":"0.375","std":"0.0"},"conquistable":{"pos":"a","pol":"0.313","std":"0.0"},"consagrar":{"pos":"v","pol":"0.438","std":"0.161"},"consagrarse":{"pos":"v","pol":"0.292","std":"0.315"},"consciencia":{"pos":"n","pol":"0.375","std":"0.177"},"consciente":{"pos":"n","pol":"0.375","std":"0.0"},"consecuente":{"pos":"a","pol":"0.458","std":"0.315"},"consenso":{"pos":"n","pol":"0.292","std":"0.144"},"consideración":{"pos":"n","pol":"0.341","std":"0.256"},"considerado":{"pos":"a","pol":"0.425","std":"0.088"},"consolidado":{"pos":"a","pol":"0.438","std":"0.088"},"consonante":{"pos":"a","pol":"0.333","std":"0.217"},"consonante sibilante":{"pos":"n","pol":"0.375","std":"0.0"},"constante":{"pos":"a","pol":"0.344","std":"0.299"},"constatar":{"pos":"v","pol":"0.375","std":"0.177"},"constitutivo":{"pos":"a","pol":"0.375","std":"0.0"},"constrictivo":{"pos":"a","pol":"0.375","std":"0.0"},"consultor":{"pos":"n","pol":"0.375","std":"0.0"},"consultora":{"pos":"n","pol":"0.375","std":"0.0"},"consumible":{"pos":"a","pol":"0.375","std":"0.177"},"contagioso":{"pos":"a","pol":"0.313","std":"0.237"},"contar con":{"pos":"v","pol":"0.375","std":"0.0"},"contemplativo":{"pos":"a","pol":"0.375","std":"0.0"},"contemporizador":{"pos":"n","pol":"0.313","std":"0.177"},"contradecible":{"pos":"a","pol":"0.375","std":"0.0"},"contraer esponsales":{"pos":"v","pol":"0.375","std":"0.0"},"contrato unilateral":{"pos":"n","pol":"0.375","std":"0.0"},"control de calidad":{"pos":"n","pol":"0.375","std":"0.0"},"contumaz":{"pos":"a","pol":"0.375","std":"0.0"},"contundente":{"pos":"a","pol":"0.333","std":"0.125"},"convencionalismo":{"pos":"n","pol":"0.313","std":"0.088"},"convenido":{"pos":"a","pol":"0.313","std":"0.088"},"convenir":{"pos":"v","pol":"0.375","std":"0.258"},"convento de monjas":{"pos":"n","pol":"0.375","std":"0.0"},"convertible":{"pos":"a","pol":"0.333","std":"0.072"},"convidar":{"pos":"v","pol":"0.375","std":"0.0"},"convincente":{"pos":"a","pol":"0.281","std":"0.063"},"cornudo":{"pos":"a","pol":"0.313","std":"0.088"},"correctamente":{"pos":"r","pol":"0.375","std":"0.0"},"corredero":{"pos":"a","pol":"0.375","std":"0.0"},"correspondiente":{"pos":"a","pol":"0.292","std":"0.171"},"corroboración":{"pos":"n","pol":"0.313","std":"0.088"},"corroborar":{"pos":"v","pol":"0.275","std":"0.143"},"corruptivo":{"pos":"a","pol":"0.375","std":"0.0"},"corruptor":{"pos":"a","pol":"0.375","std":"0.0"},"cortejar":{"pos":"v","pol":"0.333","std":"0.25"},"cortejo":{"pos":"n","pol":"0.375","std":"0.331"},"cortesía":{"pos":"n","pol":"0.271","std":"0.137"},"cosmético":{"pos":"n","pol":"0.25","std":"0.0"},"creación artística":{"pos":"n","pol":"0.375","std":"0.0"},"credencial":{"pos":"n","pol":"0.375","std":"0.0"},"credibilidad":{"pos":"n","pol":"0.313","std":"0.088"},"creíble":{"pos":"a","pol":"0.438","std":"0.0"},"cristiano":{"pos":"n","pol":"0.25","std":"0.0"},"crujiente":{"pos":"a","pol":"0.375","std":"0.088"},"cruzarse":{"pos":"v","pol":"0.313","std":"0.088"},"crónico":{"pos":"a","pol":"0.333","std":"0.072"},"cuadrado":{"pos":"a","pol":"0.375","std":"0.125"},"cuadriculado":{"pos":"a","pol":"0.375","std":"0.0"},"cualificar":{"pos":"v","pol":"0.375","std":"0.331"},"cualitativo":{"pos":"a","pol":"0.375","std":"0.0"},"cuaresmal":{"pos":"a","pol":"0.375","std":"0.0"},"cucufato":{"pos":"n","pol":"0.375","std":"0.0"},"cuerdo":{"pos":"a","pol":"0.375","std":"0.0"},"cuidado":{"pos":"a","pol":"0.375","std":"0.088"},"cultivado":{"pos":"a","pol":"0.375","std":"0.072"},"culturalmente":{"pos":"r","pol":"0.375","std":"0.0"},"culturista":{"pos":"n","pol":"0.375","std":"0.0"},"cum laude":{"pos":"r","pol":"0.375","std":"0.0"},"cumplido":{"pos":"n","pol":"0.458","std":"0.072"},"cumplidor":{"pos":"a","pol":"0.438","std":"0.088"},"cumplir":{"pos":"v","pol":"0.266","std":"0.219"},"cumulativo":{"pos":"a","pol":"0.375","std":"0.0"},"cuneado":{"pos":"a","pol":"0.375","std":"0.0"},"curabilidad":{"pos":"n","pol":"0.375","std":"0.0"},"curar":{"pos":"v","pol":"0.35","std":"0.185"},"curiosidad":{"pos":"n","pol":"0.375","std":"0.177"},"curso de extensión":{"pos":"n","pol":"0.375","std":"0.0"},"curvilíneo":{"pos":"a","pol":"0.458","std":"0.125"},"cívico":{"pos":"a","pol":"0.313","std":"0.368"},"código ético":{"pos":"n","pol":"0.375","std":"0.0"},"cómico":{"pos":"n","pol":"0.25","std":"0.0"},"cóncavamente":{"pos":"a","pol":"0.375","std":"0.0"},"córner":{"pos":"n","pol":"0.375","std":"0.0"},"dacrón":{"pos":"n","pol":"0.375","std":"0.0"},"danza ceremonial":{"pos":"n","pol":"0.375","std":"0.0"},"danza ritual":{"pos":"n","pol":"0.375","std":"0.0"},"dar alojamiento":{"pos":"v","pol":"0.313","std":"0.088"},"dar cuerpo":{"pos":"v","pol":"0.375","std":"0.0"},"dar cuidados":{"pos":"v","pol":"0.375","std":"0.0"},"dar de mamar":{"pos":"v","pol":"0.375","std":"0.0"},"dar derecho a":{"pos":"v","pol":"0.375","std":"0.0"},"dar el chivatazo":{"pos":"v","pol":"0.375","std":"0.0"},"dar el sustento":{"pos":"v","pol":"0.375","std":"0.0"},"dar frutos":{"pos":"v","pol":"0.375","std":"0.0"},"dar la palabra":{"pos":"v","pol":"0.375","std":"0.0"},"dar pistas":{"pos":"v","pol":"0.375","std":"0.0"},"dar tajos":{"pos":"v","pol":"0.375","std":"0.0"},"dar una pista":{"pos":"v","pol":"0.375","std":"0.0"},"darse cita":{"pos":"v","pol":"0.375","std":"0.0"},"de acuerdo":{"pos":"n","pol":"0.375","std":"0.0"},"de forma espesa":{"pos":"r","pol":"0.375","std":"0.0"},"de término":{"pos":"a","pol":"0.375","std":"0.0"},"debido":{"pos":"a","pol":"0.313","std":"0.354"},"decidido":{"pos":"a","pol":"0.411","std":"0.112"},"decisivamente":{"pos":"r","pol":"0.313","std":"0.088"},"declaración verdadera":{"pos":"n","pol":"0.375","std":"0.0"},"declarado":{"pos":"a","pol":"0.417","std":"0.072"},"definido":{"pos":"a","pol":"0.438","std":"0.215"},"definitivo":{"pos":"a","pol":"0.333","std":"0.26"},"degenerado":{"pos":"n","pol":"0.375","std":"0.0"},"dejar pasmado":{"pos":"v","pol":"0.375","std":"0.0"},"delantera":{"pos":"n","pol":"0.313","std":"0.292"},"delectación":{"pos":"n","pol":"0.375","std":"0.0"},"deleitación":{"pos":"n","pol":"0.375","std":"0.0"},"deleitar":{"pos":"v","pol":"0.281","std":"0.26"},"deleite":{"pos":"n","pol":"0.375","std":"0.0"},"deliberado":{"pos":"a","pol":"0.458","std":"0.072"},"deliberativo":{"pos":"a","pol":"0.375","std":"0.0"},"delicioso":{"pos":"a","pol":"0.458","std":"0.217"},"delineado":{"pos":"a","pol":"0.375","std":"0.0"},"delinear":{"pos":"a","pol":"0.375","std":"0.0"},"deltoide":{"pos":"a","pol":"0.375","std":"0.0"},"demagogo":{"pos":"n","pol":"0.375","std":"0.0"},"demasiado":{"pos":"a","pol":"0.375","std":"0.0"},"democrático":{"pos":"a","pol":"0.375","std":"0.382"},"demostrable":{"pos":"a","pol":"0.313","std":"0.0"},"denominacionalmente":{"pos":"r","pol":"0.375","std":"0.0"},"densificar":{"pos":"v","pol":"0.375","std":"0.0"},"dependiente":{"pos":"a","pol":"0.375","std":"0.177"},"depravado":{"pos":"a","pol":"-0.375","std":"0.26"},"depresivo":{"pos":"n","pol":"-0.375","std":"0.0"},"derecho a la libertad":{"pos":"n","pol":"0.375","std":"0.0"},"derecho de alimentos":{"pos":"n","pol":"0.375","std":"0.0"},"derivado":{"pos":"a","pol":"0.375","std":"0.0"},"derivativo":{"pos":"a","pol":"0.375","std":"0.0"},"desagraviar":{"pos":"v","pol":"0.375","std":"0.0"},"desarrollado":{"pos":"a","pol":"0.438","std":"0.088"},"desbastado":{"pos":"a","pol":"0.375","std":"0.0"},"descentralizador":{"pos":"a","pol":"0.375","std":"0.0"},"desclasificar":{"pos":"v","pol":"0.375","std":"0.0"},"descollar":{"pos":"v","pol":"0.375","std":"0.0"},"desconectar":{"pos":"v","pol":"0.271","std":"0.292"},"deseabilidad":{"pos":"n","pol":"0.375","std":"0.0"},"desempañar":{"pos":"v","pol":"0.375","std":"0.0"},"desencaminado":{"pos":"a","pol":"0.375","std":"0.0"},"desencantado":{"pos":"a","pol":"0.375","std":"0.0"},"desencorvar":{"pos":"v","pol":"0.438","std":"0.088"},"desestima":{"pos":"n","pol":"0.375","std":"0.0"},"desfavorecido":{"pos":"a","pol":"0.375","std":"0.0"},"deshelar":{"pos":"v","pol":"0.375","std":"0.0"},"deshumanización":{"pos":"n","pol":"0.375","std":"0.0"},"deshumano":{"pos":"a","pol":"0.375","std":"0.0"},"desinfectante":{"pos":"a","pol":"0.375","std":"0.0"},"desintegrador":{"pos":"a","pol":"0.375","std":"0.0"},"desligado":{"pos":"a","pol":"0.375","std":"0.088"},"deslizante":{"pos":"a","pol":"0.313","std":"0.0"},"desmitificar":{"pos":"a","pol":"0.375","std":"0.0"},"desobstruido":{"pos":"a","pol":"0.375","std":"0.0"},"despabilado":{"pos":"a","pol":"0.375","std":"0.0"},"despenalizar":{"pos":"v","pol":"0.292","std":"0.125"},"despierto":{"pos":"a","pol":"0.375","std":"0.072"},"desposar":{"pos":"v","pol":"0.313","std":"0.088"},"desposorios":{"pos":"n","pol":"0.375","std":"0.0"},"desprender":{"pos":"v","pol":"0.281","std":"0.217"},"desprendido":{"pos":"a","pol":"0.375","std":"0.088"},"destacado":{"pos":"a","pol":"0.389","std":"0.165"},"destacarse":{"pos":"v","pol":"0.375","std":"0.0"},"destetado":{"pos":"a","pol":"0.375","std":"0.0"},"destituible":{"pos":"a","pol":"0.375","std":"0.0"},"desvelado":{"pos":"a","pol":"0.333","std":"0.072"},"desvitalización":{"pos":"n","pol":"0.375","std":"0.0"},"detectable":{"pos":"a","pol":"0.438","std":"0.0"},"determinado":{"pos":"a","pol":"0.375","std":"0.157"},"determinante":{"pos":"a","pol":"0.375","std":"0.0"},"determinismo":{"pos":"n","pol":"0.375","std":"0.0"},"diabático":{"pos":"a","pol":"0.375","std":"0.0"},"diacrónico":{"pos":"a","pol":"0.375","std":"0.0"},"diagonalizable":{"pos":"a","pol":"0.375","std":"0.0"},"diario":{"pos":"a","pol":"0.313","std":"0.088"},"dicynodontia":{"pos":"n","pol":"0.375","std":"0.0"},"dieta equilibrada":{"pos":"n","pol":"0.375","std":"0.0"},"diferenciado":{"pos":"a","pol":"0.375","std":"0.0"},"dignarse":{"pos":"v","pol":"0.375","std":"0.0"},"diligente":{"pos":"a","pol":"0.438","std":"0.063"},"diminuir":{"pos":"v","pol":"0.375","std":"0.0"},"dinámico":{"pos":"a","pol":"0.286","std":"0.213"},"diplomático":{"pos":"a","pol":"0.458","std":"0.505"},"directo":{"pos":"a","pol":"0.26","std":"0.16"},"discernidor":{"pos":"a","pol":"0.375","std":"0.0"},"disciplinado":{"pos":"a","pol":"0.438","std":"0.0"},"discriminador":{"pos":"a","pol":"0.375","std":"0.0"},"discriminatorio":{"pos":"a","pol":"0.313","std":"0.354"},"disculpable":{"pos":"a","pol":"0.375","std":"0.0"},"discutible":{"pos":"a","pol":"0.275","std":"0.105"},"disoluble":{"pos":"a","pol":"0.375","std":"0.0"},"disponible":{"pos":"a","pol":"0.292","std":"0.105"},"dispositivo acústico":{"pos":"n","pol":"0.375","std":"0.0"},"disputador":{"pos":"n","pol":"0.375","std":"0.0"},"disyuntivo":{"pos":"a","pol":"0.375","std":"0.0"},"divergente":{"pos":"a","pol":"0.313","std":"0.088"},"diversión":{"pos":"n","pol":"0.292","std":"0.125"},"divino":{"pos":"a","pol":"0.438","std":"0.194"},"división de honor":{"pos":"n","pol":"0.375","std":"0.0"},"divorciado":{"pos":"a","pol":"0.375","std":"0.0"},"divulgado":{"pos":"a","pol":"0.375","std":"0.0"},"divulgativo":{"pos":"a","pol":"0.375","std":"0.0"},"diálisis":{"pos":"n","pol":"0.375","std":"0.0"},"doctrina":{"pos":"n","pol":"0.313","std":"0.088"},"documentado":{"pos":"a","pol":"0.375","std":"0.177"},"domesticado":{"pos":"a","pol":"0.333","std":"0.0"},"domesticar":{"pos":"v","pol":"0.375","std":"0.0"},"doméstico":{"pos":"a","pol":"0.292","std":"0.144"},"doula":{"pos":"n","pol":"0.375","std":"0.0"},"dramático":{"pos":"a","pol":"0.275","std":"0.259"},"dulzaino":{"pos":"a","pol":"0.375","std":"0.0"},"dulzarrón":{"pos":"a","pol":"0.375","std":"0.0"},"dulzón":{"pos":"a","pol":"0.438","std":"0.0"},"día de San Valentín":{"pos":"n","pol":"0.375","std":"0.0"},"día de los enamorados":{"pos":"n","pol":"0.375","std":"0.0"},"dócil":{"pos":"a","pol":"0.396","std":"0.102"},"ebrio":{"pos":"n","pol":"-0.25","std":"0.0"},"económico":{"pos":"a","pol":"0.339","std":"0.28"},"ecrina":{"pos":"a","pol":"0.375","std":"0.0"},"ecuanimidad":{"pos":"n","pol":"0.375","std":"0.0"},"ecuménico":{"pos":"a","pol":"0.375","std":"0.0"},"editar":{"pos":"v","pol":"0.292","std":"0.26"},"edén":{"pos":"n","pol":"0.375","std":"0.0"},"eficacia":{"pos":"n","pol":"0.375","std":"0.354"},"eficiente":{"pos":"a","pol":"0.375","std":"0.088"},"ejemplar":{"pos":"a","pol":"0.458","std":"0.289"},"ejercitado":{"pos":"a","pol":"0.375","std":"0.0"},"el único":{"pos":"a","pol":"0.375","std":"0.0"},"elaborado":{"pos":"a","pol":"0.313","std":"0.177"},"elasticidad":{"pos":"n","pol":"0.313","std":"0.265"},"elegancia":{"pos":"n","pol":"0.333","std":"0.233"},"elegante":{"pos":"a","pol":"0.438","std":"0.125"},"elegido":{"pos":"a","pol":"0.375","std":"0.177"},"elevado":{"pos":"a","pol":"0.375","std":"0.258"},"elisión":{"pos":"n","pol":"0.375","std":"0.0"},"elitista":{"pos":"n","pol":"0.375","std":"0.0"},"elogiador":{"pos":"n","pol":"0.375","std":"0.0"},"elogiar":{"pos":"v","pol":"0.438","std":"0.088"},"elogio":{"pos":"n","pol":"0.417","std":"0.072"},"elucidativo":{"pos":"a","pol":"0.375","std":"0.0"},"elíseo":{"pos":"a","pol":"-0.25","std":"0.0"},"emancipado":{"pos":"a","pol":"0.375","std":"0.0"},"emasculado":{"pos":"a","pol":"0.375","std":"0.0"},"embriagado":{"pos":"a","pol":"0.375","std":"0.0"},"eminente":{"pos":"a","pol":"0.417","std":"0.0"},"emocionado":{"pos":"a","pol":"0.458","std":"0.191"},"emocional":{"pos":"a","pol":"0.333","std":"0.072"},"emocionalmente":{"pos":"r","pol":"0.375","std":"0.0"},"empacado":{"pos":"a","pol":"0.375","std":"0.0"},"empaquetado":{"pos":"a","pol":"0.375","std":"0.0"},"emparentado":{"pos":"a","pol":"0.313","std":"0.088"},"empatía":{"pos":"n","pol":"0.375","std":"0.088"},"en consecuencia":{"pos":"r","pol":"0.375","std":"0.0"},"en el clavo":{"pos":"n","pol":"0.375","std":"0.0"},"en respuesta":{"pos":"r","pol":"0.375","std":"0.0"},"en términos acústicos":{"pos":"r","pol":"0.375","std":"0.0"},"en términos culturales":{"pos":"r","pol":"0.375","std":"0.0"},"en términos musicológicos":{"pos":"r","pol":"0.375","std":"0.0"},"enaltecer":{"pos":"v","pol":"0.344","std":"0.12"},"encantarse":{"pos":"v","pol":"0.375","std":"0.0"},"encanto":{"pos":"n","pol":"0.35","std":"0.153"},"encarecimiento":{"pos":"n","pol":"0.313","std":"0.088"},"encargado de comedor":{"pos":"n","pol":"0.375","std":"0.0"},"encargado de restaurante":{"pos":"n","pol":"0.375","std":"0.0"},"encerrado":{"pos":"a","pol":"0.281","std":"0.237"},"encojinado":{"pos":"a","pol":"0.375","std":"0.0"},"encomiasta":{"pos":"n","pol":"0.375","std":"0.0"},"encomio":{"pos":"n","pol":"0.375","std":"0.0"},"encriptado":{"pos":"a","pol":"0.375","std":"0.0"},"endosante por aval":{"pos":"n","pol":"0.375","std":"0.0"},"endógamo":{"pos":"a","pol":"0.313","std":"0.088"},"energía":{"pos":"n","pol":"0.275","std":"0.202"},"enfocado":{"pos":"a","pol":"0.375","std":"0.177"},"enfático":{"pos":"a","pol":"0.313","std":"0.125"},"engordado":{"pos":"a","pol":"0.375","std":"0.0"},"engrandecimiento":{"pos":"n","pol":"0.375","std":"0.0"},"engrilletar":{"pos":"v","pol":"0.375","std":"0.0"},"enhorabuena":{"pos":"n","pol":"0.417","std":"0.144"},"enlazable":{"pos":"a","pol":"0.375","std":"0.0"},"enlazado":{"pos":"a","pol":"0.375","std":"0.0"},"enmoquetado":{"pos":"a","pol":"0.375","std":"0.0"},"ennoblecer":{"pos":"v","pol":"0.375","std":"0.0"},"enorme":{"pos":"a","pol":"0.325","std":"0.0"},"enriquecer":{"pos":"v","pol":"0.313","std":"0.217"},"enrojecido":{"pos":"a","pol":"0.375","std":"0.0"},"ensalzar":{"pos":"v","pol":"0.458","std":"0.451"},"ensimismado":{"pos":"a","pol":"0.375","std":"0.0"},"entendido":{"pos":"n","pol":"0.375","std":"0.0"},"enternecido":{"pos":"a","pol":"0.375","std":"0.0"},"entero":{"pos":"a","pol":"0.271","std":"0.203"},"entrenado":{"pos":"a","pol":"0.375","std":"0.0"},"entrenamiento autógeno":{"pos":"n","pol":"0.375","std":"0.0"},"entusiasmado":{"pos":"a","pol":"0.417","std":"0.191"},"envasado":{"pos":"a","pol":"0.375","std":"0.0"},"envolvente":{"pos":"a","pol":"0.375","std":"0.0"},"envolver para regalo":{"pos":"v","pol":"0.375","std":"0.0"},"envuelto":{"pos":"a","pol":"0.375","std":"0.0"},"enérgico":{"pos":"a","pol":"0.342","std":"0.118"},"epizoótico":{"pos":"a","pol":"0.375","std":"0.0"},"equidad":{"pos":"n","pol":"0.375","std":"0.0"},"equidistante":{"pos":"a","pol":"0.375","std":"0.0"},"equilibrado":{"pos":"a","pol":"0.275","std":"0.0"},"equipado":{"pos":"a","pol":"0.268","std":"0.2"},"equipar":{"pos":"v","pol":"0.281","std":"0.188"},"equivalencia":{"pos":"n","pol":"0.292","std":"0.125"},"equivalente":{"pos":"a","pol":"0.292","std":"0.25"},"eremítico":{"pos":"a","pol":"0.313","std":"0.265"},"eréctil":{"pos":"a","pol":"0.313","std":"0.088"},"esbelto":{"pos":"a","pol":"0.313","std":"0.0"},"escarlata":{"pos":"a","pol":"0.375","std":"0.0"},"escenotecnia":{"pos":"n","pol":"0.375","std":"0.0"},"escrupulosidad":{"pos":"n","pol":"0.438","std":"0.354"},"escrupuloso":{"pos":"a","pol":"0.344","std":"0.102"},"escuela parroquial":{"pos":"n","pol":"0.313","std":"0.088"},"escuela religiosa":{"pos":"n","pol":"0.313","std":"0.088"},"escultural":{"pos":"a","pol":"0.313","std":"0.27"},"esmerado":{"pos":"a","pol":"0.375","std":"0.0"},"espabilado":{"pos":"a","pol":"0.406","std":"0.063"},"espacioso":{"pos":"a","pol":"0.375","std":"0.102"},"especial":{"pos":"a","pol":"0.411","std":"0.25"},"especialidad":{"pos":"n","pol":"0.406","std":"0.313"},"especialista":{"pos":"a","pol":"0.25","std":"0.265"},"especializarse":{"pos":"v","pol":"0.375","std":"0.0"},"espectacular":{"pos":"a","pol":"0.375","std":"0.0"},"específico":{"pos":"a","pol":"0.292","std":"0.315"},"esplendor":{"pos":"n","pol":"0.438","std":"0.274"},"esprint":{"pos":"n","pol":"0.375","std":"0.0"},"estabilizarse":{"pos":"v","pol":"0.281","std":"0.188"},"estar de acuerdo":{"pos":"v","pol":"0.438","std":"0.088"},"estar dispuesto":{"pos":"v","pol":"0.375","std":"0.0"},"estatal":{"pos":"a","pol":"0.375","std":"0.0"},"estereofónico":{"pos":"a","pol":"0.375","std":"0.0"},"estertoroso":{"pos":"a","pol":"0.375","std":"0.0"},"estratégicamente":{"pos":"r","pol":"0.375","std":"0.0"},"estroso":{"pos":"a","pol":"0.375","std":"0.0"},"estudios":{"pos":"n","pol":"0.375","std":"0.0"},"estándar":{"pos":"a","pol":"0.469","std":"0.12"},"estéreo":{"pos":"a","pol":"0.375","std":"0.0"},"eucariótico":{"pos":"a","pol":"0.375","std":"0.0"},"eulogio":{"pos":"n","pol":"0.375","std":"0.0"},"evidente":{"pos":"a","pol":"0.431","std":"0.146"},"evocador":{"pos":"a","pol":"0.375","std":"0.0"},"evocativo":{"pos":"a","pol":"0.375","std":"0.0"},"exactitud":{"pos":"n","pol":"0.3","std":"0.112"},"exaltante":{"pos":"a","pol":"0.375","std":"0.0"},"exaltar":{"pos":"v","pol":"0.375","std":"0.12"},"excepcional":{"pos":"a","pol":"0.271","std":"0.32"},"excitable":{"pos":"a","pol":"0.438","std":"0.265"},"excitado":{"pos":"a","pol":"0.3","std":"0.153"},"exclusivo":{"pos":"a","pol":"0.313","std":"0.088"},"exculpado":{"pos":"a","pol":"0.375","std":"0.0"},"existente":{"pos":"a","pol":"0.35","std":"0.105"},"exonerado":{"pos":"a","pol":"0.375","std":"0.0"},"exonerar":{"pos":"v","pol":"0.406","std":"0.375"},"expectante":{"pos":"a","pol":"0.375","std":"0.0"},"experiencia":{"pos":"n","pol":"0.333","std":"0.125"},"expiable":{"pos":"a","pol":"0.375","std":"0.0"},"explicativo":{"pos":"a","pol":"0.375","std":"0.0"},"explicitar":{"pos":"v","pol":"0.375","std":"0.0"},"explotado":{"pos":"a","pol":"0.375","std":"0.088"},"expositivo":{"pos":"a","pol":"0.375","std":"0.0"},"expresivo":{"pos":"a","pol":"0.375","std":"0.072"},"expreso":{"pos":"a","pol":"0.292","std":"0.125"},"exquisitez":{"pos":"n","pol":"0.281","std":"0.12"},"exquisito":{"pos":"a","pol":"0.375","std":"0.153"},"extensible":{"pos":"a","pol":"0.375","std":"0.0"},"extenso":{"pos":"a","pol":"0.406","std":"0.189"},"extrafino":{"pos":"a","pol":"0.438","std":"0.265"},"extragrande":{"pos":"a","pol":"0.375","std":"0.0"},"extralargo":{"pos":"a","pol":"0.375","std":"0.0"},"extraordinario":{"pos":"n","pol":"0.25","std":"0.0"},"extravertido":{"pos":"n","pol":"0.375","std":"0.0"},"extrovertido":{"pos":"n","pol":"0.375","std":"0.0"},"exuberante":{"pos":"a","pol":"0.3","std":"0.271"},"fabuloso":{"pos":"a","pol":"0.333","std":"0.361"},"familiarizado":{"pos":"a","pol":"0.375","std":"0.0"},"fantasioso":{"pos":"a","pol":"0.313","std":"0.0"},"favorito":{"pos":"a","pol":"0.417","std":"0.0"},"federado":{"pos":"a","pol":"0.375","std":"0.0"},"felicitaciones":{"pos":"n","pol":"0.417","std":"0.144"},"felicitación":{"pos":"n","pol":"0.417","std":"0.144"},"felicitar":{"pos":"v","pol":"0.375","std":"0.0"},"fenómeno":{"pos":"n","pol":"0.313","std":"0.177"},"festivo":{"pos":"a","pol":"0.458","std":"0.191"},"fiabilidad":{"pos":"n","pol":"0.313","std":"0.088"},"filatélico":{"pos":"a","pol":"0.375","std":"0.0"},"filetear":{"pos":"v","pol":"0.375","std":"0.0"},"filogenéticamente":{"pos":"r","pol":"0.375","std":"0.0"},"filohelénico":{"pos":"a","pol":"0.375","std":"0.0"},"filosofía":{"pos":"n","pol":"0.313","std":"0.088"},"filosóficamente":{"pos":"r","pol":"0.375","std":"0.0"},"finalizado":{"pos":"a","pol":"0.313","std":"0.177"},"fino":{"pos":"a","pol":"0.384","std":"0.266"},"finura":{"pos":"n","pol":"0.313","std":"0.102"},"flexible":{"pos":"a","pol":"0.341","std":"0.238"},"flexional":{"pos":"a","pol":"0.375","std":"0.088"},"florecer":{"pos":"v","pol":"0.281","std":"0.483"},"floreciente":{"pos":"a","pol":"0.417","std":"0.315"},"fluido":{"pos":"a","pol":"0.333","std":"0.0"},"flujo de trabajo":{"pos":"n","pol":"0.375","std":"0.0"},"fluorescente":{"pos":"n","pol":"0.25","std":"0.0"},"fomentar":{"pos":"v","pol":"0.281","std":"0.4"},"forense":{"pos":"n","pol":"-0.375","std":"0.0"},"formal":{"pos":"a","pol":"0.398","std":"0.236"},"formalidad":{"pos":"n","pol":"0.35","std":"0.168"},"formalidades":{"pos":"n","pol":"0.375","std":"0.0"},"fornido":{"pos":"a","pol":"0.3","std":"0.105"},"fortificado":{"pos":"a","pol":"0.313","std":"0.088"},"forzudo":{"pos":"n","pol":"-0.25","std":"0.0"},"fosforescente":{"pos":"a","pol":"0.375","std":"0.0"},"franco":{"pos":"a","pol":"0.321","std":"0.283"},"fructífero":{"pos":"a","pol":"0.375","std":"0.0"},"frugal":{"pos":"a","pol":"0.292","std":"0.072"},"fuerza moral":{"pos":"n","pol":"0.375","std":"0.0"},"funcional":{"pos":"a","pol":"0.406","std":"0.186"},"furgoneta de reparto":{"pos":"n","pol":"0.375","std":"0.0"},"fé":{"pos":"n","pol":"0.375","std":"0.0"},"fíat":{"pos":"n","pol":"0.313","std":"0.177"},"físico":{"pos":"a","pol":"0.286","std":"0.173"},"gacela persa":{"pos":"n","pol":"0.375","std":"0.0"},"ganancia":{"pos":"n","pol":"0.344","std":"0.277"},"garantía subsidiaria":{"pos":"n","pol":"0.375","std":"0.0"},"garbo":{"pos":"n","pol":"0.375","std":"0.157"},"gastrónomo":{"pos":"n","pol":"0.375","std":"0.0"},"genealogista":{"pos":"n","pol":"0.375","std":"0.0"},"generador":{"pos":"a","pol":"0.375","std":"0.0"},"generosidad":{"pos":"n","pol":"0.325","std":"0.056"},"generoso":{"pos":"a","pol":"0.438","std":"0.125"},"gentileza":{"pos":"n","pol":"0.417","std":"0.331"},"genus antheraea":{"pos":"n","pol":"0.375","std":"0.0"},"germicida":{"pos":"a","pol":"0.375","std":"0.0"},"gesta":{"pos":"n","pol":"0.375","std":"0.0"},"glamuroso":{"pos":"a","pol":"0.375","std":"0.0"},"glaseado":{"pos":"a","pol":"0.375","std":"0.0"},"glide":{"pos":"n","pol":"0.375","std":"0.0"},"global":{"pos":"a","pol":"0.347","std":"0.246"},"gloria":{"pos":"n","pol":"0.333","std":"0.0"},"glorificado":{"pos":"a","pol":"0.375","std":"0.0"},"gluglú":{"pos":"n","pol":"0.375","std":"0.0"},"glutinoso":{"pos":"a","pol":"0.313","std":"0.0"},"gnóstico":{"pos":"a","pol":"0.375","std":"0.0"},"goce":{"pos":"n","pol":"0.313","std":"0.088"},"golpe de efecto":{"pos":"n","pol":"0.375","std":"0.0"},"golpe maestro":{"pos":"n","pol":"0.375","std":"0.0"},"gomoso":{"pos":"a","pol":"0.333","std":"0.0"},"gorrear":{"pos":"v","pol":"0.375","std":"0.0"},"gorronear":{"pos":"v","pol":"0.375","std":"0.088"},"gourmet":{"pos":"n","pol":"0.375","std":"0.0"},"gozada":{"pos":"n","pol":"0.375","std":"0.0"},"grado óptimo":{"pos":"n","pol":"0.375","std":"0.0"},"graficación":{"pos":"n","pol":"0.375","std":"0.0"},"gran":{"pos":"a","pol":"0.338","std":"0.195"},"gran pureza":{"pos":"n","pol":"0.375","std":"0.0"},"grana":{"pos":"a","pol":"0.375","std":"0.0"},"grande":{"pos":"a","pol":"0.292","std":"0.132"},"grandeza":{"pos":"n","pol":"0.266","std":"0.263"},"grecófilo":{"pos":"a","pol":"0.375","std":"0.0"},"gregario":{"pos":"a","pol":"0.333","std":"0.125"},"gritar de alegría":{"pos":"v","pol":"0.375","std":"0.0"},"grácil":{"pos":"a","pol":"0.438","std":"0.088"},"gurmet":{"pos":"n","pol":"0.375","std":"0.0"},"gustoso":{"pos":"a","pol":"0.438","std":"0.0"},"género Gobio":{"pos":"n","pol":"0.375","std":"0.0"},"habilidad":{"pos":"n","pol":"0.429","std":"0.227"},"habilidad manual":{"pos":"n","pol":"0.313","std":"0.088"},"habilitar":{"pos":"v","pol":"0.333","std":"0.315"},"habituado":{"pos":"a","pol":"0.375","std":"0.0"},"habitual":{"pos":"a","pol":"0.304","std":"0.152"},"hablado":{"pos":"a","pol":"0.313","std":"0.265"},"hacer disponible":{"pos":"v","pol":"0.375","std":"0.0"},"hacer frente":{"pos":"v","pol":"0.375","std":"0.0"},"hacer la vista gorda":{"pos":"v","pol":"0.375","std":"0.0"},"hacer sonar":{"pos":"v","pol":"0.375","std":"0.0"},"hacer un dado":{"pos":"v","pol":"0.375","std":"0.0"},"hallazgo fortuito":{"pos":"n","pol":"0.375","std":"0.0"},"hazaña":{"pos":"n","pol":"0.313","std":"0.0"},"hebdomadario":{"pos":"a","pol":"0.375","std":"0.0"},"hechizador":{"pos":"a","pol":"0.313","std":"0.619"},"hecho":{"pos":"a","pol":"0.313","std":"0.088"},"hedonismo":{"pos":"n","pol":"0.313","std":"0.088"},"hermético":{"pos":"a","pol":"0.313","std":"0.0"},"heterosis":{"pos":"n","pol":"0.375","std":"0.0"},"hi-fi":{"pos":"n","pol":"0.375","std":"0.0"},"hidrófobo":{"pos":"a","pol":"0.375","std":"0.0"},"hifi":{"pos":"n","pol":"0.375","std":"0.0"},"higrofítico":{"pos":"a","pol":"0.375","std":"0.0"},"higrófilo":{"pos":"a","pol":"0.375","std":"0.0"},"hiperactivo":{"pos":"a","pol":"0.375","std":"0.0"},"hiperpigmentación":{"pos":"n","pol":"0.375","std":"0.0"},"hipertiroidismo":{"pos":"n","pol":"0.375","std":"0.0"},"hipnotizador":{"pos":"a","pol":"0.313","std":"0.619"},"hobby":{"pos":"n","pol":"0.375","std":"0.619"},"hogareño":{"pos":"a","pol":"0.375","std":"0.0"},"holgura":{"pos":"n","pol":"0.292","std":"0.304"},"holometábolo":{"pos":"a","pol":"0.375","std":"0.0"},"hombre de peso":{"pos":"n","pol":"0.375","std":"0.0"},"homogéneo":{"pos":"a","pol":"0.375","std":"0.0"},"hondo":{"pos":"a","pol":"0.375","std":"0.0"},"honestidad":{"pos":"n","pol":"0.313","std":"0.088"},"honesto":{"pos":"a","pol":"0.438","std":"0.146"},"honorario":{"pos":"a","pol":"0.25","std":"0.0"},"honorarios":{"pos":"n","pol":"0.313","std":"0.088"},"hosanna":{"pos":"n","pol":"0.375","std":"0.0"},"hospedador":{"pos":"n","pol":"0.375","std":"0.0"},"humanidades":{"pos":"n","pol":"0.375","std":"0.0"},"humanista":{"pos":"a","pol":"0.375","std":"0.088"},"humorada":{"pos":"n","pol":"0.375","std":"0.0"},"hápax":{"pos":"n","pol":"0.375","std":"0.0"},"hídrico":{"pos":"a","pol":"0.375","std":"0.0"},"idolatrado":{"pos":"a","pol":"0.375","std":"0.0"},"ileso":{"pos":"a","pol":"0.375","std":"0.063"},"ilustrativo":{"pos":"a","pol":"0.438","std":"0.088"},"imitativo":{"pos":"a","pol":"0.292","std":"0.072"},"impecable":{"pos":"a","pol":"0.375","std":"0.088"},"implicado":{"pos":"a","pol":"0.417","std":"0.125"},"importancia":{"pos":"n","pol":"0.354","std":"0.166"},"impregnar":{"pos":"v","pol":"0.375","std":"0.0"},"impresionado":{"pos":"a","pol":"0.375","std":"0.0"},"impresionante":{"pos":"a","pol":"0.458","std":"0.105"},"impresionar":{"pos":"v","pol":"0.375","std":"0.0"},"imprimatur":{"pos":"n","pol":"0.375","std":"0.0"},"imprimátur":{"pos":"n","pol":"0.375","std":"0.0"},"impulsado":{"pos":"a","pol":"0.375","std":"0.0"},"impulsor":{"pos":"a","pol":"0.375","std":"0.0"},"impune":{"pos":"a","pol":"0.375","std":"0.0"},"in en contra":{"pos":"v","pol":"0.375","std":"0.0"},"inalterado":{"pos":"a","pol":"0.292","std":"0.144"},"incansable":{"pos":"a","pol":"0.313","std":"0.088"},"incitador":{"pos":"a","pol":"0.375","std":"0.265"},"inconfundible":{"pos":"a","pol":"0.313","std":"0.177"},"incontrolado":{"pos":"a","pol":"0.325","std":"0.112"},"incrementado":{"pos":"a","pol":"0.438","std":"0.354"},"increíble":{"pos":"a","pol":"0.458","std":"0.217"},"indemne":{"pos":"a","pol":"0.417","std":"0.072"},"indicativo":{"pos":"a","pol":"0.292","std":"0.331"},"individual":{"pos":"a","pol":"0.3","std":"0.163"},"individualista":{"pos":"a","pol":"0.313","std":"0.177"},"individualizado":{"pos":"a","pol":"0.375","std":"0.265"},"indivisible":{"pos":"a","pol":"0.313","std":"0.0"},"indulgente":{"pos":"a","pol":"0.45","std":"0.105"},"industrializado":{"pos":"a","pol":"0.375","std":"0.0"},"industriar":{"pos":"v","pol":"0.375","std":"0.0"},"ineludible":{"pos":"a","pol":"0.292","std":"0.125"},"inequívoco":{"pos":"a","pol":"0.469","std":"0.157"},"inestimable":{"pos":"a","pol":"0.375","std":"0.177"},"infantil":{"pos":"a","pol":"0.275","std":"0.227"},"infatigable":{"pos":"a","pol":"0.313","std":"0.088"},"infecto":{"pos":"a","pol":"0.375","std":"0.0"},"inflacionista":{"pos":"a","pol":"0.375","std":"0.0"},"inflamable":{"pos":"a","pol":"0.375","std":"0.0"},"influenciar":{"pos":"v","pol":"0.375","std":"0.0"},"influyente":{"pos":"a","pol":"0.281","std":"0.217"},"informativo":{"pos":"a","pol":"0.375","std":"0.088"},"infrabastecer":{"pos":"v","pol":"0.375","std":"0.0"},"infrasónico":{"pos":"a","pol":"0.375","std":"0.0"},"ingeniero espacial":{"pos":"n","pol":"0.375","std":"0.0"},"ingerir":{"pos":"v","pol":"0.375","std":"0.0"},"inhibidor":{"pos":"n","pol":"0.25","std":"0.0"},"inigualado":{"pos":"a","pol":"0.375","std":"0.0"},"inmaculado":{"pos":"a","pol":"0.313","std":"0.072"},"inmanente":{"pos":"a","pol":"0.438","std":"0.177"},"inmenso":{"pos":"a","pol":"0.375","std":"0.0"},"inocentada":{"pos":"n","pol":"0.375","std":"0.0"},"inocente":{"pos":"a","pol":"0.393","std":"0.222"},"inquiridor":{"pos":"a","pol":"0.375","std":"0.0"},"inquisidor":{"pos":"a","pol":"0.375","std":"0.0"},"inquisitorial":{"pos":"a","pol":"0.375","std":"0.0"},"insonorizado":{"pos":"v","pol":"-0.25","std":"0.0"},"inspiracional":{"pos":"a","pol":"0.375","std":"0.0"},"inspirador":{"pos":"a","pol":"0.375","std":"0.0"},"instantaneidad":{"pos":"n","pol":"0.375","std":"0.0"},"institucionalizado":{"pos":"a","pol":"0.375","std":"0.0"},"institución docente":{"pos":"n","pol":"0.375","std":"0.0"},"institución educacional":{"pos":"n","pol":"0.375","std":"0.0"},"instructivo":{"pos":"a","pol":"0.375","std":"0.0"},"instrumental":{"pos":"a","pol":"0.313","std":"0.442"},"integrador":{"pos":"n","pol":"-0.25","std":"0.0"},"integrante":{"pos":"a","pol":"0.375","std":"0.0"},"integridad":{"pos":"n","pol":"0.333","std":"0.125"},"integridad personal":{"pos":"n","pol":"0.375","std":"0.0"},"inteligencia":{"pos":"n","pol":"0.275","std":"0.105"},"intencionado":{"pos":"a","pol":"0.438","std":"0.12"},"intencionalidad":{"pos":"n","pol":"0.292","std":"0.289"},"intensional":{"pos":"a","pol":"0.375","std":"0.0"},"interactivo":{"pos":"a","pol":"0.375","std":"0.177"},"intercambiabilidad":{"pos":"n","pol":"0.375","std":"0.0"},"intercambiable":{"pos":"a","pol":"0.375","std":"0.177"},"interconfesional":{"pos":"a","pol":"0.375","std":"0.0"},"interesado":{"pos":"a","pol":"0.313","std":"0.088"},"interesar":{"pos":"v","pol":"0.333","std":"0.545"},"intermolecular":{"pos":"a","pol":"0.375","std":"0.0"},"internarse":{"pos":"v","pol":"0.375","std":"0.53"},"interno":{"pos":"a","pol":"0.281","std":"0.231"},"interpersonal":{"pos":"a","pol":"0.375","std":"0.0"},"interpretativo":{"pos":"a","pol":"0.375","std":"0.0"},"intersexual":{"pos":"a","pol":"0.313","std":"0.088"},"interés personal":{"pos":"n","pol":"0.313","std":"0.088"},"interés simple":{"pos":"n","pol":"0.375","std":"0.0"},"intrigante":{"pos":"a","pol":"0.313","std":"0.088"},"introvertido":{"pos":"n","pol":"0.25","std":"0.0"},"investigador":{"pos":"a","pol":"0.375","std":"0.0"},"involucrado":{"pos":"a","pol":"0.313","std":"0.088"},"inyectable":{"pos":"a","pol":"0.375","std":"0.0"},"ir contra":{"pos":"v","pol":"0.375","std":"0.0"},"ir de gira":{"pos":"v","pol":"0.313","std":"0.088"},"irremediable":{"pos":"a","pol":"0.375","std":"0.0"},"irreparable":{"pos":"a","pol":"0.313","std":"0.088"},"irreprimibilidad":{"pos":"n","pol":"0.375","std":"0.0"},"irreprimible":{"pos":"n","pol":"0.375","std":"0.0"},"irrompible":{"pos":"a","pol":"0.313","std":"0.088"},"isótropo":{"pos":"a","pol":"0.375","std":"0.0"},"izado":{"pos":"a","pol":"0.375","std":"0.0"},"jardín del Edén":{"pos":"n","pol":"0.375","std":"0.0"},"jerga":{"pos":"a","pol":"0.375","std":"0.0"},"jesuita":{"pos":"a","pol":"0.375","std":"0.0"},"jesuítico":{"pos":"a","pol":"0.375","std":"0.0"},"jet set":{"pos":"n","pol":"0.375","std":"0.0"},"jocosamente":{"pos":"r","pol":"0.375","std":"0.0"},"jocosidad":{"pos":"n","pol":"0.275","std":"0.265"},"jodido":{"pos":"a","pol":"0.375","std":"0.0"},"jonrón":{"pos":"v","pol":"0.375","std":"0.0"},"jubileo":{"pos":"n","pol":"0.375","std":"0.0"},"juntado":{"pos":"a","pol":"0.375","std":"0.0"},"junto":{"pos":"a","pol":"0.375","std":"0.0"},"juramento hipocrático":{"pos":"n","pol":"0.375","std":"0.0"},"jurar renunciar a":{"pos":"v","pol":"0.375","std":"0.0"},"justificadamente":{"pos":"r","pol":"0.375","std":"0.0"},"lacrar":{"pos":"v","pol":"0.375","std":"0.0"},"lactar":{"pos":"v","pol":"0.375","std":"0.0"},"lacónico":{"pos":"a","pol":"0.375","std":"0.0"},"largo":{"pos":"a","pol":"0.3","std":"0.137"},"lavable":{"pos":"a","pol":"0.375","std":"0.0"},"laxar":{"pos":"v","pol":"0.375","std":"0.619"},"lazo azul":{"pos":"n","pol":"0.375","std":"0.0"},"lechero":{"pos":"a","pol":"0.375","std":"0.0"},"legible":{"pos":"a","pol":"0.375","std":"0.0"},"legitimar":{"pos":"v","pol":"0.292","std":"0.125"},"legítimo":{"pos":"a","pol":"0.411","std":"0.125"},"lejano":{"pos":"a","pol":"0.292","std":"0.105"},"lente anastigmática":{"pos":"n","pol":"0.375","std":"0.0"},"liberal":{"pos":"a","pol":"0.438","std":"0.12"},"liberalidad":{"pos":"n","pol":"0.313","std":"0.177"},"libertad de prensa":{"pos":"n","pol":"0.375","std":"0.0"},"libertario":{"pos":"n","pol":"0.313","std":"0.354"},"licenciarse":{"pos":"v","pol":"0.375","std":"0.0"},"lidiar con":{"pos":"v","pol":"0.375","std":"0.0"},"lila":{"pos":"a","pol":"0.375","std":"0.0"},"liliáceo":{"pos":"a","pol":"0.375","std":"0.0"},"limpiador":{"pos":"a","pol":"0.313","std":"0.177"},"limpio":{"pos":"n","pol":"0.375","std":"0.0"},"liquidado":{"pos":"a","pol":"0.375","std":"0.0"},"liquidador":{"pos":"n","pol":"0.375","std":"0.0"},"lisonjear":{"pos":"v","pol":"0.375","std":"0.0"},"listo":{"pos":"a","pol":"0.387","std":"0.15"},"liviano":{"pos":"a","pol":"0.375","std":"0.0"},"llegar al nivel":{"pos":"v","pol":"0.375","std":"0.0"},"lleno":{"pos":"a","pol":"0.321","std":"0.134"},"lloricoso":{"pos":"a","pol":"0.375","std":"0.0"},"llovido":{"pos":"n","pol":"0.375","std":"0.0"},"lo certero":{"pos":"n","pol":"0.375","std":"0.0"},"lo directo":{"pos":"n","pol":"0.375","std":"0.0"},"lob":{"pos":"n","pol":"0.375","std":"0.0"},"longanimidad":{"pos":"n","pol":"0.313","std":"0.177"},"longevo":{"pos":"a","pol":"0.375","std":"0.0"},"longitudinalmente":{"pos":"r","pol":"0.375","std":"0.0"},"loza china":{"pos":"n","pol":"0.375","std":"0.0"},"lucrar":{"pos":"v","pol":"0.375","std":"0.0"},"lucrativo":{"pos":"a","pol":"0.438","std":"0.177"},"lucro":{"pos":"n","pol":"0.375","std":"0.0"},"ludita":{"pos":"n","pol":"0.375","std":"0.0"},"lugar de interés turístico":{"pos":"n","pol":"0.375","std":"0.0"},"lugarteniente":{"pos":"n","pol":"0.375","std":"0.0"},"lujoso":{"pos":"a","pol":"0.375","std":"0.313"},"lujurioso":{"pos":"a","pol":"0.3","std":"0.19"},"luminosidad":{"pos":"n","pol":"0.417","std":"0.144"},"luminoso":{"pos":"a","pol":"0.344","std":"0.0"},"lícito":{"pos":"a","pol":"0.344","std":"0.072"},"líquido":{"pos":"a","pol":"0.275","std":"0.163"},"lívido":{"pos":"a","pol":"0.375","std":"0.0"},"lógica":{"pos":"n","pol":"0.292","std":"0.281"},"lúbrico":{"pos":"a","pol":"0.313","std":"0.177"},"lúcido":{"pos":"a","pol":"0.417","std":"0.144"},"madre superiora":{"pos":"n","pol":"0.375","std":"0.0"},"maduro":{"pos":"a","pol":"0.453","std":"0.104"},"maestría":{"pos":"n","pol":"0.281","std":"0.239"},"magenta":{"pos":"n","pol":"-0.25","std":"0.0"},"magnificencia":{"pos":"n","pol":"0.35","std":"0.326"},"magnánimo":{"pos":"a","pol":"0.438","std":"0.088"},"majeza":{"pos":"n","pol":"0.438","std":"0.354"},"malcasarse":{"pos":"v","pol":"0.375","std":"0.0"},"maleable":{"pos":"a","pol":"0.375","std":"0.217"},"malva":{"pos":"a","pol":"0.375","std":"0.0"},"manejabilidad":{"pos":"n","pol":"0.333","std":"0.072"},"manicura":{"pos":"n","pol":"0.375","std":"0.0"},"manifiesto":{"pos":"a","pol":"0.354","std":"0.094"},"manso":{"pos":"a","pol":"0.281","std":"0.063"},"mantenible":{"pos":"a","pol":"0.375","std":"0.0"},"mantenido":{"pos":"a","pol":"0.375","std":"0.191"},"mantenimiento del coche":{"pos":"n","pol":"0.375","std":"0.0"},"manualidad":{"pos":"n","pol":"0.313","std":"0.088"},"manzana silvestre":{"pos":"n","pol":"0.375","std":"0.0"},"maravilla":{"pos":"n","pol":"0.417","std":"0.363"},"marica":{"pos":"n","pol":"-0.375","std":"0.0"},"mariquita":{"pos":"a","pol":"0.375","std":"0.0"},"marrullería":{"pos":"n","pol":"0.375","std":"0.0"},"marrón":{"pos":"a","pol":"0.375","std":"0.0"},"masivo":{"pos":"a","pol":"0.375","std":"0.0"},"masoquista":{"pos":"n","pol":"0.25","std":"0.0"},"masticable":{"pos":"a","pol":"0.438","std":"0.088"},"matemáticamente":{"pos":"r","pol":"0.375","std":"0.0"},"maullido":{"pos":"n","pol":"0.375","std":"0.0"},"maximizar":{"pos":"v","pol":"0.313","std":"0.177"},"maña":{"pos":"n","pol":"0.3","std":"0.163"},"mecanismo acústico":{"pos":"n","pol":"0.375","std":"0.0"},"mecenazgo":{"pos":"n","pol":"0.375","std":"0.0"},"medicar":{"pos":"v","pol":"0.375","std":"0.0"},"medicinar":{"pos":"v","pol":"0.375","std":"0.0"},"medidas":{"pos":"n","pol":"0.375","std":"0.0"},"meditativo":{"pos":"a","pol":"0.375","std":"0.0"},"megalomanía":{"pos":"n","pol":"0.375","std":"0.0"},"mejora":{"pos":"n","pol":"0.328","std":"0.297"},"mejorado":{"pos":"a","pol":"0.417","std":"0.072"},"mejorar":{"pos":"v","pol":"0.281","std":"0.189"},"melódico":{"pos":"a","pol":"0.313","std":"0.53"},"memorable":{"pos":"a","pol":"0.375","std":"0.0"},"mendicante":{"pos":"a","pol":"0.375","std":"0.0"},"mensual":{"pos":"a","pol":"0.375","std":"0.0"},"mental":{"pos":"a","pol":"0.292","std":"0.144"},"mente":{"pos":"v","pol":"0.375","std":"0.0"},"menudo":{"pos":"a","pol":"0.375","std":"0.0"},"merecer":{"pos":"v","pol":"0.438","std":"0.088"},"meritocracia":{"pos":"n","pol":"0.313","std":"0.088"},"mesomorfo":{"pos":"a","pol":"0.375","std":"0.0"},"mesura":{"pos":"n","pol":"0.375","std":"0.0"},"metalistería":{"pos":"n","pol":"0.375","std":"0.0"},"meticuloso":{"pos":"a","pol":"0.344","std":"0.373"},"metódico":{"pos":"a","pol":"0.375","std":"0.072"},"miau":{"pos":"n","pol":"0.375","std":"0.0"},"microfonación":{"pos":"n","pol":"0.375","std":"0.0"},"milagroso":{"pos":"a","pol":"0.375","std":"0.265"},"mimoso":{"pos":"a","pol":"0.375","std":"0.0"},"mimético":{"pos":"a","pol":"0.313","std":"0.088"},"mirmecófilo":{"pos":"a","pol":"0.375","std":"0.0"},"moderno":{"pos":"a","pol":"0.328","std":"0.176"},"modestia":{"pos":"n","pol":"0.313","std":"0.0"},"modificable":{"pos":"a","pol":"0.375","std":"0.0"},"modificado":{"pos":"a","pol":"0.292","std":"0.144"},"momentáneo":{"pos":"a","pol":"0.375","std":"0.0"},"mono":{"pos":"a","pol":"0.469","std":"0.298"},"monosémico":{"pos":"a","pol":"0.375","std":"0.0"},"montado":{"pos":"a","pol":"0.375","std":"0.0"},"monárquico":{"pos":"a","pol":"0.375","std":"0.088"},"monástico":{"pos":"a","pol":"0.313","std":"0.0"},"moral":{"pos":"n","pol":"0.25","std":"0.072"},"moralizar":{"pos":"v","pol":"0.375","std":"0.144"},"motivador":{"pos":"a","pol":"0.375","std":"0.0"},"movible":{"pos":"a","pol":"0.292","std":"0.191"},"muchachil":{"pos":"a","pol":"0.375","std":"0.0"},"mucho pedir":{"pos":"n","pol":"0.375","std":"0.0"},"mucilaginoso":{"pos":"a","pol":"0.313","std":"0.0"},"mudra":{"pos":"n","pol":"0.375","std":"0.0"},"muescar":{"pos":"v","pol":"0.375","std":"0.0"},"mugido":{"pos":"n","pol":"0.375","std":"0.0"},"mujer de peso":{"pos":"n","pol":"0.375","std":"0.0"},"multiforme":{"pos":"a","pol":"0.375","std":"0.0"},"mundial":{"pos":"a","pol":"0.275","std":"0.209"},"musculoso":{"pos":"a","pol":"0.375","std":"0.088"},"musical":{"pos":"a","pol":"0.375","std":"0.088"},"musicológicamente":{"pos":"r","pol":"0.375","std":"0.0"},"mutabilidad":{"pos":"n","pol":"0.375","std":"0.0"},"mérito":{"pos":"n","pol":"0.417","std":"0.217"},"métrico":{"pos":"a","pol":"0.313","std":"0.088"},"mímico":{"pos":"a","pol":"0.375","std":"0.0"},"móvil":{"pos":"a","pol":"0.313","std":"0.265"},"música clásica":{"pos":"n","pol":"0.375","std":"0.0"},"música pop":{"pos":"n","pol":"0.375","std":"0.0"},"naranja":{"pos":"a","pol":"0.375","std":"0.0"},"narrativo":{"pos":"a","pol":"0.375","std":"0.0"},"negable":{"pos":"a","pol":"0.375","std":"0.0"},"neoliberal":{"pos":"a","pol":"0.375","std":"0.0"},"neto":{"pos":"a","pol":"0.313","std":"0.088"},"nivelado":{"pos":"a","pol":"0.375","std":"0.0"},"no":{"pos":"n","pol":"-0.375","std":"0.0"},"no estreñido":{"pos":"a","pol":"0.375","std":"0.0"},"no sectario":{"pos":"a","pol":"0.375","std":"0.0"},"nones":{"pos":"n","pol":"0.375","std":"0.0"},"normal":{"pos":"a","pol":"0.393","std":"0.157"},"normalidad":{"pos":"n","pol":"0.292","std":"0.144"},"notoriedad":{"pos":"n","pol":"0.375","std":"0.0"},"novedoso":{"pos":"a","pol":"0.375","std":"0.0"},"numinoso":{"pos":"a","pol":"0.375","std":"0.0"},"nutricionalmente":{"pos":"r","pol":"0.375","std":"0.0"},"nutrir":{"pos":"v","pol":"0.275","std":"0.163"},"nítido":{"pos":"a","pol":"0.333","std":"0.191"},"nóstico":{"pos":"a","pol":"0.375","std":"0.0"},"obedecer":{"pos":"v","pol":"0.375","std":"0.395"},"objetividad":{"pos":"n","pol":"0.375","std":"0.177"},"objetivo":{"pos":"a","pol":"0.313","std":"0.217"},"obsequioso":{"pos":"a","pol":"0.375","std":"0.0"},"observado":{"pos":"a","pol":"0.375","std":"0.0"},"observador":{"pos":"a","pol":"0.375","std":"0.0"},"obtenible":{"pos":"a","pol":"0.375","std":"0.0"},"obvia":{"pos":"a","pol":"0.438","std":"0.088"},"obvio":{"pos":"a","pol":"0.4","std":"0.143"},"occidentalizar":{"pos":"v","pol":"0.375","std":"0.0"},"ocioso":{"pos":"a","pol":"0.375","std":"0.0"},"ocre":{"pos":"a","pol":"0.375","std":"0.0"},"ofertorio":{"pos":"n","pol":"0.375","std":"0.0"},"oficina de empleo":{"pos":"n","pol":"0.375","std":"0.0"},"oficio":{"pos":"n","pol":"0.333","std":"0.279"},"ok":{"pos":"n","pol":"0.375","std":"0.0"},"okey":{"pos":"n","pol":"0.375","std":"0.0"},"oliva":{"pos":"a","pol":"0.375","std":"0.0"},"oliváceo":{"pos":"a","pol":"0.375","std":"0.0"},"oloroso":{"pos":"a","pol":"0.375","std":"0.439"},"omitir":{"pos":"v","pol":"0.313","std":"0.265"},"ondulante":{"pos":"a","pol":"0.375","std":"0.0"},"onomatopeico":{"pos":"a","pol":"0.375","std":"0.0"},"onomatopeya":{"pos":"n","pol":"0.375","std":"0.0"},"operativo":{"pos":"a","pol":"0.333","std":"0.125"},"operatorio":{"pos":"a","pol":"0.375","std":"0.0"},"oratorio":{"pos":"n","pol":"0.25","std":"0.0"},"ordenado":{"pos":"a","pol":"0.292","std":"0.102"},"orgánico":{"pos":"a","pol":"0.292","std":"0.282"},"orientación religiosa":{"pos":"n","pol":"0.375","std":"0.0"},"orientador":{"pos":"n","pol":"0.375","std":"0.0"},"originalidad":{"pos":"n","pol":"0.313","std":"0.177"},"ornamento arquitectónico":{"pos":"n","pol":"0.375","std":"0.0"},"oro":{"pos":"a","pol":"0.375","std":"0.0"},"otorgar una mitra":{"pos":"v","pol":"0.375","std":"0.0"},"oxidativo":{"pos":"a","pol":"0.375","std":"0.0"},"pacificación":{"pos":"n","pol":"0.333","std":"0.0"},"pacto":{"pos":"n","pol":"0.281","std":"0.072"},"pacto de caballeros":{"pos":"n","pol":"0.375","std":"0.0"},"palmear":{"pos":"v","pol":"0.375","std":"0.0"},"pampa":{"pos":"n","pol":"0.375","std":"0.0"},"panegirista":{"pos":"n","pol":"0.375","std":"0.0"},"panóptico":{"pos":"a","pol":"0.375","std":"0.0"},"parable":{"pos":"a","pol":"0.375","std":"0.0"},"parangón":{"pos":"n","pol":"0.375","std":"0.0"},"parchís":{"pos":"n","pol":"0.375","std":"0.0"},"parecido":{"pos":"a","pol":"0.344","std":"0.063"},"participante":{"pos":"a","pol":"0.375","std":"0.0"},"particular":{"pos":"a","pol":"0.313","std":"0.33"},"partidista":{"pos":"a","pol":"0.375","std":"0.0"},"partido":{"pos":"n","pol":"0.292","std":"0.52"},"pasar sin dificultad":{"pos":"v","pol":"0.375","std":"0.0"},"pase completo":{"pos":"n","pol":"0.375","std":"0.0"},"paseata":{"pos":"n","pol":"0.375","std":"0.0"},"pasiva":{"pos":"a","pol":"0.375","std":"0.0"},"pasivo":{"pos":"a","pol":"0.313","std":"0.354"},"pasmoso":{"pos":"a","pol":"0.313","std":"0.177"},"pastizal":{"pos":"n","pol":"0.375","std":"0.0"},"pastura":{"pos":"n","pol":"0.375","std":"0.0"},"paternalismo":{"pos":"n","pol":"0.313","std":"0.177"},"paternalista":{"pos":"a","pol":"0.375","std":"0.0"},"patidifuso":{"pos":"a","pol":"0.375","std":"0.0"},"patitieso":{"pos":"a","pol":"0.375","std":"0.0"},"patriotero":{"pos":"a","pol":"0.25","std":"0.0"},"patrón oro":{"pos":"n","pol":"0.313","std":"0.265"},"pedir":{"pos":"a","pol":"0.375","std":"0.0"},"pegadizo":{"pos":"a","pol":"0.333","std":"0.144"},"peinado":{"pos":"a","pol":"0.313","std":"0.0"},"penetrable":{"pos":"a","pol":"0.333","std":"0.072"},"pensión alimenticia":{"pos":"n","pol":"0.375","std":"0.0"},"pentecostalismo":{"pos":"n","pol":"0.375","std":"0.0"},"percepción del sonido":{"pos":"n","pol":"0.375","std":"0.0"},"perceptible":{"pos":"a","pol":"0.344","std":"0.072"},"perdonable":{"pos":"a","pol":"0.375","std":"0.0"},"perfeccionamiento":{"pos":"n","pol":"0.375","std":"0.0"},"perfeccionar":{"pos":"v","pol":"0.425","std":"0.105"},"perfección":{"pos":"n","pol":"0.281","std":"0.204"},"perfilado":{"pos":"a","pol":"0.375","std":"0.0"},"perfumado":{"pos":"a","pol":"0.333","std":"0.439"},"pericia":{"pos":"n","pol":"0.313","std":"0.094"},"perigeo":{"pos":"n","pol":"0.375","std":"0.0"},"permisible":{"pos":"a","pol":"0.333","std":"0.125"},"permiso":{"pos":"n","pol":"0.313","std":"0.213"},"perodicticus potto":{"pos":"n","pol":"0.375","std":"0.0"},"persona emotiva":{"pos":"n","pol":"0.375","std":"0.0"},"personificado":{"pos":"a","pol":"0.375","std":"0.0"},"perspicaz":{"pos":"a","pol":"0.45","std":"0.158"},"perspicuidad":{"pos":"n","pol":"0.375","std":"0.0"},"perspicuo":{"pos":"a","pol":"0.375","std":"0.0"},"persuasivo":{"pos":"a","pol":"0.375","std":"0.0"},"pertinencia":{"pos":"n","pol":"0.417","std":"0.191"},"pervertido":{"pos":"n","pol":"0.375","std":"0.0"},"piano de media cola":{"pos":"n","pol":"0.375","std":"0.0"},"picante":{"pos":"a","pol":"0.292","std":"0.246"},"ping":{"pos":"n","pol":"0.375","std":"0.0"},"placable":{"pos":"a","pol":"0.375","std":"0.0"},"placer":{"pos":"n","pol":"0.304","std":"0.318"},"placer sexual":{"pos":"n","pol":"0.375","std":"0.0"},"plan de emergencia":{"pos":"n","pol":"0.375","std":"0.0"},"plausibilidad":{"pos":"n","pol":"0.375","std":"0.0"},"plausible":{"pos":"a","pol":"0.313","std":"0.12"},"play-boy":{"pos":"n","pol":"0.375","std":"0.0"},"playboy":{"pos":"n","pol":"0.375","std":"0.0"},"pleno":{"pos":"a","pol":"0.438","std":"0.088"},"plus":{"pos":"n","pol":"0.375","std":"0.0"},"polizón":{"pos":"n","pol":"0.375","std":"0.0"},"ponderable":{"pos":"a","pol":"0.375","std":"0.0"},"poner asientos":{"pos":"v","pol":"0.375","std":"0.0"},"poner en movimiento":{"pos":"v","pol":"0.375","std":"0.0"},"pop":{"pos":"n","pol":"0.375","std":"0.0"},"popular":{"pos":"a","pol":"0.375","std":"0.157"},"popularización":{"pos":"n","pol":"0.375","std":"0.0"},"porcelana china":{"pos":"n","pol":"0.313","std":"0.088"},"posesión ilegal":{"pos":"n","pol":"0.375","std":"0.0"},"positivista":{"pos":"n","pol":"0.375","std":"0.0"},"potable":{"pos":"a","pol":"0.313","std":"0.442"},"potencia":{"pos":"n","pol":"0.333","std":"0.191"},"potenciar":{"pos":"v","pol":"0.375","std":"0.53"},"pragmatismo":{"pos":"n","pol":"0.375","std":"0.0"},"pragmático":{"pos":"a","pol":"0.292","std":"0.217"},"preciarse":{"pos":"v","pol":"0.375","std":"0.0"},"precisión":{"pos":"n","pol":"0.406","std":"0.161"},"preconcertado":{"pos":"a","pol":"0.375","std":"0.0"},"preconizar":{"pos":"v","pol":"0.313","std":"0.265"},"predigerido":{"pos":"a","pol":"0.375","std":"0.0"},"predilecto":{"pos":"n","pol":"0.375","std":"0.0"},"predispuesto":{"pos":"a","pol":"0.375","std":"0.0"},"predominante":{"pos":"a","pol":"0.375","std":"0.177"},"preeminencia":{"pos":"n","pol":"0.438","std":"0.088"},"prefabricado":{"pos":"a","pol":"0.375","std":"0.0"},"preferido":{"pos":"n","pol":"0.375","std":"0.0"},"prejuzgado":{"pos":"a","pol":"0.375","std":"0.0"},"preliterario":{"pos":"a","pol":"0.375","std":"0.0"},"premeditado":{"pos":"a","pol":"0.417","std":"0.072"},"prestaciones":{"pos":"n","pol":"0.375","std":"0.0"},"prestarse":{"pos":"v","pol":"0.375","std":"0.0"},"presto":{"pos":"a","pol":"0.313","std":"0.277"},"presumible":{"pos":"a","pol":"0.375","std":"0.0"},"presunto":{"pos":"a","pol":"0.3","std":"0.168"},"prevalecer":{"pos":"v","pol":"0.344","std":"0.12"},"prevenido":{"pos":"a","pol":"0.375","std":"0.0"},"previsible":{"pos":"a","pol":"0.375","std":"0.072"},"primera división":{"pos":"n","pol":"0.375","std":"0.0"},"primeros auxilios":{"pos":"n","pol":"0.375","std":"0.0"},"primerísima calidad":{"pos":"n","pol":"0.375","std":"0.0"},"primor":{"pos":"n","pol":"0.375","std":"0.0"},"principal":{"pos":"a","pol":"0.389","std":"0.104"},"principesco":{"pos":"a","pol":"0.375","std":"0.0"},"principio del placer":{"pos":"n","pol":"0.375","std":"0.0"},"priora":{"pos":"n","pol":"0.375","std":"0.0"},"prisionero":{"pos":"a","pol":"0.375","std":"0.0"},"privado":{"pos":"n","pol":"0.25","std":"0.0"},"privilegiar":{"pos":"v","pol":"0.375","std":"0.0"},"probable":{"pos":"a","pol":"0.438","std":"0.161"},"procesado":{"pos":"a","pol":"0.438","std":"0.177"},"procreador":{"pos":"a","pol":"0.375","std":"0.0"},"prodigio":{"pos":"n","pol":"0.438","std":"0.313"},"prodigioso":{"pos":"a","pol":"0.375","std":"0.0"},"producción artística":{"pos":"n","pol":"0.375","std":"0.0"},"profecía":{"pos":"n","pol":"0.313","std":"0.177"},"profesión":{"pos":"n","pol":"0.275","std":"0.112"},"proficiente":{"pos":"a","pol":"0.375","std":"0.0"},"profundo":{"pos":"a","pol":"0.292","std":"0.129"},"profusión":{"pos":"n","pol":"0.438","std":"0.619"},"programa de educación":{"pos":"n","pol":"0.375","std":"0.0"},"programa educativo":{"pos":"n","pol":"0.375","std":"0.0"},"programa pedagógico":{"pos":"n","pol":"0.375","std":"0.0"},"progresista":{"pos":"n","pol":"0.375","std":"0.0"},"proliferación":{"pos":"n","pol":"0.281","std":"0.415"},"proliferar":{"pos":"v","pol":"0.333","std":"0.577"},"prolongado":{"pos":"a","pol":"0.375","std":"0.0"},"prometer":{"pos":"v","pol":"0.313","std":"0.217"},"prometerse":{"pos":"v","pol":"0.375","std":"0.0"},"pronombre personal":{"pos":"n","pol":"0.375","std":"0.0"},"pronto":{"pos":"n","pol":"-0.25","std":"0.0"},"pronunciable":{"pos":"a","pol":"0.375","std":"0.0"},"proporcionado":{"pos":"a","pol":"0.35","std":"0.168"},"protector":{"pos":"a","pol":"0.438","std":"0.0"},"provechoso":{"pos":"a","pol":"0.417","std":"0.072"},"proveer de personal":{"pos":"v","pol":"0.375","std":"0.0"},"providencial":{"pos":"a","pol":"0.417","std":"0.26"},"pruebas circunstanciales":{"pos":"n","pol":"0.375","std":"0.0"},"prístino":{"pos":"a","pol":"0.313","std":"0.088"},"próstilo":{"pos":"a","pol":"0.375","std":"0.0"},"psicoterapéutico":{"pos":"a","pol":"0.313","std":"0.619"},"pueblerino":{"pos":"a","pol":"0.375","std":"0.0"},"puericultura":{"pos":"n","pol":"0.375","std":"0.0"},"pulcro":{"pos":"a","pol":"0.375","std":"0.072"},"pulimiento":{"pos":"n","pol":"0.375","std":"0.0"},"pulir":{"pos":"v","pol":"0.417","std":"0.459"},"puntilloso":{"pos":"a","pol":"0.281","std":"0.361"},"puntualidad":{"pos":"n","pol":"0.375","std":"0.088"},"puro":{"pos":"a","pol":"0.409","std":"0.128"},"purulento":{"pos":"a","pol":"0.375","std":"0.0"},"putativo":{"pos":"a","pol":"0.375","std":"0.0"},"público":{"pos":"a","pol":"0.438","std":"0.072"},"quedar pasmado":{"pos":"v","pol":"0.375","std":"0.0"},"quincenal":{"pos":"a","pol":"0.375","std":"0.0"},"quirúrgico":{"pos":"a","pol":"0.375","std":"0.191"},"qì":{"pos":"n","pol":"0.375","std":"0.0"},"racemoso":{"pos":"a","pol":"0.375","std":"0.0"},"racionalista":{"pos":"n","pol":"0.375","std":"0.0"},"racista":{"pos":"n","pol":"0.25","std":"0.0"},"radiante":{"pos":"a","pol":"0.333","std":"0.25"},"rapidez mental":{"pos":"n","pol":"0.375","std":"0.0"},"rascuñado":{"pos":"a","pol":"0.375","std":"0.0"},"rasguear":{"pos":"v","pol":"0.375","std":"0.0"},"rasgueo":{"pos":"n","pol":"0.375","std":"0.0"},"rasguñado":{"pos":"a","pol":"0.375","std":"0.0"},"raspado":{"pos":"a","pol":"0.375","std":"0.0"},"ratificación":{"pos":"n","pol":"0.313","std":"0.088"},"raudo":{"pos":"a","pol":"0.438","std":"0.088"},"razonado":{"pos":"a","pol":"0.333","std":"0.26"},"reactivado":{"pos":"a","pol":"0.375","std":"0.0"},"reanimar":{"pos":"v","pol":"0.266","std":"0.323"},"reavivado":{"pos":"a","pol":"0.375","std":"0.0"},"rebasar":{"pos":"v","pol":"0.375","std":"0.0"},"rebosante":{"pos":"a","pol":"0.313","std":"0.265"},"recabar":{"pos":"a","pol":"0.375","std":"0.0"},"recaudo":{"pos":"n","pol":"0.375","std":"0.354"},"rechino":{"pos":"n","pol":"0.375","std":"0.0"},"recomendación":{"pos":"n","pol":"0.275","std":"0.056"},"recomendar":{"pos":"v","pol":"0.375","std":"0.177"},"recompensa al mérito":{"pos":"n","pol":"0.375","std":"0.0"},"reconocible":{"pos":"a","pol":"0.458","std":"0.072"},"reconocido":{"pos":"a","pol":"0.429","std":"0.236"},"recrearse":{"pos":"v","pol":"0.438","std":"0.442"},"rector":{"pos":"a","pol":"0.375","std":"0.0"},"red de seguridad":{"pos":"n","pol":"0.375","std":"0.0"},"redefinir":{"pos":"v","pol":"0.313","std":"0.088"},"redentor":{"pos":"a","pol":"0.375","std":"0.354"},"redimible":{"pos":"a","pol":"0.375","std":"0.442"},"redomado":{"pos":"a","pol":"0.375","std":"0.0"},"reducible":{"pos":"a","pol":"0.375","std":"0.0"},"reductible":{"pos":"a","pol":"0.375","std":"0.0"},"reductor":{"pos":"a","pol":"0.375","std":"0.0"},"reemplazable":{"pos":"a","pol":"0.438","std":"0.0"},"referendo":{"pos":"n","pol":"0.375","std":"0.0"},"referéndum":{"pos":"n","pol":"0.375","std":"0.0"},"refinado":{"pos":"a","pol":"0.361","std":"0.121"},"refinamiento":{"pos":"n","pol":"0.4","std":"0.338"},"reformista":{"pos":"a","pol":"0.375","std":"0.0"},"reforzado":{"pos":"a","pol":"0.375","std":"0.277"},"refrendación":{"pos":"n","pol":"0.375","std":"0.0"},"refulgente":{"pos":"a","pol":"0.375","std":"0.0"},"regalonear":{"pos":"v","pol":"0.375","std":"0.0"},"regenerado":{"pos":"a","pol":"0.375","std":"0.0"},"regenerador":{"pos":"a","pol":"0.375","std":"0.382"},"regenerarse":{"pos":"v","pol":"0.375","std":"0.0"},"regio":{"pos":"a","pol":"0.406","std":"0.125"},"reglar":{"pos":"v","pol":"0.375","std":"0.0"},"regodearse":{"pos":"v","pol":"0.313","std":"0.177"},"regulado":{"pos":"a","pol":"0.375","std":"0.0"},"regulador":{"pos":"a","pol":"0.375","std":"0.0"},"regularidad":{"pos":"n","pol":"0.375","std":"0.0"},"regularizar":{"pos":"v","pol":"0.333","std":"0.125"},"rehabilitar":{"pos":"v","pol":"0.313","std":"0.217"},"reinante":{"pos":"a","pol":"0.375","std":"0.0"},"reincidente":{"pos":"n","pol":"0.375","std":"0.0"},"relajante":{"pos":"a","pol":"0.313","std":"0.0"},"relinquir":{"pos":"v","pol":"0.375","std":"0.0"},"reluciente":{"pos":"a","pol":"0.438","std":"0.063"},"relucir":{"pos":"v","pol":"0.275","std":"0.143"},"rememorar":{"pos":"v","pol":"0.292","std":"0.191"},"remilgado":{"pos":"n","pol":"0.375","std":"0.0"},"reminiscente":{"pos":"a","pol":"0.375","std":"0.0"},"remota":{"pos":"a","pol":"0.375","std":"0.0"},"remunerado":{"pos":"a","pol":"0.375","std":"0.072"},"remunerativo":{"pos":"a","pol":"0.375","std":"0.0"},"renaciente":{"pos":"a","pol":"0.375","std":"0.0"},"renombre":{"pos":"n","pol":"0.375","std":"0.0"},"renovado":{"pos":"a","pol":"0.375","std":"0.0"},"reparar":{"pos":"v","pol":"0.292","std":"0.072"},"repique":{"pos":"n","pol":"0.375","std":"0.0"},"reproductor":{"pos":"a","pol":"0.375","std":"0.0"},"repuesto":{"pos":"a","pol":"0.375","std":"0.0"},"repujado":{"pos":"a","pol":"0.375","std":"0.0"},"reputar":{"pos":"v","pol":"0.438","std":"0.442"},"requerido":{"pos":"a","pol":"0.375","std":"0.072"},"requisición":{"pos":"n","pol":"0.375","std":"0.0"},"rescatable":{"pos":"a","pol":"0.375","std":"0.0"},"reservado":{"pos":"a","pol":"0.375","std":"0.088"},"resituado":{"pos":"a","pol":"0.375","std":"0.0"},"resonante":{"pos":"a","pol":"0.375","std":"0.088"},"respaldar":{"pos":"v","pol":"0.275","std":"0.209"},"respeto":{"pos":"n","pol":"0.354","std":"0.234"},"respetos":{"pos":"n","pol":"0.375","std":"0.0"},"respuesta habilidosa":{"pos":"n","pol":"0.375","std":"0.0"},"restablecido":{"pos":"a","pol":"0.375","std":"0.0"},"restrictivo":{"pos":"a","pol":"0.406","std":"0.072"},"resuelto":{"pos":"a","pol":"0.472","std":"0.108"},"resumidamente":{"pos":"r","pol":"0.375","std":"0.0"},"retentivo":{"pos":"a","pol":"0.292","std":"0.315"},"reticente":{"pos":"a","pol":"0.313","std":"0.088"},"retratado":{"pos":"a","pol":"0.375","std":"0.0"},"retrotaer":{"pos":"v","pol":"0.375","std":"0.0"},"retráctil":{"pos":"a","pol":"0.375","std":"0.0"},"reutilizable":{"pos":"a","pol":"0.438","std":"0.177"},"revelado":{"pos":"a","pol":"0.375","std":"0.0"},"reverberante":{"pos":"a","pol":"0.313","std":"0.0"},"reverdecimiento":{"pos":"n","pol":"0.375","std":"0.0"},"reversible":{"pos":"a","pol":"0.35","std":"0.259"},"revertido":{"pos":"a","pol":"0.375","std":"0.0"},"revocable":{"pos":"a","pol":"0.375","std":"0.0"},"revoltoso":{"pos":"n","pol":"-0.312","std":"0.0"},"revolucionario":{"pos":"a","pol":"0.313","std":"0.088"},"rico":{"pos":"a","pol":"0.356","std":"0.185"},"rigoroso":{"pos":"a","pol":"0.375","std":"0.0"},"rimado":{"pos":"a","pol":"0.375","std":"0.177"},"riqueza":{"pos":"n","pol":"0.292","std":"0.345"},"rito religioso":{"pos":"n","pol":"0.313","std":"0.088"},"robustez":{"pos":"n","pol":"0.292","std":"0.125"},"robusto":{"pos":"a","pol":"0.391","std":"0.205"},"rojo-rosado":{"pos":"a","pol":"0.375","std":"0.0"},"rollizo":{"pos":"a","pol":"0.438","std":"0.0"},"rosa":{"pos":"a","pol":"0.292","std":"0.125"},"rosado":{"pos":"a","pol":"0.292","std":"0.072"},"rosbif":{"pos":"n","pol":"0.375","std":"0.0"},"rubicundez":{"pos":"n","pol":"0.375","std":"0.0"},"runrún":{"pos":"n","pol":"0.375","std":"0.0"},"rápido":{"pos":"a","pol":"0.318","std":"0.194"},"réplica ingeniosa":{"pos":"n","pol":"0.375","std":"0.0"},"rítmico":{"pos":"a","pol":"0.375","std":"0.0"},"rústico":{"pos":"a","pol":"0.292","std":"0.072"},"sabido":{"pos":"a","pol":"0.375","std":"0.0"},"sabroso":{"pos":"a","pol":"0.333","std":"0.068"},"sacafaltas":{"pos":"n","pol":"0.313","std":"0.0"},"sacar partido":{"pos":"v","pol":"0.375","std":"0.0"},"sacar una muestra":{"pos":"v","pol":"0.375","std":"0.0"},"saciarse":{"pos":"v","pol":"0.375","std":"0.0"},"sagrado":{"pos":"a","pol":"0.438","std":"0.063"},"salero":{"pos":"n","pol":"0.275","std":"0.24"},"salud":{"pos":"n","pol":"0.375","std":"0.265"},"salvo":{"pos":"a","pol":"0.313","std":"0.088"},"sanar":{"pos":"v","pol":"0.35","std":"0.198"},"sanidad":{"pos":"n","pol":"0.375","std":"0.177"},"sanitizar":{"pos":"v","pol":"0.375","std":"0.0"},"santificación":{"pos":"n","pol":"0.375","std":"0.0"},"santificar":{"pos":"v","pol":"0.292","std":"0.0"},"santurrón":{"pos":"a","pol":"0.375","std":"0.0"},"satinado":{"pos":"a","pol":"0.375","std":"0.072"},"satisfaciente":{"pos":"n","pol":"0.375","std":"0.0"},"saturnales":{"pos":"n","pol":"0.375","std":"0.0"},"sazonado":{"pos":"a","pol":"0.375","std":"0.0"},"secundar":{"pos":"v","pol":"0.292","std":"0.315"},"sedante":{"pos":"n","pol":"0.25","std":"0.0"},"sedoso":{"pos":"a","pol":"0.375","std":"0.0"},"segado":{"pos":"a","pol":"0.375","std":"0.0"},"segregado":{"pos":"a","pol":"0.375","std":"0.177"},"selección natural":{"pos":"n","pol":"0.375","std":"0.0"},"sello de aprobación":{"pos":"n","pol":"0.375","std":"0.0"},"sello distintivo":{"pos":"n","pol":"0.375","std":"0.0"},"semanal":{"pos":"a","pol":"0.375","std":"0.0"},"semanario":{"pos":"a","pol":"0.375","std":"0.0"},"semejante":{"pos":"a","pol":"0.354","std":"0.065"},"semestral":{"pos":"a","pol":"0.375","std":"0.0"},"semiautomático":{"pos":"a","pol":"0.313","std":"0.088"},"semivocal":{"pos":"n","pol":"0.375","std":"0.0"},"senil":{"pos":"a","pol":"0.375","std":"0.0"},"sensacional":{"pos":"a","pol":"0.458","std":"0.331"},"sensatez":{"pos":"n","pol":"0.357","std":"0.094"},"sensitivo":{"pos":"a","pol":"0.313","std":"0.0"},"sensual":{"pos":"a","pol":"0.417","std":"0.125"},"sentencia general":{"pos":"n","pol":"0.375","std":"0.0"},"sentido del bien y del mal":{"pos":"n","pol":"0.375","std":"0.0"},"separable":{"pos":"a","pol":"0.313","std":"0.072"},"separado":{"pos":"a","pol":"0.275","std":"0.144"},"separatista":{"pos":"a","pol":"0.375","std":"0.0"},"separativo":{"pos":"a","pol":"0.375","std":"0.0"},"ser campeón":{"pos":"v","pol":"0.375","std":"0.0"},"serendipismo":{"pos":"n","pol":"0.375","std":"0.0"},"seriedad":{"pos":"n","pol":"0.275","std":"0.424"},"serrar":{"pos":"v","pol":"0.375","std":"0.0"},"servicial":{"pos":"a","pol":"0.469","std":"0.359"},"servicio de asesoramiento":{"pos":"n","pol":"0.375","std":"0.0"},"servil":{"pos":"a","pol":"0.313","std":"0.12"},"sesudo":{"pos":"a","pol":"0.375","std":"0.0"},"sexy":{"pos":"a","pol":"0.375","std":"0.177"},"shag":{"pos":"n","pol":"0.375","std":"0.0"},"sibilante":{"pos":"n","pol":"0.375","std":"0.0"},"significación":{"pos":"n","pol":"0.292","std":"0.217"},"silencioso":{"pos":"a","pol":"0.375","std":"0.072"},"simetría":{"pos":"n","pol":"0.292","std":"0.144"},"similar":{"pos":"a","pol":"0.35","std":"0.068"},"simulado":{"pos":"a","pol":"0.313","std":"0.0"},"simétrico":{"pos":"a","pol":"0.375","std":"0.265"},"sin pretensiones":{"pos":"r","pol":"0.375","std":"0.0"},"sin árboles":{"pos":"a","pol":"0.375","std":"0.0"},"sinceramente":{"pos":"r","pol":"0.375","std":"0.0"},"sinceridad":{"pos":"n","pol":"0.313","std":"0.243"},"sinecdóquico":{"pos":"a","pol":"0.375","std":"0.0"},"sinfónico":{"pos":"a","pol":"0.313","std":"0.53"},"sinónimo":{"pos":"a","pol":"0.375","std":"0.0"},"sistema de grabación":{"pos":"n","pol":"0.375","std":"0.0"},"sistema del gas":{"pos":"n","pol":"0.375","std":"0.0"},"soberbio":{"pos":"a","pol":"0.438","std":"0.265"},"sobrealimentado":{"pos":"a","pol":"0.375","std":"0.088"},"sobrecogido":{"pos":"a","pol":"0.375","std":"0.0"},"sobreexplotación":{"pos":"n","pol":"0.375","std":"0.0"},"sobresaliente":{"pos":"a","pol":"0.406","std":"0.472"},"sobresaltado":{"pos":"a","pol":"0.375","std":"0.0"},"sobreutilización":{"pos":"n","pol":"0.375","std":"0.0"},"sobrevalorar":{"pos":"v","pol":"0.375","std":"0.177"},"sobrexcitado":{"pos":"a","pol":"0.375","std":"0.0"},"social":{"pos":"a","pol":"0.393","std":"0.278"},"socializado":{"pos":"a","pol":"0.375","std":"0.0"},"socialmente":{"pos":"r","pol":"0.375","std":"0.0"},"sofisticado":{"pos":"a","pol":"0.406","std":"0.331"},"soleado":{"pos":"a","pol":"0.375","std":"0.0"},"solemnidad":{"pos":"n","pol":"0.292","std":"0.289"},"solicitado":{"pos":"a","pol":"0.375","std":"0.0"},"solicitar":{"pos":"a","pol":"0.375","std":"0.0"},"solidez":{"pos":"n","pol":"0.479","std":"0.33"},"solucionable":{"pos":"a","pol":"0.375","std":"0.0"},"solucionado":{"pos":"a","pol":"0.375","std":"0.0"},"solícito":{"pos":"a","pol":"0.438","std":"0.088"},"sonido vocálico":{"pos":"n","pol":"0.375","std":"0.0"},"sonora":{"pos":"n","pol":"0.375","std":"0.0"},"sonoro":{"pos":"a","pol":"0.292","std":"0.125"},"sonrisa":{"pos":"n","pol":"0.375","std":"0.0"},"sonrosado":{"pos":"a","pol":"0.458","std":"0.191"},"sospechado":{"pos":"a","pol":"0.375","std":"0.0"},"sprint":{"pos":"n","pol":"0.375","std":"0.0"},"stigmatismo":{"pos":"n","pol":"0.375","std":"0.0"},"suave al tacto":{"pos":"a","pol":"0.375","std":"0.0"},"suavidad":{"pos":"n","pol":"0.281","std":"0.204"},"subjetivo":{"pos":"a","pol":"0.417","std":"0.144"},"substancia":{"pos":"n","pol":"0.375","std":"0.0"},"substancial":{"pos":"a","pol":"0.375","std":"0.088"},"substituible":{"pos":"a","pol":"0.375","std":"0.265"},"substractivo":{"pos":"a","pol":"0.375","std":"0.0"},"subsónico":{"pos":"a","pol":"0.375","std":"0.0"},"sucintamente":{"pos":"r","pol":"0.375","std":"0.0"},"sucinto":{"pos":"a","pol":"0.375","std":"0.0"},"sugestionable":{"pos":"a","pol":"0.375","std":"0.0"},"sugestivo":{"pos":"a","pol":"0.375","std":"0.0"},"sumiso":{"pos":"a","pol":"0.475","std":"0.153"},"suntuoso":{"pos":"a","pol":"0.375","std":"0.361"},"superable":{"pos":"a","pol":"0.333","std":"0.0"},"superioridad":{"pos":"n","pol":"0.406","std":"0.2"},"superrefinado":{"pos":"a","pol":"0.375","std":"0.0"},"supersensible":{"pos":"a","pol":"0.375","std":"0.0"},"supervisado":{"pos":"a","pol":"0.375","std":"0.0"},"suplementario":{"pos":"a","pol":"0.333","std":"0.072"},"supositivo":{"pos":"a","pol":"0.375","std":"0.0"},"supremo":{"pos":"a","pol":"0.438","std":"0.063"},"suprimible":{"pos":"a","pol":"0.375","std":"0.0"},"suprimido":{"pos":"a","pol":"0.375","std":"0.088"},"surtir":{"pos":"v","pol":"0.375","std":"0.0"},"susceptible":{"pos":"a","pol":"0.469","std":"0.063"},"suspicaz":{"pos":"a","pol":"0.375","std":"0.0"},"sustituible":{"pos":"a","pol":"0.375","std":"0.0"},"sustractivo":{"pos":"a","pol":"0.375","std":"0.0"},"suturar":{"pos":"v","pol":"0.375","std":"0.0"},"sólido":{"pos":"a","pol":"0.292","std":"0.329"},"sónico":{"pos":"a","pol":"0.375","std":"0.088"},"tal":{"pos":"a","pol":"0.375","std":"0.0"},"talante":{"pos":"n","pol":"0.375","std":"0.331"},"talento":{"pos":"n","pol":"0.458","std":"0.451"},"taoismo":{"pos":"n","pol":"0.375","std":"0.0"},"tapa de objetivo":{"pos":"n","pol":"0.375","std":"0.0"},"techie":{"pos":"n","pol":"0.375","std":"0.0"},"tecnológico":{"pos":"a","pol":"0.313","std":"0.265"},"telescópico":{"pos":"a","pol":"0.375","std":"0.0"},"tempestivo":{"pos":"a","pol":"0.375","std":"0.0"},"tendencioso":{"pos":"a","pol":"0.292","std":"0.072"},"tentable":{"pos":"a","pol":"0.375","std":"0.0"},"terapia autógena":{"pos":"n","pol":"0.375","std":"0.0"},"terminable":{"pos":"a","pol":"0.375","std":"0.0"},"terroso":{"pos":"a","pol":"0.313","std":"0.088"},"terso":{"pos":"a","pol":"0.375","std":"0.0"},"terylene":{"pos":"n","pol":"0.375","std":"0.0"},"testado":{"pos":"a","pol":"0.375","std":"0.0"},"ticket":{"pos":"n","pol":"0.313","std":"0.088"},"tiempo reglamentario":{"pos":"n","pol":"0.375","std":"0.0"},"tintineante":{"pos":"a","pol":"0.417","std":"0.072"},"tipicidad":{"pos":"n","pol":"0.375","std":"0.0"},"tique":{"pos":"n","pol":"0.375","std":"0.0"},"tirotoxicosis":{"pos":"n","pol":"0.375","std":"0.0"},"titulado":{"pos":"a","pol":"0.375","std":"0.177"},"titánico":{"pos":"a","pol":"0.313","std":"0.088"},"tolerante":{"pos":"a","pol":"0.3","std":"0.153"},"tomar para sí":{"pos":"v","pol":"0.375","std":"0.0"},"tomarse":{"pos":"v","pol":"0.375","std":"0.0"},"tostado":{"pos":"a","pol":"0.375","std":"0.0"},"traje de campaña":{"pos":"n","pol":"0.375","std":"0.0"},"tranquilizarse":{"pos":"v","pol":"0.313","std":"0.177"},"transcendencia":{"pos":"n","pol":"0.333","std":"0.191"},"transformable":{"pos":"a","pol":"0.313","std":"0.088"},"transformado":{"pos":"a","pol":"0.375","std":"0.0"},"transitable":{"pos":"a","pol":"0.313","std":"0.088"},"transmutable":{"pos":"a","pol":"0.375","std":"0.0"},"trasmutable":{"pos":"a","pol":"0.375","std":"0.0"},"trasparencia":{"pos":"n","pol":"0.313","std":"0.177"},"tratado":{"pos":"n","pol":"0.25","std":"0.177"},"tratado internacional":{"pos":"n","pol":"0.375","std":"0.0"},"tratamiento de belleza":{"pos":"n","pol":"0.375","std":"0.0"},"trienal":{"pos":"a","pol":"0.375","std":"0.0"},"trisecar":{"pos":"v","pol":"0.375","std":"0.0"},"trisectar":{"pos":"v","pol":"0.375","std":"0.0"},"triunfar":{"pos":"v","pol":"0.313","std":"0.26"},"tropismo":{"pos":"n","pol":"0.375","std":"0.0"},"trípode de cámara":{"pos":"n","pol":"0.375","std":"0.0"},"tuerto":{"pos":"a","pol":"0.375","std":"0.0"},"turista":{"pos":"n","pol":"0.375","std":"0.0"},"tutelar":{"pos":"v","pol":"0.25","std":"0.0"},"técnicamente":{"pos":"r","pol":"0.375","std":"0.0"},"típico":{"pos":"a","pol":"0.375","std":"0.213"},"tórrido":{"pos":"a","pol":"0.313","std":"0.177"},"ultramoderno":{"pos":"a","pol":"0.375","std":"0.0"},"ultrasónico":{"pos":"a","pol":"0.375","std":"0.0"},"unanimidad":{"pos":"n","pol":"0.375","std":"0.0"},"ungidor":{"pos":"n","pol":"0.375","std":"0.0"},"unido":{"pos":"a","pol":"0.391","std":"0.134"},"unitario":{"pos":"a","pol":"0.375","std":"0.0"},"universal":{"pos":"a","pol":"0.271","std":"0.188"},"unión aduanera":{"pos":"n","pol":"0.375","std":"0.0"},"urbanidad":{"pos":"n","pol":"0.475","std":"0.125"},"usado":{"pos":"a","pol":"0.281","std":"0.144"},"usura":{"pos":"n","pol":"0.313","std":"0.088"},"utilitario":{"pos":"a","pol":"0.375","std":"0.0"},"utilizable":{"pos":"a","pol":"0.375","std":"0.0"},"utopía":{"pos":"n","pol":"0.313","std":"0.237"},"vacaciones":{"pos":"n","pol":"0.375","std":"0.0"},"vajilla de porcelana":{"pos":"n","pol":"0.375","std":"0.0"},"validación":{"pos":"n","pol":"0.375","std":"0.0"},"validar":{"pos":"v","pol":"0.469","std":"0.102"},"validez":{"pos":"n","pol":"0.333","std":"0.402"},"vasto":{"pos":"a","pol":"0.438","std":"0.088"},"vaticinio":{"pos":"n","pol":"0.292","std":"0.144"},"vehemente":{"pos":"a","pol":"0.438","std":"0.0"},"vendado":{"pos":"a","pol":"0.375","std":"0.0"},"vendible":{"pos":"a","pol":"0.438","std":"0.12"},"veneración":{"pos":"n","pol":"0.313","std":"0.0"},"ventaja":{"pos":"n","pol":"0.292","std":"0.211"},"veracidad":{"pos":"n","pol":"0.313","std":"0.088"},"veraneante":{"pos":"n","pol":"0.375","std":"0.0"},"verdad":{"pos":"n","pol":"0.3","std":"0.274"},"verdaderamente":{"pos":"r","pol":"0.375","std":"0.0"},"verdadero":{"pos":"a","pol":"0.453","std":"0.188"},"verde-amarillento":{"pos":"a","pol":"0.375","std":"0.0"},"verde-amarillo":{"pos":"a","pol":"0.375","std":"0.0"},"verde jade":{"pos":"a","pol":"0.375","std":"0.0"},"verde salvia":{"pos":"a","pol":"0.375","std":"0.0"},"verdemar":{"pos":"a","pol":"0.375","std":"0.0"},"verdigris":{"pos":"a","pol":"0.375","std":"0.0"},"verdoso":{"pos":"a","pol":"0.375","std":"0.0"},"verificable":{"pos":"a","pol":"0.438","std":"0.177"},"verosímil":{"pos":"a","pol":"0.333","std":"0.072"},"versátil":{"pos":"a","pol":"0.417","std":"0.289"},"verídico":{"pos":"a","pol":"0.458","std":"0.402"},"veste":{"pos":"n","pol":"0.375","std":"0.0"},"vestido de cóctel":{"pos":"n","pol":"0.375","std":"0.0"},"viabilidad":{"pos":"n","pol":"0.375","std":"0.0"},"viaje de lujo":{"pos":"n","pol":"0.375","std":"0.0"},"viaje de placer":{"pos":"n","pol":"0.375","std":"0.0"},"vigoroso":{"pos":"a","pol":"0.417","std":"0.177"},"villancico":{"pos":"n","pol":"0.313","std":"0.0"},"villancico de navidad":{"pos":"n","pol":"0.375","std":"0.0"},"vino de misa":{"pos":"n","pol":"0.375","std":"0.0"},"violable":{"pos":"a","pol":"0.375","std":"0.0"},"virgen":{"pos":"a","pol":"0.375","std":"0.265"},"virginal":{"pos":"a","pol":"0.417","std":"0.144"},"virtual":{"pos":"a","pol":"0.313","std":"0.088"},"virtuosismo":{"pos":"n","pol":"0.375","std":"0.0"},"visar":{"pos":"v","pol":"0.375","std":"0.177"},"viscoso":{"pos":"a","pol":"0.281","std":"0.063"},"visible":{"pos":"a","pol":"0.458","std":"0.125"},"visto bueno":{"pos":"n","pol":"0.375","std":"0.0"},"vistoso":{"pos":"a","pol":"0.313","std":"0.265"},"vital":{"pos":"a","pol":"0.464","std":"0.157"},"vitalidad":{"pos":"n","pol":"0.375","std":"0.344"},"vitalizar":{"pos":"v","pol":"0.438","std":"0.265"},"vivace":{"pos":"a","pol":"0.375","std":"0.0"},"vivacidad":{"pos":"n","pol":"0.333","std":"0.184"},"vivaz":{"pos":"a","pol":"0.469","std":"0.146"},"vivazmente":{"pos":"r","pol":"0.375","std":"0.0"},"viveza":{"pos":"n","pol":"0.268","std":"0.098"},"vivificar":{"pos":"v","pol":"0.438","std":"0.265"},"vivir a costa de":{"pos":"v","pol":"0.375","std":"0.0"},"vivir de gorra":{"pos":"v","pol":"0.375","std":"0.0"},"vivo":{"pos":"a","pol":"0.33","std":"0.188"},"voleibol":{"pos":"n","pol":"0.375","std":"0.0"},"volitivo":{"pos":"a","pol":"0.375","std":"0.0"},"voluminoso":{"pos":"a","pol":"0.292","std":"0.0"},"volumétricamente":{"pos":"r","pol":"0.375","std":"0.0"},"voluntario":{"pos":"n","pol":"0.25","std":"0.25"},"vírgen":{"pos":"a","pol":"0.375","std":"0.0"},"vítor":{"pos":"n","pol":"0.375","std":"0.088"},"vítores":{"pos":"n","pol":"0.375","std":"0.0"},"vívido":{"pos":"a","pol":"0.375","std":"0.0"},"yang":{"pos":"n","pol":"0.375","std":"0.0"},"yoga":{"pos":"n","pol":"0.313","std":"0.088"},"zigomorfo":{"pos":"a","pol":"0.375","std":"0.0"},"ágil":{"pos":"a","pol":"0.479","std":"0.094"},"ángel custodio":{"pos":"n","pol":"0.375","std":"0.0"},"ángel de la guarda":{"pos":"n","pol":"0.375","std":"0.0"},"área de conocimiento":{"pos":"n","pol":"0.375","std":"0.0"},"épico":{"pos":"a","pol":"0.375","std":"0.354"},"étnico":{"pos":"a","pol":"0.375","std":"0.0"},"éxito":{"pos":"n","pol":"0.3","std":"0.143"},"éxito absoluto":{"pos":"n","pol":"0.375","std":"0.0"},"ídolo":{"pos":"n","pol":"0.313","std":"0.12"},"índice de precios":{"pos":"n","pol":"0.375","std":"0.0"},"único":{"pos":"a","pol":"0.333","std":"0.125"},"a la defensiva":{"pos":"n","pol":"-0.375","std":"0.0"},"a primera vista":{"pos":"r","pol":"-0.375","std":"0.0"},"abalanzar":{"pos":"v","pol":"-0.375","std":"0.0"},"abasia":{"pos":"n","pol":"-0.375","std":"0.0"},"abenuz":{"pos":"n","pol":"-0.375","std":"0.0"},"abominable":{"pos":"a","pol":"-0.375","std":"0.354"},"abominador":{"pos":"n","pol":"-0.375","std":"0.0"},"aborrecedor":{"pos":"n","pol":"-0.375","std":"0.0"},"aborto inminente":{"pos":"n","pol":"-0.375","std":"0.0"},"abrumar":{"pos":"v","pol":"-0.361","std":"0.178"},"absentista":{"pos":"n","pol":"-0.312","std":"0.0"},"abuchear":{"pos":"v","pol":"-0.458","std":"0.072"},"abucheo":{"pos":"n","pol":"-0.417","std":"0.072"},"abusador":{"pos":"n","pol":"-0.375","std":"0.0"},"abusar":{"pos":"v","pol":"-0.333","std":"0.072"},"abuso":{"pos":"n","pol":"-0.417","std":"0.144"},"abusón":{"pos":"n","pol":"-0.375","std":"0.0"},"acaudillar":{"pos":"v","pol":"-0.375","std":"0.0"},"accidente cerebrovascular":{"pos":"n","pol":"-0.375","std":"0.0"},"aceite de absenta":{"pos":"n","pol":"-0.375","std":"0.0"},"aceite de bacalao":{"pos":"n","pol":"-0.375","std":"0.0"},"acero damasquino":{"pos":"n","pol":"-0.375","std":"0.0"},"acherontia":{"pos":"n","pol":"-0.375","std":"0.0"},"achicarse":{"pos":"v","pol":"-0.375","std":"0.0"},"achicharrarse":{"pos":"v","pol":"-0.312","std":"0.088"},"acibarar":{"pos":"v","pol":"-0.375","std":"0.0"},"acidia":{"pos":"n","pol":"-0.375","std":"0.0"},"acinesia":{"pos":"n","pol":"-0.375","std":"0.0"},"acinesis":{"pos":"n","pol":"-0.375","std":"0.0"},"acondroplasia":{"pos":"a","pol":"-0.25","std":"0.0"},"acre":{"pos":"a","pol":"-0.3","std":"0.143"},"acromegalia":{"pos":"n","pol":"-0.375","std":"0.0"},"acromático":{"pos":"a","pol":"-0.375","std":"0.0"},"acuafobia":{"pos":"n","pol":"-0.375","std":"0.0"},"adamantino":{"pos":"a","pol":"-0.375","std":"0.0"},"adefesio":{"pos":"n","pol":"-0.312","std":"0.088"},"adenomiosis":{"pos":"n","pol":"-0.375","std":"0.0"},"adenopatía":{"pos":"n","pol":"-0.375","std":"0.0"},"adivinanza":{"pos":"n","pol":"-0.375","std":"0.0"},"adusto":{"pos":"a","pol":"-0.312","std":"0.088"},"adversidad":{"pos":"n","pol":"-0.475","std":"0.105"},"adverso":{"pos":"a","pol":"-0.375","std":"0.217"},"advertencia":{"pos":"n","pol":"-0.344","std":"0.125"},"afasia visual":{"pos":"n","pol":"-0.375","std":"0.0"},"afear":{"pos":"v","pol":"-0.333","std":"0.144"},"afonía":{"pos":"n","pol":"-0.292","std":"0.072"},"afrentar":{"pos":"v","pol":"-0.437","std":"0.088"},"afrontar":{"pos":"v","pol":"-0.406","std":"0.072"},"afótico":{"pos":"a","pol":"-0.375","std":"0.0"},"agobiante":{"pos":"a","pol":"-0.312","std":"0.177"},"agrandado":{"pos":"a","pol":"-0.312","std":"0.088"},"agravamiento":{"pos":"n","pol":"-0.417","std":"0.072"},"agravarse":{"pos":"v","pol":"-0.375","std":"0.0"},"agrazón":{"pos":"n","pol":"-0.292","std":"0.072"},"agreder":{"pos":"v","pol":"-0.375","std":"0.0"},"agresivo":{"pos":"n","pol":"-0.375","std":"0.0"},"agresión":{"pos":"n","pol":"-0.312","std":"0.102"},"agrio":{"pos":"a","pol":"-0.425","std":"0.163"},"ahogado":{"pos":"a","pol":"-0.375","std":"0.0"},"alar":{"pos":"n","pol":"-0.375","std":"0.0"},"alarmante":{"pos":"a","pol":"-0.333","std":"0.191"},"alborotado":{"pos":"a","pol":"-0.375","std":"0.0"},"alborotador":{"pos":"n","pol":"-0.417","std":"0.072"},"alero":{"pos":"n","pol":"-0.375","std":"0.0"},"alexia":{"pos":"n","pol":"-0.375","std":"0.0"},"alfil":{"pos":"n","pol":"-0.375","std":"0.0"},"alfilerazo":{"pos":"n","pol":"-0.437","std":"0.0"},"algarabía":{"pos":"n","pol":"-0.437","std":"0.088"},"algarada":{"pos":"n","pol":"-0.375","std":"0.0"},"alguacil":{"pos":"n","pol":"-0.312","std":"0.0"},"alguna parte":{"pos":"n","pol":"-0.375","std":"0.0"},"algún lugar":{"pos":"n","pol":"-0.375","std":"0.0"},"alifafe":{"pos":"n","pol":"-0.375","std":"0.0"},"aliviado":{"pos":"a","pol":"-0.333","std":"0.125"},"aljófar":{"pos":"n","pol":"-0.375","std":"0.0"},"almorranas":{"pos":"n","pol":"-0.375","std":"0.0"},"alocado":{"pos":"n","pol":"-0.25","std":"0.0"},"alpende":{"pos":"n","pol":"-0.375","std":"0.0"},"altanero":{"pos":"a","pol":"-0.375","std":"0.265"},"alterar":{"pos":"v","pol":"-0.321","std":"0.067"},"alucinación":{"pos":"n","pol":"-0.375","std":"0.0"},"amanita mappa":{"pos":"n","pol":"-0.375","std":"0.0"},"amargado":{"pos":"a","pol":"-0.375","std":"0.072"},"amargo":{"pos":"a","pol":"-0.375","std":"0.12"},"amañar":{"pos":"v","pol":"-0.3","std":"0.0"},"ambiguo":{"pos":"a","pol":"-0.312","std":"0.157"},"ambliopía":{"pos":"n","pol":"-0.375","std":"0.0"},"amenaza":{"pos":"n","pol":"-0.437","std":"0.102"},"amenaza de aborto":{"pos":"n","pol":"-0.375","std":"0.0"},"amenazadoramente":{"pos":"r","pol":"-0.312","std":"0.088"},"amenazar":{"pos":"v","pol":"-0.275","std":"0.112"},"amilanamiento":{"pos":"n","pol":"-0.375","std":"0.0"},"amiloidosis":{"pos":"n","pol":"-0.375","std":"0.0"},"amonestar":{"pos":"v","pol":"-0.3","std":"0.068"},"amotinarse":{"pos":"v","pol":"-0.375","std":"0.0"},"ampulosidad":{"pos":"n","pol":"-0.437","std":"0.0"},"ampuloso":{"pos":"a","pol":"-0.375","std":"0.217"},"analfabeto":{"pos":"a","pol":"-0.417","std":"0.0"},"analgesia":{"pos":"n","pol":"-0.375","std":"0.0"},"analgia":{"pos":"n","pol":"-0.375","std":"0.0"},"andanada":{"pos":"n","pol":"-0.437","std":"0.0"},"andesita":{"pos":"n","pol":"-0.375","std":"0.0"},"anemia":{"pos":"n","pol":"-0.375","std":"0.0"},"anemia perniciosa":{"pos":"n","pol":"-0.375","std":"0.0"},"anestésico":{"pos":"a","pol":"-0.25","std":"0.0"},"anginas":{"pos":"n","pol":"-0.375","std":"0.0"},"aniquilado":{"pos":"a","pol":"-0.375","std":"0.0"},"aniquilador":{"pos":"a","pol":"-0.25","std":"0.0"},"anonadar":{"pos":"v","pol":"-0.312","std":"0.088"},"anosmia":{"pos":"n","pol":"-0.333","std":"0.072"},"antagonista":{"pos":"a","pol":"-0.312","std":"0.354"},"antecocina":{"pos":"n","pol":"-0.375","std":"0.0"},"anticipador":{"pos":"a","pol":"-0.375","std":"0.0"},"antihigiénico":{"pos":"a","pol":"-0.375","std":"0.0"},"antiintelectual":{"pos":"a","pol":"-0.312","std":"0.177"},"antiprotón":{"pos":"n","pol":"-0.375","std":"0.0"},"antracita":{"pos":"n","pol":"-0.375","std":"0.0"},"antracosis":{"pos":"n","pol":"-0.375","std":"0.0"},"anurético":{"pos":"a","pol":"-0.375","std":"0.0"},"anósmico":{"pos":"a","pol":"-0.312","std":"0.177"},"apalear":{"pos":"v","pol":"-0.312","std":"0.0"},"aparentar":{"pos":"v","pol":"-0.375","std":"0.144"},"apatía":{"pos":"n","pol":"-0.469","std":"0.12"},"apenas":{"pos":"r","pol":"-0.312","std":"0.088"},"apestar":{"pos":"v","pol":"-0.375","std":"0.0"},"aplastarse":{"pos":"v","pol":"-0.375","std":"0.0"},"apocado":{"pos":"a","pol":"-0.292","std":"0.125"},"apocalíptico":{"pos":"a","pol":"-0.437","std":"0.088"},"apocarse":{"pos":"v","pol":"-0.375","std":"0.0"},"apoplejía":{"pos":"n","pol":"-0.375","std":"0.0"},"aprehensión":{"pos":"n","pol":"-0.312","std":"0.0"},"aprehensión inmediata":{"pos":"n","pol":"-0.375","std":"0.0"},"aprisionamiento":{"pos":"n","pol":"-0.375","std":"0.0"},"apráctico":{"pos":"a","pol":"-0.375","std":"0.0"},"apráxico":{"pos":"a","pol":"-0.375","std":"0.0"},"apurar":{"pos":"v","pol":"-0.375","std":"0.088"},"apuñear":{"pos":"v","pol":"-0.375","std":"0.0"},"apuñetear":{"pos":"v","pol":"-0.375","std":"0.0"},"apático":{"pos":"a","pol":"-0.281","std":"0.12"},"aquafobia":{"pos":"n","pol":"-0.375","std":"0.0"},"arduidad":{"pos":"n","pol":"-0.375","std":"0.0"},"argucia":{"pos":"n","pol":"-0.458","std":"0.072"},"argumentos especiosos":{"pos":"n","pol":"-0.375","std":"0.0"},"arreflexia":{"pos":"n","pol":"-0.375","std":"0.0"},"arrobar":{"pos":"v","pol":"-0.375","std":"0.0"},"arrogante":{"pos":"n","pol":"-0.375","std":"0.0"},"arruinar":{"pos":"v","pol":"-0.319","std":"0.088"},"arseniato de plomo":{"pos":"n","pol":"-0.375","std":"0.0"},"arsina":{"pos":"n","pol":"-0.375","std":"0.0"},"arteria alveolar inferior":{"pos":"n","pol":"-0.375","std":"0.0"},"arteria labial inferior":{"pos":"n","pol":"-0.375","std":"0.0"},"articulación temporomandibular":{"pos":"n","pol":"-0.375","std":"0.0"},"articulatio temporomandibularis":{"pos":"n","pol":"-0.375","std":"0.0"},"artificio":{"pos":"n","pol":"-0.375","std":"0.0"},"artrálgico":{"pos":"a","pol":"-0.375","std":"0.0"},"asarum":{"pos":"n","pol":"-0.375","std":"0.0"},"asbestosis":{"pos":"n","pol":"-0.375","std":"0.0"},"asertividad":{"pos":"n","pol":"-0.375","std":"0.0"},"asesinato ritual":{"pos":"n","pol":"-0.375","std":"0.0"},"asesino a sueldo":{"pos":"n","pol":"-0.375","std":"0.0"},"asistolia":{"pos":"n","pol":"-0.375","std":"0.0"},"asonada":{"pos":"n","pol":"-0.375","std":"0.0"},"aspergilosis":{"pos":"n","pol":"-0.312","std":"0.0"},"asquerosidad":{"pos":"n","pol":"-0.312","std":"0.088"},"astenia":{"pos":"n","pol":"-0.375","std":"0.0"},"astilar":{"pos":"a","pol":"-0.375","std":"0.0"},"astracanada":{"pos":"n","pol":"-0.375","std":"0.0"},"atacar":{"pos":"v","pol":"-0.3","std":"0.163"},"atacar por sorpresa":{"pos":"v","pol":"-0.375","std":"0.0"},"ataque":{"pos":"n","pol":"-0.307","std":"0.067"},"ataque al corazón":{"pos":"n","pol":"-0.375","std":"0.0"},"ataque aéreo":{"pos":"n","pol":"-0.375","std":"0.0"},"ataxia":{"pos":"n","pol":"-0.375","std":"0.0"},"atormentado":{"pos":"a","pol":"-0.437","std":"0.177"},"atosigador":{"pos":"n","pol":"-0.312","std":"0.088"},"atracción alternativa":{"pos":"n","pol":"-0.375","std":"0.0"},"atraco":{"pos":"n","pol":"-0.292","std":"0.0"},"atrapamoscas":{"pos":"n","pol":"-0.375","std":"0.0"},"atrapar":{"pos":"v","pol":"-0.341","std":"0.075"},"atrevimiento":{"pos":"n","pol":"-0.297","std":"0.115"},"atrocidad":{"pos":"n","pol":"-0.328","std":"0.104"},"atufamiento":{"pos":"n","pol":"-0.437","std":"0.0"},"atufo":{"pos":"n","pol":"-0.437","std":"0.0"},"aturrullar":{"pos":"v","pol":"-0.375","std":"0.0"},"aturullar":{"pos":"v","pol":"-0.375","std":"0.0"},"atípico":{"pos":"a","pol":"-0.312","std":"0.088"},"audaz":{"pos":"a","pol":"-0.333","std":"0.144"},"audífono":{"pos":"n","pol":"-0.375","std":"0.0"},"autería":{"pos":"n","pol":"-0.375","std":"0.0"},"auto de fe":{"pos":"n","pol":"-0.375","std":"0.0"},"autocastigo":{"pos":"n","pol":"-0.375","std":"0.0"},"autoflagelación":{"pos":"n","pol":"-0.437","std":"0.088"},"autopsia":{"pos":"n","pol":"-0.375","std":"0.0"},"avaricia":{"pos":"n","pol":"-0.333","std":"0.144"},"avasallar":{"pos":"v","pol":"-0.375","std":"0.0"},"aventura riesgosa":{"pos":"n","pol":"-0.375","std":"0.0"},"aviso":{"pos":"n","pol":"-0.271","std":"0.068"},"azabache":{"pos":"n","pol":"-0.375","std":"0.0"},"azoramiento":{"pos":"n","pol":"-0.312","std":"0.088"},"azotar":{"pos":"v","pol":"-0.271","std":"0.051"},"babera":{"pos":"n","pol":"-0.375","std":"0.0"},"babucha":{"pos":"n","pol":"-0.375","std":"0.0"},"bacteriología":{"pos":"n","pol":"-0.375","std":"0.0"},"bacteriólisis":{"pos":"n","pol":"-0.375","std":"0.0"},"badulaque":{"pos":"n","pol":"-0.458","std":"0.0"},"baja calidad":{"pos":"n","pol":"-0.375","std":"0.0"},"baja deshonrosa":{"pos":"n","pol":"-0.375","std":"0.0"},"bajas presiones":{"pos":"n","pol":"-0.375","std":"0.0"},"bajeza":{"pos":"n","pol":"-0.375","std":"0.125"},"bajista":{"pos":"n","pol":"-0.375","std":"0.0"},"bajura":{"pos":"n","pol":"-0.375","std":"0.177"},"baldón":{"pos":"n","pol":"-0.375","std":"0.0"},"balizar":{"pos":"v","pol":"-0.375","std":"0.0"},"bandido":{"pos":"n","pol":"-0.292","std":"0.0"},"banshee":{"pos":"n","pol":"-0.375","std":"0.0"},"banteng":{"pos":"n","pol":"-0.375","std":"0.0"},"barahunda":{"pos":"n","pol":"-0.375","std":"0.0"},"barbarie":{"pos":"n","pol":"-0.344","std":"0.102"},"barbarismo":{"pos":"n","pol":"-0.375","std":"0.0"},"barbote":{"pos":"n","pol":"-0.375","std":"0.0"},"barbulla":{"pos":"n","pol":"-0.375","std":"0.0"},"barrera":{"pos":"n","pol":"-0.292","std":"0.144"},"barrila":{"pos":"n","pol":"-0.292","std":"0.125"},"bastardía":{"pos":"n","pol":"-0.312","std":"0.088"},"batahola":{"pos":"n","pol":"-0.292","std":"0.072"},"batalla campal":{"pos":"n","pol":"-0.333","std":"0.072"},"batalla de Brunanburh":{"pos":"n","pol":"-0.375","std":"0.0"},"batalla de Jena":{"pos":"n","pol":"-0.375","std":"0.0"},"befarse":{"pos":"v","pol":"-0.375","std":"0.0"},"bemol":{"pos":"n","pol":"-0.375","std":"0.0"},"bicho raro":{"pos":"n","pol":"-0.375","std":"0.072"},"bigardía":{"pos":"n","pol":"-0.375","std":"0.0"},"blocao":{"pos":"n","pol":"-0.375","std":"0.0"},"blooper":{"pos":"n","pol":"-0.375","std":"0.0"},"bloqueo mental":{"pos":"n","pol":"-0.375","std":"0.0"},"bobales":{"pos":"n","pol":"-0.375","std":"0.0"},"bobalicón":{"pos":"n","pol":"-0.425","std":"0.056"},"bobo":{"pos":"a","pol":"-0.312","std":"0.088"},"bocanada":{"pos":"n","pol":"-0.375","std":"0.0"},"bolsa de aire":{"pos":"n","pol":"-0.375","std":"0.0"},"bono basura":{"pos":"n","pol":"-0.375","std":"0.0"},"borrasca":{"pos":"n","pol":"-0.312","std":"0.0"},"borrascoso":{"pos":"a","pol":"-0.375","std":"0.0"},"borrico":{"pos":"n","pol":"-0.375","std":"0.0"},"bos javanicus":{"pos":"n","pol":"-0.375","std":"0.0"},"botarate":{"pos":"n","pol":"-0.375","std":"0.0"},"boxeador de segunda":{"pos":"n","pol":"-0.375","std":"0.0"},"bramar":{"pos":"v","pol":"-0.375","std":"0.0"},"braquidactil":{"pos":"a","pol":"-0.375","std":"0.0"},"braquidactilia":{"pos":"n","pol":"-0.375","std":"0.0"},"brazal":{"pos":"n","pol":"-0.292","std":"0.0"},"brazalete de tobillo":{"pos":"n","pol":"-0.375","std":"0.0"},"brega":{"pos":"n","pol":"-0.375","std":"0.088"},"bribón":{"pos":"n","pol":"-0.469","std":"0.102"},"bronca":{"pos":"n","pol":"-0.417","std":"0.068"},"brote":{"pos":"n","pol":"-0.375","std":"0.0"},"brusquedad":{"pos":"r","pol":"-0.375","std":"0.0"},"brutalidad":{"pos":"n","pol":"-0.344","std":"0.102"},"bruto":{"pos":"a","pol":"-0.437","std":"0.088"},"buey salvaje indonesio":{"pos":"n","pol":"-0.375","std":"0.0"},"bujarra":{"pos":"n","pol":"-0.375","std":"0.0"},"bujarrón":{"pos":"n","pol":"-0.375","std":"0.0"},"bullanguero":{"pos":"n","pol":"-0.312","std":"0.072"},"bulo":{"pos":"n","pol":"-0.375","std":"0.177"},"burguesía":{"pos":"n","pol":"-0.375","std":"0.0"},"burro de carga":{"pos":"n","pol":"-0.375","std":"0.0"},"buscar defectos":{"pos":"v","pol":"-0.375","std":"0.0"},"butterscotch":{"pos":"n","pol":"-0.375","std":"0.0"},"cabeceo":{"pos":"n","pol":"-0.375","std":"0.0"},"cabestrar":{"pos":"v","pol":"-0.375","std":"0.0"},"cabeza abajo":{"pos":"r","pol":"-0.375","std":"0.0"},"cabeza de chorlito":{"pos":"n","pol":"-0.292","std":"0.072"},"cabeza hueca":{"pos":"n","pol":"-0.375","std":"0.0"},"cabrón":{"pos":"n","pol":"-0.446","std":"0.061"},"cacao":{"pos":"n","pol":"-0.325","std":"0.112"},"cacería":{"pos":"n","pol":"-0.312","std":"0.0"},"cachete":{"pos":"n","pol":"-0.312","std":"0.0"},"cacodemónico":{"pos":"a","pol":"-0.375","std":"0.0"},"cagada":{"pos":"n","pol":"-0.375","std":"0.0"},"calamidad":{"pos":"n","pol":"-0.469","std":"0.125"},"calavera":{"pos":"n","pol":"-0.333","std":"0.072"},"calcitonina":{"pos":"n","pol":"-0.375","std":"0.0"},"callosidad":{"pos":"n","pol":"-0.375","std":"0.0"},"calvario":{"pos":"n","pol":"-0.375","std":"0.072"},"calvatrueno":{"pos":"n","pol":"-0.375","std":"0.0"},"calzoncillo":{"pos":"n","pol":"-0.375","std":"0.0"},"camandulero":{"pos":"n","pol":"-0.375","std":"0.0"},"camino de carro":{"pos":"n","pol":"-0.375","std":"0.0"},"camorra":{"pos":"n","pol":"-0.281","std":"0.102"},"camorrista":{"pos":"n","pol":"-0.312","std":"0.088"},"canalla":{"pos":"n","pol":"-0.312","std":"0.092"},"cansar":{"pos":"v","pol":"-0.281","std":"0.12"},"cantada":{"pos":"n","pol":"-0.375","std":"0.0"},"capataz":{"pos":"n","pol":"-0.375","std":"0.0"},"capital de las Vanuatu":{"pos":"n","pol":"-0.375","std":"0.0"},"cara dura":{"pos":"n","pol":"-0.375","std":"0.0"},"carbonilla":{"pos":"n","pol":"-0.312","std":"0.0"},"carburo de hierro":{"pos":"n","pol":"-0.375","std":"0.0"},"carbón":{"pos":"n","pol":"-0.344","std":"0.0"},"carbón ardiente":{"pos":"n","pol":"-0.375","std":"0.0"},"carbón vegetal":{"pos":"n","pol":"-0.375","std":"0.0"},"cardiomegalia":{"pos":"n","pol":"-0.375","std":"0.0"},"cardiomiopatía":{"pos":"n","pol":"-0.375","std":"0.0"},"carecer":{"pos":"v","pol":"-0.375","std":"0.0"},"cariado":{"pos":"a","pol":"-0.375","std":"0.0"},"cariat":{"pos":"a","pol":"-0.375","std":"0.0"},"caries":{"pos":"n","pol":"-0.437","std":"0.0"},"carina fornicis":{"pos":"n","pol":"-0.375","std":"0.0"},"carlanca":{"pos":"n","pol":"-0.437","std":"0.0"},"carnicería":{"pos":"n","pol":"-0.312","std":"0.063"},"carroña":{"pos":"n","pol":"-0.375","std":"0.0"},"carvedilol":{"pos":"n","pol":"-0.375","std":"0.0"},"cascote":{"pos":"n","pol":"-0.375","std":"0.0"},"caseoso":{"pos":"a","pol":"-0.375","std":"0.0"},"casiterita":{"pos":"n","pol":"-0.375","std":"0.0"},"castigo":{"pos":"n","pol":"-0.375","std":"0.072"},"castigo corporal":{"pos":"n","pol":"-0.375","std":"0.0"},"cataclismo":{"pos":"n","pol":"-0.312","std":"0.177"},"catalepsia":{"pos":"n","pol":"-0.375","std":"0.0"},"catastróficamente":{"pos":"r","pol":"-0.375","std":"0.0"},"catastrófico":{"pos":"a","pol":"-0.375","std":"0.088"},"catástrofe":{"pos":"n","pol":"-0.437","std":"0.088"},"cazador de ambulancias":{"pos":"n","pol":"-0.375","std":"0.0"},"caótico":{"pos":"a","pol":"-0.333","std":"0.217"},"cefalalgia":{"pos":"n","pol":"-0.375","std":"0.0"},"cefalea":{"pos":"n","pol":"-0.375","std":"0.0"},"celecoxib":{"pos":"n","pol":"-0.375","std":"0.0"},"cementita":{"pos":"n","pol":"-0.375","std":"0.0"},"ceniciento":{"pos":"n","pol":"-0.312","std":"0.0"},"cenizo":{"pos":"a","pol":"-0.375","std":"0.0"},"cenizoso":{"pos":"a","pol":"-0.375","std":"0.0"},"censura":{"pos":"n","pol":"-0.337","std":"0.119"},"ceporro":{"pos":"n","pol":"-0.333","std":"0.0"},"cerdo":{"pos":"a","pol":"0.25","std":"0.0"},"cerrar ruidosamente":{"pos":"v","pol":"-0.375","std":"0.0"},"certero":{"pos":"a","pol":"-0.375","std":"0.0"},"cerveza negra":{"pos":"n","pol":"-0.375","std":"0.0"},"cetonuria":{"pos":"n","pol":"-0.375","std":"0.0"},"cetosis":{"pos":"n","pol":"-0.375","std":"0.0"},"chabón":{"pos":"n","pol":"-0.375","std":"0.0"},"chalado":{"pos":"a","pol":"-0.25","std":"0.072"},"chaleco":{"pos":"n","pol":"-0.312","std":"0.0"},"chancearse":{"pos":"v","pol":"-0.375","std":"0.0"},"chancla":{"pos":"n","pol":"-0.375","std":"0.0"},"chaparro":{"pos":"a","pol":"-0.312","std":"0.0"},"chapucear":{"pos":"v","pol":"-0.375","std":"0.0"},"chapucero":{"pos":"n","pol":"-0.312","std":"0.0"},"chapucería":{"pos":"n","pol":"-0.333","std":"0.191"},"chapurreado":{"pos":"a","pol":"-0.375","std":"0.0"},"chaqueta":{"pos":"n","pol":"-0.375","std":"0.0"},"charrada":{"pos":"n","pol":"-0.375","std":"0.0"},"chen":{"pos":"n","pol":"-0.375","std":"0.0"},"chiflado":{"pos":"n","pol":"-0.417","std":"0.072"},"chinela":{"pos":"n","pol":"-0.375","std":"0.0"},"chirona":{"pos":"n","pol":"-0.375","std":"0.0"},"chocar":{"pos":"v","pol":"-0.275","std":"0.1"},"chotearse":{"pos":"v","pol":"-0.375","std":"0.0"},"chulería":{"pos":"n","pol":"-0.375","std":"0.0"},"chungearse":{"pos":"v","pol":"-0.375","std":"0.0"},"chupa-chups":{"pos":"n","pol":"-0.375","std":"0.0"},"chupachups":{"pos":"n","pol":"-0.375","std":"0.0"},"churrete":{"pos":"n","pol":"-0.375","std":"0.0"},"ciclotimia":{"pos":"n","pol":"-0.375","std":"0.0"},"ciclón":{"pos":"n","pol":"-0.312","std":"0.088"},"cilicio":{"pos":"n","pol":"-0.375","std":"0.0"},"cimbel":{"pos":"n","pol":"-0.437","std":"0.088"},"cinéreo":{"pos":"a","pol":"-0.375","std":"0.0"},"citólisis":{"pos":"n","pol":"-0.375","std":"0.0"},"clamor":{"pos":"n","pol":"-0.312","std":"0.0"},"clase media":{"pos":"n","pol":"-0.375","std":"0.0"},"clinopodium":{"pos":"n","pol":"-0.375","std":"0.0"},"clámide":{"pos":"n","pol":"-0.375","std":"0.0"},"coadyuvar":{"pos":"v","pol":"-0.437","std":"0.088"},"cobarde":{"pos":"a","pol":"-0.333","std":"0.072"},"cobardía":{"pos":"n","pol":"-0.375","std":"0.191"},"codo de tenis":{"pos":"n","pol":"-0.375","std":"0.0"},"coger al toro por los cuernos":{"pos":"v","pol":"-0.375","std":"0.0"},"coger frío":{"pos":"v","pol":"-0.375","std":"0.0"},"cojear":{"pos":"v","pol":"-0.375","std":"0.0"},"colgamiento":{"pos":"n","pol":"-0.375","std":"0.0"},"columbiforme":{"pos":"n","pol":"-0.375","std":"0.0"},"comadreja":{"pos":"n","pol":"-0.312","std":"0.0"},"complejidad":{"pos":"n","pol":"-0.344","std":"0.12"},"con detalle":{"pos":"r","pol":"-0.375","std":"0.0"},"concepto erróneo":{"pos":"n","pol":"-0.375","std":"0.0"},"condena":{"pos":"n","pol":"-0.375","std":"0.08"},"condena por robo":{"pos":"n","pol":"-0.375","std":"0.0"},"condena por violación":{"pos":"n","pol":"-0.375","std":"0.0"},"condenación":{"pos":"n","pol":"-0.344","std":"0.12"},"condenado":{"pos":"n","pol":"-0.375","std":"0.0"},"condenar":{"pos":"v","pol":"-0.286","std":"0.098"},"conflictivo":{"pos":"a","pol":"-0.375","std":"0.088"},"confrontación":{"pos":"n","pol":"-0.375","std":"0.047"},"congestivo":{"pos":"a","pol":"-0.375","std":"0.0"},"conminación":{"pos":"n","pol":"-0.375","std":"0.088"},"conmutación":{"pos":"n","pol":"-0.375","std":"0.0"},"conmutar":{"pos":"v","pol":"-0.312","std":"0.0"},"conocimientos elementales":{"pos":"n","pol":"-0.375","std":"0.0"},"conservación del suelo":{"pos":"n","pol":"-0.375","std":"0.0"},"consumirse":{"pos":"v","pol":"-0.271","std":"0.151"},"contaminante":{"pos":"n","pol":"-0.375","std":"0.0"},"contenidamente":{"pos":"r","pol":"-0.312","std":"0.088"},"contrabajo":{"pos":"a","pol":"-0.375","std":"0.0"},"contraerse":{"pos":"v","pol":"-0.312","std":"0.0"},"contratiempo":{"pos":"n","pol":"-0.425","std":"0.163"},"control de daños":{"pos":"n","pol":"-0.375","std":"0.0"},"contusión":{"pos":"n","pol":"-0.375","std":"0.0"},"convicto":{"pos":"n","pol":"-0.375","std":"0.0"},"cooperar":{"pos":"v","pol":"-0.437","std":"0.088"},"corea de Huntington":{"pos":"n","pol":"-0.375","std":"0.0"},"craso":{"pos":"a","pol":"-0.437","std":"0.0"},"crema agria":{"pos":"n","pol":"-0.375","std":"0.0"},"crema ácida":{"pos":"n","pol":"-0.375","std":"0.0"},"cremación":{"pos":"n","pol":"-0.375","std":"0.0"},"criestesia":{"pos":"n","pol":"-0.375","std":"0.0"},"criminal de guerra":{"pos":"n","pol":"-0.375","std":"0.0"},"criticar":{"pos":"v","pol":"-0.286","std":"0.139"},"crucificar":{"pos":"v","pol":"-0.312","std":"0.088"},"crucifixión":{"pos":"n","pol":"-0.312","std":"0.088"},"crudeza":{"pos":"n","pol":"-0.458","std":"0.125"},"crudo":{"pos":"a","pol":"-0.396","std":"0.131"},"cruz de Lorena":{"pos":"n","pol":"-0.375","std":"0.0"},"crítica  insignificante":{"pos":"n","pol":"-0.375","std":"0.0"},"cuerno inglés":{"pos":"n","pol":"-0.375","std":"0.0"},"cuon":{"pos":"n","pol":"-0.375","std":"0.0"},"cutrería":{"pos":"n","pol":"-0.375","std":"0.0"},"cuón":{"pos":"n","pol":"-0.375","std":"0.0"},"cyberpunk":{"pos":"n","pol":"-0.375","std":"0.0"},"cyon":{"pos":"n","pol":"-0.375","std":"0.0"},"danza de la muerte":{"pos":"n","pol":"-0.375","std":"0.0"},"dar punzadas":{"pos":"v","pol":"-0.375","std":"0.0"},"dar un escarmiento":{"pos":"v","pol":"-0.375","std":"0.0"},"dar un golpecito":{"pos":"v","pol":"-0.375","std":"0.0"},"dar un puñetazo":{"pos":"v","pol":"-0.312","std":"0.088"},"dar un rodeo":{"pos":"v","pol":"-0.437","std":"0.0"},"dar una paliza":{"pos":"v","pol":"-0.312","std":"0.072"},"dar zarpazos":{"pos":"v","pol":"-0.375","std":"0.0"},"dañar":{"pos":"v","pol":"-0.4","std":"0.112"},"daños colaterales":{"pos":"n","pol":"-0.375","std":"0.0"},"de agua dulce":{"pos":"a","pol":"-0.375","std":"0.0"},"de cualquier manera":{"pos":"r","pol":"-0.375","std":"0.0"},"de forma andrajosa":{"pos":"r","pol":"-0.375","std":"0.0"},"de forma cortante":{"pos":"r","pol":"-0.375","std":"0.0"},"de manera andrajosa":{"pos":"r","pol":"-0.375","std":"0.0"},"debacle":{"pos":"n","pol":"-0.312","std":"0.088"},"debilitado":{"pos":"a","pol":"-0.304","std":"0.086"},"declarar demente":{"pos":"v","pol":"-0.375","std":"0.0"},"declarar fuera de combate":{"pos":"v","pol":"-0.375","std":"0.0"},"decrépito":{"pos":"a","pol":"-0.312","std":"0.265"},"dedil":{"pos":"n","pol":"-0.375","std":"0.0"},"defensividad":{"pos":"n","pol":"-0.375","std":"0.0"},"deformidad":{"pos":"n","pol":"-0.333","std":"0.144"},"degenerarse":{"pos":"v","pol":"-0.292","std":"0.289"},"degradar":{"pos":"v","pol":"-0.375","std":"0.102"},"dejar inconsciente":{"pos":"v","pol":"-0.375","std":"0.0"},"dejar sin sentido":{"pos":"v","pol":"-0.375","std":"0.0"},"dejarse ir":{"pos":"v","pol":"-0.375","std":"0.0"},"dejarse llevar":{"pos":"v","pol":"-0.375","std":"0.0"},"delación":{"pos":"n","pol":"-0.375","std":"0.0"},"delatar":{"pos":"v","pol":"-0.375","std":"0.088"},"delincuencia juvenil":{"pos":"n","pol":"-0.375","std":"0.0"},"delincuente":{"pos":"a","pol":"-0.312","std":"0.088"},"deliquio":{"pos":"n","pol":"-0.375","std":"0.0"},"delirantemente":{"pos":"r","pol":"-0.375","std":"0.0"},"demandar":{"pos":"v","pol":"-0.3","std":"0.105"},"demoledor":{"pos":"a","pol":"-0.406","std":"0.12"},"demoniaco":{"pos":"a","pol":"-0.375","std":"0.0"},"demonización":{"pos":"n","pol":"-0.375","std":"0.0"},"demoníaco":{"pos":"a","pol":"-0.437","std":"0.177"},"denigración":{"pos":"n","pol":"-0.292","std":"0.129"},"depreciar":{"pos":"v","pol":"-0.437","std":"0.088"},"depósito de cadáveres":{"pos":"n","pol":"-0.375","std":"0.0"},"derogar":{"pos":"v","pol":"-0.375","std":"0.0"},"derrisión":{"pos":"n","pol":"-0.375","std":"0.0"},"derroche de dinero":{"pos":"n","pol":"-0.375","std":"0.0"},"derrotado":{"pos":"a","pol":"-0.375","std":"0.177"},"derrumbarse":{"pos":"v","pol":"-0.333","std":"0.051"},"desabrigo":{"pos":"n","pol":"-0.312","std":"0.177"},"desacato":{"pos":"n","pol":"-0.375","std":"0.0"},"desaconsejable":{"pos":"a","pol":"-0.375","std":"0.177"},"desacostumbrado":{"pos":"a","pol":"-0.375","std":"0.0"},"desacreditar":{"pos":"v","pol":"-0.406","std":"0.072"},"desafiar":{"pos":"v","pol":"-0.321","std":"0.142"},"desafío":{"pos":"n","pol":"-0.275","std":"0.125"},"desagrupado":{"pos":"a","pol":"-0.375","std":"0.0"},"desaliño":{"pos":"n","pol":"-0.458","std":"0.072"},"desambiguación léxica":{"pos":"n","pol":"-0.375","std":"0.0"},"desaparecer":{"pos":"v","pol":"-0.281","std":"0.063"},"desaprobación":{"pos":"n","pol":"-0.375","std":"0.188"},"desaprovechado":{"pos":"a","pol":"-0.375","std":"0.0"},"desaseado":{"pos":"a","pol":"-0.375","std":"0.072"},"desaseo":{"pos":"n","pol":"-0.375","std":"0.072"},"desastrado":{"pos":"a","pol":"-0.375","std":"0.072"},"desastre":{"pos":"n","pol":"-0.3","std":"0.088"},"desastroso":{"pos":"a","pol":"-0.375","std":"0.265"},"desatento":{"pos":"a","pol":"-0.292","std":"0.184"},"desazonado":{"pos":"a","pol":"-0.312","std":"0.088"},"desbarajuste":{"pos":"n","pol":"-0.375","std":"0.0"},"descamisado":{"pos":"n","pol":"-0.292","std":"0.125"},"descoloración":{"pos":"n","pol":"-0.437","std":"0.0"},"descomponer":{"pos":"v","pol":"-0.333","std":"0.042"},"descompuesto":{"pos":"a","pol":"-0.437","std":"0.265"},"desconcertado":{"pos":"a","pol":"-0.275","std":"0.112"},"desconocido":{"pos":"a","pol":"-0.328","std":"0.115"},"desconocimiento":{"pos":"n","pol":"-0.417","std":"0.217"},"desconsideración":{"pos":"n","pol":"-0.417","std":"0.217"},"descontaminar":{"pos":"v","pol":"-0.375","std":"0.0"},"descontento":{"pos":"a","pol":"-0.312","std":"0.088"},"descoordinado":{"pos":"a","pol":"-0.375","std":"0.0"},"descortésmente":{"pos":"r","pol":"-0.375","std":"0.0"},"descuidadamente":{"pos":"r","pol":"-0.375","std":"0.0"},"desdeñoso":{"pos":"a","pol":"-0.475","std":"0.125"},"desequilibrio psicosomático":{"pos":"n","pol":"-0.375","std":"0.0"},"desertar":{"pos":"v","pol":"-0.312","std":"0.0"},"desertificación":{"pos":"n","pol":"-0.375","std":"0.0"},"desestabilizar":{"pos":"v","pol":"-0.375","std":"0.088"},"desfachatez":{"pos":"n","pol":"-0.292","std":"0.0"},"desfigurar":{"pos":"v","pol":"-0.325","std":"0.068"},"desgana":{"pos":"n","pol":"-0.375","std":"0.177"},"desgarrado":{"pos":"a","pol":"-0.375","std":"0.0"},"desgarrar":{"pos":"v","pol":"-0.375","std":"0.072"},"desgobierno":{"pos":"n","pol":"-0.437","std":"0.177"},"desgracia":{"pos":"n","pol":"-0.409","std":"0.088"},"deshabituado":{"pos":"a","pol":"-0.375","std":"0.0"},"deshechos":{"pos":"n","pol":"-0.375","std":"0.0"},"desierto":{"pos":"a","pol":"-0.417","std":"0.191"},"desigual":{"pos":"a","pol":"-0.273","std":"0.113"},"desigualdad":{"pos":"n","pol":"-0.292","std":"0.144"},"desindustrializado":{"pos":"a","pol":"-0.375","std":"0.0"},"desinformación":{"pos":"n","pol":"-0.375","std":"0.0"},"desintegrar":{"pos":"v","pol":"-0.375","std":"0.0"},"desmadejamiento":{"pos":"n","pol":"-0.375","std":"0.0"},"desmayarse":{"pos":"v","pol":"-0.375","std":"0.0"},"desmayo":{"pos":"n","pol":"-0.375","std":"0.0"},"desmaña":{"pos":"n","pol":"-0.333","std":"0.144"},"desnutrido":{"pos":"a","pol":"-0.375","std":"0.088"},"desobediente":{"pos":"a","pol":"-0.292","std":"0.072"},"desobligar":{"pos":"v","pol":"-0.375","std":"0.088"},"desolación":{"pos":"n","pol":"-0.417","std":"0.146"},"desorden inmunológico":{"pos":"n","pol":"-0.375","std":"0.0"},"desordenado":{"pos":"r","pol":"-0.375","std":"0.0"},"desordenar":{"pos":"v","pol":"-0.437","std":"0.063"},"desorganización":{"pos":"n","pol":"-0.375","std":"0.0"},"desorganizado":{"pos":"a","pol":"-0.458","std":"0.144"},"desorientación":{"pos":"n","pol":"-0.312","std":"0.177"},"despectivo":{"pos":"n","pol":"-0.25","std":"0.0"},"despedido":{"pos":"a","pol":"-0.375","std":"0.0"},"desperdiciado":{"pos":"a","pol":"-0.375","std":"0.0"},"desperdiciar":{"pos":"v","pol":"-0.375","std":"0.0"},"despilfarrador":{"pos":"a","pol":"-0.281","std":"0.102"},"despolarizar":{"pos":"v","pol":"-0.375","std":"0.0"},"despreciativo":{"pos":"a","pol":"-0.437","std":"0.177"},"desprestigiar":{"pos":"v","pol":"-0.437","std":"0.088"},"desprestigio":{"pos":"n","pol":"-0.406","std":"0.217"},"desprevenido":{"pos":"a","pol":"-0.417","std":"0.19"},"desquitarse":{"pos":"v","pol":"-0.375","std":"0.072"},"destechado":{"pos":"a","pol":"-0.375","std":"0.0"},"destrozar":{"pos":"v","pol":"-0.452","std":"0.083"},"destrozarse":{"pos":"v","pol":"-0.437","std":"0.088"},"destrozo":{"pos":"n","pol":"-0.292","std":"0.072"},"destruir":{"pos":"v","pol":"-0.26","std":"0.083"},"desunión":{"pos":"n","pol":"-0.292","std":"0.072"},"desventura":{"pos":"n","pol":"-0.417","std":"0.072"},"desviar la mirada":{"pos":"v","pol":"-0.375","std":"0.0"},"detención ilegal":{"pos":"n","pol":"-0.375","std":"0.0"},"deteriorado":{"pos":"a","pol":"-0.375","std":"0.191"},"deterioro":{"pos":"n","pol":"-0.287","std":"0.079"},"detrito":{"pos":"n","pol":"-0.312","std":"0.0"},"detritus":{"pos":"n","pol":"-0.375","std":"0.0"},"devastación":{"pos":"n","pol":"-0.446","std":"0.142"},"devastar":{"pos":"v","pol":"-0.437","std":"0.088"},"dextrocardia":{"pos":"n","pol":"-0.375","std":"0.0"},"diablo":{"pos":"n","pol":"-0.271","std":"0.137"},"diabético":{"pos":"a","pol":"-0.25","std":"0.0"},"didanosina":{"pos":"n","pol":"-0.375","std":"0.0"},"difamación":{"pos":"n","pol":"-0.375","std":"0.0"},"difteria":{"pos":"n","pol":"-0.375","std":"0.0"},"dilapidación":{"pos":"n","pol":"-0.375","std":"0.0"},"diputado":{"pos":"n","pol":"-0.312","std":"0.0"},"disco duro":{"pos":"n","pol":"-0.375","std":"0.0"},"disco duro extraíble":{"pos":"n","pol":"-0.375","std":"0.0"},"discordancia":{"pos":"n","pol":"-0.312","std":"0.088"},"discutirse":{"pos":"v","pol":"-0.375","std":"0.0"},"disensión":{"pos":"n","pol":"-0.344","std":"0.063"},"disentimiento":{"pos":"n","pol":"-0.437","std":"0.0"},"disfagia":{"pos":"n","pol":"-0.375","std":"0.0"},"disfonía":{"pos":"n","pol":"-0.375","std":"0.0"},"disiparse":{"pos":"v","pol":"-0.333","std":"0.072"},"disminuido":{"pos":"a","pol":"-0.312","std":"0.072"},"disosmia":{"pos":"n","pol":"-0.312","std":"0.088"},"disparates":{"pos":"n","pol":"-0.437","std":"0.0"},"dispendio":{"pos":"n","pol":"-0.375","std":"0.0"},"dispendioso":{"pos":"a","pol":"-0.375","std":"0.0"},"disputa":{"pos":"n","pol":"-0.375","std":"0.063"},"disputar":{"pos":"v","pol":"-0.417","std":"0.072"},"disturbio":{"pos":"n","pol":"-0.3","std":"0.068"},"disuasión":{"pos":"n","pol":"-0.292","std":"0.217"},"dividir en tres":{"pos":"v","pol":"-0.375","std":"0.0"},"dogfight":{"pos":"n","pol":"-0.375","std":"0.0"},"dolce far niente":{"pos":"n","pol":"-0.375","std":"0.0"},"dolencia":{"pos":"n","pol":"-0.375","std":"0.0"},"doliente":{"pos":"n","pol":"-0.375","std":"0.088"},"dolo":{"pos":"n","pol":"-0.375","std":"0.0"},"dolor de cabeza":{"pos":"n","pol":"-0.312","std":"0.088"},"dolor de pecho":{"pos":"n","pol":"-0.375","std":"0.0"},"dolor torácico":{"pos":"n","pol":"-0.375","std":"0.0"},"dolores del parto":{"pos":"n","pol":"-0.375","std":"0.0"},"dosis letal":{"pos":"n","pol":"-0.375","std":"0.0"},"draconiano":{"pos":"a","pol":"-0.375","std":"0.0"},"dracunculiasis":{"pos":"n","pol":"-0.375","std":"0.0"},"droga de diseño":{"pos":"n","pol":"-0.375","std":"0.0"},"drogadicto":{"pos":"n","pol":"-0.375","std":"0.0"},"drogodependiente":{"pos":"n","pol":"-0.375","std":"0.0"},"duplicidad":{"pos":"n","pol":"-0.292","std":"0.125"},"durabilidad":{"pos":"n","pol":"-0.375","std":"0.0"},"dureza":{"pos":"n","pol":"-0.287","std":"0.103"},"débil":{"pos":"a","pol":"-0.298","std":"0.112"},"ectopia":{"pos":"n","pol":"-0.375","std":"0.0"},"edema":{"pos":"n","pol":"-0.375","std":"0.0"},"el más allá":{"pos":"n","pol":"-0.375","std":"0.0"},"el más malo":{"pos":"n","pol":"-0.375","std":"0.0"},"el peor":{"pos":"n","pol":"-0.375","std":"0.0"},"electrocutarse":{"pos":"v","pol":"-0.375","std":"0.0"},"elegíaco":{"pos":"a","pol":"-0.312","std":"0.177"},"elucubración":{"pos":"n","pol":"-0.312","std":"0.0"},"eléboro fétido":{"pos":"n","pol":"-0.375","std":"0.0"},"embalsamar":{"pos":"v","pol":"-0.375","std":"0.0"},"embarullar":{"pos":"v","pol":"-0.333","std":"0.072"},"embaucamiento":{"pos":"n","pol":"-0.375","std":"0.088"},"embelesar":{"pos":"v","pol":"-0.375","std":"0.0"},"embelezar":{"pos":"v","pol":"-0.375","std":"0.0"},"embrocación":{"pos":"n","pol":"-0.375","std":"0.0"},"embrollar":{"pos":"v","pol":"-0.312","std":"0.088"},"embullo":{"pos":"n","pol":"-0.375","std":"0.0"},"embuste":{"pos":"n","pol":"-0.275","std":"0.112"},"embustero":{"pos":"a","pol":"-0.25","std":"0.0"},"empeoramiento":{"pos":"n","pol":"-0.25","std":"0.0"},"empeorar":{"pos":"v","pol":"-0.281","std":"0.144"},"emperifollar vulgarmente":{"pos":"v","pol":"-0.375","std":"0.0"},"empetrum":{"pos":"n","pol":"-0.312","std":"0.0"},"empresa peligrosa":{"pos":"n","pol":"-0.375","std":"0.0"},"en solitario":{"pos":"r","pol":"-0.375","std":"0.0"},"en vez de":{"pos":"r","pol":"-0.375","std":"0.0"},"enaguas":{"pos":"n","pol":"-0.375","std":"0.0"},"encabezado":{"pos":"n","pol":"-0.375","std":"0.0"},"encabritarse":{"pos":"v","pol":"-0.375","std":"0.0"},"encefalitis":{"pos":"n","pol":"-0.375","std":"0.0"},"encefalopatía":{"pos":"n","pol":"-0.375","std":"0.0"},"encontronazo":{"pos":"n","pol":"-0.45","std":"0.177"},"endeble":{"pos":"a","pol":"-0.437","std":"0.065"},"endometriosis":{"pos":"n","pol":"-0.375","std":"0.0"},"enemigo":{"pos":"n","pol":"-0.333","std":"0.144"},"enervación":{"pos":"n","pol":"-0.437","std":"0.0"},"enfado":{"pos":"n","pol":"-0.437","std":"0.0"},"enfermedad":{"pos":"n","pol":"-0.333","std":"0.072"},"enfermedad celíaca":{"pos":"n","pol":"-0.375","std":"0.0"},"enfermedad cerebral":{"pos":"n","pol":"-0.375","std":"0.0"},"enfermedad de Addison":{"pos":"n","pol":"-0.375","std":"0.0"},"enfermedad de la piel":{"pos":"n","pol":"-0.375","std":"0.0"},"enfermedad genética":{"pos":"n","pol":"-0.375","std":"0.0"},"enfermedad neurológica":{"pos":"n","pol":"-0.375","std":"0.0"},"enfisema":{"pos":"n","pol":"-0.375","std":"0.0"},"enfisema pulmonar":{"pos":"n","pol":"-0.375","std":"0.0"},"engañado":{"pos":"a","pol":"-0.375","std":"0.0"},"engañar":{"pos":"v","pol":"-0.422","std":"0.129"},"engaño":{"pos":"n","pol":"-0.261","std":"0.118"},"engañoso":{"pos":"a","pol":"-0.333","std":"0.177"},"enmarañar":{"pos":"v","pol":"-0.312","std":"0.0"},"enredar":{"pos":"v","pol":"-0.344","std":"0.133"},"enrevesado":{"pos":"a","pol":"-0.437","std":"0.177"},"ensañamiento":{"pos":"n","pol":"-0.375","std":"0.0"},"ensuciamiento":{"pos":"n","pol":"-0.375","std":"0.0"},"entiznarse":{"pos":"v","pol":"-0.375","std":"0.0"},"entrampar":{"pos":"v","pol":"-0.458","std":"0.0"},"entredicho":{"pos":"n","pol":"-0.292","std":"0.072"},"epicondialgia":{"pos":"n","pol":"-0.375","std":"0.0"},"epicondilitis":{"pos":"n","pol":"-0.375","std":"0.0"},"epidemia":{"pos":"n","pol":"-0.375","std":"0.0"},"epididimitis":{"pos":"n","pol":"-0.375","std":"0.0"},"epiglotitis":{"pos":"n","pol":"-0.375","std":"0.0"},"epilepsia":{"pos":"n","pol":"-0.375","std":"0.0"},"epilepsia jacksoniana":{"pos":"n","pol":"-0.375","std":"0.0"},"equisetales":{"pos":"n","pol":"-0.375","std":"0.0"},"equivocación":{"pos":"n","pol":"-0.268","std":"0.047"},"equívoco":{"pos":"a","pol":"-0.25","std":"0.088"},"ergotismo":{"pos":"n","pol":"-0.375","std":"0.0"},"erizar":{"pos":"v","pol":"-0.375","std":"0.0"},"erizarse":{"pos":"v","pol":"-0.375","std":"0.0"},"erosionado":{"pos":"a","pol":"-0.312","std":"0.0"},"error de pronunciación":{"pos":"n","pol":"-0.375","std":"0.0"},"error garrafal":{"pos":"n","pol":"-0.375","std":"0.0"},"escabroso":{"pos":"a","pol":"-0.275","std":"0.153"},"escala beaufort":{"pos":"n","pol":"-0.375","std":"0.0"},"escaqueado":{"pos":"n","pol":"-0.375","std":"0.0"},"escaramuza":{"pos":"n","pol":"-0.417","std":"0.0"},"escarchar":{"pos":"v","pol":"-0.312","std":"0.0"},"escarmentar":{"pos":"v","pol":"-0.375","std":"0.0"},"escarnio":{"pos":"n","pol":"-0.275","std":"0.125"},"escasamente":{"pos":"r","pol":"-0.312","std":"0.088"},"escasez":{"pos":"n","pol":"-0.417","std":"0.105"},"escoliosis":{"pos":"n","pol":"-0.375","std":"0.0"},"escombros":{"pos":"n","pol":"-0.375","std":"0.0"},"escritor a sueldo":{"pos":"n","pol":"-0.375","std":"0.0"},"escándalo público":{"pos":"n","pol":"-0.312","std":"0.088"},"espantajo":{"pos":"n","pol":"-0.375","std":"0.0"},"espasmódicamente":{"pos":"r","pol":"-0.375","std":"0.0"},"especioso":{"pos":"a","pol":"-0.292","std":"0.144"},"espeluznante":{"pos":"a","pol":"-0.446","std":"0.159"},"esperanza vana":{"pos":"n","pol":"-0.375","std":"0.0"},"espina":{"pos":"n","pol":"-0.325","std":"0.0"},"esplenomegalia":{"pos":"n","pol":"-0.375","std":"0.0"},"espástico":{"pos":"n","pol":"-0.375","std":"0.0"},"espíritu maligno":{"pos":"n","pol":"-0.375","std":"0.191"},"esquivo":{"pos":"a","pol":"-0.437","std":"0.0"},"estado natural":{"pos":"n","pol":"-0.375","std":"0.0"},"estado salvaje":{"pos":"n","pol":"-0.417","std":"0.0"},"estafermo":{"pos":"n","pol":"-0.375","std":"0.0"},"estampida":{"pos":"n","pol":"-0.375","std":"0.0"},"estancado":{"pos":"a","pol":"-0.375","std":"0.0"},"esteatopigia":{"pos":"n","pol":"-0.375","std":"0.0"},"estenosis":{"pos":"n","pol":"-0.375","std":"0.0"},"estornudar":{"pos":"v","pol":"-0.375","std":"0.0"},"estrellar":{"pos":"v","pol":"-0.271","std":"0.065"},"estrellarse":{"pos":"v","pol":"-0.312","std":"0.0"},"estremecimiento de dolor":{"pos":"n","pol":"-0.375","std":"0.0"},"estresado":{"pos":"a","pol":"-0.437","std":"0.354"},"estridencia":{"pos":"n","pol":"-0.281","std":"0.144"},"estropear":{"pos":"v","pol":"-0.35","std":"0.112"},"estropeo":{"pos":"n","pol":"-0.375","std":"0.0"},"estúpido":{"pos":"a","pol":"-0.375","std":"0.232"},"etiolación":{"pos":"n","pol":"-0.375","std":"0.0"},"eunuco":{"pos":"n","pol":"-0.375","std":"0.0"},"excurso":{"pos":"n","pol":"-0.375","std":"0.0"},"exigüidad":{"pos":"n","pol":"-0.375","std":"0.177"},"exoneración":{"pos":"n","pol":"-0.333","std":"0.125"},"explosionar":{"pos":"v","pol":"-0.312","std":"0.0"},"expoliación":{"pos":"n","pol":"-0.312","std":"0.0"},"expolio":{"pos":"n","pol":"-0.312","std":"0.0"},"expósito":{"pos":"n","pol":"-0.437","std":"0.088"},"exterminado":{"pos":"a","pol":"-0.375","std":"0.0"},"exterminador":{"pos":"n","pol":"-0.375","std":"0.0"},"extralegal":{"pos":"a","pol":"-0.375","std":"0.0"},"extraño al acorde":{"pos":"a","pol":"-0.375","std":"0.0"},"faloplastia":{"pos":"n","pol":"-0.375","std":"0.0"},"falsa oronja":{"pos":"n","pol":"-0.375","std":"0.0"},"falsedad":{"pos":"n","pol":"-0.266","std":"0.115"},"falso":{"pos":"a","pol":"-0.257","std":"0.168"},"falta de memoria":{"pos":"n","pol":"-0.375","std":"0.0"},"familia Hydrobatidae":{"pos":"n","pol":"-0.375","std":"0.0"},"familia Machilidae":{"pos":"n","pol":"-0.375","std":"0.0"},"fangal":{"pos":"n","pol":"-0.312","std":"0.0"},"farfulla":{"pos":"n","pol":"-0.312","std":"0.0"},"fascioliasis":{"pos":"n","pol":"-0.375","std":"0.0"},"fatuidad":{"pos":"n","pol":"-0.375","std":"0.177"},"fenecimiento":{"pos":"n","pol":"-0.375","std":"0.0"},"fenilcetonuria":{"pos":"n","pol":"-0.375","std":"0.0"},"fenómeno natural":{"pos":"n","pol":"-0.375","std":"0.0"},"fetidez":{"pos":"n","pol":"-0.458","std":"0.0"},"ficus sycomorus":{"pos":"n","pol":"-0.375","std":"0.0"},"fiebre reumática":{"pos":"n","pol":"-0.375","std":"0.0"},"filariasis":{"pos":"n","pol":"-0.375","std":"0.0"},"filisteo":{"pos":"a","pol":"-0.312","std":"0.177"},"finta":{"pos":"n","pol":"-0.375","std":"0.0"},"flaccidez":{"pos":"n","pol":"-0.375","std":"0.0"},"flacidez":{"pos":"n","pol":"-0.375","std":"0.0"},"flacura":{"pos":"n","pol":"-0.375","std":"0.0"},"flegmasía alba dolens":{"pos":"n","pol":"-0.375","std":"0.0"},"flema":{"pos":"n","pol":"-0.292","std":"0.144"},"flor salvaje":{"pos":"n","pol":"-0.375","std":"0.0"},"flor silvestre":{"pos":"n","pol":"-0.375","std":"0.0"},"flotar suavemente":{"pos":"v","pol":"-0.375","std":"0.0"},"fobofobia":{"pos":"n","pol":"-0.375","std":"0.0"},"follón":{"pos":"n","pol":"-0.375","std":"0.068"},"forajido":{"pos":"n","pol":"-0.312","std":"0.0"},"forcejear":{"pos":"v","pol":"-0.312","std":"0.088"},"formaldehido":{"pos":"n","pol":"-0.375","std":"0.0"},"formaldehído":{"pos":"n","pol":"-0.375","std":"0.0"},"forúnculo":{"pos":"n","pol":"-0.375","std":"0.0"},"fosgeno":{"pos":"n","pol":"-0.375","std":"0.0"},"fotofobia":{"pos":"n","pol":"-0.375","std":"0.0"},"fracturar":{"pos":"v","pol":"-0.375","std":"0.0"},"frambesia":{"pos":"n","pol":"-0.375","std":"0.0"},"fraudulencia":{"pos":"n","pol":"-0.312","std":"0.088"},"frialdad":{"pos":"n","pol":"-0.268","std":"0.102"},"frigidez":{"pos":"n","pol":"-0.417","std":"0.191"},"frustrarse":{"pos":"v","pol":"-0.375","std":"0.0"},"fuerza g":{"pos":"n","pol":"-0.375","std":"0.0"},"fulminación":{"pos":"n","pol":"-0.437","std":"0.0"},"fulminar":{"pos":"v","pol":"-0.375","std":"0.0"},"funesto":{"pos":"a","pol":"-0.375","std":"0.161"},"fustigar":{"pos":"v","pol":"-0.292","std":"0.0"},"fúrunculo":{"pos":"n","pol":"-0.375","std":"0.0"},"gallina":{"pos":"a","pol":"-0.375","std":"0.088"},"gamberro":{"pos":"n","pol":"-0.312","std":"0.088"},"ganador inesperado":{"pos":"n","pol":"-0.375","std":"0.0"},"ganso común":{"pos":"n","pol":"-0.375","std":"0.0"},"garambaina":{"pos":"n","pol":"-0.437","std":"0.088"},"garlopa":{"pos":"n","pol":"-0.375","std":"0.0"},"garrafón":{"pos":"n","pol":"-0.375","std":"0.0"},"garulla":{"pos":"n","pol":"-0.375","std":"0.0"},"garullada":{"pos":"n","pol":"-0.375","std":"0.0"},"gas tóxico":{"pos":"n","pol":"-0.375","std":"0.0"},"gasear":{"pos":"v","pol":"-0.375","std":"0.0"},"gastado":{"pos":"a","pol":"-0.375","std":"0.072"},"gastar novatadas":{"pos":"v","pol":"-0.375","std":"0.0"},"gazapatón":{"pos":"n","pol":"-0.375","std":"0.0"},"gazapera":{"pos":"n","pol":"-0.375","std":"0.0"},"genus acherontia":{"pos":"n","pol":"-0.375","std":"0.0"},"genus asarum":{"pos":"n","pol":"-0.375","std":"0.0"},"genus clinopodium":{"pos":"n","pol":"-0.375","std":"0.0"},"genus cuon":{"pos":"n","pol":"-0.375","std":"0.0"},"genus cyon":{"pos":"n","pol":"-0.375","std":"0.0"},"genus irvingia":{"pos":"n","pol":"-0.375","std":"0.0"},"genus solenopsis":{"pos":"n","pol":"-0.375","std":"0.0"},"genus zizania":{"pos":"n","pol":"-0.375","std":"0.0"},"gesto irónico":{"pos":"n","pol":"-0.375","std":"0.0"},"giardiasis":{"pos":"n","pol":"-0.375","std":"0.0"},"gimoteo":{"pos":"n","pol":"-0.375","std":"0.177"},"glacialmente":{"pos":"r","pol":"-0.437","std":"0.0"},"glaucoma":{"pos":"n","pol":"-0.375","std":"0.0"},"glumela":{"pos":"n","pol":"-0.375","std":"0.0"},"glumilla":{"pos":"n","pol":"-0.375","std":"0.0"},"gnatostomados":{"pos":"n","pol":"-0.375","std":"0.0"},"golpe de gracia":{"pos":"n","pol":"-0.375","std":"0.0"},"golpe mortal":{"pos":"n","pol":"-0.375","std":"0.0"},"golpear violentamente":{"pos":"v","pol":"-0.375","std":"0.0"},"gordo":{"pos":"n","pol":"-0.25","std":"0.0"},"gozque":{"pos":"n","pol":"-0.375","std":"0.0"},"granizada":{"pos":"n","pol":"-0.375","std":"0.0"},"granuja":{"pos":"n","pol":"-0.275","std":"0.105"},"gratuito":{"pos":"a","pol":"-0.281","std":"0.188"},"grave":{"pos":"a","pol":"-0.396","std":"0.19"},"gravedad":{"pos":"n","pol":"-0.417","std":"0.072"},"graves consecuencias":{"pos":"n","pol":"-0.375","std":"0.0"},"gregarismo":{"pos":"n","pol":"-0.375","std":"0.0"},"greguería":{"pos":"n","pol":"-0.437","std":"0.088"},"gremlin":{"pos":"n","pol":"-0.375","std":"0.0"},"gris":{"pos":"a","pol":"-0.325","std":"0.153"},"gris-metálico":{"pos":"a","pol":"-0.375","std":"0.0"},"gris ceniciento":{"pos":"a","pol":"-0.375","std":"0.0"},"gris ceniza":{"pos":"a","pol":"-0.375","std":"0.0"},"gris perla":{"pos":"a","pol":"-0.375","std":"0.0"},"gris plateado":{"pos":"a","pol":"-0.375","std":"0.0"},"grita":{"pos":"n","pol":"-0.375","std":"0.0"},"griterío":{"pos":"n","pol":"-0.375","std":"0.0"},"grito":{"pos":"n","pol":"-0.312","std":"0.0"},"groseramente":{"pos":"r","pol":"-0.312","std":"0.0"},"gruñido":{"pos":"n","pol":"-0.333","std":"0.191"},"gruñón":{"pos":"a","pol":"-0.375","std":"0.265"},"guachafita":{"pos":"n","pol":"-0.281","std":"0.102"},"guardainfante":{"pos":"n","pol":"-0.375","std":"0.0"},"guerra fría":{"pos":"n","pol":"-0.437","std":"0.0"},"género Acherontia":{"pos":"n","pol":"-0.375","std":"0.0"},"género Cuon":{"pos":"n","pol":"-0.375","std":"0.0"},"género Cyon":{"pos":"n","pol":"-0.375","std":"0.0"},"género Solenopsis":{"pos":"n","pol":"-0.375","std":"0.0"},"género asarum":{"pos":"n","pol":"-0.375","std":"0.0"},"género irvingia":{"pos":"n","pol":"-0.375","std":"0.0"},"género zizania":{"pos":"n","pol":"-0.375","std":"0.0"},"habón":{"pos":"n","pol":"-0.375","std":"0.0"},"hacer bascas":{"pos":"v","pol":"-0.375","std":"0.0"},"hacer erupción":{"pos":"v","pol":"-0.312","std":"0.088"},"hacer trampa":{"pos":"v","pol":"-0.271","std":"0.065"},"hacerse polvo":{"pos":"v","pol":"-0.375","std":"0.0"},"halitosis":{"pos":"n","pol":"-0.375","std":"0.0"},"hallux valgus":{"pos":"n","pol":"-0.375","std":"0.0"},"hampón":{"pos":"n","pol":"-0.312","std":"0.088"},"heder":{"pos":"v","pol":"-0.437","std":"0.0"},"hemoglobinemia":{"pos":"n","pol":"-0.375","std":"0.0"},"hemoglobinopatía":{"pos":"n","pol":"-0.375","std":"0.0"},"hemorroides":{"pos":"n","pol":"-0.375","std":"0.0"},"herida accidental":{"pos":"n","pol":"-0.375","std":"0.0"},"herida superficial":{"pos":"n","pol":"-0.375","std":"0.0"},"herpes genital":{"pos":"n","pol":"-0.375","std":"0.0"},"herpes zoster":{"pos":"n","pol":"-0.375","std":"0.0"},"herrumbre":{"pos":"n","pol":"-0.375","std":"0.0"},"hidrobátidos":{"pos":"n","pol":"-0.375","std":"0.0"},"hidrofobia":{"pos":"n","pol":"-0.281","std":"0.125"},"hidromorfona":{"pos":"n","pol":"-0.375","std":"0.0"},"hidropesía":{"pos":"n","pol":"-0.375","std":"0.0"},"hipercalciuria":{"pos":"n","pol":"-0.375","std":"0.0"},"hipercolesterolemia":{"pos":"n","pol":"-0.375","std":"0.0"},"hiperemesis":{"pos":"n","pol":"-0.375","std":"0.0"},"hipermetropía":{"pos":"n","pol":"-0.375","std":"0.0"},"hiperopía":{"pos":"n","pol":"-0.375","std":"0.0"},"hiperplasia":{"pos":"n","pol":"-0.375","std":"0.0"},"hipertrofia":{"pos":"n","pol":"-0.375","std":"0.0"},"hipocalcemia":{"pos":"n","pol":"-0.375","std":"0.0"},"hipocondriaco":{"pos":"n","pol":"-0.375","std":"0.0"},"hipoglucémico":{"pos":"a","pol":"-0.375","std":"0.0"},"hiponimia":{"pos":"n","pol":"-0.375","std":"0.0"},"hipoparatiroidismo":{"pos":"n","pol":"-0.375","std":"0.0"},"hipospadias":{"pos":"n","pol":"-0.375","std":"0.0"},"hipotensión":{"pos":"n","pol":"-0.375","std":"0.0"},"hipotenso":{"pos":"a","pol":"-0.375","std":"0.0"},"hipotónico":{"pos":"a","pol":"-0.375","std":"0.0"},"hipócrita":{"pos":"n","pol":"-0.375","std":"0.0"},"hipócritamente":{"pos":"r","pol":"-0.375","std":"0.0"},"histerismo":{"pos":"n","pol":"-0.437","std":"0.088"},"histerocatalepsia":{"pos":"n","pol":"-0.375","std":"0.0"},"homicidio":{"pos":"n","pol":"-0.312","std":"0.0"},"horribilidad":{"pos":"n","pol":"-0.375","std":"0.0"},"horridez":{"pos":"n","pol":"-0.375","std":"0.0"},"horterada":{"pos":"n","pol":"-0.375","std":"0.0"},"hostilidades":{"pos":"n","pol":"-0.375","std":"0.0"},"huracán":{"pos":"n","pol":"-0.375","std":"0.0"},"huérfano":{"pos":"a","pol":"-0.375","std":"0.0"},"háptico":{"pos":"a","pol":"-0.375","std":"0.0"},"iclonoclasta":{"pos":"a","pol":"-0.375","std":"0.088"},"ignominia":{"pos":"n","pol":"-0.375","std":"0.0"},"ilegal":{"pos":"a","pol":"-0.313","std":"0.094"},"ilegalizar":{"pos":"v","pol":"-0.437","std":"0.0"},"iletrado":{"pos":"a","pol":"-0.437","std":"0.0"},"imaginación":{"pos":"n","pol":"-0.437","std":"0.088"},"imbecilidad":{"pos":"n","pol":"-0.417","std":"0.144"},"impacción dentaria":{"pos":"n","pol":"-0.333","std":"0.072"},"impagado":{"pos":"a","pol":"-0.375","std":"0.0"},"impago":{"pos":"n","pol":"-0.25","std":"0.0"},"imparable":{"pos":"a","pol":"-0.375","std":"0.0"},"impasibilidad":{"pos":"n","pol":"-0.417","std":"0.125"},"imperceptivo":{"pos":"a","pol":"-0.375","std":"0.0"},"imperfecto":{"pos":"a","pol":"-0.312","std":"0.177"},"impertubabilidad":{"pos":"n","pol":"-0.375","std":"0.0"},"imponer un castigo":{"pos":"v","pol":"-0.375","std":"0.0"},"importuno":{"pos":"a","pol":"-0.375","std":"0.0"},"impostura":{"pos":"n","pol":"-0.325","std":"0.056"},"impotente":{"pos":"a","pol":"-0.375","std":"0.0"},"impreciso":{"pos":"a","pol":"-0.292","std":"0.146"},"imprevisible":{"pos":"a","pol":"-0.437","std":"0.177"},"improcedencia":{"pos":"n","pol":"-0.375","std":"0.0"},"improcedente":{"pos":"a","pol":"-0.375","std":"0.0"},"impromptu":{"pos":"n","pol":"-0.375","std":"0.0"},"impugnar":{"pos":"v","pol":"-0.458","std":"0.072"},"impureza":{"pos":"n","pol":"-0.312","std":"0.088"},"impío":{"pos":"a","pol":"-0.417","std":"0.26"},"inacabable":{"pos":"a","pol":"-0.375","std":"0.0"},"inaceptabilidad":{"pos":"n","pol":"-0.375","std":"0.0"},"inaceptable":{"pos":"a","pol":"-0.417","std":"0.153"},"inacostumbrado":{"pos":"a","pol":"-0.375","std":"0.0"},"inadaptable":{"pos":"a","pol":"-0.375","std":"0.0"},"inadecuación":{"pos":"n","pol":"-0.312","std":"0.265"},"inadoptable":{"pos":"a","pol":"-0.375","std":"0.0"},"inalcanzable":{"pos":"a","pol":"-0.312","std":"0.177"},"inalienable":{"pos":"a","pol":"-0.417","std":"0.125"},"inarmónico":{"pos":"a","pol":"-0.312","std":"0.12"},"inasistencia":{"pos":"n","pol":"-0.375","std":"0.0"},"inatacable":{"pos":"a","pol":"-0.312","std":"0.265"},"incapacidad":{"pos":"n","pol":"-0.469","std":"0.182"},"incapaz":{"pos":"a","pol":"-0.321","std":"0.112"},"incauto":{"pos":"n","pol":"-0.25","std":"0.0"},"incensar":{"pos":"v","pol":"-0.375","std":"0.0"},"incomparecencia":{"pos":"n","pol":"-0.375","std":"0.0"},"incompasivo":{"pos":"a","pol":"-0.375","std":"0.0"},"incompetente":{"pos":"a","pol":"-0.339","std":"0.183"},"incongruencia":{"pos":"n","pol":"-0.375","std":"0.0"},"inconmensurado":{"pos":"a","pol":"-0.375","std":"0.0"},"inconmutable":{"pos":"a","pol":"-0.312","std":"0.177"},"inconocible":{"pos":"a","pol":"-0.437","std":"0.177"},"inconquistable":{"pos":"a","pol":"-0.437","std":"0.088"},"inconsciencia":{"pos":"n","pol":"-0.469","std":"0.063"},"inconsciente":{"pos":"a","pol":"-0.453","std":"0.148"},"inconsecuencia":{"pos":"n","pol":"-0.312","std":"0.265"},"inconsistencia":{"pos":"n","pol":"-0.281","std":"0.12"},"inconstancia":{"pos":"n","pol":"-0.437","std":"0.177"},"inconstante":{"pos":"a","pol":"-0.458","std":"0.217"},"inconvertible":{"pos":"a","pol":"-0.333","std":"0.125"},"incorruptibilidad":{"pos":"n","pol":"-0.375","std":"0.0"},"inculpar":{"pos":"v","pol":"-0.312","std":"0.088"},"incumplimiento de contrato":{"pos":"n","pol":"-0.375","std":"0.0"},"incurable":{"pos":"a","pol":"-0.292","std":"0.217"},"indebido":{"pos":"a","pol":"-0.292","std":"0.125"},"indefendible":{"pos":"a","pol":"-0.437","std":"0.188"},"indefenso":{"pos":"a","pol":"-0.292","std":"0.072"},"indefinible":{"pos":"a","pol":"-0.312","std":"0.088"},"indefinida":{"pos":"a","pol":"-0.375","std":"0.0"},"indelicadeza":{"pos":"n","pol":"-0.375","std":"0.088"},"indelicado":{"pos":"a","pol":"-0.375","std":"0.0"},"indescriptible":{"pos":"a","pol":"-0.375","std":"0.0"},"indetectado":{"pos":"a","pol":"-0.375","std":"0.0"},"indiferencia":{"pos":"n","pol":"-0.325","std":"0.143"},"indigestibilidad":{"pos":"n","pol":"-0.375","std":"0.0"},"indiscernible":{"pos":"a","pol":"-0.375","std":"0.177"},"indisciplinado":{"pos":"a","pol":"-0.3","std":"0.088"},"indiscreción":{"pos":"n","pol":"-0.406","std":"0.12"},"indiscriminado":{"pos":"a","pol":"-0.292","std":"0.072"},"indistinguible":{"pos":"a","pol":"-0.437","std":"0.0"},"indomable":{"pos":"a","pol":"-0.292","std":"0.125"},"ineficaz":{"pos":"a","pol":"-0.337","std":"0.13"},"ineptitud":{"pos":"n","pol":"-0.375","std":"0.26"},"inepto":{"pos":"a","pol":"-0.273","std":"0.131"},"inescrutable":{"pos":"a","pol":"-0.375","std":"0.265"},"inexacto":{"pos":"a","pol":"-0.344","std":"0.228"},"inexcusable":{"pos":"a","pol":"-0.458","std":"0.072"},"inexorable":{"pos":"a","pol":"-0.312","std":"0.177"},"inexperto":{"pos":"n","pol":"-0.25","std":"0.0"},"inexplorado":{"pos":"a","pol":"-0.312","std":"0.088"},"inexpresivamente":{"pos":"r","pol":"-0.375","std":"0.0"},"inexpugnabilidad":{"pos":"n","pol":"-0.375","std":"0.0"},"infalible":{"pos":"a","pol":"-0.375","std":"0.213"},"infamia":{"pos":"n","pol":"-0.333","std":"0.125"},"infecundidad":{"pos":"n","pol":"-0.375","std":"0.0"},"infertilidad":{"pos":"n","pol":"-0.375","std":"0.0"},"infidencia":{"pos":"n","pol":"-0.375","std":"0.177"},"infiel":{"pos":"a","pol":"-0.312","std":"0.102"},"inflagaitas":{"pos":"n","pol":"-0.375","std":"0.0"},"inflexibilidad":{"pos":"n","pol":"-0.45","std":"0.163"},"inflexible":{"pos":"a","pol":"-0.281","std":"0.2"},"informal":{"pos":"a","pol":"-0.304","std":"0.168"},"infortunio":{"pos":"n","pol":"-0.4","std":"0.088"},"infructuoso":{"pos":"a","pol":"-0.333","std":"0.188"},"ingenuo":{"pos":"n","pol":"-0.375","std":"0.088"},"inheredable":{"pos":"a","pol":"-0.375","std":"0.0"},"inhospitalario":{"pos":"a","pol":"-0.375","std":"0.265"},"inicuo":{"pos":"a","pol":"-0.312","std":"0.354"},"inidentificado":{"pos":"a","pol":"-0.375","std":"0.0"},"inigual":{"pos":"a","pol":"-0.375","std":"0.0"},"inimaginable":{"pos":"a","pol":"-0.375","std":"0.0"},"injustificable":{"pos":"a","pol":"-0.375","std":"0.0"},"inmaduro":{"pos":"a","pol":"-0.292","std":"0.166"},"inminencia":{"pos":"n","pol":"-0.375","std":"0.0"},"inmolación":{"pos":"n","pol":"-0.375","std":"0.0"},"inmortal":{"pos":"a","pol":"-0.375","std":"0.088"},"inmortalidad":{"pos":"n","pol":"-0.312","std":"0.265"},"innoble":{"pos":"a","pol":"-0.292","std":"0.125"},"inpenetrable":{"pos":"a","pol":"-0.437","std":"0.177"},"inquietamente":{"pos":"r","pol":"-0.375","std":"0.0"},"inquietar":{"pos":"v","pol":"-0.344","std":"0.102"},"insatisfacción":{"pos":"n","pol":"-0.312","std":"0.265"},"insensatez":{"pos":"n","pol":"-0.268","std":"0.161"},"insensato":{"pos":"a","pol":"-0.333","std":"0.191"},"insensibilidad":{"pos":"n","pol":"-0.375","std":"0.191"},"insignia de grado":{"pos":"n","pol":"-0.375","std":"0.0"},"insignia de rango":{"pos":"n","pol":"-0.375","std":"0.0"},"insipidez":{"pos":"n","pol":"-0.275","std":"0.112"},"insociable":{"pos":"a","pol":"-0.375","std":"0.0"},"insolencia":{"pos":"n","pol":"-0.375","std":"0.125"},"insolente":{"pos":"n","pol":"-0.375","std":"0.0"},"insoluble":{"pos":"a","pol":"-0.458","std":"0.217"},"insospechadamente":{"pos":"r","pol":"-0.375","std":"0.0"},"insospechado":{"pos":"a","pol":"-0.375","std":"0.0"},"insubmergible":{"pos":"a","pol":"-0.375","std":"0.0"},"insubordinado":{"pos":"a","pol":"-0.375","std":"0.177"},"insuficiencia":{"pos":"n","pol":"-0.417","std":"0.072"},"insuficiencia cardíaca":{"pos":"n","pol":"-0.375","std":"0.0"},"insuficiencia coronaria":{"pos":"n","pol":"-0.375","std":"0.0"},"insulso":{"pos":"a","pol":"-0.344","std":"0.213"},"insustancial":{"pos":"a","pol":"-0.286","std":"0.173"},"interdicto":{"pos":"n","pol":"-0.344","std":"0.072"},"intolerancia":{"pos":"n","pol":"-0.312","std":"0.217"},"intransigencia":{"pos":"n","pol":"-0.375","std":"0.088"},"intransigente":{"pos":"a","pol":"-0.312","std":"0.265"},"intransitivo":{"pos":"a","pol":"-0.375","std":"0.0"},"intratable":{"pos":"a","pol":"-0.292","std":"0.072"},"inutilidad":{"pos":"n","pol":"-0.292","std":"0.26"},"inutilizable":{"pos":"a","pol":"-0.375","std":"0.0"},"invalidez":{"pos":"n","pol":"-0.292","std":"0.072"},"invasor":{"pos":"n","pol":"-0.375","std":"0.0"},"invectiva":{"pos":"n","pol":"-0.333","std":"0.125"},"inviolable":{"pos":"a","pol":"-0.281","std":"0.237"},"involuntariamente":{"pos":"r","pol":"-0.312","std":"0.088"},"invulnerabilidad":{"pos":"n","pol":"-0.312","std":"0.177"},"inánime":{"pos":"a","pol":"-0.344","std":"0.161"},"inútil":{"pos":"n","pol":"-0.333","std":"0.072"},"ir de puntillas":{"pos":"v","pol":"-0.375","std":"0.0"},"irracional":{"pos":"a","pol":"-0.325","std":"0.205"},"irracionalidad":{"pos":"n","pol":"-0.437","std":"0.0"},"irreal":{"pos":"a","pol":"-0.375","std":"0.125"},"irreverencia":{"pos":"n","pol":"-0.312","std":"0.265"},"irreverente":{"pos":"a","pol":"-0.333","std":"0.26"},"irreverentemente":{"pos":"r","pol":"-0.375","std":"0.0"},"irrisión":{"pos":"n","pol":"-0.375","std":"0.0"},"irritabilidad":{"pos":"n","pol":"-0.375","std":"0.088"},"irritable":{"pos":"a","pol":"-0.479","std":"0.129"},"irvingia":{"pos":"n","pol":"-0.375","std":"0.0"},"jitter":{"pos":"n","pol":"-0.375","std":"0.0"},"jorobar":{"pos":"v","pol":"-0.375","std":"0.0"},"joyas de la corona":{"pos":"n","pol":"-0.375","std":"0.0"},"juego sucio":{"pos":"n","pol":"-0.375","std":"0.0"},"jumento":{"pos":"n","pol":"-0.312","std":"0.088"},"junky":{"pos":"n","pol":"-0.375","std":"0.0"},"justificarse":{"pos":"v","pol":"-0.375","std":"0.0"},"kernicterus":{"pos":"n","pol":"-0.375","std":"0.0"},"kitch":{"pos":"n","pol":"-0.375","std":"0.0"},"lactoflavina":{"pos":"n","pol":"-0.375","std":"0.0"},"lamentarse":{"pos":"v","pol":"-0.464","std":"0.067"},"lamento":{"pos":"n","pol":"-0.475","std":"0.068"},"languidecer":{"pos":"v","pol":"-0.417","std":"0.072"},"lanzar una ofensiva":{"pos":"v","pol":"-0.375","std":"0.0"},"lastimar":{"pos":"v","pol":"-0.375","std":"0.088"},"lechuzo":{"pos":"n","pol":"-0.375","std":"0.0"},"lentamente":{"pos":"r","pol":"-0.375","std":"0.0"},"lepiota morgani":{"pos":"n","pol":"-0.375","std":"0.0"},"lepra":{"pos":"n","pol":"-0.375","std":"0.0"},"letal":{"pos":"a","pol":"-0.437","std":"0.088"},"letargo":{"pos":"n","pol":"-0.333","std":"0.072"},"leucocitosis":{"pos":"n","pol":"-0.375","std":"0.0"},"leucopenia":{"pos":"n","pol":"-0.375","std":"0.0"},"levedad":{"pos":"n","pol":"-0.375","std":"0.265"},"ley de Dalton":{"pos":"n","pol":"-0.375","std":"0.0"},"ley del linchamiento":{"pos":"n","pol":"-0.375","std":"0.0"},"ley marcial":{"pos":"n","pol":"-0.375","std":"0.0"},"liarse a puños":{"pos":"v","pol":"-0.375","std":"0.0"},"liberarse":{"pos":"v","pol":"-0.375","std":"0.0"},"licencioso":{"pos":"a","pol":"-0.375","std":"0.0"},"ligeramente":{"pos":"r","pol":"-0.292","std":"0.072"},"linchamiento":{"pos":"n","pol":"-0.375","std":"0.0"},"linimento":{"pos":"n","pol":"-0.375","std":"0.0"},"liposarcoma":{"pos":"n","pol":"-0.375","std":"0.0"},"lipotimia":{"pos":"n","pol":"-0.375","std":"0.0"},"llanto":{"pos":"n","pol":"-0.312","std":"0.079"},"lloriquear":{"pos":"v","pol":"-0.281","std":"0.072"},"lloriqueo":{"pos":"n","pol":"-0.375","std":"0.177"},"lloro":{"pos":"n","pol":"-0.281","std":"0.063"},"llovedera":{"pos":"n","pol":"-0.375","std":"0.0"},"loca":{"pos":"n","pol":"-0.312","std":"0.0"},"locatis":{"pos":"n","pol":"-0.292","std":"0.0"},"loco":{"pos":"n","pol":"-0.292","std":"0.0"},"lodacero":{"pos":"n","pol":"-0.312","std":"0.0"},"lorelei":{"pos":"n","pol":"-0.375","std":"0.0"},"lovastatina":{"pos":"n","pol":"-0.375","std":"0.0"},"lunar postizo":{"pos":"n","pol":"-0.375","std":"0.0"},"lunático":{"pos":"a","pol":"-0.25","std":"0.0"},"luz de advertencia":{"pos":"n","pol":"-0.375","std":"0.0"},"luz de alarma":{"pos":"n","pol":"-0.375","std":"0.0"},"lánguido":{"pos":"a","pol":"-0.312","std":"0.088"},"línea de batalla":{"pos":"n","pol":"-0.375","std":"0.0"},"lío":{"pos":"n","pol":"-0.26","std":"0.107"},"machaca":{"pos":"n","pol":"-0.375","std":"0.0"},"machacón":{"pos":"n","pol":"-0.312","std":"0.088"},"macroglosia":{"pos":"n","pol":"-0.375","std":"0.0"},"madriguera":{"pos":"n","pol":"-0.312","std":"0.12"},"magrez":{"pos":"n","pol":"-0.375","std":"0.0"},"magrura":{"pos":"n","pol":"-0.375","std":"0.0"},"mal de mar":{"pos":"n","pol":"-0.375","std":"0.0"},"mal empleo":{"pos":"n","pol":"-0.375","std":"0.0"},"mal gusto":{"pos":"n","pol":"-0.375","std":"0.0"},"mala memoria":{"pos":"n","pol":"-0.375","std":"0.0"},"mala pronunciación":{"pos":"n","pol":"-0.375","std":"0.0"},"malabsorción":{"pos":"n","pol":"-0.375","std":"0.0"},"malacia":{"pos":"n","pol":"-0.375","std":"0.0"},"malcontento":{"pos":"n","pol":"-0.375","std":"0.0"},"maledicencia":{"pos":"n","pol":"-0.375","std":"0.0"},"maleducado":{"pos":"a","pol":"-0.35","std":"0.163"},"maleficio":{"pos":"n","pol":"-0.375","std":"0.0"},"malformación":{"pos":"n","pol":"-0.437","std":"0.0"},"maltratador":{"pos":"n","pol":"-0.375","std":"0.0"},"malvender":{"pos":"v","pol":"-0.375","std":"0.0"},"mancha":{"pos":"n","pol":"-0.3","std":"0.068"},"manchurrón":{"pos":"n","pol":"-0.375","std":"0.0"},"manchón":{"pos":"n","pol":"-0.375","std":"0.0"},"mandil":{"pos":"n","pol":"-0.312","std":"0.0"},"maniaco":{"pos":"a","pol":"-0.312","std":"0.0"},"manipular":{"pos":"v","pol":"-0.286","std":"0.119"},"manosear":{"pos":"v","pol":"-0.281","std":"0.063"},"maquinar":{"pos":"v","pol":"-0.312","std":"0.088"},"mareado":{"pos":"a","pol":"-0.437","std":"0.0"},"maricón":{"pos":"n","pol":"-0.375","std":"0.0"},"mariposón":{"pos":"n","pol":"-0.375","std":"0.0"},"marshal":{"pos":"n","pol":"-0.375","std":"0.0"},"martingala":{"pos":"n","pol":"-0.375","std":"0.0"},"mastelero":{"pos":"n","pol":"-0.375","std":"0.0"},"matachín":{"pos":"n","pol":"-0.312","std":"0.088"},"matanza":{"pos":"n","pol":"-0.458","std":"0.072"},"matricidio":{"pos":"n","pol":"-0.375","std":"0.0"},"matón":{"pos":"n","pol":"-0.292","std":"0.072"},"mañanita":{"pos":"n","pol":"-0.375","std":"0.0"},"mecanismo de defensa":{"pos":"n","pol":"-0.375","std":"0.0"},"medios":{"pos":"n","pol":"-0.312","std":"0.088"},"megalómano":{"pos":"n","pol":"-0.375","std":"0.0"},"megamuerte":{"pos":"n","pol":"-0.375","std":"0.0"},"melena":{"pos":"n","pol":"-0.375","std":"0.0"},"melodramáticamente":{"pos":"r","pol":"-0.375","std":"0.0"},"memo":{"pos":"a","pol":"-0.375","std":"0.0"},"mendacidad":{"pos":"n","pol":"-0.375","std":"0.0"},"mentecato":{"pos":"n","pol":"-0.333","std":"0.125"},"mentira":{"pos":"n","pol":"-0.3","std":"0.105"},"mentón":{"pos":"n","pol":"-0.375","std":"0.0"},"meralgia":{"pos":"n","pol":"-0.375","std":"0.0"},"merluzo":{"pos":"n","pol":"-0.375","std":"0.0"},"mes a mes":{"pos":"r","pol":"-0.375","std":"0.0"},"mestizo":{"pos":"a","pol":"-0.375","std":"0.0"},"meterse con":{"pos":"v","pol":"-0.375","std":"0.0"},"mezquino":{"pos":"a","pol":"-0.469","std":"0.188"},"michelín":{"pos":"n","pol":"-0.375","std":"0.0"},"mildiu":{"pos":"n","pol":"-0.375","std":"0.0"},"militante":{"pos":"a","pol":"-0.437","std":"0.177"},"miocardiopatía":{"pos":"n","pol":"-0.375","std":"0.0"},"mirada desafiante":{"pos":"n","pol":"-0.375","std":"0.0"},"mirada feroz":{"pos":"n","pol":"-0.375","std":"0.0"},"mirada fulminante":{"pos":"n","pol":"-0.375","std":"0.0"},"miseria":{"pos":"n","pol":"-0.292","std":"0.125"},"misión imposible":{"pos":"n","pol":"-0.375","std":"0.0"},"mocoso":{"pos":"n","pol":"-0.437","std":"0.088"},"mohoso":{"pos":"a","pol":"-0.312","std":"0.177"},"mohín":{"pos":"n","pol":"-0.375","std":"0.0"},"molestia":{"pos":"n","pol":"-0.347","std":"0.088"},"monorquidia":{"pos":"n","pol":"-0.375","std":"0.0"},"montería":{"pos":"n","pol":"-0.312","std":"0.0"},"morbosidad":{"pos":"n","pol":"-0.312","std":"0.177"},"moreno":{"pos":"a","pol":"-0.417","std":"0.051"},"moretón":{"pos":"n","pol":"-0.375","std":"0.0"},"morgue":{"pos":"n","pol":"-0.375","std":"0.0"},"moribundo":{"pos":"a","pol":"-0.375","std":"0.0"},"morirse":{"pos":"v","pol":"-0.312","std":"0.088"},"mortal":{"pos":"r","pol":"-0.375","std":"0.0"},"mortífero":{"pos":"a","pol":"-0.375","std":"0.072"},"moverse estruendosamente":{"pos":"v","pol":"-0.375","std":"0.0"},"moña":{"pos":"n","pol":"-0.375","std":"0.0"},"mudable":{"pos":"a","pol":"-0.375","std":"0.265"},"mueca de dolor":{"pos":"n","pol":"-0.375","std":"0.0"},"muerte cerebral":{"pos":"n","pol":"-0.375","std":"0.0"},"muerte de un millón de personas":{"pos":"n","pol":"-0.375","std":"0.0"},"muerto viviente":{"pos":"n","pol":"-0.375","std":"0.0"},"muflón":{"pos":"n","pol":"-0.375","std":"0.0"},"multa":{"pos":"n","pol":"-0.375","std":"0.0"},"mundo de la fantasía":{"pos":"n","pol":"-0.375","std":"0.0"},"muralla":{"pos":"n","pol":"-0.312","std":"0.088"},"murmurio":{"pos":"n","pol":"-0.375","std":"0.0"},"mustela":{"pos":"n","pol":"-0.312","std":"0.0"},"mutilar":{"pos":"v","pol":"-0.304","std":"0.061"},"mutuamente":{"pos":"r","pol":"-0.375","std":"0.0"},"muñequera":{"pos":"n","pol":"-0.312","std":"0.0"},"mármol verde antiguo":{"pos":"n","pol":"-0.375","std":"0.0"},"más allá":{"pos":"n","pol":"-0.375","std":"0.0"},"mórbido":{"pos":"a","pol":"-0.292","std":"0.26"},"narcómano":{"pos":"n","pol":"-0.375","std":"0.0"},"nata cortada":{"pos":"n","pol":"-0.375","std":"0.0"},"naufragio":{"pos":"n","pol":"-0.312","std":"0.088"},"naupatía":{"pos":"n","pol":"-0.375","std":"0.0"},"necromántico":{"pos":"a","pol":"-0.375","std":"0.0"},"necropsia":{"pos":"n","pol":"-0.375","std":"0.0"},"negligencia":{"pos":"n","pol":"-0.312","std":"0.102"},"negrito":{"pos":"n","pol":"-0.375","std":"0.0"},"negro azabache":{"pos":"a","pol":"-0.312","std":"0.088"},"negro carbón":{"pos":"a","pol":"-0.312","std":"0.088"},"negrura":{"pos":"n","pol":"-0.312","std":"0.0"},"neoplasia":{"pos":"n","pol":"-0.375","std":"0.0"},"neumoconiosis":{"pos":"n","pol":"-0.375","std":"0.0"},"neumotórax":{"pos":"n","pol":"-0.375","std":"0.0"},"neuralgia":{"pos":"n","pol":"-0.375","std":"0.0"},"neurasténico":{"pos":"a","pol":"-0.25","std":"0.0"},"neuritis":{"pos":"n","pol":"-0.375","std":"0.0"},"neurosis":{"pos":"n","pol":"-0.375","std":"0.0"},"neurospora":{"pos":"n","pol":"-0.375","std":"0.0"},"neurótico":{"pos":"n","pol":"-0.375","std":"0.0"},"ninchi":{"pos":"n","pol":"-0.375","std":"0.0"},"ninfomanía":{"pos":"n","pol":"-0.375","std":"0.0"},"niño enmadrado":{"pos":"n","pol":"-0.375","std":"0.0"},"no atribuíble":{"pos":"a","pol":"-0.375","std":"0.0"},"no consumado":{"pos":"a","pol":"-0.375","std":"0.0"},"no disponible":{"pos":"a","pol":"-0.375","std":"0.088"},"no financiado":{"pos":"a","pol":"-0.375","std":"0.0"},"no heredable":{"pos":"a","pol":"-0.375","std":"0.0"},"no identificado":{"pos":"a","pol":"-0.375","std":"0.0"},"no redivivo":{"pos":"a","pol":"-0.375","std":"0.0"},"no renovado":{"pos":"a","pol":"-0.375","std":"0.0"},"no requerido":{"pos":"a","pol":"-0.375","std":"0.0"},"no reservado":{"pos":"a","pol":"-0.375","std":"0.0"},"no residencial":{"pos":"a","pol":"-0.375","std":"0.0"},"no residenciales":{"pos":"a","pol":"-0.375","std":"0.0"},"no solicitado":{"pos":"a","pol":"-0.375","std":"0.0"},"no submarino":{"pos":"a","pol":"-0.375","std":"0.0"},"no sumergible":{"pos":"a","pol":"-0.375","std":"0.0"},"nocaut":{"pos":"n","pol":"-0.375","std":"0.0"},"nocente":{"pos":"a","pol":"-0.375","std":"0.0"},"nocional":{"pos":"a","pol":"-0.312","std":"0.0"},"nociones":{"pos":"n","pol":"-0.375","std":"0.0"},"noqueador":{"pos":"n","pol":"-0.375","std":"0.0"},"nota amarga":{"pos":"n","pol":"-0.375","std":"0.0"},"numerario":{"pos":"a","pol":"-0.375","std":"0.0"},"número atómico 76":{"pos":"n","pol":"-0.375","std":"0.0"},"objeción":{"pos":"n","pol":"-0.275","std":"0.112"},"objetar":{"pos":"v","pol":"-0.375","std":"0.125"},"obliteración":{"pos":"n","pol":"-0.375","std":"0.0"},"obsceno":{"pos":"n","pol":"-0.375","std":"0.0"},"obsidiana":{"pos":"n","pol":"-0.375","std":"0.0"},"obstáculo de arena":{"pos":"n","pol":"-0.375","std":"0.0"},"oca azul":{"pos":"n","pol":"-0.375","std":"0.0"},"ocultismo":{"pos":"n","pol":"-0.375","std":"0.0"},"ofendido":{"pos":"a","pol":"-0.375","std":"0.177"},"office":{"pos":"n","pol":"-0.375","std":"0.0"},"oler":{"pos":"v","pol":"-0.281","std":"0.0"},"ondeante":{"pos":"a","pol":"-0.312","std":"0.088"},"onicosis":{"pos":"n","pol":"-0.375","std":"0.0"},"opción de bloqueo":{"pos":"n","pol":"-0.375","std":"0.0"},"opresor":{"pos":"n","pol":"-0.375","std":"0.0"},"oprobio":{"pos":"n","pol":"-0.417","std":"0.191"},"ordinario":{"pos":"n","pol":"-0.375","std":"0.0"},"orquidalgia":{"pos":"n","pol":"-0.375","std":"0.0"},"ortiga":{"pos":"n","pol":"-0.375","std":"0.0"},"oscurantismo":{"pos":"n","pol":"-0.437","std":"0.088"},"oscuridad":{"pos":"n","pol":"-0.359","std":"0.058"},"osteomalacia":{"pos":"n","pol":"-0.375","std":"0.0"},"osteopetrosis":{"pos":"n","pol":"-0.375","std":"0.0"},"otosclerosis":{"pos":"n","pol":"-0.375","std":"0.0"},"paloteado":{"pos":"n","pol":"-0.375","std":"0.0"},"paloteo":{"pos":"n","pol":"-0.375","std":"0.0"},"palurdo":{"pos":"n","pol":"-0.312","std":"0.072"},"pancitopenia":{"pos":"n","pol":"-0.375","std":"0.0"},"pandearse":{"pos":"v","pol":"-0.375","std":"0.0"},"pantufla":{"pos":"n","pol":"-0.375","std":"0.0"},"papila":{"pos":"n","pol":"-0.375","std":"0.0"},"papismo":{"pos":"n","pol":"-0.375","std":"0.0"},"paralítico":{"pos":"a","pol":"-0.25","std":"0.177"},"parasitismo":{"pos":"n","pol":"-0.375","std":"0.0"},"parco":{"pos":"a","pol":"-0.375","std":"0.0"},"paresia":{"pos":"n","pol":"-0.375","std":"0.0"},"paresis":{"pos":"n","pol":"-0.375","std":"0.0"},"parestesia":{"pos":"n","pol":"-0.375","std":"0.0"},"parkinson":{"pos":"n","pol":"-0.375","std":"0.0"},"parmesano":{"pos":"n","pol":"-0.375","std":"0.0"},"paro cardíaco":{"pos":"n","pol":"-0.375","std":"0.0"},"parsimonia":{"pos":"n","pol":"-0.375","std":"0.0"},"parvedad":{"pos":"n","pol":"-0.437","std":"0.088"},"patas arriba":{"pos":"r","pol":"-0.375","std":"0.0"},"patata caliente":{"pos":"n","pol":"-0.375","std":"0.0"},"patatús":{"pos":"n","pol":"-0.375","std":"0.0"},"patochada":{"pos":"n","pol":"-0.375","std":"0.0"},"patricidio":{"pos":"n","pol":"-0.375","std":"0.0"},"patulea":{"pos":"n","pol":"-0.375","std":"0.0"},"patán":{"pos":"n","pol":"-0.344","std":"0.072"},"pavesa":{"pos":"n","pol":"-0.375","std":"0.0"},"payasadas":{"pos":"n","pol":"-0.375","std":"0.0"},"pebete":{"pos":"n","pol":"-0.375","std":"0.0"},"pecadillo":{"pos":"n","pol":"-0.375","std":"0.0"},"pedregoso":{"pos":"a","pol":"-0.312","std":"0.0"},"pelea":{"pos":"n","pol":"-0.406","std":"0.063"},"pelea a puñetazos":{"pos":"n","pol":"-0.375","std":"0.0"},"pelearse":{"pos":"v","pol":"-0.281","std":"0.0"},"peligrosidad":{"pos":"n","pol":"-0.417","std":"0.191"},"pelotera":{"pos":"n","pol":"-0.437","std":"0.088"},"penal":{"pos":"a","pol":"-0.417","std":"0.125"},"penalización":{"pos":"n","pol":"-0.281","std":"0.102"},"pendencia":{"pos":"n","pol":"-0.312","std":"0.088"},"pendencieramente":{"pos":"r","pol":"-0.375","std":"0.0"},"penuria":{"pos":"n","pol":"-0.344","std":"0.072"},"pequeña interrupción":{"pos":"n","pol":"-0.375","std":"0.0"},"percance":{"pos":"n","pol":"-0.333","std":"0.072"},"percebe":{"pos":"n","pol":"-0.292","std":"0.0"},"percutir":{"pos":"v","pol":"-0.375","std":"0.0"},"perder el control":{"pos":"v","pol":"-0.375","std":"0.0"},"perdición":{"pos":"n","pol":"-0.417","std":"0.217"},"perdonavidas":{"pos":"n","pol":"-0.292","std":"0.072"},"periodo de incubación":{"pos":"n","pol":"-0.375","std":"0.0"},"perjuicio":{"pos":"n","pol":"-0.333","std":"0.144"},"pernicioso":{"pos":"a","pol":"-0.406","std":"0.063"},"perro":{"pos":"n","pol":"-0.375","std":"0.072"},"persistentemente":{"pos":"r","pol":"-0.375","std":"0.0"},"perturbación":{"pos":"n","pol":"-0.266","std":"0.08"},"período de incubación":{"pos":"n","pol":"-0.375","std":"0.0"},"período prodrómico":{"pos":"n","pol":"-0.375","std":"0.0"},"pesadez":{"pos":"n","pol":"-0.286","std":"0.139"},"pescar":{"pos":"v","pol":"-0.333","std":"0.0"},"peste":{"pos":"n","pol":"-0.357","std":"0.067"},"pestilencia":{"pos":"n","pol":"-0.275","std":"0.068"},"peyorativo":{"pos":"a","pol":"-0.312","std":"0.088"},"pian":{"pos":"n","pol":"-0.375","std":"0.0"},"picada de pulga":{"pos":"n","pol":"-0.375","std":"0.0"},"picadura de pulga":{"pos":"n","pol":"-0.375","std":"0.0"},"piernas":{"pos":"n","pol":"-0.375","std":"0.0"},"pifia":{"pos":"n","pol":"-0.375","std":"0.0"},"pijama":{"pos":"n","pol":"-0.375","std":"0.0"},"pinchazo":{"pos":"n","pol":"-0.312","std":"0.072"},"piojoso":{"pos":"a","pol":"-0.437","std":"0.177"},"pira":{"pos":"n","pol":"-0.375","std":"0.0"},"pira funeral":{"pos":"n","pol":"-0.375","std":"0.0"},"pirado":{"pos":"n","pol":"-0.437","std":"0.088"},"piraña":{"pos":"n","pol":"-0.375","std":"0.0"},"pirofobia":{"pos":"n","pol":"-0.375","std":"0.0"},"piruleta":{"pos":"n","pol":"-0.375","std":"0.0"},"pirulí":{"pos":"n","pol":"-0.375","std":"0.0"},"pitorrearse":{"pos":"v","pol":"-0.375","std":"0.0"},"piyama":{"pos":"n","pol":"-0.375","std":"0.0"},"pián":{"pos":"n","pol":"-0.375","std":"0.0"},"plañidera":{"pos":"n","pol":"-0.375","std":"0.088"},"pleonasmo":{"pos":"n","pol":"-0.375","std":"0.0"},"pleurodinia":{"pos":"n","pol":"-0.375","std":"0.0"},"plexo aórtico":{"pos":"n","pol":"-0.375","std":"0.0"},"poco":{"pos":"r","pol":"-0.375","std":"0.0"},"poco familiar":{"pos":"a","pol":"-0.375","std":"0.0"},"poco influyente":{"pos":"a","pol":"-0.375","std":"0.0"},"poco realista":{"pos":"a","pol":"-0.375","std":"0.0"},"poco reservado":{"pos":"a","pol":"-0.375","std":"0.0"},"podrido":{"pos":"a","pol":"-0.375","std":"0.188"},"polemizar":{"pos":"v","pol":"-0.312","std":"0.0"},"policía":{"pos":"n","pol":"-0.292","std":"0.0"},"policía secreta":{"pos":"n","pol":"-0.375","std":"0.0"},"polimiositis":{"pos":"n","pol":"-0.375","std":"0.0"},"poliuria":{"pos":"n","pol":"-0.375","std":"0.0"},"pollino":{"pos":"n","pol":"-0.375","std":"0.088"},"polvorilla":{"pos":"n","pol":"-0.375","std":"0.0"},"pomposidad":{"pos":"n","pol":"-0.458","std":"0.0"},"poner en un aprieto":{"pos":"v","pol":"-0.437","std":"0.088"},"poner objecciones":{"pos":"v","pol":"-0.375","std":"0.0"},"ponerse áspero":{"pos":"v","pol":"-0.375","std":"0.0"},"ponzoña":{"pos":"n","pol":"-0.375","std":"0.0"},"populacho":{"pos":"n","pol":"-0.375","std":"0.0"},"por el momento":{"pos":"r","pol":"-0.312","std":"0.088"},"porfiria":{"pos":"n","pol":"-0.375","std":"0.0"},"postrimería":{"pos":"n","pol":"-0.375","std":"0.0"},"presagiado":{"pos":"a","pol":"-0.375","std":"0.0"},"presuntuoso":{"pos":"n","pol":"-0.375","std":"0.0"},"pretencioso":{"pos":"a","pol":"-0.312","std":"0.258"},"pretender":{"pos":"v","pol":"-0.312","std":"0.072"},"priapismo":{"pos":"n","pol":"-0.375","std":"0.0"},"primitivismo":{"pos":"n","pol":"-0.312","std":"0.088"},"procacidad":{"pos":"n","pol":"-0.437","std":"0.088"},"proctalgia":{"pos":"n","pol":"-0.375","std":"0.0"},"profano":{"pos":"a","pol":"-0.437","std":"0.177"},"profesor asociado":{"pos":"n","pol":"-0.375","std":"0.0"},"profético":{"pos":"a","pol":"-0.375","std":"0.0"},"promiscuo":{"pos":"a","pol":"-0.375","std":"0.0"},"pronunciación anómala":{"pos":"n","pol":"-0.375","std":"0.0"},"pronunciación incorrecta":{"pos":"n","pol":"-0.375","std":"0.0"},"proscribir":{"pos":"v","pol":"-0.375","std":"0.188"},"proscrito":{"pos":"a","pol":"-0.375","std":"0.0"},"protegerse":{"pos":"v","pol":"-0.312","std":"0.088"},"protesta":{"pos":"n","pol":"-0.26","std":"0.113"},"príncipe de las tinieblas":{"pos":"n","pol":"-0.437","std":"0.088"},"pródromo":{"pos":"n","pol":"-0.375","std":"0.0"},"psiconeurosis":{"pos":"n","pol":"-0.375","std":"0.0"},"psicosis":{"pos":"n","pol":"-0.375","std":"0.0"},"psicosis maniacodepresiva":{"pos":"n","pol":"-0.375","std":"0.0"},"psicosomático":{"pos":"a","pol":"-0.375","std":"0.0"},"psicópata":{"pos":"n","pol":"-0.375","std":"0.0"},"psicótico":{"pos":"n","pol":"-0.375","std":"0.0"},"psilotales":{"pos":"n","pol":"-0.375","std":"0.0"},"psoriasis":{"pos":"n","pol":"-0.375","std":"0.0"},"pudrir":{"pos":"v","pol":"-0.375","std":"0.0"},"puesta en práctica":{"pos":"n","pol":"-0.375","std":"0.0"},"pugnacidad":{"pos":"n","pol":"-0.312","std":"0.088"},"pugnar":{"pos":"v","pol":"-0.312","std":"0.0"},"pulsera":{"pos":"n","pol":"-0.375","std":"0.0"},"pulverización catódica":{"pos":"n","pol":"-0.375","std":"0.0"},"punto álgido":{"pos":"n","pol":"-0.375","std":"0.0"},"punzada":{"pos":"n","pol":"-0.312","std":"0.105"},"punzar":{"pos":"v","pol":"-0.375","std":"0.0"},"pusilánime":{"pos":"a","pol":"-0.375","std":"0.144"},"puto":{"pos":"n","pol":"-0.375","std":"0.0"},"puñetazos":{"pos":"n","pol":"-0.312","std":"0.0"},"pájaro raro":{"pos":"n","pol":"-0.375","std":"0.0"},"pérdida auditiva sensorineural":{"pos":"n","pol":"-0.375","std":"0.0"},"pícaro":{"pos":"n","pol":"-0.292","std":"0.144"},"pútrido":{"pos":"a","pol":"-0.375","std":"0.177"},"que suaviza":{"pos":"r","pol":"-0.375","std":"0.0"},"que zumba":{"pos":"n","pol":"-0.375","std":"0.0"},"quebradizo":{"pos":"a","pol":"-0.375","std":"0.144"},"quebrantar":{"pos":"v","pol":"-0.375","std":"0.177"},"quebrarse":{"pos":"v","pol":"-0.312","std":"0.0"},"queer":{"pos":"n","pol":"-0.375","std":"0.0"},"quehacer":{"pos":"n","pol":"-0.312","std":"0.088"},"queja":{"pos":"n","pol":"-0.321","std":"0.112"},"quejarse":{"pos":"v","pol":"-0.417","std":"0.079"},"quejumbridad":{"pos":"n","pol":"-0.375","std":"0.0"},"quemadura":{"pos":"n","pol":"-0.292","std":"0.0"},"queratitis":{"pos":"n","pol":"-0.375","std":"0.0"},"querella":{"pos":"n","pol":"-0.344","std":"0.12"},"queso rallado":{"pos":"n","pol":"-0.375","std":"0.0"},"quiltro":{"pos":"n","pol":"-0.312","std":"0.088"},"rabiar":{"pos":"v","pol":"-0.417","std":"0.072"},"racheado":{"pos":"a","pol":"-0.312","std":"0.088"},"rancidez":{"pos":"n","pol":"-0.375","std":"0.0"},"rancio":{"pos":"a","pol":"-0.458","std":"0.166"},"rapiñar":{"pos":"v","pol":"-0.312","std":"0.088"},"raptar":{"pos":"v","pol":"-0.312","std":"0.088"},"raquitis":{"pos":"n","pol":"-0.312","std":"0.0"},"raquitismo":{"pos":"n","pol":"-0.375","std":"0.0"},"rasgado":{"pos":"a","pol":"-0.375","std":"0.0"},"rayo-x":{"pos":"n","pol":"-0.375","std":"0.0"},"raído":{"pos":"a","pol":"-0.325","std":"0.153"},"rebullicio":{"pos":"n","pol":"-0.375","std":"0.0"},"recargamiento":{"pos":"n","pol":"-0.375","std":"0.0"},"receso":{"pos":"n","pol":"-0.312","std":"0.0"},"rechifla":{"pos":"n","pol":"-0.375","std":"0.125"},"reciedumbre":{"pos":"n","pol":"-0.312","std":"0.177"},"recluta nuevo":{"pos":"n","pol":"-0.375","std":"0.0"},"recochinearse":{"pos":"v","pol":"-0.375","std":"0.0"},"recocina":{"pos":"n","pol":"-0.375","std":"0.0"},"recriminación":{"pos":"n","pol":"-0.375","std":"0.088"},"redoblante":{"pos":"n","pol":"-0.375","std":"0.0"},"refajo":{"pos":"n","pol":"-0.375","std":"0.0"},"refriega":{"pos":"n","pol":"-0.406","std":"0.0"},"refunfuño":{"pos":"n","pol":"-0.375","std":"0.0"},"refunfuñón":{"pos":"a","pol":"-0.375","std":"0.265"},"reivindicación":{"pos":"n","pol":"-0.375","std":"0.0"},"relación de enfermos":{"pos":"n","pol":"-0.375","std":"0.0"},"renegado":{"pos":"a","pol":"-0.25","std":"0.0"},"renguear":{"pos":"v","pol":"-0.375","std":"0.0"},"renquear":{"pos":"v","pol":"-0.375","std":"0.0"},"repaso":{"pos":"n","pol":"-0.375","std":"0.0"},"repelente":{"pos":"a","pol":"-0.375","std":"0.177"},"repipi":{"pos":"n","pol":"-0.375","std":"0.0"},"reprender":{"pos":"v","pol":"-0.375","std":"0.146"},"reprimenda":{"pos":"n","pol":"-0.375","std":"0.072"},"reprobación":{"pos":"n","pol":"-0.375","std":"0.094"},"reprobar":{"pos":"v","pol":"-0.375","std":"0.063"},"reprobatorio":{"pos":"a","pol":"-0.333","std":"0.144"},"repunta":{"pos":"n","pol":"-0.375","std":"0.0"},"residuo":{"pos":"n","pol":"-0.375","std":"0.0"},"retar":{"pos":"v","pol":"-0.406","std":"0.0"},"retiro de tropas":{"pos":"n","pol":"-0.375","std":"0.0"},"reto":{"pos":"n","pol":"-0.375","std":"0.144"},"retrogradar":{"pos":"v","pol":"-0.312","std":"0.0"},"reuma":{"pos":"n","pol":"-0.375","std":"0.0"},"reumatismo":{"pos":"n","pol":"-0.375","std":"0.0"},"reumatismo articular":{"pos":"n","pol":"-0.375","std":"0.0"},"reumático":{"pos":"n","pol":"-0.375","std":"0.0"},"reventarse":{"pos":"v","pol":"-0.292","std":"0.072"},"reverbero":{"pos":"n","pol":"-0.375","std":"0.0"},"revertir":{"pos":"v","pol":"-0.375","std":"0.0"},"revocación":{"pos":"n","pol":"-0.333","std":"0.072"},"revuelco":{"pos":"n","pol":"-0.375","std":"0.0"},"reyerta":{"pos":"n","pol":"-0.375","std":"0.072"},"reñir":{"pos":"v","pol":"-0.359","std":"0.058"},"reúma":{"pos":"n","pol":"-0.375","std":"0.0"},"riboflavina":{"pos":"n","pol":"-0.375","std":"0.0"},"rictus":{"pos":"n","pol":"-0.312","std":"0.088"},"rigidez":{"pos":"n","pol":"-0.275","std":"0.163"},"rigor mortis":{"pos":"n","pol":"-0.312","std":"0.0"},"rigurosidad":{"pos":"n","pol":"-0.375","std":"0.191"},"rimbombancia":{"pos":"n","pol":"-0.437","std":"0.0"},"riña":{"pos":"n","pol":"-0.375","std":"0.065"},"roce":{"pos":"n","pol":"-0.312","std":"0.102"},"rocoso":{"pos":"a","pol":"-0.375","std":"0.0"},"rodófitos":{"pos":"n","pol":"-0.375","std":"0.0"},"rofecoxib":{"pos":"n","pol":"-0.375","std":"0.0"},"rojo vino":{"pos":"n","pol":"-0.375","std":"0.0"},"rompe-huelga":{"pos":"n","pol":"-0.375","std":"0.0"},"rompe-huelgas":{"pos":"n","pol":"-0.375","std":"0.0"},"rompible":{"pos":"a","pol":"-0.375","std":"0.0"},"roña":{"pos":"n","pol":"-0.292","std":"0.125"},"rudeza":{"pos":"n","pol":"-0.312","std":"0.088"},"rufián":{"pos":"n","pol":"-0.312","std":"0.088"},"rugosidad":{"pos":"n","pol":"-0.312","std":"0.0"},"rugoso":{"pos":"a","pol":"-0.333","std":"0.144"},"ruinoso":{"pos":"a","pol":"-0.375","std":"0.088"},"ràbia":{"pos":"n","pol":"-0.375","std":"0.0"},"rígido":{"pos":"a","pol":"-0.319","std":"0.121"},"sabotear":{"pos":"v","pol":"-0.312","std":"0.0"},"sacarse la espina":{"pos":"v","pol":"-0.375","std":"0.0"},"sacrificar":{"pos":"v","pol":"-0.292","std":"0.102"},"sacrificio":{"pos":"n","pol":"-0.375","std":"0.0"},"salvajada":{"pos":"n","pol":"-0.312","std":"0.088"},"salvajismo":{"pos":"n","pol":"-0.375","std":"0.088"},"sambenito":{"pos":"n","pol":"-0.375","std":"0.0"},"sandeces":{"pos":"n","pol":"-0.375","std":"0.0"},"santalales":{"pos":"n","pol":"-0.375","std":"0.0"},"saprofítico":{"pos":"a","pol":"-0.312","std":"0.0"},"sapróbico":{"pos":"a","pol":"-0.375","std":"0.0"},"saprófago":{"pos":"n","pol":"-0.375","std":"0.0"},"sarao":{"pos":"n","pol":"-0.292","std":"0.125"},"sarasa":{"pos":"n","pol":"-0.375","std":"0.0"},"sarcásticamente":{"pos":"r","pol":"-0.375","std":"0.0"},"sarna":{"pos":"n","pol":"-0.375","std":"0.088"},"sarracina":{"pos":"n","pol":"-0.375","std":"0.0"},"satánico":{"pos":"a","pol":"-0.375","std":"0.177"},"saña":{"pos":"n","pol":"-0.375","std":"0.088"},"secreta":{"pos":"n","pol":"-0.375","std":"0.0"},"seguir la corriente":{"pos":"v","pol":"-0.375","std":"0.0"},"seguro de salud":{"pos":"n","pol":"-0.375","std":"0.0"},"seguro médico":{"pos":"n","pol":"-0.375","std":"0.0"},"seguro sanitario":{"pos":"n","pol":"-0.375","std":"0.0"},"self-service":{"pos":"n","pol":"-0.375","std":"0.0"},"semblanza":{"pos":"n","pol":"-0.292","std":"0.072"},"sempiterno":{"pos":"a","pol":"-0.312","std":"0.0"},"sensiblería":{"pos":"n","pol":"-0.312","std":"0.177"},"sentencia condenatoria":{"pos":"n","pol":"-0.375","std":"0.0"},"sentenciar a muerte":{"pos":"v","pol":"-0.375","std":"0.0"},"separar del servicio":{"pos":"v","pol":"-0.375","std":"0.0"},"sepulcral":{"pos":"a","pol":"-0.458","std":"0.072"},"sepulcro":{"pos":"n","pol":"-0.375","std":"0.0"},"ser espiritual":{"pos":"n","pol":"-0.375","std":"0.0"},"ser fatal":{"pos":"v","pol":"-0.375","std":"0.0"},"severidad":{"pos":"n","pol":"-0.333","std":"0.151"},"sicomoro":{"pos":"n","pol":"-0.375","std":"0.0"},"sicosis":{"pos":"n","pol":"-0.375","std":"0.0"},"sicosomático":{"pos":"a","pol":"-0.375","std":"0.0"},"sicópata":{"pos":"n","pol":"-0.375","std":"0.0"},"sicótico":{"pos":"n","pol":"-0.375","std":"0.0"},"silicosis":{"pos":"n","pol":"-0.375","std":"0.0"},"simple":{"pos":"n","pol":"-0.375","std":"0.072"},"sin ayuda":{"pos":"r","pol":"-0.375","std":"0.0"},"sin inagurar":{"pos":"a","pol":"-0.375","std":"0.0"},"sin querer":{"pos":"r","pol":"-0.375","std":"0.0"},"sin reserva":{"pos":"a","pol":"-0.375","std":"0.0"},"sin resolver":{"pos":"a","pol":"-0.375","std":"0.0"},"sin solucionar":{"pos":"a","pol":"-0.375","std":"0.0"},"sin vida":{"pos":"r","pol":"-0.437","std":"0.088"},"sin vivacidad":{"pos":"r","pol":"-0.375","std":"0.0"},"sintomáticamente":{"pos":"r","pol":"-0.375","std":"0.0"},"sistema sensorial":{"pos":"n","pol":"-0.375","std":"0.0"},"sitiador":{"pos":"n","pol":"-0.375","std":"0.0"},"snob":{"pos":"n","pol":"-0.375","std":"0.0"},"sobado":{"pos":"a","pol":"-0.375","std":"0.0"},"sobrellevar":{"pos":"v","pol":"-0.375","std":"0.088"},"socorro":{"pos":"n","pol":"-0.375","std":"0.0"},"sofocado":{"pos":"a","pol":"-0.375","std":"0.0"},"sojuzgar":{"pos":"v","pol":"-0.375","std":"0.0"},"solenopsis":{"pos":"n","pol":"-0.375","std":"0.0"},"solevantamiento":{"pos":"n","pol":"-0.312","std":"0.088"},"sollozar":{"pos":"v","pol":"-0.4","std":"0.068"},"sollozo":{"pos":"n","pol":"-0.312","std":"0.088"},"sonotone":{"pos":"n","pol":"-0.375","std":"0.0"},"soplagaitas":{"pos":"n","pol":"-0.375","std":"0.0"},"soponcio":{"pos":"n","pol":"-0.375","std":"0.0"},"sordidez":{"pos":"n","pol":"-0.292","std":"0.0"},"sordomudez":{"pos":"n","pol":"-0.375","std":"0.0"},"sortilegio":{"pos":"n","pol":"-0.375","std":"0.0"},"sosería":{"pos":"n","pol":"-0.292","std":"0.125"},"soso":{"pos":"a","pol":"-0.297","std":"0.115"},"subexposición":{"pos":"n","pol":"-0.375","std":"0.088"},"subgenus chen":{"pos":"n","pol":"-0.375","std":"0.0"},"subirse a":{"pos":"v","pol":"-0.375","std":"0.0"},"subirse al tren":{"pos":"v","pol":"-0.375","std":"0.0"},"subpoblado":{"pos":"a","pol":"-0.375","std":"0.0"},"subyacente":{"pos":"a","pol":"-0.333","std":"0.191"},"suciedad":{"pos":"n","pol":"-0.306","std":"0.178"},"sucio":{"pos":"a","pol":"-0.281","std":"0.141"},"sufrir":{"pos":"v","pol":"-0.273","std":"0.123"},"sugestibilidad":{"pos":"n","pol":"-0.375","std":"0.0"},"supersticioso":{"pos":"a","pol":"-0.375","std":"0.0"},"supervivencia":{"pos":"n","pol":"-0.375","std":"0.0"},"suplicio":{"pos":"n","pol":"-0.479","std":"0.065"},"suspicacia":{"pos":"n","pol":"-0.312","std":"0.177"},"síncope":{"pos":"n","pol":"-0.375","std":"0.0"},"tabardo":{"pos":"n","pol":"-0.375","std":"0.0"},"tacha":{"pos":"n","pol":"-0.396","std":"0.065"},"tacto ligero":{"pos":"n","pol":"-0.375","std":"0.0"},"tambaleante":{"pos":"a","pol":"-0.312","std":"0.125"},"tambaleo":{"pos":"n","pol":"-0.375","std":"0.0"},"tanatorio":{"pos":"n","pol":"-0.375","std":"0.0"},"tapagujeros":{"pos":"n","pol":"-0.312","std":"0.0"},"tara":{"pos":"n","pol":"-0.344","std":"0.065"},"tarado":{"pos":"n","pol":"-0.375","std":"0.0"},"tarambana":{"pos":"n","pol":"-0.312","std":"0.0"},"tarantismo":{"pos":"n","pol":"-0.375","std":"0.0"},"tartajeo":{"pos":"n","pol":"-0.375","std":"0.0"},"tartamudeo":{"pos":"n","pol":"-0.375","std":"0.0"},"tartufo":{"pos":"n","pol":"-0.375","std":"0.0"},"tarugo":{"pos":"n","pol":"-0.312","std":"0.088"},"tembloroso":{"pos":"a","pol":"-0.396","std":"0.102"},"temerario":{"pos":"n","pol":"-0.375","std":"0.0"},"temeridad":{"pos":"n","pol":"-0.292","std":"0.0"},"tempestad":{"pos":"n","pol":"-0.375","std":"0.088"},"tempestad de lluvia":{"pos":"n","pol":"-0.375","std":"0.0"},"tempestuoso":{"pos":"a","pol":"-0.469","std":"0.188"},"temporal de lluvias":{"pos":"n","pol":"-0.375","std":"0.0"},"tender una trampa":{"pos":"v","pol":"-0.375","std":"0.0"},"tener angustia":{"pos":"v","pol":"-0.375","std":"0.0"},"tener ansias":{"pos":"v","pol":"-0.375","std":"0.0"},"tener aprensión":{"pos":"v","pol":"-0.375","std":"0.0"},"tener arcadas":{"pos":"v","pol":"-0.375","std":"0.0"},"tener desazón":{"pos":"v","pol":"-0.375","std":"0.0"},"tener náuseas":{"pos":"v","pol":"-0.375","std":"0.0"},"tensarse":{"pos":"v","pol":"-0.417","std":"0.072"},"teras":{"pos":"n","pol":"-0.375","std":"0.0"},"tergiversar":{"pos":"v","pol":"-0.292","std":"0.072"},"termoestable":{"pos":"a","pol":"-0.375","std":"0.0"},"terquedad":{"pos":"n","pol":"-0.344","std":"0.157"},"tibieza":{"pos":"n","pol":"-0.312","std":"0.088"},"tierra virgen":{"pos":"n","pol":"-0.375","std":"0.0"},"tifus epidémico":{"pos":"n","pol":"-0.375","std":"0.0"},"tifus exantemático":{"pos":"n","pol":"-0.375","std":"0.0"},"tifus petequial":{"pos":"n","pol":"-0.375","std":"0.0"},"timar":{"pos":"v","pol":"-0.286","std":"0.094"},"tira y afloja":{"pos":"n","pol":"-0.375","std":"0.0"},"tiritar":{"pos":"v","pol":"-0.292","std":"0.144"},"tiritera":{"pos":"n","pol":"-0.375","std":"0.0"},"tiritona":{"pos":"n","pol":"-0.375","std":"0.0"},"tiroide":{"pos":"a","pol":"-0.312","std":"0.0"},"tiroideo":{"pos":"a","pol":"-0.312","std":"0.0"},"tiroteo":{"pos":"n","pol":"-0.375","std":"0.0"},"tiznarse":{"pos":"v","pol":"-0.375","std":"0.0"},"tizne":{"pos":"n","pol":"-0.312","std":"0.088"},"tiznón":{"pos":"n","pol":"-0.375","std":"0.0"},"tizón":{"pos":"n","pol":"-0.375","std":"0.0"},"toba volcánica":{"pos":"n","pol":"-0.375","std":"0.0"},"tocado":{"pos":"a","pol":"-0.292","std":"0.072"},"tocarse":{"pos":"v","pol":"-0.312","std":"0.0"},"todo vale":{"pos":"n","pol":"-0.375","std":"0.0"},"tole":{"pos":"n","pol":"-0.437","std":"0.088"},"tomentoso":{"pos":"a","pol":"-0.375","std":"0.0"},"tontaina":{"pos":"n","pol":"-0.375","std":"0.0"},"tonto":{"pos":"a","pol":"-0.264","std":"0.218"},"tontorrón":{"pos":"n","pol":"-0.375","std":"0.0"},"topar":{"pos":"v","pol":"-0.375","std":"0.0"},"topetar":{"pos":"v","pol":"-0.375","std":"0.0"},"topetear":{"pos":"v","pol":"-0.375","std":"0.0"},"tormenta violenta":{"pos":"n","pol":"-0.375","std":"0.0"},"tormenta ígnea":{"pos":"n","pol":"-0.375","std":"0.0"},"tormentoso":{"pos":"a","pol":"-0.469","std":"0.188"},"torpe":{"pos":"n","pol":"-0.25","std":"0.072"},"tortura":{"pos":"n","pol":"-0.469","std":"0.102"},"torturador":{"pos":"n","pol":"-0.437","std":"0.088"},"toscamente":{"pos":"r","pol":"-0.375","std":"0.0"},"tosco":{"pos":"a","pol":"-0.446","std":"0.157"},"toxicómano":{"pos":"n","pol":"-0.375","std":"0.0"},"toxoplasmosis":{"pos":"n","pol":"-0.375","std":"0.0"},"trabajo previo":{"pos":"n","pol":"-0.375","std":"0.0"},"trabalenguas":{"pos":"n","pol":"-0.375","std":"0.0"},"tracoma":{"pos":"n","pol":"-0.312","std":"0.088"},"tragedia":{"pos":"n","pol":"-0.312","std":"0.063"},"traicionero":{"pos":"a","pol":"-0.458","std":"0.125"},"trampa de arena":{"pos":"n","pol":"-0.375","std":"0.0"},"trampa humana":{"pos":"n","pol":"-0.375","std":"0.0"},"trampa para ratones":{"pos":"n","pol":"-0.375","std":"0.0"},"transmigración":{"pos":"n","pol":"-0.375","std":"0.0"},"trapisonda":{"pos":"n","pol":"-0.292","std":"0.125"},"trascocina":{"pos":"n","pol":"-0.375","std":"0.0"},"trasgo":{"pos":"n","pol":"-0.375","std":"0.177"},"trasmigración":{"pos":"n","pol":"-0.375","std":"0.0"},"traspasar los límites":{"pos":"v","pol":"-0.375","std":"0.0"},"trasto":{"pos":"n","pol":"-0.333","std":"0.0"},"trastornar":{"pos":"v","pol":"-0.281","std":"0.0"},"trastorno cerebral":{"pos":"n","pol":"-0.375","std":"0.0"},"trastorno inmunológico":{"pos":"n","pol":"-0.375","std":"0.0"},"trastorno nervioso":{"pos":"n","pol":"-0.375","std":"0.0"},"trastorno neurológico":{"pos":"n","pol":"-0.375","std":"0.0"},"tratar salvajemente":{"pos":"v","pol":"-0.375","std":"0.0"},"traumatismo":{"pos":"n","pol":"-0.375","std":"0.0"},"treta":{"pos":"n","pol":"-0.312","std":"0.072"},"tribunal de apelación":{"pos":"n","pol":"-0.375","std":"0.0"},"tribunal penal":{"pos":"n","pol":"-0.375","std":"0.0"},"trifurcar":{"pos":"v","pol":"-0.375","std":"0.0"},"trombocitopenia":{"pos":"n","pol":"-0.375","std":"0.0"},"trágico":{"pos":"a","pol":"-0.437","std":"0.088"},"tsaine":{"pos":"n","pol":"-0.375","std":"0.0"},"tumor":{"pos":"n","pol":"-0.375","std":"0.0"},"tumulto":{"pos":"n","pol":"-0.271","std":"0.094"},"tumultuoso":{"pos":"a","pol":"-0.375","std":"0.0"},"turbamulta":{"pos":"n","pol":"-0.375","std":"0.0"},"turbio":{"pos":"a","pol":"-0.375","std":"0.191"},"turbulencia":{"pos":"n","pol":"-0.375","std":"0.0"},"turbulento":{"pos":"a","pol":"-0.375","std":"0.177"},"turón":{"pos":"n","pol":"-0.312","std":"0.0"},"tósigo":{"pos":"n","pol":"-0.375","std":"0.0"},"ulalgia":{"pos":"n","pol":"-0.375","std":"0.0"},"ultraje":{"pos":"n","pol":"-0.333","std":"0.072"},"umbrío":{"pos":"a","pol":"-0.312","std":"0.265"},"un":{"pos":"a","pol":"-0.375","std":"0.0"},"uretritis":{"pos":"n","pol":"-0.375","std":"0.0"},"vacío legal":{"pos":"n","pol":"-0.375","std":"0.0"},"vago":{"pos":"a","pol":"-0.268","std":"0.142"},"vaharada":{"pos":"n","pol":"-0.375","std":"0.0"},"vandalismo":{"pos":"n","pol":"-0.312","std":"0.088"},"vano":{"pos":"a","pol":"-0.284","std":"0.131"},"variegación":{"pos":"n","pol":"-0.375","std":"0.0"},"vejamen":{"pos":"n","pol":"-0.375","std":"0.0"},"vena labial inferior":{"pos":"n","pol":"-0.375","std":"0.0"},"vena ovárica":{"pos":"n","pol":"-0.375","std":"0.0"},"vena porta":{"pos":"n","pol":"-0.375","std":"0.0"},"vena tibial":{"pos":"n","pol":"-0.375","std":"0.0"},"vena yugular anterior":{"pos":"n","pol":"-0.375","std":"0.0"},"vendajes":{"pos":"n","pol":"-0.375","std":"0.0"},"vendaval":{"pos":"n","pol":"-0.375","std":"0.0"},"veneno":{"pos":"n","pol":"-0.333","std":"0.0"},"vengativo":{"pos":"a","pol":"-0.375","std":"0.144"},"ventarrón":{"pos":"n","pol":"-0.375","std":"0.0"},"verdad a medias":{"pos":"n","pol":"-0.375","std":"0.0"},"verde botella":{"pos":"n","pol":"-0.375","std":"0.0"},"versar":{"pos":"v","pol":"-0.375","std":"0.0"},"vestibular":{"pos":"a","pol":"-0.375","std":"0.0"},"vibrisas":{"pos":"n","pol":"-0.375","std":"0.0"},"victima de robo":{"pos":"n","pol":"-0.375","std":"0.0"},"vidrio":{"pos":"n","pol":"-0.375","std":"0.0"},"villano":{"pos":"n","pol":"-0.312","std":"0.063"},"villanía":{"pos":"n","pol":"-0.333","std":"0.125"},"vioxx":{"pos":"n","pol":"-0.375","std":"0.0"},"viruela":{"pos":"n","pol":"-0.375","std":"0.0"},"virulencia":{"pos":"n","pol":"-0.375","std":"0.0"},"virulento":{"pos":"a","pol":"-0.292","std":"0.072"},"visón americano":{"pos":"n","pol":"-0.375","std":"0.0"},"vitamina B2":{"pos":"n","pol":"-0.375","std":"0.0"},"vituperio":{"pos":"n","pol":"-0.469","std":"0.102"},"vocería":{"pos":"n","pol":"-0.375","std":"0.0"},"vomitar":{"pos":"v","pol":"-0.375","std":"0.0"},"vulgar":{"pos":"n","pol":"-0.375","std":"0.0"},"vulgaridad":{"pos":"n","pol":"-0.4","std":"0.163"},"vulgariedad":{"pos":"n","pol":"-0.375","std":"0.0"},"vulgarizador":{"pos":"n","pol":"-0.375","std":"0.0"},"vulneración":{"pos":"n","pol":"-0.375","std":"0.0"},"vómer":{"pos":"n","pol":"-0.375","std":"0.0"},"woofer":{"pos":"n","pol":"-0.375","std":"0.0"},"xeroftalmia":{"pos":"n","pol":"-0.375","std":"0.0"},"xerostomía":{"pos":"n","pol":"-0.375","std":"0.0"},"zalagarda":{"pos":"n","pol":"-0.458","std":"0.0"},"zamarro":{"pos":"n","pol":"-0.375","std":"0.088"},"zanguango":{"pos":"n","pol":"-0.375","std":"0.0"},"zarandear":{"pos":"v","pol":"-0.292","std":"0.0"},"zizania":{"pos":"n","pol":"-0.375","std":"0.0"},"zombie":{"pos":"n","pol":"-0.375","std":"0.0"},"zoquete":{"pos":"n","pol":"-0.312","std":"0.058"},"zote":{"pos":"n","pol":"-0.375","std":"0.0"},"zurriburri":{"pos":"n","pol":"-0.375","std":"0.0"},"ácaro de la sarna":{"pos":"n","pol":"-0.375","std":"0.0"},"ácido butanoico":{"pos":"n","pol":"-0.375","std":"0.0"},"ácido butírico":{"pos":"n","pol":"-0.375","std":"0.0"},"ácido carbámico":{"pos":"n","pol":"-0.375","std":"0.0"},"ácido hidrazoico":{"pos":"n","pol":"-0.375","std":"0.0"},"ánade real":{"pos":"n","pol":"-0.375","std":"0.0"},"ántrax":{"pos":"n","pol":"-0.312","std":"0.0"},"áspero":{"pos":"a","pol":"-0.344","std":"0.188"},"ébano":{"pos":"n","pol":"-0.312","std":"0.0"},"óxido nítrico":{"pos":"n","pol":"-0.375","std":"0.0"},"a cara descubierta":{"pos":"r","pol":"0.25","std":"0.0"},"a la medida":{"pos":"n","pol":"0.25","std":"0.0"},"a priori":{"pos":"a","pol":"0.25","std":"0.0"},"a propósito":{"pos":"r","pol":"0.25","std":"0.0"},"abandonado":{"pos":"a","pol":"0.25","std":"0.265"},"abarrotado":{"pos":"a","pol":"0.25","std":"0.177"},"abastecedor":{"pos":"n","pol":"0.25","std":"0.0"},"abatida":{"pos":"a","pol":"0.25","std":"0.0"},"abatis":{"pos":"n","pol":"0.25","std":"0.0"},"abejarrón":{"pos":"n","pol":"0.25","std":"0.0"},"abejón":{"pos":"n","pol":"0.25","std":"0.0"},"ablandante":{"pos":"a","pol":"0.25","std":"0.0"},"abortivo":{"pos":"a","pol":"0.25","std":"0.0"},"aborto espontáneo":{"pos":"n","pol":"0.25","std":"0.0"},"abracadabra":{"pos":"n","pol":"0.25","std":"0.0"},"abrazadera real":{"pos":"n","pol":"0.25","std":"0.0"},"abrevadero":{"pos":"n","pol":"0.25","std":"0.0"},"absolvedor":{"pos":"a","pol":"0.25","std":"0.0"},"aburrirse":{"pos":"v","pol":"0.25","std":"0.0"},"acalorado":{"pos":"a","pol":"0.25","std":"0.0"},"acantión":{"pos":"n","pol":"0.25","std":"0.0"},"acantonar":{"pos":"v","pol":"0.25","std":"0.0"},"acaparador":{"pos":"a","pol":"0.25","std":"0.0"},"acceleración":{"pos":"n","pol":"0.25","std":"0.0"},"accesional":{"pos":"a","pol":"0.25","std":"0.0"},"accionador":{"pos":"a","pol":"0.25","std":"0.0"},"acecinado":{"pos":"a","pol":"0.25","std":"0.0"},"acento circunflejo":{"pos":"n","pol":"0.25","std":"0.0"},"acetificar":{"pos":"v","pol":"0.25","std":"0.0"},"acicalar":{"pos":"v","pol":"0.25","std":"0.0"},"acidular":{"pos":"v","pol":"0.25","std":"0.0"},"aclamador":{"pos":"n","pol":"0.25","std":"0.0"},"acolchado":{"pos":"a","pol":"0.25","std":"0.177"},"acolchamiento":{"pos":"n","pol":"0.25","std":"0.0"},"acostarse con cualquiera":{"pos":"v","pol":"0.25","std":"0.0"},"acrobático":{"pos":"a","pol":"0.25","std":"0.265"},"acromatínico":{"pos":"a","pol":"0.25","std":"0.0"},"acrídidos":{"pos":"n","pol":"0.25","std":"0.0"},"acta notarial":{"pos":"n","pol":"0.25","std":"0.0"},"activa":{"pos":"a","pol":"0.25","std":"0.0"},"activador":{"pos":"a","pol":"0.25","std":"0.0"},"actividad":{"pos":"n","pol":"0.25","std":"0.209"},"actividad principal":{"pos":"n","pol":"0.25","std":"0.0"},"actividad social":{"pos":"n","pol":"0.25","std":"0.0"},"acuartelar":{"pos":"v","pol":"0.25","std":"0.0"},"acuminado":{"pos":"a","pol":"0.25","std":"0.0"},"adaptador":{"pos":"n","pol":"0.25","std":"0.0"},"adecuadamente":{"pos":"r","pol":"0.25","std":"0.0"},"adelanto":{"pos":"n","pol":"0.25","std":"0.125"},"adhesivo":{"pos":"a","pol":"0.25","std":"0.0"},"adiestrador":{"pos":"n","pol":"0.25","std":"0.0"},"aditivo":{"pos":"a","pol":"0.25","std":"0.0"},"admitido":{"pos":"a","pol":"0.25","std":"0.0"},"adopción":{"pos":"n","pol":"0.25","std":"0.191"},"adormecimiento":{"pos":"n","pol":"0.25","std":"0.0"},"adrenalina":{"pos":"n","pol":"0.25","std":"0.0"},"adsorbato":{"pos":"n","pol":"0.25","std":"0.0"},"adsorbible":{"pos":"a","pol":"0.25","std":"0.0"},"advice":{"pos":"n","pol":"0.25","std":"0.0"},"adyacente":{"pos":"a","pol":"0.25","std":"0.088"},"aerófilo":{"pos":"n","pol":"0.25","std":"0.0"},"afianzarse":{"pos":"v","pol":"0.25","std":"0.0"},"afiladora":{"pos":"n","pol":"0.25","std":"0.0"},"afiliado":{"pos":"a","pol":"0.25","std":"0.0"},"afinación":{"pos":"n","pol":"0.25","std":"0.0"},"afinamiento":{"pos":"n","pol":"0.25","std":"0.0"},"aflautado":{"pos":"a","pol":"0.25","std":"0.0"},"aforístico":{"pos":"a","pol":"0.25","std":"0.354"},"africada":{"pos":"n","pol":"0.25","std":"0.0"},"afrutado":{"pos":"a","pol":"0.25","std":"0.0"},"agencia publicitaria":{"pos":"n","pol":"0.25","std":"0.0"},"agente del FBI":{"pos":"n","pol":"0.25","std":"0.0"},"agilidad":{"pos":"n","pol":"0.25","std":"0.088"},"agrandar":{"pos":"v","pol":"0.25","std":"0.265"},"agua de fuego":{"pos":"n","pol":"0.25","std":"0.0"},"agudeza visual":{"pos":"n","pol":"0.25","std":"0.0"},"agujereado":{"pos":"a","pol":"0.25","std":"0.0"},"agujero negro":{"pos":"n","pol":"0.25","std":"0.0"},"ahorquillado":{"pos":"a","pol":"0.25","std":"0.0"},"ahumado":{"pos":"a","pol":"0.25","std":"0.177"},"ahusado":{"pos":"a","pol":"0.25","std":"0.0"},"aireado":{"pos":"a","pol":"0.25","std":"0.0"},"al-hakim":{"pos":"n","pol":"0.25","std":"0.0"},"al corriente":{"pos":"n","pol":"0.25","std":"0.0"},"alacridad":{"pos":"n","pol":"0.25","std":"0.0"},"alambre":{"pos":"n","pol":"0.25","std":"0.0"},"alazán":{"pos":"a","pol":"0.25","std":"0.0"},"alborada":{"pos":"n","pol":"0.25","std":"0.0"},"alborozo":{"pos":"n","pol":"0.25","std":"0.53"},"alcalescente":{"pos":"a","pol":"0.25","std":"0.0"},"alcalótico":{"pos":"a","pol":"0.25","std":"0.0"},"alcanforado":{"pos":"a","pol":"0.25","std":"0.0"},"alcanforar":{"pos":"v","pol":"0.25","std":"0.0"},"alcoholizado":{"pos":"a","pol":"0.25","std":"0.0"},"alcohólico":{"pos":"n","pol":"-0.25","std":"0.0"},"alcotana":{"pos":"n","pol":"0.25","std":"0.0"},"alfiler":{"pos":"n","pol":"0.25","std":"0.0"},"algoritmo":{"pos":"n","pol":"0.25","std":"0.0"},"alguien":{"pos":"n","pol":"0.25","std":"0.0"},"alguno":{"pos":"n","pol":"0.25","std":"0.0"},"aliado":{"pos":"a","pol":"0.25","std":"0.289"},"aliforme":{"pos":"a","pol":"0.25","std":"0.0"},"alifático":{"pos":"a","pol":"0.25","std":"0.0"},"alimento probiótico":{"pos":"n","pol":"0.25","std":"0.0"},"alistado":{"pos":"a","pol":"0.25","std":"0.0"},"alma gemela":{"pos":"n","pol":"0.25","std":"0.0"},"almohada":{"pos":"n","pol":"0.25","std":"0.0"},"alpenstock":{"pos":"n","pol":"0.25","std":"0.0"},"alternado":{"pos":"a","pol":"0.25","std":"0.0"},"alternante":{"pos":"a","pol":"0.25","std":"0.0"},"alterne":{"pos":"n","pol":"0.25","std":"0.0"},"alterno":{"pos":"a","pol":"0.25","std":"0.088"},"alteza":{"pos":"n","pol":"0.25","std":"0.354"},"altivez":{"pos":"n","pol":"0.25","std":"0.0"},"altiveza":{"pos":"n","pol":"0.25","std":"0.0"},"alucinado":{"pos":"a","pol":"0.25","std":"0.0"},"alucinógeno":{"pos":"a","pol":"0.25","std":"0.0"},"alzado":{"pos":"a","pol":"0.25","std":"0.0"},"amalgamativo":{"pos":"a","pol":"0.25","std":"0.0"},"amanecida":{"pos":"n","pol":"0.25","std":"0.0"},"amarillento":{"pos":"a","pol":"0.25","std":"0.177"},"amateur":{"pos":"n","pol":"0.25","std":"0.0"},"amigdala cerebral":{"pos":"n","pol":"0.25","std":"0.0"},"amniocentesis":{"pos":"n","pol":"0.25","std":"0.0"},"amo de la casa":{"pos":"n","pol":"0.25","std":"0.0"},"amoblar":{"pos":"v","pol":"0.25","std":"0.0"},"amonestaciones":{"pos":"n","pol":"0.25","std":"0.0"},"amor libre":{"pos":"n","pol":"0.25","std":"0.0"},"amotinado":{"pos":"a","pol":"0.25","std":"0.0"},"amueblado":{"pos":"a","pol":"0.25","std":"0.088"},"amárico":{"pos":"n","pol":"0.25","std":"0.0"},"anabaptismo":{"pos":"n","pol":"0.25","std":"0.0"},"anabolismo":{"pos":"n","pol":"0.25","std":"0.0"},"anaclisis":{"pos":"n","pol":"0.25","std":"0.0"},"anagógico":{"pos":"a","pol":"0.25","std":"0.0"},"analgésico":{"pos":"n","pol":"-0.25","std":"0.0"},"analgético":{"pos":"a","pol":"0.25","std":"0.0"},"analizable":{"pos":"a","pol":"0.25","std":"0.0"},"analizado":{"pos":"a","pol":"0.25","std":"0.0"},"analizador diferencial":{"pos":"n","pol":"0.25","std":"0.0"},"anamorfismo":{"pos":"n","pol":"0.25","std":"0.0"},"anasarcoso":{"pos":"a","pol":"0.25","std":"0.0"},"anatomista":{"pos":"n","pol":"0.25","std":"0.0"},"anatomía aplicada":{"pos":"n","pol":"0.25","std":"0.0"},"anatomía clínica":{"pos":"n","pol":"0.25","std":"0.0"},"anatómicamente":{"pos":"r","pol":"0.25","std":"0.0"},"andante":{"pos":"a","pol":"0.25","std":"0.0"},"anglohablante":{"pos":"a","pol":"0.25","std":"0.0"},"angloparlante":{"pos":"a","pol":"0.25","std":"0.0"},"angélicamente":{"pos":"r","pol":"0.25","std":"0.0"},"animación":{"pos":"n","pol":"0.25","std":"0.227"},"animadamente":{"pos":"r","pol":"0.25","std":"0.0"},"animal":{"pos":"a","pol":"0.25","std":"0.0"},"animal colmilludo":{"pos":"n","pol":"0.25","std":"0.0"},"animal doméstico":{"pos":"n","pol":"0.25","std":"0.0"},"animal en cautividad":{"pos":"n","pol":"0.25","std":"0.0"},"anotador":{"pos":"n","pol":"0.25","std":"0.0"},"antebrazo":{"pos":"n","pol":"0.25","std":"0.0"},"antena yagi":{"pos":"n","pol":"0.25","std":"0.0"},"antiautoritario":{"pos":"a","pol":"0.25","std":"0.0"},"anticiparse":{"pos":"v","pol":"0.25","std":"0.0"},"anticlimático":{"pos":"a","pol":"0.25","std":"0.0"},"anticuario":{"pos":"n","pol":"0.25","std":"0.0"},"antifonal":{"pos":"n","pol":"0.25","std":"0.0"},"antifonario":{"pos":"n","pol":"0.25","std":"0.0"},"antitanque":{"pos":"a","pol":"0.25","std":"0.0"},"antiápex":{"pos":"n","pol":"0.25","std":"0.0"},"antropomórfico":{"pos":"a","pol":"0.25","std":"0.0"},"antroposofía":{"pos":"n","pol":"0.25","std":"0.0"},"antílope":{"pos":"n","pol":"0.25","std":"0.0"},"antípoda":{"pos":"a","pol":"0.25","std":"0.0"},"antítesis":{"pos":"n","pol":"0.25","std":"0.0"},"anual":{"pos":"a","pol":"0.25","std":"0.125"},"anverso":{"pos":"n","pol":"0.25","std":"0.0"},"análisis metodológico":{"pos":"n","pol":"0.25","std":"0.0"},"análisis volumétrico":{"pos":"n","pol":"0.25","std":"0.0"},"apadrinamiento":{"pos":"n","pol":"0.25","std":"0.0"},"aparente":{"pos":"a","pol":"0.25","std":"0.0"},"apasionamiento":{"pos":"n","pol":"0.25","std":"0.088"},"apelable":{"pos":"a","pol":"0.25","std":"0.0"},"aplicarse":{"pos":"v","pol":"0.25","std":"0.0"},"aplomar":{"pos":"v","pol":"0.25","std":"0.0"},"apocromático":{"pos":"a","pol":"0.25","std":"0.0"},"apodar":{"pos":"v","pol":"0.25","std":"0.0"},"apoderamiento":{"pos":"n","pol":"0.25","std":"0.0"},"apoyabrazos":{"pos":"n","pol":"0.25","std":"0.0"},"apoyo logístico integrado":{"pos":"n","pol":"0.25","std":"0.0"},"apoyo logístico internacional":{"pos":"n","pol":"0.25","std":"0.0"},"apreciable":{"pos":"a","pol":"0.25","std":"0.088"},"aprestar":{"pos":"v","pol":"0.25","std":"0.0"},"aprestarse":{"pos":"v","pol":"0.25","std":"0.0"},"apresurado":{"pos":"a","pol":"0.25","std":"0.0"},"aprovisionador":{"pos":"n","pol":"0.25","std":"0.0"},"aproximado":{"pos":"n","pol":"0.25","std":"0.0"},"apátrida":{"pos":"n","pol":"0.25","std":"0.0"},"apócope":{"pos":"n","pol":"0.25","std":"0.0"},"apócrifo":{"pos":"a","pol":"0.25","std":"0.354"},"apófisis transversa":{"pos":"n","pol":"0.25","std":"0.0"},"arbitrio":{"pos":"n","pol":"0.25","std":"0.0"},"arcadiano":{"pos":"a","pol":"0.25","std":"0.0"},"arcaísta":{"pos":"n","pol":"0.25","std":"0.0"},"area de jurisdicción":{"pos":"n","pol":"0.25","std":"0.0"},"argentífero":{"pos":"a","pol":"0.25","std":"0.0"},"aridad":{"pos":"n","pol":"0.25","std":"0.0"},"ariete":{"pos":"n","pol":"0.25","std":"0.0"},"aritmética":{"pos":"n","pol":"0.25","std":"0.0"},"arminianismo":{"pos":"n","pol":"0.25","std":"0.0"},"arponear":{"pos":"v","pol":"0.25","std":"0.177"},"arqueado":{"pos":"a","pol":"0.25","std":"0.0"},"arquitectura paisajista":{"pos":"n","pol":"0.25","std":"0.0"},"arracimado":{"pos":"a","pol":"0.25","std":"0.0"},"arreglarse el pelo":{"pos":"v","pol":"0.25","std":"0.0"},"arreglo personal":{"pos":"n","pol":"0.25","std":"0.0"},"arriba":{"pos":"a","pol":"0.25","std":"0.0"},"arrobamiento":{"pos":"n","pol":"0.25","std":"0.0"},"arrullo":{"pos":"n","pol":"0.25","std":"0.0"},"art decó":{"pos":"n","pol":"0.25","std":"0.0"},"arteria cerebolosa superior":{"pos":"n","pol":"0.25","std":"0.0"},"arteria comunicante":{"pos":"n","pol":"0.25","std":"0.0"},"arteria intestinal":{"pos":"n","pol":"0.25","std":"0.0"},"arterias comunicantes":{"pos":"n","pol":"0.25","std":"0.0"},"arácnido":{"pos":"n","pol":"0.25","std":"0.0"},"asentista":{"pos":"n","pol":"0.25","std":"0.0"},"aseo":{"pos":"n","pol":"0.25","std":"0.271"},"asesoramiento":{"pos":"n","pol":"0.25","std":"0.0"},"asiento de palco":{"pos":"n","pol":"0.25","std":"0.0"},"asignado":{"pos":"a","pol":"0.25","std":"0.0"},"asignatura":{"pos":"n","pol":"0.25","std":"0.0"},"asistencia postoperatoria":{"pos":"n","pol":"0.25","std":"0.0"},"asistencia social":{"pos":"n","pol":"0.25","std":"0.0"},"asistente social":{"pos":"n","pol":"0.25","std":"0.0"},"asombrado":{"pos":"a","pol":"0.25","std":"0.0"},"asonante":{"pos":"a","pol":"0.25","std":"0.177"},"asordar":{"pos":"v","pol":"0.25","std":"0.0"},"aspirante":{"pos":"a","pol":"0.25","std":"0.442"},"asterión":{"pos":"n","pol":"0.25","std":"0.0"},"astronave":{"pos":"n","pol":"0.25","std":"0.0"},"ataviado":{"pos":"a","pol":"0.25","std":"0.088"},"atemperar":{"pos":"v","pol":"0.25","std":"0.088"},"atendido":{"pos":"a","pol":"0.25","std":"0.0"},"atenuante":{"pos":"a","pol":"0.25","std":"0.0"},"atildar":{"pos":"v","pol":"0.25","std":"0.0"},"atlas lingüístico":{"pos":"n","pol":"0.25","std":"0.0"},"atlético":{"pos":"a","pol":"0.25","std":"0.188"},"atonal":{"pos":"a","pol":"0.25","std":"0.0"},"atorar":{"pos":"v","pol":"0.25","std":"0.0"},"atorvastatina":{"pos":"n","pol":"0.25","std":"0.0"},"atracción de feria":{"pos":"n","pol":"0.25","std":"0.0"},"atractor":{"pos":"n","pol":"0.25","std":"0.0"},"atraíble":{"pos":"a","pol":"0.25","std":"0.0"},"atribuirse":{"pos":"v","pol":"0.25","std":"0.0"},"atónito":{"pos":"a","pol":"0.25","std":"0.0"},"audiovisual":{"pos":"n","pol":"0.25","std":"0.0"},"aullar de risa":{"pos":"v","pol":"0.25","std":"0.0"},"auspicio":{"pos":"n","pol":"0.25","std":"0.088"},"autenticidad":{"pos":"n","pol":"0.25","std":"0.354"},"autillo":{"pos":"n","pol":"0.25","std":"0.0"},"auto-gratificación":{"pos":"n","pol":"0.25","std":"0.0"},"autoadulación":{"pos":"n","pol":"0.25","std":"0.0"},"autobombo":{"pos":"n","pol":"0.25","std":"0.0"},"autocine":{"pos":"n","pol":"0.25","std":"0.0"},"autoengaño":{"pos":"n","pol":"0.25","std":"0.0"},"autotrófica":{"pos":"n","pol":"0.25","std":"0.0"},"autovolquete":{"pos":"n","pol":"0.25","std":"0.0"},"ave":{"pos":"n","pol":"0.25","std":"0.0"},"ave canora":{"pos":"n","pol":"0.25","std":"0.0"},"avenencia":{"pos":"n","pol":"0.25","std":"0.088"},"avenirse":{"pos":"v","pol":"0.25","std":"0.0"},"avinagrar":{"pos":"v","pol":"0.25","std":"0.0"},"avistamiento":{"pos":"n","pol":"0.25","std":"0.0"},"axiología":{"pos":"n","pol":"0.25","std":"0.0"},"ayuda audiovisual":{"pos":"n","pol":"0.25","std":"0.0"},"azitromicina":{"pos":"n","pol":"0.25","std":"0.0"},"azucarar":{"pos":"v","pol":"0.25","std":"0.354"},"azul":{"pos":"a","pol":"0.25","std":"0.072"},"azulado":{"pos":"a","pol":"0.25","std":"0.072"},"aéreo":{"pos":"a","pol":"0.25","std":"0.0"},"bacanales":{"pos":"n","pol":"0.25","std":"0.0"},"balido":{"pos":"n","pol":"0.25","std":"0.0"},"balón medicinal":{"pos":"n","pol":"0.25","std":"0.0"},"banas":{"pos":"n","pol":"0.25","std":"0.0"},"bandeja de té":{"pos":"n","pol":"0.25","std":"0.0"},"bandeja del té":{"pos":"n","pol":"0.25","std":"0.0"},"barrado":{"pos":"a","pol":"0.25","std":"0.0"},"barrenar":{"pos":"v","pol":"0.25","std":"0.0"},"barrera lingüística":{"pos":"n","pol":"0.25","std":"0.0"},"basa":{"pos":"n","pol":"0.25","std":"0.0"},"basamento":{"pos":"n","pol":"0.25","std":"0.0"},"basofílico":{"pos":"a","pol":"0.25","std":"0.0"},"bastón montañero":{"pos":"n","pol":"0.25","std":"0.0"},"batea":{"pos":"n","pol":"0.25","std":"0.0"},"bateo":{"pos":"n","pol":"0.25","std":"0.0"},"beatificación":{"pos":"n","pol":"0.25","std":"0.0"},"beige":{"pos":"a","pol":"0.25","std":"0.0"},"beldad":{"pos":"n","pol":"0.25","std":"0.0"},"bella":{"pos":"n","pol":"0.25","std":"0.0"},"bendecir":{"pos":"v","pol":"0.25","std":"0.25"},"bentos":{"pos":"n","pol":"0.25","std":"0.0"},"berberecho":{"pos":"n","pol":"0.25","std":"0.0"},"berro mastuerzo":{"pos":"n","pol":"0.25","std":"0.0"},"bestializar":{"pos":"v","pol":"0.25","std":"0.0"},"biblioteconomía":{"pos":"n","pol":"0.25","std":"0.0"},"bicromatado":{"pos":"a","pol":"0.25","std":"0.0"},"bienal":{"pos":"a","pol":"0.25","std":"0.177"},"bienestar económico":{"pos":"n","pol":"0.25","std":"0.0"},"bies":{"pos":"n","pol":"0.25","std":"0.0"},"bifurcado":{"pos":"a","pol":"0.25","std":"0.0"},"bigenérico":{"pos":"a","pol":"0.25","std":"0.0"},"bigémino":{"pos":"a","pol":"0.25","std":"0.0"},"bilabial":{"pos":"a","pol":"0.25","std":"0.0"},"bilateral":{"pos":"a","pol":"0.25","std":"0.354"},"bilineal":{"pos":"a","pol":"0.25","std":"0.0"},"billete de avión":{"pos":"n","pol":"0.25","std":"0.0"},"biodegradable":{"pos":"a","pol":"0.25","std":"0.0"},"bioensayo":{"pos":"n","pol":"0.25","std":"0.0"},"biológicamente":{"pos":"r","pol":"0.25","std":"0.0"},"bioscopio":{"pos":"n","pol":"0.25","std":"0.0"},"bioterio":{"pos":"n","pol":"0.25","std":"0.0"},"bioética":{"pos":"n","pol":"0.25","std":"0.0"},"bisílabo":{"pos":"a","pol":"0.25","std":"0.0"},"bizantinismo":{"pos":"n","pol":"0.25","std":"0.0"},"blanducho":{"pos":"a","pol":"0.25","std":"0.0"},"blasfemador":{"pos":"n","pol":"0.25","std":"0.0"},"blasfemo":{"pos":"n","pol":"0.25","std":"0.0"},"bloqueante":{"pos":"n","pol":"0.25","std":"0.0"},"boda civil":{"pos":"n","pol":"0.25","std":"0.0"},"bodhisatwa":{"pos":"n","pol":"0.25","std":"0.0"},"bodijo":{"pos":"n","pol":"0.25","std":"0.0"},"bofetón":{"pos":"n","pol":"0.25","std":"0.0"},"bola de melón":{"pos":"n","pol":"0.25","std":"0.0"},"bolchevizar":{"pos":"v","pol":"0.25","std":"0.0"},"bollo":{"pos":"n","pol":"0.25","std":"0.0"},"bolsa de colofonia":{"pos":"n","pol":"0.25","std":"0.0"},"bomba de demolición":{"pos":"n","pol":"0.25","std":"0.177"},"boom":{"pos":"n","pol":"0.25","std":"0.0"},"borriquete":{"pos":"n","pol":"0.25","std":"0.0"},"bote-vivienda":{"pos":"n","pol":"0.25","std":"0.0"},"bote de regatas":{"pos":"n","pol":"0.25","std":"0.0"},"botella de Leyden":{"pos":"n","pol":"0.25","std":"0.0"},"botón del ratón":{"pos":"n","pol":"0.25","std":"0.0"},"bracamante":{"pos":"n","pol":"0.25","std":"0.0"},"brahmanismo":{"pos":"n","pol":"0.25","std":"0.0"},"breve":{"pos":"n","pol":"0.25","std":"0.0"},"breviario":{"pos":"n","pol":"0.25","std":"0.0"},"brindis":{"pos":"n","pol":"0.25","std":"0.0"},"brut":{"pos":"a","pol":"0.25","std":"0.0"},"brámidos":{"pos":"n","pol":"0.25","std":"0.0"},"buen conversador":{"pos":"n","pol":"0.25","std":"0.0"},"buen sabor":{"pos":"n","pol":"0.25","std":"0.0"},"buena fortuna":{"pos":"n","pol":"0.25","std":"0.0"},"bufete de abogados":{"pos":"n","pol":"0.25","std":"0.0"},"bufónidos":{"pos":"n","pol":"0.25","std":"0.0"},"buril":{"pos":"n","pol":"0.25","std":"0.0"},"butaca":{"pos":"n","pol":"0.25","std":"0.0"},"butacón":{"pos":"n","pol":"0.25","std":"0.0"},"bífido":{"pos":"a","pol":"0.25","std":"0.0"},"bíparo":{"pos":"a","pol":"0.25","std":"0.0"},"caballero blanco":{"pos":"n","pol":"0.25","std":"0.0"},"cabeza de serie":{"pos":"n","pol":"0.25","std":"0.0"},"cableado":{"pos":"a","pol":"0.25","std":"0.0"},"cachivache":{"pos":"n","pol":"0.25","std":"0.0"},"cadenza":{"pos":"n","pol":"0.25","std":"0.0"},"café con leche":{"pos":"n","pol":"0.25","std":"0.0"},"caja alta":{"pos":"n","pol":"0.25","std":"0.0"},"caja de pensiones":{"pos":"n","pol":"0.25","std":"0.0"},"calaba":{"pos":"n","pol":"0.25","std":"0.0"},"calamina":{"pos":"n","pol":"0.25","std":"0.0"},"calce":{"pos":"n","pol":"0.25","std":"0.0"},"calculable":{"pos":"a","pol":"0.25","std":"0.177"},"calculador":{"pos":"a","pol":"0.25","std":"0.0"},"calculista":{"pos":"n","pol":"0.25","std":"0.0"},"caldo de cultivo":{"pos":"n","pol":"0.25","std":"0.0"},"calefacción":{"pos":"n","pol":"0.25","std":"0.0"},"calentarse":{"pos":"v","pol":"0.25","std":"0.0"},"calidad":{"pos":"n","pol":"0.25","std":"0.0"},"calidad de vida":{"pos":"n","pol":"0.25","std":"0.0"},"callado":{"pos":"a","pol":"0.25","std":"0.191"},"callarse":{"pos":"v","pol":"0.25","std":"0.088"},"callista":{"pos":"n","pol":"0.25","std":"0.0"},"calophyllum longifolium":{"pos":"n","pol":"0.25","std":"0.0"},"calorífero":{"pos":"n","pol":"0.25","std":"0.0"},"calígrafo":{"pos":"n","pol":"0.25","std":"0.0"},"cambalache":{"pos":"n","pol":"0.25","std":"0.0"},"cambiar el forro":{"pos":"v","pol":"0.25","std":"0.0"},"cambio de color":{"pos":"n","pol":"0.25","std":"0.0"},"cambio de forma":{"pos":"n","pol":"0.25","std":"0.0"},"cambio de sentido":{"pos":"n","pol":"0.25","std":"0.0"},"camión":{"pos":"n","pol":"0.25","std":"0.177"},"camión basculante":{"pos":"n","pol":"0.25","std":"0.0"},"campechanería":{"pos":"n","pol":"0.25","std":"0.0"},"campo de estudio":{"pos":"n","pol":"0.25","std":"0.0"},"camuesa":{"pos":"n","pol":"0.25","std":"0.0"},"cancelar":{"pos":"a","pol":"0.25","std":"0.0"},"canción de Navidad":{"pos":"n","pol":"0.25","std":"0.0"},"canela":{"pos":"a","pol":"0.25","std":"0.0"},"canje":{"pos":"n","pol":"0.25","std":"0.0"},"canonista":{"pos":"n","pol":"0.25","std":"0.0"},"canonización":{"pos":"n","pol":"0.25","std":"0.0"},"cansarse":{"pos":"v","pol":"0.25","std":"0.0"},"cantata":{"pos":"n","pol":"0.25","std":"0.0"},"cantillos":{"pos":"n","pol":"0.25","std":"0.0"},"canto nupcial":{"pos":"n","pol":"0.25","std":"0.0"},"capellán de cárcel":{"pos":"n","pol":"0.25","std":"0.0"},"capilla ardiente":{"pos":"n","pol":"0.25","std":"0.0"},"capital de España":{"pos":"n","pol":"0.25","std":"0.0"},"capitulaciones matrimoniales":{"pos":"n","pol":"0.25","std":"0.0"},"carales":{"pos":"n","pol":"0.25","std":"0.0"},"carambolear":{"pos":"v","pol":"0.25","std":"0.0"},"caramelo de azúcar":{"pos":"n","pol":"0.25","std":"0.0"},"caridad":{"pos":"n","pol":"0.25","std":"0.12"},"carrera de fondo":{"pos":"n","pol":"0.25","std":"0.0"},"carrera de perros":{"pos":"n","pol":"0.25","std":"0.0"},"cartilla de ahorro":{"pos":"n","pol":"0.25","std":"0.0"},"cartilla de ahorros":{"pos":"n","pol":"0.25","std":"0.0"},"cartón":{"pos":"n","pol":"0.25","std":"0.354"},"casa-bote":{"pos":"n","pol":"0.25","std":"0.0"},"casa de empeño":{"pos":"n","pol":"0.25","std":"0.0"},"casa de empeños":{"pos":"n","pol":"0.25","std":"0.0"},"casamiento desigual":{"pos":"n","pol":"0.25","std":"0.0"},"casarse":{"pos":"v","pol":"0.25","std":"0.0"},"caso de urgencia":{"pos":"n","pol":"0.25","std":"0.0"},"castaño":{"pos":"a","pol":"0.25","std":"0.0"},"castaño rojizo":{"pos":"a","pol":"0.25","std":"0.0"},"castillo":{"pos":"n","pol":"0.25","std":"0.0"},"catacréstico":{"pos":"a","pol":"0.25","std":"0.0"},"catamita":{"pos":"n","pol":"0.25","std":"0.0"},"catastro":{"pos":"n","pol":"0.25","std":"0.0"},"catatónico":{"pos":"a","pol":"0.25","std":"0.0"},"cattleya":{"pos":"n","pol":"0.25","std":"0.0"},"causa probable":{"pos":"n","pol":"0.25","std":"0.0"},"causativo":{"pos":"a","pol":"0.25","std":"0.0"},"cazador de ratones":{"pos":"n","pol":"0.25","std":"0.0"},"cañón automático antiaéreo":{"pos":"n","pol":"0.25","std":"0.0"},"cebolleta":{"pos":"n","pol":"0.25","std":"0.0"},"cefalópodo":{"pos":"n","pol":"0.25","std":"0.0"},"cegador":{"pos":"a","pol":"0.25","std":"0.0"},"celeste":{"pos":"n","pol":"0.25","std":"0.0"},"cemento armado":{"pos":"n","pol":"0.25","std":"0.0"},"cencerro":{"pos":"n","pol":"0.25","std":"0.0"},"cenotafio":{"pos":"n","pol":"0.25","std":"0.0"},"censurado":{"pos":"a","pol":"0.25","std":"0.0"},"centro comercial":{"pos":"n","pol":"0.25","std":"0.0"},"centro docente":{"pos":"n","pol":"0.25","std":"0.0"},"centro político":{"pos":"n","pol":"0.25","std":"0.0"},"centrífugo":{"pos":"a","pol":"0.25","std":"0.088"},"cenáculo":{"pos":"n","pol":"0.25","std":"0.0"},"cephalopoda":{"pos":"n","pol":"0.25","std":"0.0"},"cepillo de dientes":{"pos":"n","pol":"0.25","std":"0.0"},"cepillo de uñas":{"pos":"n","pol":"0.25","std":"0.0"},"ceremoniero":{"pos":"a","pol":"0.25","std":"0.088"},"ceremoniosidad":{"pos":"n","pol":"0.25","std":"0.0"},"ceremonioso":{"pos":"a","pol":"0.25","std":"0.088"},"cereza al marrasquino":{"pos":"n","pol":"0.25","std":"0.0"},"cerradura de combinación":{"pos":"n","pol":"0.25","std":"0.0"},"certificable":{"pos":"a","pol":"0.25","std":"0.0"},"certitud":{"pos":"n","pol":"0.25","std":"0.0"},"cerúleo":{"pos":"n","pol":"0.25","std":"0.0"},"cespitoso":{"pos":"a","pol":"0.25","std":"0.0"},"cestero":{"pos":"n","pol":"0.25","std":"0.0"},"cetrería":{"pos":"n","pol":"0.25","std":"0.0"},"chalaneo":{"pos":"n","pol":"0.25","std":"0.0"},"chantajear":{"pos":"v","pol":"0.25","std":"0.0"},"chapuzas":{"pos":"a","pol":"0.25","std":"0.0"},"charla íntima":{"pos":"n","pol":"0.25","std":"0.0"},"charola":{"pos":"n","pol":"0.25","std":"0.0"},"chateau":{"pos":"n","pol":"0.25","std":"0.0"},"chavalongo":{"pos":"n","pol":"0.25","std":"0.0"},"chicoleo":{"pos":"n","pol":"0.25","std":"0.0"},"chifonier":{"pos":"n","pol":"0.25","std":"0.0"},"chimichurri":{"pos":"n","pol":"0.25","std":"0.0"},"chip de memoria":{"pos":"n","pol":"0.25","std":"0.0"},"chiquitín":{"pos":"a","pol":"0.25","std":"0.0"},"chismerío":{"pos":"n","pol":"0.25","std":"0.0"},"chiste visual":{"pos":"n","pol":"0.25","std":"0.0"},"chovinista":{"pos":"a","pol":"0.25","std":"0.0"},"chuparla":{"pos":"v","pol":"0.25","std":"0.0"},"churra":{"pos":"n","pol":"0.25","std":"0.0"},"ciencia-ficción":{"pos":"n","pol":"0.25","std":"0.0"},"ciencia aplicada":{"pos":"n","pol":"0.25","std":"0.0"},"ciencia biomédica":{"pos":"n","pol":"0.25","std":"0.0"},"ciencia ficción":{"pos":"n","pol":"0.25","std":"0.0"},"ciencia médica":{"pos":"n","pol":"0.25","std":"0.0"},"científico":{"pos":"n","pol":"0.25","std":"0.0"},"cierre hermético":{"pos":"n","pol":"0.25","std":"0.0"},"cinta de audio":{"pos":"n","pol":"0.25","std":"0.0"},"circunflejo":{"pos":"n","pol":"0.25","std":"0.0"},"circunscrito":{"pos":"a","pol":"0.25","std":"0.0"},"ciruela":{"pos":"n","pol":"0.25","std":"0.177"},"ciudad prospera":{"pos":"n","pol":"0.25","std":"0.0"},"civilizado":{"pos":"a","pol":"0.25","std":"0.088"},"claristorio":{"pos":"n","pol":"0.25","std":"0.0"},"clase alta":{"pos":"n","pol":"0.25","std":"0.354"},"climáticamente":{"pos":"r","pol":"0.25","std":"0.0"},"club de atletismo":{"pos":"n","pol":"0.25","std":"0.0"},"club de gimnasia":{"pos":"n","pol":"0.25","std":"0.0"},"club de yate":{"pos":"n","pol":"0.25","std":"0.0"},"clueca":{"pos":"n","pol":"0.25","std":"0.0"},"clueco":{"pos":"a","pol":"0.25","std":"0.0"},"clímax sexual":{"pos":"n","pol":"0.25","std":"0.0"},"coaxial":{"pos":"a","pol":"0.25","std":"0.0"},"cobijar":{"pos":"v","pol":"0.25","std":"0.088"},"cochino":{"pos":"a","pol":"0.25","std":"0.0"},"cochino lucro":{"pos":"n","pol":"0.25","std":"0.0"},"codorniz":{"pos":"n","pol":"0.25","std":"0.177"},"coexistir":{"pos":"v","pol":"0.25","std":"0.0"},"cognado":{"pos":"a","pol":"0.25","std":"0.0"},"cohesivo":{"pos":"a","pol":"0.25","std":"0.177"},"cohesión":{"pos":"n","pol":"0.25","std":"0.0"},"cohibido":{"pos":"a","pol":"0.25","std":"0.0"},"cola de cometa":{"pos":"n","pol":"0.25","std":"0.0"},"colegio público":{"pos":"n","pol":"0.25","std":"0.0"},"colimación":{"pos":"n","pol":"0.25","std":"0.0"},"colindante":{"pos":"a","pol":"0.25","std":"0.088"},"collada":{"pos":"n","pol":"0.25","std":"0.0"},"colocar burlete":{"pos":"v","pol":"0.25","std":"0.0"},"color crema":{"pos":"a","pol":"0.25","std":"0.0"},"colores protectores":{"pos":"n","pol":"0.25","std":"0.0"},"colorido":{"pos":"n","pol":"0.25","std":"0.0"},"columpio":{"pos":"n","pol":"0.25","std":"0.0"},"comedia-ballet":{"pos":"n","pol":"0.25","std":"0.0"},"comedia de situación":{"pos":"n","pol":"0.25","std":"0.0"},"comentario burlón":{"pos":"n","pol":"0.25","std":"0.0"},"comentario ingenioso":{"pos":"n","pol":"0.25","std":"0.0"},"comercializado":{"pos":"a","pol":"0.25","std":"0.0"},"comerciante de pornografía":{"pos":"n","pol":"0.25","std":"0.0"},"comercio de armas":{"pos":"n","pol":"0.25","std":"0.0"},"comestibilidad":{"pos":"n","pol":"0.25","std":"0.0"},"comic":{"pos":"n","pol":"0.25","std":"0.0"},"comité ético":{"pos":"n","pol":"0.25","std":"0.0"},"como un angel":{"pos":"r","pol":"0.25","std":"0.0"},"como un reloj":{"pos":"r","pol":"0.25","std":"0.0"},"comoda":{"pos":"n","pol":"0.25","std":"0.0"},"compaginación":{"pos":"n","pol":"0.25","std":"0.0"},"comparación imaginaria":{"pos":"n","pol":"0.25","std":"0.0"},"comparecencia":{"pos":"n","pol":"0.25","std":"0.0"},"compañero de cama":{"pos":"n","pol":"0.25","std":"0.0"},"compañero del alma":{"pos":"n","pol":"0.25","std":"0.0"},"compañia telefónica":{"pos":"n","pol":"0.25","std":"0.0"},"compañía de teléfono":{"pos":"n","pol":"0.25","std":"0.0"},"compenetrarse":{"pos":"v","pol":"0.25","std":"0.0"},"compensación p":{"pos":"n","pol":"0.25","std":"0.0"},"compensado":{"pos":"a","pol":"0.25","std":"0.0"},"competición atlética":{"pos":"n","pol":"0.25","std":"0.0"},"competir":{"pos":"v","pol":"0.25","std":"0.0"},"complemento agente":{"pos":"n","pol":"0.25","std":"0.0"},"complemento indirecto":{"pos":"n","pol":"0.25","std":"0.0"},"componer espondeos":{"pos":"v","pol":"0.25","std":"0.0"},"composición literaria":{"pos":"n","pol":"0.25","std":"0.0"},"comprador":{"pos":"n","pol":"0.25","std":"0.177"},"compresibilidad":{"pos":"n","pol":"0.25","std":"0.0"},"computador":{"pos":"n","pol":"0.25","std":"0.0"},"comunidad religiosa":{"pos":"n","pol":"0.25","std":"0.0"},"con gran placer":{"pos":"r","pol":"0.25","std":"0.0"},"concebible":{"pos":"a","pol":"0.25","std":"0.0"},"concertar":{"pos":"v","pol":"0.25","std":"0.177"},"concertarse":{"pos":"v","pol":"0.25","std":"0.0"},"concienciar":{"pos":"v","pol":"0.25","std":"0.0"},"conclave":{"pos":"n","pol":"0.25","std":"0.0"},"concluido":{"pos":"a","pol":"0.25","std":"0.0"},"concluirse":{"pos":"v","pol":"0.25","std":"0.0"},"concurso atlético":{"pos":"n","pol":"0.25","std":"0.0"},"concéntrico":{"pos":"a","pol":"0.25","std":"0.0"},"condensado":{"pos":"a","pol":"0.25","std":"0.0"},"condensador eléctrico":{"pos":"n","pol":"0.25","std":"0.0"},"condicional":{"pos":"a","pol":"0.25","std":"0.0"},"condilion":{"pos":"n","pol":"0.25","std":"0.0"},"confeccionar rápidamente":{"pos":"v","pol":"0.25","std":"0.0"},"confederado":{"pos":"a","pol":"0.25","std":"0.354"},"confesado":{"pos":"a","pol":"0.25","std":"0.0"},"confirmación":{"pos":"n","pol":"0.25","std":"0.094"},"confirmado":{"pos":"a","pol":"0.25","std":"0.0"},"confortablemente":{"pos":"r","pol":"0.25","std":"0.177"},"confraternización":{"pos":"n","pol":"0.25","std":"0.0"},"congeniar":{"pos":"v","pol":"0.25","std":"0.217"},"conglomerado":{"pos":"a","pol":"0.25","std":"0.0"},"conjuntivo":{"pos":"a","pol":"0.25","std":"0.0"},"connatural":{"pos":"a","pol":"0.25","std":"0.265"},"connotativo":{"pos":"a","pol":"0.25","std":"0.0"},"conocida":{"pos":"n","pol":"0.25","std":"0.0"},"conocimiento científico":{"pos":"n","pol":"0.25","std":"0.0"},"conquista sexual":{"pos":"n","pol":"0.25","std":"0.0"},"conscripción":{"pos":"n","pol":"0.25","std":"0.0"},"consejera":{"pos":"n","pol":"0.25","std":"0.177"},"conservatorio":{"pos":"n","pol":"0.25","std":"0.177"},"considerable":{"pos":"a","pol":"0.25","std":"0.0"},"consistencia":{"pos":"n","pol":"0.25","std":"0.354"},"consolador":{"pos":"a","pol":"0.25","std":"0.0"},"consolidador":{"pos":"a","pol":"0.25","std":"0.265"},"consonante africada":{"pos":"n","pol":"0.25","std":"0.0"},"constreñirse":{"pos":"v","pol":"0.25","std":"0.0"},"constringente":{"pos":"a","pol":"0.25","std":"0.0"},"construir un desembarcadero":{"pos":"v","pol":"0.25","std":"0.0"},"consuelda":{"pos":"n","pol":"0.25","std":"0.0"},"consultivo":{"pos":"a","pol":"0.25","std":"0.0"},"consultor en dirección de empresas":{"pos":"n","pol":"0.25","std":"0.0"},"consumidor":{"pos":"n","pol":"0.25","std":"0.0"},"contornar":{"pos":"v","pol":"0.25","std":"0.0"},"contraejemplo":{"pos":"n","pol":"0.25","std":"0.0"},"contraer nupcias":{"pos":"v","pol":"0.25","std":"0.0"},"contrafirmar":{"pos":"v","pol":"0.25","std":"0.0"},"contrarréplica":{"pos":"n","pol":"0.25","std":"0.0"},"contraste BOLD":{"pos":"n","pol":"0.25","std":"0.0"},"contrastivo":{"pos":"a","pol":"0.25","std":"0.0"},"contrasubversión":{"pos":"n","pol":"0.25","std":"0.0"},"contrato aleatorio":{"pos":"n","pol":"0.25","std":"0.0"},"contrato bilateral":{"pos":"n","pol":"0.25","std":"0.0"},"contrato condicional":{"pos":"n","pol":"0.25","std":"0.0"},"contrato de adhesión":{"pos":"n","pol":"0.25","std":"0.0"},"contrato de matrimonio":{"pos":"n","pol":"0.25","std":"0.0"},"contrato de seguro":{"pos":"n","pol":"0.25","std":"0.0"},"contrato matrimonial":{"pos":"n","pol":"0.25","std":"0.0"},"contrato prematrimonial":{"pos":"n","pol":"0.25","std":"0.0"},"contraído":{"pos":"a","pol":"0.25","std":"0.0"},"controlado":{"pos":"a","pol":"0.25","std":"0.0"},"controvertido":{"pos":"a","pol":"0.25","std":"0.125"},"contráctil":{"pos":"a","pol":"0.25","std":"0.0"},"convalecer":{"pos":"v","pol":"0.25","std":"0.088"},"conveniencia":{"pos":"n","pol":"0.25","std":"0.112"},"convenio":{"pos":"n","pol":"0.25","std":"0.088"},"conversador":{"pos":"n","pol":"0.25","std":"0.0"},"converso":{"pos":"n","pol":"0.25","std":"0.0"},"convertibilidad":{"pos":"n","pol":"0.25","std":"0.0"},"cooperador":{"pos":"a","pol":"0.25","std":"0.0"},"coordinación":{"pos":"n","pol":"0.25","std":"0.347"},"coordinante":{"pos":"a","pol":"0.25","std":"0.0"},"copiosamente":{"pos":"r","pol":"0.25","std":"0.0"},"copérnico":{"pos":"a","pol":"0.25","std":"0.0"},"coqueteo":{"pos":"n","pol":"0.25","std":"0.0"},"coreido":{"pos":"n","pol":"0.25","std":"0.0"},"coronión":{"pos":"n","pol":"0.25","std":"0.0"},"corporativismo":{"pos":"n","pol":"0.25","std":"0.0"},"corporativo":{"pos":"a","pol":"0.25","std":"0.26"},"corpóreo":{"pos":"a","pol":"0.25","std":"0.0"},"correccional":{"pos":"a","pol":"-0.25","std":"0.0"},"corrección":{"pos":"n","pol":"0.25","std":"0.295"},"corregir":{"pos":"v","pol":"0.25","std":"0.303"},"correlativo":{"pos":"a","pol":"0.25","std":"0.177"},"correr libre":{"pos":"v","pol":"0.25","std":"0.0"},"cortapisa":{"pos":"n","pol":"0.25","std":"0.0"},"cortar tela":{"pos":"v","pol":"0.25","std":"0.0"},"corticalmente":{"pos":"r","pol":"0.25","std":"0.0"},"corvo":{"pos":"a","pol":"0.25","std":"0.0"},"corán":{"pos":"n","pol":"0.25","std":"0.0"},"cosa nostra":{"pos":"n","pol":"0.25","std":"0.0"},"cosido":{"pos":"a","pol":"0.25","std":"0.0"},"cosificación":{"pos":"n","pol":"0.25","std":"0.177"},"cosmonave":{"pos":"n","pol":"0.25","std":"0.0"},"costilla verdadera":{"pos":"n","pol":"0.25","std":"0.0"},"covarianza":{"pos":"n","pol":"0.25","std":"0.0"},"crapuloso":{"pos":"a","pol":"0.25","std":"0.0"},"crearse":{"pos":"v","pol":"0.25","std":"0.0"},"creencia":{"pos":"n","pol":"0.25","std":"0.191"},"crepado":{"pos":"a","pol":"0.25","std":"0.0"},"crepitación":{"pos":"n","pol":"0.25","std":"0.0"},"creyente practicante":{"pos":"n","pol":"0.25","std":"0.0"},"criptográfico":{"pos":"n","pol":"0.25","std":"0.0"},"criptófito":{"pos":"n","pol":"0.25","std":"0.0"},"cristal veneciano":{"pos":"n","pol":"0.25","std":"0.0"},"cristalino":{"pos":"n","pol":"0.25","std":"0.0"},"criterio selectivo":{"pos":"n","pol":"0.25","std":"0.0"},"croar":{"pos":"v","pol":"0.25","std":"0.0"},"cronológicamente":{"pos":"r","pol":"0.25","std":"0.0"},"cronógrafo":{"pos":"n","pol":"0.25","std":"0.0"},"croquet":{"pos":"n","pol":"0.25","std":"0.0"},"cruciforme":{"pos":"a","pol":"0.25","std":"0.0"},"cruzado":{"pos":"n","pol":"0.25","std":"0.0"},"cualidad maternal":{"pos":"n","pol":"0.25","std":"0.0"},"cualidad paternal":{"pos":"n","pol":"0.25","std":"0.0"},"cuark":{"pos":"n","pol":"0.25","std":"0.0"},"cubierto":{"pos":"n","pol":"0.25","std":"0.0"},"cubierto completo":{"pos":"n","pol":"0.25","std":"0.0"},"cubierto de trastos":{"pos":"r","pol":"0.25","std":"0.0"},"cuca":{"pos":"n","pol":"0.25","std":"0.0"},"cucamonas":{"pos":"n","pol":"0.25","std":"0.0"},"cuchillo de monte":{"pos":"n","pol":"0.25","std":"0.0"},"cuchufleta":{"pos":"n","pol":"0.25","std":"0.0"},"cucú":{"pos":"n","pol":"0.25","std":"0.0"},"cuenta de ahorro":{"pos":"n","pol":"0.25","std":"0.0"},"cuenta de ahorros":{"pos":"n","pol":"0.25","std":"0.0"},"cuenta inactiva":{"pos":"n","pol":"0.25","std":"0.0"},"cuerpo de ejército":{"pos":"n","pol":"0.25","std":"0.0"},"cuidados":{"pos":"n","pol":"0.25","std":"0.0"},"cultista":{"pos":"n","pol":"0.25","std":"0.0"},"cura":{"pos":"n","pol":"0.25","std":"0.289"},"curación":{"pos":"n","pol":"0.25","std":"0.265"},"curarse":{"pos":"v","pol":"0.25","std":"0.265"},"curculiónidos":{"pos":"n","pol":"0.25","std":"0.0"},"cursiva":{"pos":"a","pol":"0.25","std":"0.0"},"cursor":{"pos":"n","pol":"0.25","std":"0.0"},"curvado":{"pos":"a","pol":"0.25","std":"0.0"},"custodio":{"pos":"n","pol":"0.25","std":"0.0"},"cuñado":{"pos":"n","pol":"0.25","std":"0.0"},"cámara polaroid":{"pos":"n","pol":"0.25","std":"0.0"},"cápsula espacial":{"pos":"n","pol":"0.25","std":"0.0"},"cártel":{"pos":"n","pol":"0.25","std":"0.0"},"célula de Weston":{"pos":"n","pol":"0.25","std":"0.0"},"célula de cadmio":{"pos":"n","pol":"0.25","std":"0.0"},"cíclopes":{"pos":"n","pol":"0.25","std":"0.0"},"código secreto":{"pos":"n","pol":"0.25","std":"0.0"},"cómic":{"pos":"n","pol":"0.25","std":"0.0"},"cónclave":{"pos":"n","pol":"0.25","std":"0.0"},"dadaísmo":{"pos":"n","pol":"0.25","std":"0.0"},"daltoniano":{"pos":"a","pol":"0.25","std":"0.0"},"daltónico":{"pos":"a","pol":"0.25","std":"0.0"},"dama de noche":{"pos":"n","pol":"0.25","std":"0.0"},"danza de la lluvia":{"pos":"n","pol":"0.25","std":"0.0"},"danza del sol":{"pos":"n","pol":"0.25","std":"0.0"},"danza interpretativa":{"pos":"n","pol":"0.25","std":"0.0"},"dar a":{"pos":"v","pol":"0.25","std":"0.0"},"dar de desayunar":{"pos":"v","pol":"0.25","std":"0.0"},"dar el desayuno":{"pos":"v","pol":"0.25","std":"0.0"},"dar el hacha":{"pos":"v","pol":"0.25","std":"0.0"},"dar en el blanco":{"pos":"v","pol":"0.25","std":"0.0"},"dar largas caminatas":{"pos":"v","pol":"0.25","std":"0.0"},"dar llaves":{"pos":"v","pol":"0.25","std":"0.0"},"dar trato de favor":{"pos":"v","pol":"0.25","std":"0.0"},"dar un manotazo":{"pos":"v","pol":"0.25","std":"0.0"},"dar una permanencia":{"pos":"v","pol":"0.25","std":"0.0"},"dar una visa":{"pos":"v","pol":"0.25","std":"0.0"},"darse cuenta":{"pos":"v","pol":"0.25","std":"0.0"},"datable":{"pos":"a","pol":"0.25","std":"0.0"},"de barrido":{"pos":"a","pol":"0.25","std":"0.0"},"de carga":{"pos":"a","pol":"0.25","std":"0.0"},"de facto":{"pos":"a","pol":"0.25","std":"0.0"},"de paso":{"pos":"r","pol":"0.25","std":"0.0"},"de primos":{"pos":"a","pol":"0.25","std":"0.0"},"deber noble":{"pos":"n","pol":"0.25","std":"0.0"},"decadente":{"pos":"a","pol":"0.25","std":"0.0"},"decantación":{"pos":"n","pol":"0.25","std":"0.0"},"dechado":{"pos":"n","pol":"0.25","std":"0.26"},"decimal":{"pos":"a","pol":"0.25","std":"0.0"},"decisivo":{"pos":"a","pol":"0.25","std":"0.102"},"declaración discreta":{"pos":"n","pol":"0.25","std":"0.0"},"declaración rectificatoria":{"pos":"n","pol":"0.25","std":"0.0"},"decorativo":{"pos":"a","pol":"0.25","std":"0.0"},"decrescendo":{"pos":"n","pol":"0.25","std":"0.0"},"decretado":{"pos":"a","pol":"0.25","std":"0.0"},"deducirse":{"pos":"v","pol":"0.25","std":"0.0"},"defensor":{"pos":"a","pol":"0.25","std":"0.0"},"deferencia":{"pos":"n","pol":"0.25","std":"0.072"},"deforestación":{"pos":"n","pol":"0.25","std":"0.0"},"deidad hindú":{"pos":"n","pol":"0.25","std":"0.0"},"dejar claro":{"pos":"v","pol":"0.25","std":"0.0"},"del hipotálamo":{"pos":"r","pol":"0.25","std":"0.0"},"delicuescente":{"pos":"a","pol":"0.25","std":"0.0"},"delimitado":{"pos":"a","pol":"0.25","std":"0.0"},"demulcente":{"pos":"a","pol":"0.25","std":"0.0"},"demótico":{"pos":"a","pol":"0.25","std":"0.177"},"denominador común":{"pos":"n","pol":"0.25","std":"0.0"},"densidad relativa":{"pos":"n","pol":"0.25","std":"0.0"},"dentudo":{"pos":"a","pol":"0.25","std":"0.0"},"dentón":{"pos":"a","pol":"0.25","std":"0.0"},"departamento de servicios":{"pos":"n","pol":"0.25","std":"0.0"},"depilado":{"pos":"a","pol":"0.25","std":"0.0"},"depravar":{"pos":"v","pol":"0.25","std":"0.0"},"derecho a la vida":{"pos":"n","pol":"0.25","std":"0.0"},"derecho al voto":{"pos":"n","pol":"0.25","std":"0.0"},"derechos":{"pos":"n","pol":"0.25","std":"0.0"},"derechos civiles":{"pos":"n","pol":"0.25","std":"0.0"},"derechos de propiedad":{"pos":"n","pol":"0.25","std":"0.0"},"derechoso":{"pos":"a","pol":"0.25","std":"0.0"},"derivacional":{"pos":"a","pol":"0.25","std":"0.0"},"deriverse":{"pos":"v","pol":"0.25","std":"0.0"},"desaclopar":{"pos":"v","pol":"0.25","std":"0.0"},"desarticular":{"pos":"v","pol":"0.25","std":"0.354"},"desatrancado":{"pos":"a","pol":"0.25","std":"0.0"},"desbalance":{"pos":"n","pol":"0.25","std":"0.0"},"desbordado":{"pos":"a","pol":"0.25","std":"0.0"},"descambio":{"pos":"n","pol":"0.25","std":"0.0"},"descargarse":{"pos":"v","pol":"0.25","std":"0.0"},"descartado":{"pos":"a","pol":"0.25","std":"0.0"},"descodificar":{"pos":"v","pol":"0.25","std":"0.0"},"descolonizar":{"pos":"v","pol":"0.25","std":"0.0"},"descomprimir":{"pos":"v","pol":"0.25","std":"0.265"},"descomunal":{"pos":"a","pol":"0.25","std":"0.088"},"descongelar":{"pos":"v","pol":"0.25","std":"0.0"},"descontrol":{"pos":"n","pol":"0.25","std":"0.0"},"descorchar":{"pos":"v","pol":"0.25","std":"0.0"},"descuello":{"pos":"n","pol":"0.25","std":"0.0"},"descuidarse":{"pos":"v","pol":"0.25","std":"0.0"},"desecado":{"pos":"a","pol":"0.25","std":"0.0"},"desechado":{"pos":"a","pol":"0.25","std":"0.0"},"desengancharse":{"pos":"v","pol":"0.25","std":"0.0"},"desenvolverse":{"pos":"v","pol":"0.25","std":"0.0"},"desespero":{"pos":"n","pol":"0.25","std":"0.0"},"desforestación":{"pos":"n","pol":"0.25","std":"0.0"},"desglosar":{"pos":"v","pol":"0.25","std":"0.0"},"deshacerse de":{"pos":"v","pol":"0.25","std":"0.0"},"desheredar":{"pos":"v","pol":"0.25","std":"0.0"},"deshielado":{"pos":"a","pol":"0.25","std":"0.0"},"desmedido":{"pos":"a","pol":"0.25","std":"0.0"},"desmovilización":{"pos":"n","pol":"0.25","std":"0.0"},"desnaturalizar":{"pos":"v","pol":"0.25","std":"0.0"},"despegado":{"pos":"a","pol":"0.25","std":"0.442"},"despenalización":{"pos":"n","pol":"0.25","std":"0.0"},"despeño":{"pos":"n","pol":"0.25","std":"0.0"},"desplazado":{"pos":"n","pol":"0.25","std":"0.0"},"despoblación forestal":{"pos":"n","pol":"0.25","std":"0.0"},"destinado":{"pos":"a","pol":"0.25","std":"0.0"},"destreza manual":{"pos":"n","pol":"0.25","std":"0.0"},"desvaloración":{"pos":"n","pol":"0.25","std":"0.0"},"desvincular":{"pos":"v","pol":"0.25","std":"0.0"},"detallar":{"pos":"v","pol":"0.25","std":"0.0"},"detalles":{"pos":"n","pol":"0.25","std":"0.0"},"detectado":{"pos":"a","pol":"0.25","std":"0.0"},"detergente para lavadoras":{"pos":"n","pol":"0.25","std":"0.0"},"detergente para lavavajillas":{"pos":"n","pol":"0.25","std":"0.0"},"determinación incansable":{"pos":"n","pol":"0.25","std":"0.0"},"deuteranopía":{"pos":"n","pol":"0.25","std":"0.0"},"diacrítico":{"pos":"n","pol":"0.25","std":"0.0"},"dialéctico":{"pos":"n","pol":"0.25","std":"0.0"},"diapiro":{"pos":"n","pol":"0.25","std":"0.0"},"dibujo técnico":{"pos":"n","pol":"0.25","std":"0.0"},"diccionario electrónico":{"pos":"n","pol":"0.25","std":"0.0"},"dicho":{"pos":"n","pol":"0.25","std":"0.0"},"dicótomo":{"pos":"a","pol":"0.25","std":"0.0"},"didáctico":{"pos":"a","pol":"0.25","std":"0.0"},"dietista":{"pos":"n","pol":"0.25","std":"0.0"},"diferenciable":{"pos":"a","pol":"0.25","std":"0.265"},"diflunisal":{"pos":"n","pol":"0.25","std":"0.0"},"difusor":{"pos":"a","pol":"0.25","std":"0.0"},"dilatado":{"pos":"a","pol":"0.25","std":"0.0"},"diminuendo":{"pos":"n","pol":"0.25","std":"0.0"},"dinero de San Pedro":{"pos":"n","pol":"0.25","std":"0.0"},"dinero sucio":{"pos":"n","pol":"0.25","std":"0.0"},"dios del Mar":{"pos":"n","pol":"0.25","std":"0.0"},"diploma":{"pos":"n","pol":"0.25","std":"0.0"},"diplomado en enfermería":{"pos":"n","pol":"0.25","std":"0.0"},"diplomatura":{"pos":"n","pol":"0.25","std":"0.0"},"diptongo":{"pos":"n","pol":"0.25","std":"0.0"},"dirigente":{"pos":"a","pol":"0.25","std":"0.0"},"dirk":{"pos":"n","pol":"0.25","std":"0.0"},"discrecional":{"pos":"a","pol":"0.25","std":"0.088"},"disfrute":{"pos":"n","pol":"0.25","std":"0.0"},"disimulado":{"pos":"a","pol":"0.25","std":"0.0"},"disjunto":{"pos":"a","pol":"0.25","std":"0.0"},"dispar":{"pos":"a","pol":"0.25","std":"0.177"},"dispersor":{"pos":"a","pol":"0.25","std":"0.0"},"disponerse":{"pos":"v","pol":"0.25","std":"0.0"},"distanciado":{"pos":"a","pol":"0.25","std":"0.0"},"distintividad":{"pos":"n","pol":"0.25","std":"0.0"},"distribución binomial":{"pos":"n","pol":"0.25","std":"0.0"},"distribuidor":{"pos":"a","pol":"0.25","std":"0.0"},"disyunto":{"pos":"a","pol":"0.25","std":"0.0"},"divinidad hindú":{"pos":"n","pol":"0.25","std":"0.0"},"divisorio":{"pos":"a","pol":"0.25","std":"0.0"},"divorcio":{"pos":"n","pol":"0.25","std":"0.0"},"doble negación":{"pos":"n","pol":"0.25","std":"0.088"},"doctor en educación":{"pos":"n","pol":"0.25","std":"0.0"},"doctor en investigación":{"pos":"n","pol":"0.25","std":"0.0"},"doctorado honoris causa":{"pos":"n","pol":"0.25","std":"0.0"},"doctrina religiosa":{"pos":"n","pol":"0.25","std":"0.0"},"doctrina teológica":{"pos":"n","pol":"0.25","std":"0.0"},"doctrinario":{"pos":"a","pol":"0.25","std":"0.0"},"documentación":{"pos":"n","pol":"0.25","std":"0.177"},"documentar":{"pos":"v","pol":"0.25","std":"0.177"},"domesticación":{"pos":"n","pol":"0.25","std":"0.265"},"domiciliar":{"pos":"v","pol":"0.25","std":"0.0"},"dominio absoluto":{"pos":"n","pol":"0.25","std":"0.0"},"doo wop":{"pos":"n","pol":"0.25","std":"0.0"},"doparse":{"pos":"v","pol":"0.25","std":"0.0"},"dotar":{"pos":"v","pol":"0.25","std":"0.217"},"doxología":{"pos":"n","pol":"0.25","std":"0.0"},"dracunculoideos":{"pos":"n","pol":"0.25","std":"0.0"},"drama musical":{"pos":"n","pol":"0.25","std":"0.0"},"drenaje":{"pos":"n","pol":"0.25","std":"0.0"},"drive-in":{"pos":"n","pol":"0.25","std":"0.0"},"droga dura":{"pos":"n","pol":"0.25","std":"0.0"},"drogado":{"pos":"a","pol":"0.25","std":"0.0"},"dueño de la casa":{"pos":"n","pol":"0.25","std":"0.0"},"duodecimal":{"pos":"a","pol":"0.25","std":"0.0"},"duque":{"pos":"n","pol":"0.25","std":"0.0"},"duración del servicio":{"pos":"n","pol":"0.25","std":"0.0"},"día solar":{"pos":"n","pol":"0.25","std":"0.0"},"dúmper":{"pos":"n","pol":"0.25","std":"0.0"},"echarse el pollo":{"pos":"v","pol":"0.25","std":"0.0"},"eclecticismo":{"pos":"n","pol":"0.25","std":"0.0"},"eco del eco":{"pos":"n","pol":"0.25","std":"0.0"},"ecoico":{"pos":"a","pol":"0.25","std":"0.177"},"ecológicamente":{"pos":"r","pol":"0.25","std":"0.0"},"ecosistema":{"pos":"n","pol":"0.25","std":"0.0"},"educación":{"pos":"n","pol":"0.25","std":"0.129"},"educación especial":{"pos":"n","pol":"0.25","std":"0.0"},"educación superior":{"pos":"n","pol":"0.25","std":"0.0"},"edulcorar":{"pos":"v","pol":"0.25","std":"0.088"},"eferente":{"pos":"a","pol":"0.25","std":"0.0"},"eje de mando":{"pos":"n","pol":"0.25","std":"0.0"},"eje motor":{"pos":"n","pol":"0.25","std":"0.0"},"ejecutivo":{"pos":"a","pol":"0.25","std":"0.0"},"el abominable hombre de las nieves":{"pos":"n","pol":"0.25","std":"0.0"},"elación":{"pos":"n","pol":"0.25","std":"0.0"},"electivo":{"pos":"a","pol":"0.25","std":"0.0"},"electrificación":{"pos":"n","pol":"0.25","std":"0.0"},"electrizante":{"pos":"a","pol":"0.25","std":"0.144"},"electrodoméstico":{"pos":"n","pol":"0.25","std":"0.0"},"electroforesis":{"pos":"n","pol":"0.25","std":"0.0"},"eligibilidad":{"pos":"n","pol":"0.25","std":"0.0"},"eliminable":{"pos":"a","pol":"0.25","std":"0.0"},"elite":{"pos":"n","pol":"0.25","std":"0.0"},"elitismo":{"pos":"n","pol":"0.25","std":"0.0"},"elucidar":{"pos":"v","pol":"0.25","std":"0.088"},"emancipar":{"pos":"v","pol":"0.25","std":"0.177"},"embelesamiento":{"pos":"n","pol":"0.25","std":"0.0"},"embellecer lo perfecto":{"pos":"v","pol":"0.25","std":"0.0"},"embrujado":{"pos":"a","pol":"0.25","std":"0.0"},"emir":{"pos":"n","pol":"0.25","std":"0.0"},"emisión termal":{"pos":"n","pol":"0.25","std":"0.0"},"emoliente":{"pos":"a","pol":"0.25","std":"0.0"},"emotividad":{"pos":"n","pol":"0.25","std":"0.0"},"empalagar":{"pos":"v","pol":"0.25","std":"0.177"},"empantanar":{"pos":"v","pol":"0.25","std":"0.0"},"empatado":{"pos":"a","pol":"0.25","std":"0.0"},"empatizar":{"pos":"v","pol":"0.25","std":"0.0"},"empenachado":{"pos":"a","pol":"0.25","std":"0.0"},"empequeñecido":{"pos":"a","pol":"0.25","std":"0.0"},"emperejilar":{"pos":"v","pol":"0.25","std":"0.0"},"empeñado":{"pos":"a","pol":"0.25","std":"0.0"},"empiricismo":{"pos":"n","pol":"0.25","std":"0.0"},"empollado":{"pos":"a","pol":"0.25","std":"0.0"},"empresa de contabilidad":{"pos":"n","pol":"0.25","std":"0.0"},"empresa de subastas":{"pos":"n","pol":"0.25","std":"0.0"},"empírico":{"pos":"a","pol":"0.25","std":"0.0"},"emulgente":{"pos":"a","pol":"0.25","std":"0.0"},"en compañía":{"pos":"r","pol":"0.25","std":"0.0"},"en flecha":{"pos":"a","pol":"0.25","std":"0.0"},"en la diana":{"pos":"r","pol":"0.25","std":"0.0"},"en la onda":{"pos":"n","pol":"0.25","std":"0.0"},"en la práctica":{"pos":"r","pol":"0.25","std":"0.0"},"en realidad":{"pos":"r","pol":"0.25","std":"0.0"},"en rojo":{"pos":"n","pol":"0.25","std":"0.0"},"en términos biológicos":{"pos":"r","pol":"0.25","std":"0.0"},"en términos geométricos":{"pos":"r","pol":"0.25","std":"0.0"},"en términos gráficos":{"pos":"r","pol":"0.25","std":"0.0"},"en términos patológicos":{"pos":"r","pol":"0.25","std":"0.0"},"en términos sexuales":{"pos":"r","pol":"0.25","std":"0.0"},"en términos sociobiológicos":{"pos":"r","pol":"0.25","std":"0.0"},"en términos sociolingüísticos":{"pos":"r","pol":"0.25","std":"0.0"},"en uso":{"pos":"a","pol":"0.25","std":"0.0"},"enamorado":{"pos":"n","pol":"0.25","std":"0.0"},"enanez":{"pos":"n","pol":"0.25","std":"0.0"},"enano":{"pos":"a","pol":"0.25","std":"0.0"},"encaje de aplicación":{"pos":"n","pol":"0.25","std":"0.0"},"encarnado":{"pos":"a","pol":"0.25","std":"0.063"},"encasquillar":{"pos":"v","pol":"0.25","std":"0.0"},"encerado":{"pos":"a","pol":"0.25","std":"0.0"},"enciclopedia":{"pos":"n","pol":"0.25","std":"0.0"},"enciclopedista":{"pos":"n","pol":"0.25","std":"0.0"},"encogido":{"pos":"a","pol":"0.25","std":"0.0"},"encomendar":{"pos":"v","pol":"0.25","std":"0.191"},"encortinado":{"pos":"a","pol":"0.25","std":"0.0"},"encortinar":{"pos":"v","pol":"0.25","std":"0.0"},"encuadernar":{"pos":"v","pol":"0.25","std":"0.0"},"encuentro multitudinario":{"pos":"n","pol":"0.25","std":"0.0"},"encumbramiento":{"pos":"n","pol":"0.25","std":"0.0"},"endoenergético":{"pos":"a","pol":"0.25","std":"0.0"},"endogamia":{"pos":"n","pol":"0.25","std":"0.177"},"endorsement":{"pos":"n","pol":"0.25","std":"0.0"},"endorso":{"pos":"n","pol":"0.25","std":"0.0"},"endosante":{"pos":"n","pol":"0.25","std":"0.0"},"endoso":{"pos":"n","pol":"0.25","std":"0.0"},"endulzado":{"pos":"a","pol":"0.25","std":"0.0"},"endulzar":{"pos":"v","pol":"0.25","std":"0.088"},"enfadadizo":{"pos":"a","pol":"0.25","std":"0.0"},"enfortalecimiento":{"pos":"n","pol":"0.25","std":"0.0"},"engrosar":{"pos":"v","pol":"0.25","std":"0.265"},"engruesar":{"pos":"v","pol":"0.25","std":"0.265"},"engualdrapado":{"pos":"a","pol":"0.25","std":"0.0"},"enlazarse":{"pos":"v","pol":"0.25","std":"0.0"},"enmaderado":{"pos":"a","pol":"0.25","std":"0.0"},"enología":{"pos":"n","pol":"0.25","std":"0.0"},"enrielar":{"pos":"v","pol":"0.25","std":"0.0"},"ensanchador":{"pos":"n","pol":"0.25","std":"0.0"},"enseñanza":{"pos":"n","pol":"0.25","std":"0.177"},"enseñanza superior":{"pos":"n","pol":"0.25","std":"0.0"},"entallado":{"pos":"a","pol":"0.25","std":"0.0"},"enterar":{"pos":"v","pol":"0.25","std":"0.0"},"entidad física":{"pos":"n","pol":"0.25","std":"0.0"},"entono":{"pos":"n","pol":"0.25","std":"0.0"},"entorpecedor":{"pos":"a","pol":"0.25","std":"0.0"},"entreabierto":{"pos":"a","pol":"0.25","std":"0.0"},"entrenador":{"pos":"n","pol":"0.25","std":"0.0"},"entrenadora":{"pos":"n","pol":"0.25","std":"0.0"},"entretener":{"pos":"v","pol":"0.25","std":"0.213"},"entrevía estándar":{"pos":"n","pol":"0.25","std":"0.0"},"envalentonamiento":{"pos":"n","pol":"0.25","std":"0.0"},"enverdecer":{"pos":"v","pol":"0.25","std":"0.0"},"enverdecerse":{"pos":"v","pol":"0.25","std":"0.0"},"envigar":{"pos":"v","pol":"0.25","std":"0.0"},"eosinófilo":{"pos":"n","pol":"0.25","std":"0.0"},"epigrama":{"pos":"n","pol":"0.25","std":"0.0"},"epimórfico":{"pos":"a","pol":"0.25","std":"0.0"},"epinefrina":{"pos":"n","pol":"0.25","std":"0.0"},"epistemología":{"pos":"n","pol":"0.25","std":"0.0"},"equipo de defensa":{"pos":"n","pol":"0.25","std":"0.0"},"equipo de radioterapia":{"pos":"n","pol":"0.25","std":"0.0"},"equipotencial":{"pos":"a","pol":"0.25","std":"0.0"},"ergotropismo":{"pos":"n","pol":"0.25","std":"0.0"},"erinaceidos":{"pos":"n","pol":"0.25","std":"0.0"},"erogación":{"pos":"n","pol":"0.25","std":"0.0"},"erradicable":{"pos":"a","pol":"0.25","std":"0.0"},"error de hardware":{"pos":"n","pol":"0.25","std":"0.0"},"escanciador":{"pos":"n","pol":"0.25","std":"0.0"},"escanciano":{"pos":"n","pol":"0.25","std":"0.0"},"escarceo":{"pos":"n","pol":"0.25","std":"0.0"},"escorpiones":{"pos":"n","pol":"0.25","std":"0.0"},"escote imperio":{"pos":"n","pol":"0.25","std":"0.0"},"escritura fiduciaria":{"pos":"n","pol":"0.25","std":"0.0"},"escrupulosamente":{"pos":"r","pol":"0.25","std":"0.0"},"escuchar atentamente":{"pos":"v","pol":"0.25","std":"0.0"},"escuela de baile":{"pos":"n","pol":"0.25","std":"0.0"},"escuela de música":{"pos":"n","pol":"0.25","std":"0.0"},"escuela de pensamiento":{"pos":"n","pol":"0.25","std":"0.0"},"escuela pública":{"pos":"n","pol":"0.25","std":"0.0"},"esculpido":{"pos":"a","pol":"0.25","std":"0.088"},"escurridera":{"pos":"n","pol":"0.25","std":"0.0"},"escurridero":{"pos":"n","pol":"0.25","std":"0.0"},"escurridizo":{"pos":"a","pol":"0.25","std":"0.0"},"escénicamente":{"pos":"r","pol":"0.25","std":"0.0"},"esgrima":{"pos":"n","pol":"0.25","std":"0.265"},"esgrimista":{"pos":"n","pol":"0.25","std":"0.0"},"esotérico":{"pos":"a","pol":"0.25","std":"0.0"},"espacial":{"pos":"a","pol":"0.25","std":"0.0"},"espadachín":{"pos":"n","pol":"0.25","std":"0.0"},"espaldar":{"pos":"n","pol":"0.25","std":"0.0"},"espaldera":{"pos":"n","pol":"0.25","std":"0.0"},"espaldudo":{"pos":"a","pol":"0.25","std":"0.0"},"esparcido":{"pos":"a","pol":"0.25","std":"0.0"},"espatulado":{"pos":"a","pol":"0.25","std":"0.0"},"especializar":{"pos":"v","pol":"0.25","std":"0.0"},"especiero":{"pos":"n","pol":"0.25","std":"0.0"},"espectrofotómetro":{"pos":"n","pol":"0.25","std":"0.0"},"espejito":{"pos":"n","pol":"0.25","std":"0.0"},"espesado":{"pos":"a","pol":"0.25","std":"0.177"},"espiritual negro":{"pos":"n","pol":"0.25","std":"0.0"},"esponjoso":{"pos":"a","pol":"0.25","std":"0.072"},"esposar":{"pos":"v","pol":"0.25","std":"0.0"},"espíritu de cuerpo":{"pos":"n","pol":"0.25","std":"0.0"},"espíritu de equipo":{"pos":"n","pol":"0.25","std":"0.0"},"estabilizado":{"pos":"a","pol":"0.25","std":"0.0"},"estable":{"pos":"a","pol":"0.25","std":"0.182"},"estabular":{"pos":"v","pol":"0.25","std":"0.0"},"estado de guerra":{"pos":"n","pol":"0.25","std":"0.0"},"estado libre":{"pos":"n","pol":"0.25","std":"0.0"},"estadísticamente":{"pos":"r","pol":"0.25","std":"0.0"},"estampido":{"pos":"n","pol":"0.25","std":"0.0"},"estampido sónico":{"pos":"n","pol":"0.25","std":"0.0"},"estampilla":{"pos":"n","pol":"0.25","std":"0.0"},"estandarizar":{"pos":"v","pol":"0.25","std":"0.0"},"estandarte":{"pos":"n","pol":"0.25","std":"0.0"},"estante":{"pos":"n","pol":"0.25","std":"0.0"},"estar activo":{"pos":"v","pol":"0.25","std":"0.0"},"estar despierto":{"pos":"v","pol":"0.25","std":"0.088"},"estar lleno":{"pos":"v","pol":"0.25","std":"0.0"},"estar seguro de":{"pos":"v","pol":"0.25","std":"0.0"},"estatuario":{"pos":"a","pol":"0.25","std":"0.0"},"estatus de antigüedad":{"pos":"n","pol":"0.25","std":"0.0"},"estatus superior":{"pos":"n","pol":"0.25","std":"0.0"},"estelar":{"pos":"a","pol":"0.25","std":"0.354"},"estentóreo":{"pos":"a","pol":"0.25","std":"0.0"},"estepa":{"pos":"n","pol":"0.25","std":"0.0"},"esteticién":{"pos":"n","pol":"0.25","std":"0.0"},"esthéticienne":{"pos":"n","pol":"0.25","std":"0.0"},"estilizado":{"pos":"a","pol":"0.25","std":"0.0"},"estilo arquitectónico":{"pos":"n","pol":"0.25","std":"0.0"},"estilo libre":{"pos":"n","pol":"0.25","std":"0.0"},"estimador":{"pos":"n","pol":"0.25","std":"0.0"},"estipulado":{"pos":"a","pol":"0.25","std":"0.0"},"estomatópodo":{"pos":"n","pol":"0.25","std":"0.0"},"estrella guía":{"pos":"n","pol":"0.25","std":"0.0"},"estribera":{"pos":"n","pol":"0.25","std":"0.0"},"estructurar":{"pos":"v","pol":"0.25","std":"0.0"},"estudios literarios":{"pos":"n","pol":"0.25","std":"0.0"},"estupefacto":{"pos":"a","pol":"0.25","std":"0.0"},"eterno enamorado":{"pos":"n","pol":"0.25","std":"0.0"},"etiquetado":{"pos":"a","pol":"0.25","std":"0.0"},"etnocentrismo":{"pos":"n","pol":"0.25","std":"0.0"},"etnología":{"pos":"n","pol":"0.25","std":"0.0"},"etosuximida":{"pos":"n","pol":"0.25","std":"0.0"},"eugénico":{"pos":"a","pol":"0.25","std":"0.0"},"euritmia":{"pos":"n","pol":"0.25","std":"0.0"},"evadir":{"pos":"v","pol":"0.25","std":"0.0"},"evaluación crítica":{"pos":"n","pol":"0.25","std":"0.0"},"evaporable":{"pos":"a","pol":"0.25","std":"0.0"},"evento fortuito":{"pos":"n","pol":"0.25","std":"0.0"},"evento social":{"pos":"n","pol":"0.25","std":"0.0"},"evitación":{"pos":"n","pol":"0.25","std":"0.088"},"exaltado":{"pos":"a","pol":"0.25","std":"0.0"},"examinar animales":{"pos":"v","pol":"0.25","std":"0.0"},"exclamativo":{"pos":"a","pol":"0.25","std":"0.0"},"exclamatorio":{"pos":"a","pol":"0.25","std":"0.0"},"exclusividad":{"pos":"n","pol":"0.25","std":"0.0"},"excusable":{"pos":"a","pol":"0.25","std":"0.0"},"exiliado":{"pos":"n","pol":"0.25","std":"0.0"},"existencialismo":{"pos":"n","pol":"0.25","std":"0.0"},"existir":{"pos":"v","pol":"0.25","std":"0.228"},"exoenergético":{"pos":"a","pol":"0.25","std":"0.0"},"expandido":{"pos":"a","pol":"0.25","std":"0.0"},"expansible":{"pos":"a","pol":"0.25","std":"0.0"},"expansión":{"pos":"n","pol":"0.25","std":"0.0"},"experiencial":{"pos":"a","pol":"0.25","std":"0.0"},"expiar":{"pos":"v","pol":"0.25","std":"0.0"},"exposímetro":{"pos":"n","pol":"0.25","std":"0.0"},"expresionismo abstracto":{"pos":"n","pol":"0.25","std":"0.0"},"express":{"pos":"n","pol":"0.25","std":"0.0"},"expurgado":{"pos":"a","pol":"0.25","std":"0.0"},"extensivo":{"pos":"a","pol":"0.25","std":"0.0"},"externalidad":{"pos":"n","pol":"0.25","std":"0.0"},"externar":{"pos":"v","pol":"0.25","std":"0.0"},"extinguible":{"pos":"a","pol":"0.25","std":"0.0"},"extra":{"pos":"r","pol":"0.25","std":"0.0"},"extramatrimonial":{"pos":"a","pol":"0.25","std":"0.0"},"f":{"pos":"n","pol":"0.25","std":"0.0"},"faceta":{"pos":"n","pol":"0.25","std":"0.0"},"factibilidad":{"pos":"n","pol":"0.25","std":"0.0"},"factor de disponibilidad":{"pos":"n","pol":"0.25","std":"0.0"},"factual":{"pos":"a","pol":"0.25","std":"0.265"},"factura del teléfono":{"pos":"n","pol":"0.25","std":"0.0"},"facultades":{"pos":"n","pol":"0.25","std":"0.0"},"facultativo":{"pos":"n","pol":"0.25","std":"0.0"},"faetón":{"pos":"n","pol":"0.25","std":"0.0"},"fajina":{"pos":"n","pol":"0.25","std":"0.0"},"falce":{"pos":"n","pol":"0.25","std":"0.0"},"falciforme":{"pos":"a","pol":"0.25","std":"0.0"},"falseado":{"pos":"a","pol":"0.25","std":"0.0"},"falsificar elecciones":{"pos":"v","pol":"0.25","std":"0.0"},"faltar a la palabra":{"pos":"v","pol":"0.25","std":"0.0"},"falócrata":{"pos":"n","pol":"0.25","std":"0.0"},"familia Bufonidae":{"pos":"n","pol":"0.25","std":"0.0"},"familia Crocodylidae":{"pos":"n","pol":"0.25","std":"0.0"},"familia Curculionidae":{"pos":"n","pol":"0.25","std":"0.0"},"familia Dracunculidae":{"pos":"n","pol":"0.25","std":"0.0"},"familia Erinaceidae":{"pos":"n","pol":"0.25","std":"0.0"},"familia Percidae":{"pos":"n","pol":"0.25","std":"0.0"},"familia Sepiidae":{"pos":"n","pol":"0.25","std":"0.0"},"familiarización":{"pos":"n","pol":"0.25","std":"0.0"},"fantasma":{"pos":"a","pol":"-0.25","std":"0.0"},"farde":{"pos":"n","pol":"0.25","std":"0.0"},"farmacocinética":{"pos":"n","pol":"0.25","std":"0.0"},"farmacológicamente":{"pos":"r","pol":"0.25","std":"0.0"},"fasiánido":{"pos":"n","pol":"0.25","std":"0.0"},"favor":{"pos":"n","pol":"0.25","std":"0.12"},"fechable":{"pos":"a","pol":"0.25","std":"0.0"},"fedelline":{"pos":"n","pol":"0.25","std":"0.0"},"felicidad absoluta":{"pos":"n","pol":"0.25","std":"0.0"},"fermento":{"pos":"n","pol":"0.25","std":"0.0"},"fervor":{"pos":"n","pol":"0.25","std":"0.26"},"festejar":{"pos":"v","pol":"0.25","std":"0.27"},"festividad  cristiana":{"pos":"n","pol":"0.25","std":"0.0"},"festividad cristiana":{"pos":"n","pol":"0.25","std":"0.0"},"festividad judía":{"pos":"n","pol":"0.25","std":"0.0"},"feudalismo":{"pos":"n","pol":"0.25","std":"0.0"},"fiesta":{"pos":"n","pol":"0.25","std":"0.144"},"figurado":{"pos":"a","pol":"0.25","std":"0.0"},"fijeza":{"pos":"n","pol":"0.25","std":"0.0"},"filial":{"pos":"a","pol":"0.25","std":"0.177"},"filosofía empírica":{"pos":"n","pol":"0.25","std":"0.0"},"financiado":{"pos":"a","pol":"0.25","std":"0.0"},"financiar":{"pos":"v","pol":"0.25","std":"0.0"},"finitud":{"pos":"n","pol":"0.25","std":"0.0"},"firmante":{"pos":"n","pol":"0.25","std":"0.0"},"flagrante":{"pos":"a","pol":"0.25","std":"0.0"},"flexión de pierna":{"pos":"n","pol":"0.25","std":"0.0"},"flexuoso":{"pos":"a","pol":"0.25","std":"0.0"},"flipado":{"pos":"a","pol":"0.25","std":"0.0"},"flirt":{"pos":"n","pol":"0.25","std":"0.0"},"flirteo":{"pos":"n","pol":"0.25","std":"0.0"},"floreado":{"pos":"a","pol":"0.25","std":"0.0"},"fogata":{"pos":"n","pol":"0.25","std":"0.0"},"fonación":{"pos":"n","pol":"0.25","std":"0.0"},"fondo de pensiones":{"pos":"n","pol":"0.25","std":"0.0"},"forma de hablar":{"pos":"n","pol":"0.25","std":"0.0"},"formalizar":{"pos":"v","pol":"0.25","std":"0.177"},"formulado":{"pos":"a","pol":"0.25","std":"0.0"},"forrado de madera":{"pos":"a","pol":"0.25","std":"0.0"},"fotoquímica":{"pos":"n","pol":"0.25","std":"0.0"},"fotosfera":{"pos":"n","pol":"0.25","std":"0.0"},"fotómetro":{"pos":"n","pol":"0.25","std":"0.0"},"foulard":{"pos":"n","pol":"0.25","std":"0.0"},"foxterrier":{"pos":"n","pol":"0.25","std":"0.0"},"fragante":{"pos":"a","pol":"0.25","std":"0.0"},"fraguar":{"pos":"v","pol":"0.25","std":"0.0"},"francófono":{"pos":"a","pol":"0.25","std":"0.0"},"franela":{"pos":"n","pol":"0.25","std":"0.0"},"franqueza":{"pos":"n","pol":"0.25","std":"0.2"},"franquicia":{"pos":"n","pol":"0.25","std":"0.0"},"fraseología":{"pos":"n","pol":"0.25","std":"0.0"},"fraternización":{"pos":"n","pol":"0.25","std":"0.0"},"frazada":{"pos":"n","pol":"0.25","std":"0.0"},"frecuente":{"pos":"a","pol":"0.25","std":"0.0"},"fuerza motriz":{"pos":"n","pol":"0.25","std":"0.0"},"fuerzas de seguridad":{"pos":"n","pol":"0.25","std":"0.0"},"fulgurar":{"pos":"v","pol":"0.25","std":"0.0"},"funcionario público":{"pos":"n","pol":"0.25","std":"0.0"},"fundación privada":{"pos":"n","pol":"0.25","std":"0.0"},"fundamentos":{"pos":"n","pol":"0.25","std":"0.0"},"fusiforme":{"pos":"a","pol":"0.25","std":"0.0"},"fusil de juguete":{"pos":"n","pol":"0.25","std":"0.0"},"gabela":{"pos":"n","pol":"0.25","std":"0.0"},"gafete":{"pos":"n","pol":"0.25","std":"0.0"},"gag":{"pos":"n","pol":"0.25","std":"0.0"},"galleta de pasas y nueces":{"pos":"n","pol":"0.25","std":"0.0"},"galleta de uvas pasas y nueces":{"pos":"n","pol":"0.25","std":"0.0"},"galvanómetro balístico":{"pos":"n","pol":"0.25","std":"0.0"},"gambito":{"pos":"n","pol":"0.25","std":"0.0"},"ganancias":{"pos":"n","pol":"0.25","std":"0.088"},"ganar neto":{"pos":"v","pol":"0.25","std":"0.0"},"ganoideos":{"pos":"n","pol":"0.25","std":"0.0"},"garantizador":{"pos":"n","pol":"0.25","std":"0.0"},"garla":{"pos":"n","pol":"0.25","std":"0.0"},"garrucha":{"pos":"n","pol":"0.25","std":"0.0"},"gasolinera":{"pos":"n","pol":"0.25","std":"0.0"},"gastos":{"pos":"n","pol":"0.25","std":"0.0"},"generativo":{"pos":"a","pol":"0.25","std":"0.0"},"genialidad":{"pos":"n","pol":"0.25","std":"0.0"},"gentil":{"pos":"a","pol":"0.25","std":"0.0"},"genus bacillus":{"pos":"n","pol":"0.25","std":"0.0"},"genus hyphantria":{"pos":"n","pol":"0.25","std":"0.0"},"genus ipomoea":{"pos":"n","pol":"0.25","std":"0.0"},"genus nomia":{"pos":"n","pol":"0.25","std":"0.0"},"genus pezophaps":{"pos":"n","pol":"0.25","std":"0.0"},"genus phthirius":{"pos":"n","pol":"0.25","std":"0.0"},"genus phthirus":{"pos":"n","pol":"0.25","std":"0.0"},"genus rattus":{"pos":"n","pol":"0.25","std":"0.0"},"genético":{"pos":"a","pol":"0.25","std":"0.0"},"geográficamente":{"pos":"r","pol":"0.25","std":"0.0"},"geológicamente":{"pos":"r","pol":"0.25","std":"0.0"},"geometría no-euclideana":{"pos":"n","pol":"0.25","std":"0.0"},"geométricamente":{"pos":"r","pol":"0.25","std":"0.0"},"geométrico":{"pos":"a","pol":"0.25","std":"0.0"},"geopolítica":{"pos":"n","pol":"0.25","std":"0.0"},"germanismo":{"pos":"n","pol":"0.25","std":"0.0"},"germanoparlante":{"pos":"a","pol":"0.25","std":"0.0"},"gestión":{"pos":"n","pol":"0.25","std":"0.0"},"geógrafo":{"pos":"n","pol":"0.25","std":"0.0"},"gigantesco":{"pos":"a","pol":"0.25","std":"0.0"},"gimnasia rítmica":{"pos":"n","pol":"0.25","std":"0.0"},"gimnasta":{"pos":"n","pol":"0.25","std":"0.0"},"gimnástico":{"pos":"a","pol":"0.25","std":"0.265"},"ginandromorfo":{"pos":"a","pol":"0.25","std":"0.0"},"gincana":{"pos":"n","pol":"0.25","std":"0.0"},"glamour":{"pos":"n","pol":"0.25","std":"0.0"},"glasear":{"pos":"v","pol":"0.25","std":"0.442"},"globalizar":{"pos":"v","pol":"0.25","std":"0.0"},"globo del ojo":{"pos":"n","pol":"0.25","std":"0.0"},"globo ocular":{"pos":"n","pol":"0.25","std":"0.0"},"globoso":{"pos":"a","pol":"0.25","std":"0.0"},"globuloso":{"pos":"a","pol":"0.25","std":"0.0"},"glorificación":{"pos":"n","pol":"0.25","std":"0.177"},"gluglutear":{"pos":"v","pol":"0.25","std":"0.0"},"gobernante":{"pos":"a","pol":"0.25","std":"0.0"},"gobernanza":{"pos":"n","pol":"0.25","std":"0.0"},"goleador":{"pos":"n","pol":"0.25","std":"0.0"},"golf":{"pos":"n","pol":"0.25","std":"0.0"},"goteado":{"pos":"a","pol":"0.25","std":"0.0"},"gramófono":{"pos":"n","pol":"0.25","std":"0.0"},"gravable":{"pos":"a","pol":"0.25","std":"0.0"},"gravamen":{"pos":"n","pol":"0.25","std":"0.0"},"grogui":{"pos":"a","pol":"0.25","std":"0.0"},"grua derrick":{"pos":"n","pol":"0.25","std":"0.0"},"grupal":{"pos":"a","pol":"0.25","std":"0.0"},"guante de golf":{"pos":"n","pol":"0.25","std":"0.0"},"guantes de cabritilla":{"pos":"n","pol":"0.25","std":"0.0"},"guardia de banco":{"pos":"n","pol":"0.25","std":"0.0"},"guillame":{"pos":"n","pol":"0.25","std":"0.0"},"guitarra eléctrica":{"pos":"n","pol":"0.25","std":"0.0"},"gula":{"pos":"n","pol":"0.25","std":"0.0"},"gymkhana":{"pos":"n","pol":"0.25","std":"0.0"},"gárgaras":{"pos":"n","pol":"0.25","std":"0.0"},"género Hyphantria":{"pos":"n","pol":"0.25","std":"0.0"},"género ipomoea":{"pos":"n","pol":"0.25","std":"0.0"},"habilitado":{"pos":"n","pol":"0.25","std":"0.0"},"habitabilidad":{"pos":"n","pol":"0.25","std":"0.0"},"habitación de hospital":{"pos":"n","pol":"0.25","std":"0.0"},"hacer amigos":{"pos":"v","pol":"0.25","std":"0.0"},"hacer autostop":{"pos":"v","pol":"0.25","std":"0.0"},"hacer concesiones":{"pos":"v","pol":"0.25","std":"0.0"},"hacer concesiones mutuas":{"pos":"v","pol":"0.25","std":"0.0"},"hacer descarrilar":{"pos":"v","pol":"0.25","std":"0.0"},"hacer ejercicio":{"pos":"v","pol":"0.25","std":"0.0"},"hacer entender":{"pos":"v","pol":"0.25","std":"0.0"},"hacer formas aserradas":{"pos":"v","pol":"0.25","std":"0.0"},"hacer percibir":{"pos":"v","pol":"0.25","std":"0.0"},"hacer un compromiso":{"pos":"v","pol":"0.25","std":"0.0"},"hacer un pase":{"pos":"v","pol":"0.25","std":"0.0"},"hacer un revés":{"pos":"v","pol":"0.25","std":"0.0"},"hacer un tour":{"pos":"v","pol":"0.25","std":"0.0"},"hacer un voto":{"pos":"v","pol":"0.25","std":"0.0"},"hacer voto":{"pos":"v","pol":"0.25","std":"0.0"},"hacerse amigo de":{"pos":"v","pol":"0.25","std":"0.0"},"hastiarse":{"pos":"v","pol":"0.25","std":"0.0"},"hechizado":{"pos":"a","pol":"0.25","std":"0.0"},"hemostático":{"pos":"a","pol":"0.25","std":"0.0"},"heredable":{"pos":"a","pol":"0.25","std":"0.0"},"hereditable":{"pos":"a","pol":"0.25","std":"0.0"},"hermetismo":{"pos":"n","pol":"0.25","std":"0.0"},"herrerasauridae":{"pos":"n","pol":"0.25","std":"0.0"},"herrerasaurus":{"pos":"n","pol":"0.25","std":"0.0"},"heterodáctilo":{"pos":"a","pol":"0.25","std":"0.0"},"heterometábolo":{"pos":"a","pol":"0.25","std":"0.0"},"heterosexismo":{"pos":"n","pol":"0.25","std":"0.0"},"heurística":{"pos":"n","pol":"0.25","std":"0.0"},"hialino":{"pos":"a","pol":"0.25","std":"0.0"},"hidrofítico":{"pos":"a","pol":"0.25","std":"0.0"},"hidrogenar":{"pos":"v","pol":"0.25","std":"0.0"},"hidrófilo":{"pos":"a","pol":"0.25","std":"0.088"},"hierro ondulado":{"pos":"n","pol":"0.25","std":"0.0"},"higiene dental":{"pos":"n","pol":"0.25","std":"0.0"},"higienizar":{"pos":"v","pol":"0.25","std":"0.0"},"hinayanismo":{"pos":"n","pol":"0.25","std":"0.0"},"hincar el diente":{"pos":"v","pol":"0.25","std":"0.0"},"hinduismo":{"pos":"n","pol":"0.25","std":"0.0"},"hinduísmo ortodoxo":{"pos":"n","pol":"0.25","std":"0.0"},"hiosciamina":{"pos":"n","pol":"0.25","std":"0.0"},"hipercapnia":{"pos":"n","pol":"0.25","std":"0.0"},"hipercrítico":{"pos":"a","pol":"0.25","std":"0.0"},"hiperglucemia":{"pos":"n","pol":"0.25","std":"0.0"},"hipertrofiado":{"pos":"a","pol":"0.25","std":"0.0"},"hipopnea":{"pos":"n","pol":"0.25","std":"0.0"},"hoguera de campamento":{"pos":"n","pol":"0.25","std":"0.0"},"hoja de cuchilla":{"pos":"n","pol":"0.25","std":"0.0"},"hoja de cuchillo":{"pos":"n","pol":"0.25","std":"0.0"},"hoja informativa":{"pos":"n","pol":"0.25","std":"0.0"},"hombre del neanthertal":{"pos":"n","pol":"0.25","std":"0.0"},"homeotermo":{"pos":"a","pol":"0.25","std":"0.0"},"homilía":{"pos":"n","pol":"0.25","std":"0.0"},"homo sapiens":{"pos":"n","pol":"0.25","std":"0.0"},"homocéntrico":{"pos":"a","pol":"0.25","std":"0.0"},"homocíclico":{"pos":"a","pol":"0.25","std":"0.0"},"homogeneidad":{"pos":"n","pol":"0.25","std":"0.265"},"homosexualidad":{"pos":"n","pol":"0.25","std":"0.0"},"homotermo":{"pos":"a","pol":"0.25","std":"0.0"},"honradez":{"pos":"n","pol":"0.25","std":"0.191"},"horizonte sensible":{"pos":"n","pol":"0.25","std":"0.0"},"hormigón armado":{"pos":"n","pol":"0.25","std":"0.0"},"hospital":{"pos":"n","pol":"0.25","std":"0.0"},"huero":{"pos":"a","pol":"0.25","std":"0.0"},"humanar":{"pos":"v","pol":"0.25","std":"0.0"},"humanizar":{"pos":"v","pol":"0.25","std":"0.0"},"humanístico":{"pos":"a","pol":"0.25","std":"0.191"},"humeante":{"pos":"a","pol":"0.25","std":"0.0"},"humidificar":{"pos":"v","pol":"0.25","std":"0.0"},"hyphantria":{"pos":"n","pol":"0.25","std":"0.0"},"hytrin":{"pos":"n","pol":"0.25","std":"0.0"},"hípica":{"pos":"n","pol":"0.25","std":"0.177"},"iconfundible":{"pos":"a","pol":"0.25","std":"0.0"},"iconoscopio":{"pos":"n","pol":"0.25","std":"0.0"},"idea original":{"pos":"n","pol":"0.25","std":"0.0"},"idealista":{"pos":"n","pol":"0.25","std":"0.0"},"identificado":{"pos":"a","pol":"0.25","std":"0.088"},"idioma":{"pos":"n","pol":"0.25","std":"0.0"},"imaginable":{"pos":"a","pol":"0.25","std":"0.0"},"imagismo":{"pos":"n","pol":"0.25","std":"0.0"},"imitado":{"pos":"a","pol":"0.25","std":"0.191"},"impenitente":{"pos":"a","pol":"0.25","std":"0.088"},"impermeabilidad":{"pos":"n","pol":"0.25","std":"0.0"},"impermeabilizante":{"pos":"n","pol":"0.25","std":"0.0"},"implantado":{"pos":"a","pol":"0.25","std":"0.0"},"imploración":{"pos":"n","pol":"0.25","std":"0.0"},"implorante":{"pos":"a","pol":"0.25","std":"0.0"},"impoluto":{"pos":"a","pol":"0.25","std":"0.177"},"impresionismo":{"pos":"n","pol":"0.25","std":"0.0"},"in":{"pos":"a","pol":"0.25","std":"0.0"},"inadaptado":{"pos":"a","pol":"0.25","std":"0.0"},"inadaptador":{"pos":"a","pol":"0.25","std":"0.0"},"inapelabilidad":{"pos":"n","pol":"0.25","std":"0.0"},"inbuir":{"pos":"v","pol":"0.25","std":"0.0"},"incesto":{"pos":"n","pol":"0.25","std":"0.0"},"incidente":{"pos":"a","pol":"0.25","std":"0.0"},"incitativo":{"pos":"a","pol":"0.25","std":"0.0"},"inconclusamente":{"pos":"r","pol":"0.25","std":"0.0"},"incondicional":{"pos":"a","pol":"0.25","std":"0.217"},"incontable":{"pos":"a","pol":"0.25","std":"0.0"},"incontrovertible":{"pos":"a","pol":"0.25","std":"0.0"},"incorrupto":{"pos":"a","pol":"0.25","std":"0.088"},"inculcación":{"pos":"n","pol":"0.25","std":"0.0"},"indefectible":{"pos":"a","pol":"0.25","std":"0.0"},"independiente":{"pos":"a","pol":"0.25","std":"0.175"},"indizar":{"pos":"v","pol":"0.25","std":"0.0"},"inducido":{"pos":"a","pol":"0.25","std":"0.0"},"industria de la moda":{"pos":"n","pol":"0.25","std":"0.0"},"ineducable":{"pos":"a","pol":"0.25","std":"0.0"},"inexpresivo":{"pos":"a","pol":"0.25","std":"0.0"},"infalibilidad":{"pos":"n","pol":"0.25","std":"0.0"},"infinto":{"pos":"a","pol":"0.25","std":"0.0"},"inflación":{"pos":"n","pol":"0.25","std":"0.0"},"influenciado":{"pos":"a","pol":"0.25","std":"0.0"},"influir":{"pos":"v","pol":"0.25","std":"0.217"},"información interna":{"pos":"n","pol":"0.25","std":"0.0"},"infrarrojo":{"pos":"a","pol":"0.25","std":"0.0"},"infructuosidad":{"pos":"n","pol":"0.25","std":"0.0"},"ingeniera":{"pos":"n","pol":"0.25","std":"0.0"},"iniciador":{"pos":"a","pol":"0.25","std":"0.0"},"inigualable":{"pos":"a","pol":"0.25","std":"0.088"},"inmemorable":{"pos":"a","pol":"0.25","std":"0.0"},"inmencionable":{"pos":"a","pol":"0.25","std":"0.0"},"inmensurable":{"pos":"a","pol":"0.25","std":"0.0"},"inmodestia":{"pos":"n","pol":"0.25","std":"0.0"},"inmovilista":{"pos":"n","pol":"0.25","std":"0.0"},"innombrable":{"pos":"a","pol":"0.25","std":"0.0"},"innumerable":{"pos":"a","pol":"0.25","std":"0.0"},"inpronunciable":{"pos":"a","pol":"0.25","std":"0.0"},"insecto coreido":{"pos":"n","pol":"0.25","std":"0.0"},"instalaciones recreativas":{"pos":"n","pol":"0.25","std":"0.0"},"instalación deportiva":{"pos":"n","pol":"0.25","std":"0.0"},"instigador":{"pos":"a","pol":"0.25","std":"0.0"},"instinto paternal":{"pos":"n","pol":"0.25","std":"0.0"},"instrumentalismo":{"pos":"n","pol":"0.25","std":"0.0"},"instrumento de percusión":{"pos":"n","pol":"0.25","std":"0.0"},"instrumento óptico":{"pos":"n","pol":"0.25","std":"0.0"},"insurrecto":{"pos":"a","pol":"0.25","std":"0.0"},"inteligibilidad":{"pos":"n","pol":"0.25","std":"0.0"},"intemperadamente":{"pos":"r","pol":"0.25","std":"0.0"},"interactuación":{"pos":"n","pol":"0.25","std":"0.0"},"intercalar":{"pos":"a","pol":"0.25","std":"0.0"},"intercambio de favores":{"pos":"n","pol":"0.25","std":"0.0"},"intercambio de pareja":{"pos":"n","pol":"0.25","std":"0.0"},"interdependiente":{"pos":"a","pol":"0.25","std":"0.0"},"interdisciplinario":{"pos":"a","pol":"0.25","std":"0.0"},"interpretación de roles":{"pos":"n","pol":"0.25","std":"0.0"},"interrelacionarse":{"pos":"v","pol":"0.25","std":"0.177"},"intersecarse":{"pos":"v","pol":"0.25","std":"0.0"},"intersectar":{"pos":"v","pol":"0.25","std":"0.0"},"introductorio":{"pos":"a","pol":"0.25","std":"0.144"},"intrínseco":{"pos":"a","pol":"0.25","std":"0.26"},"intuicionismo":{"pos":"n","pol":"0.25","std":"0.0"},"inundado":{"pos":"a","pol":"0.25","std":"0.0"},"inundarse":{"pos":"v","pol":"0.25","std":"0.0"},"investigación empírica":{"pos":"n","pol":"0.25","std":"0.0"},"invitador":{"pos":"a","pol":"0.25","std":"0.0"},"ionosfera":{"pos":"n","pol":"0.25","std":"0.0"},"ipomoea":{"pos":"n","pol":"0.25","std":"0.0"},"ir de excursión":{"pos":"v","pol":"0.25","std":"0.088"},"isocíclico":{"pos":"a","pol":"0.25","std":"0.0"},"isoniacida":{"pos":"n","pol":"0.25","std":"0.0"},"isósceles":{"pos":"a","pol":"0.25","std":"0.0"},"italohablante":{"pos":"a","pol":"0.25","std":"0.0"},"izquierdas":{"pos":"n","pol":"0.25","std":"0.0"},"izquierdo":{"pos":"a","pol":"0.25","std":"0.354"},"jacobeo":{"pos":"n","pol":"0.25","std":"0.0"},"jarra de Leyden":{"pos":"n","pol":"0.25","std":"0.0"},"jaspeación":{"pos":"n","pol":"0.25","std":"0.0"},"jaspeado":{"pos":"n","pol":"0.25","std":"0.0"},"jingoísta":{"pos":"a","pol":"0.25","std":"0.0"},"jorge":{"pos":"n","pol":"0.25","std":"0.0"},"jornada":{"pos":"n","pol":"0.25","std":"0.354"},"jornadas":{"pos":"n","pol":"0.25","std":"0.0"},"judicial":{"pos":"a","pol":"0.25","std":"0.191"},"judío":{"pos":"n","pol":"0.25","std":"0.0"},"judío conservador":{"pos":"n","pol":"0.25","std":"0.0"},"juego de mesa":{"pos":"n","pol":"0.25","std":"0.0"},"juego del tejo":{"pos":"n","pol":"0.25","std":"0.0"},"jugo digestivo":{"pos":"n","pol":"0.25","std":"0.0"},"junta de accionistas":{"pos":"n","pol":"0.25","std":"0.0"},"junta de reclutamiento":{"pos":"n","pol":"0.25","std":"0.0"},"jurar el cargo":{"pos":"v","pol":"0.25","std":"0.0"},"justicia":{"pos":"n","pol":"0.25","std":"0.12"},"justificador":{"pos":"a","pol":"0.25","std":"0.0"},"justificante":{"pos":"a","pol":"0.25","std":"0.0"},"juvenil":{"pos":"a","pol":"0.25","std":"0.205"},"koinonía":{"pos":"n","pol":"0.25","std":"0.0"},"la intelectualidad":{"pos":"n","pol":"0.25","std":"0.0"},"laicado":{"pos":"n","pol":"0.25","std":"0.0"},"laicismo":{"pos":"n","pol":"0.25","std":"0.0"},"lampyridae":{"pos":"n","pol":"0.25","std":"0.0"},"lanar":{"pos":"a","pol":"0.25","std":"0.0"},"lanceolado":{"pos":"a","pol":"0.25","std":"0.0"},"lanuginoso":{"pos":"a","pol":"0.25","std":"0.0"},"largeza":{"pos":"n","pol":"0.25","std":"0.0"},"larguirucho":{"pos":"a","pol":"0.25","std":"0.088"},"larvado":{"pos":"a","pol":"0.25","std":"0.0"},"laya":{"pos":"n","pol":"0.25","std":"0.0"},"lectura pública":{"pos":"n","pol":"0.25","std":"0.0"},"legalización":{"pos":"n","pol":"0.25","std":"0.0"},"legalizar":{"pos":"v","pol":"0.25","std":"0.161"},"legato":{"pos":"a","pol":"0.25","std":"0.0"},"lengua natural":{"pos":"n","pol":"0.25","std":"0.0"},"lengua sánscrita":{"pos":"n","pol":"0.25","std":"0.0"},"lenguaje natural":{"pos":"n","pol":"0.25","std":"0.0"},"lenitivo":{"pos":"n","pol":"-0.25","std":"0.0"},"lente convexa":{"pos":"n","pol":"0.25","std":"0.0"},"leonado":{"pos":"a","pol":"0.25","std":"0.0"},"lesbiana":{"pos":"a","pol":"0.25","std":"0.0"},"letra bastardilla":{"pos":"n","pol":"0.25","std":"0.0"},"letra corrida":{"pos":"n","pol":"0.25","std":"0.0"},"letra cursiva":{"pos":"n","pol":"0.25","std":"0.0"},"letra mayúscula":{"pos":"n","pol":"0.25","std":"0.0"},"letrero":{"pos":"n","pol":"0.25","std":"0.0"},"levantado":{"pos":"a","pol":"0.25","std":"0.125"},"leíble":{"pos":"a","pol":"0.25","std":"0.0"},"liberalismo":{"pos":"n","pol":"0.25","std":"0.0"},"libertad de expresión":{"pos":"n","pol":"0.25","std":"0.0"},"libertad de religión":{"pos":"n","pol":"0.25","std":"0.0"},"libertador":{"pos":"n","pol":"0.25","std":"0.0"},"libertarismo":{"pos":"n","pol":"0.25","std":"0.0"},"librador":{"pos":"n","pol":"0.25","std":"0.0"},"libre comercio":{"pos":"n","pol":"0.25","std":"0.0"},"librecambio":{"pos":"n","pol":"0.25","std":"0.0"},"libreta de ahorro":{"pos":"n","pol":"0.25","std":"0.0"},"libreta de ahorros":{"pos":"n","pol":"0.25","std":"0.0"},"libro de conocimiento":{"pos":"n","pol":"0.25","std":"0.0"},"licantropía":{"pos":"n","pol":"0.25","std":"0.0"},"licitador":{"pos":"n","pol":"0.25","std":"0.0"},"licitud":{"pos":"n","pol":"0.25","std":"0.0"},"ligado":{"pos":"a","pol":"0.25","std":"0.144"},"ligoteo":{"pos":"n","pol":"0.25","std":"0.0"},"limnología":{"pos":"n","pol":"0.25","std":"0.0"},"limones":{"pos":"n","pol":"0.25","std":"0.0"},"limpieza":{"pos":"n","pol":"0.25","std":"0.188"},"limítrofe":{"pos":"a","pol":"0.25","std":"0.0"},"lindero":{"pos":"a","pol":"0.25","std":"0.0"},"linebacker":{"pos":"n","pol":"0.25","std":"0.0"},"liofilizado":{"pos":"a","pol":"0.25","std":"0.0"},"liquescente":{"pos":"a","pol":"0.25","std":"0.0"},"lista negra":{"pos":"n","pol":"0.25","std":"0.0"},"listado":{"pos":"a","pol":"0.25","std":"0.0"},"llamada a filas":{"pos":"n","pol":"0.25","std":"0.0"},"llamada de teléfono":{"pos":"n","pol":"0.25","std":"0.0"},"llamada telefónica":{"pos":"n","pol":"0.25","std":"0.0"},"llaneza":{"pos":"n","pol":"0.25","std":"0.088"},"llegar hondo":{"pos":"v","pol":"0.25","std":"0.0"},"llegar lejos":{"pos":"v","pol":"0.25","std":"0.0"},"llevar a término":{"pos":"v","pol":"0.25","std":"0.354"},"llevar al altar":{"pos":"v","pol":"0.25","std":"0.0"},"llevarse el pastel":{"pos":"v","pol":"0.25","std":"0.0"},"llueca":{"pos":"n","pol":"0.25","std":"0.0"},"lo apetitoso":{"pos":"n","pol":"0.25","std":"0.0"},"lo delicioso":{"pos":"n","pol":"0.25","std":"0.0"},"lo gustoso":{"pos":"n","pol":"0.25","std":"0.0"},"lo sabroso":{"pos":"n","pol":"0.25","std":"0.0"},"localizado":{"pos":"a","pol":"0.25","std":"0.0"},"locuaz":{"pos":"a","pol":"0.25","std":"0.088"},"lucidez":{"pos":"n","pol":"0.25","std":"0.265"},"lugar de moda":{"pos":"n","pol":"0.25","std":"0.0"},"lugar de reunión":{"pos":"n","pol":"0.25","std":"0.0"},"lugar estratégico":{"pos":"n","pol":"0.25","std":"0.0"},"lugar imagianario":{"pos":"n","pol":"0.25","std":"0.0"},"lujuriar":{"pos":"v","pol":"0.25","std":"0.0"},"luminancia":{"pos":"n","pol":"0.25","std":"0.0"},"lustrado":{"pos":"n","pol":"0.25","std":"0.0"},"lábil":{"pos":"a","pol":"0.25","std":"0.0"},"lámpara de Aladino":{"pos":"n","pol":"0.25","std":"0.0"},"lésbico":{"pos":"a","pol":"0.25","std":"0.0"},"límpido":{"pos":"a","pol":"0.25","std":"0.0"},"línea de salida":{"pos":"n","pol":"0.25","std":"0.0"},"línea divisoria":{"pos":"n","pol":"0.25","std":"0.0"},"lírico":{"pos":"a","pol":"0.25","std":"0.326"},"lógica alética":{"pos":"n","pol":"0.25","std":"0.0"},"lógica doxástica":{"pos":"n","pol":"0.25","std":"0.0"},"machista":{"pos":"n","pol":"0.25","std":"0.0"},"macroscópico":{"pos":"a","pol":"0.25","std":"0.0"},"macrón":{"pos":"n","pol":"0.25","std":"0.0"},"madrás":{"pos":"n","pol":"0.25","std":"0.0"},"maestrazgo":{"pos":"n","pol":"0.25","std":"0.354"},"maestro cocinero":{"pos":"n","pol":"0.25","std":"0.0"},"magnanimidad":{"pos":"n","pol":"0.25","std":"0.0"},"magnético":{"pos":"a","pol":"0.25","std":"0.26"},"mahayanismo":{"pos":"n","pol":"0.25","std":"0.0"},"maitre":{"pos":"n","pol":"0.25","std":"0.0"},"malentendido":{"pos":"a","pol":"0.25","std":"0.0"},"manager":{"pos":"n","pol":"0.25","std":"0.0"},"mandarina":{"pos":"a","pol":"0.25","std":"0.0"},"manguito":{"pos":"n","pol":"0.25","std":"0.0"},"manipulabilidad":{"pos":"n","pol":"0.25","std":"0.0"},"mansedumbre":{"pos":"n","pol":"0.25","std":"0.0"},"mansión":{"pos":"n","pol":"0.25","std":"0.0"},"mansuetud":{"pos":"n","pol":"0.25","std":"0.0"},"manumitir":{"pos":"v","pol":"0.25","std":"0.177"},"manzana camuesa":{"pos":"n","pol":"0.25","std":"0.0"},"manzana reineta":{"pos":"n","pol":"0.25","std":"0.0"},"maqueta":{"pos":"n","pol":"0.25","std":"0.0"},"marca de estilo":{"pos":"n","pol":"0.25","std":"0.0"},"marca distintiva":{"pos":"n","pol":"0.25","std":"0.0"},"marcha militar":{"pos":"n","pol":"0.25","std":"0.0"},"marginalidad":{"pos":"n","pol":"0.25","std":"0.0"},"maria":{"pos":"n","pol":"0.25","std":"0.0"},"marketing":{"pos":"n","pol":"0.25","std":"0.0"},"marmolación":{"pos":"n","pol":"0.25","std":"0.0"},"marrajo":{"pos":"n","pol":"0.25","std":"0.0"},"marrano":{"pos":"a","pol":"0.25","std":"0.0"},"marrón-rojizo":{"pos":"a","pol":"0.25","std":"0.0"},"masajear":{"pos":"v","pol":"0.25","std":"0.177"},"masculinidad":{"pos":"n","pol":"0.25","std":"0.125"},"master en pedagogía":{"pos":"n","pol":"0.25","std":"0.0"},"mastuerzo acuático":{"pos":"n","pol":"0.25","std":"0.0"},"mastuerzo de agua":{"pos":"n","pol":"0.25","std":"0.0"},"masturbación":{"pos":"n","pol":"0.25","std":"0.0"},"matar de risa":{"pos":"v","pol":"0.25","std":"0.0"},"matarse":{"pos":"v","pol":"0.25","std":"0.0"},"matatenas":{"pos":"n","pol":"0.25","std":"0.0"},"materializado":{"pos":"a","pol":"0.25","std":"0.0"},"matiné":{"pos":"n","pol":"0.25","std":"0.0"},"matrilineal":{"pos":"a","pol":"0.25","std":"0.0"},"matrimoniarse":{"pos":"v","pol":"0.25","std":"0.0"},"maximización":{"pos":"n","pol":"0.25","std":"0.177"},"mayúscula":{"pos":"n","pol":"0.25","std":"0.0"},"mediana":{"pos":"n","pol":"0.25","std":"0.0"},"medicación con cuentagotas":{"pos":"n","pol":"0.25","std":"0.0"},"medida de contrapeso":{"pos":"n","pol":"0.25","std":"0.0"},"medida provisional":{"pos":"n","pol":"0.25","std":"0.0"},"medidas drásticas":{"pos":"n","pol":"0.25","std":"0.0"},"medido":{"pos":"a","pol":"0.25","std":"0.0"},"medio relieve":{"pos":"n","pol":"0.25","std":"0.0"},"medirse":{"pos":"v","pol":"0.25","std":"0.0"},"melfalán":{"pos":"n","pol":"0.25","std":"0.0"},"melódicamente":{"pos":"r","pol":"0.25","std":"0.0"},"memoria volátil":{"pos":"n","pol":"0.25","std":"0.0"},"mención honorífica":{"pos":"n","pol":"0.25","std":"0.0"},"mercadeo":{"pos":"n","pol":"0.25","std":"0.0"},"mercado bursátil":{"pos":"n","pol":"0.25","std":"0.0"},"mercado de valores":{"pos":"n","pol":"0.25","std":"0.0"},"mercenario":{"pos":"a","pol":"0.25","std":"0.0"},"merchandising":{"pos":"n","pol":"0.25","std":"0.0"},"merecimiento":{"pos":"n","pol":"0.25","std":"0.0"},"merodeador":{"pos":"a","pol":"0.25","std":"0.0"},"mesofítico":{"pos":"a","pol":"0.25","std":"0.0"},"mesófilo":{"pos":"a","pol":"0.25","std":"0.0"},"metacarpo":{"pos":"n","pol":"0.25","std":"0.0"},"metaconocimiento":{"pos":"n","pol":"0.25","std":"0.0"},"metafísica":{"pos":"n","pol":"0.25","std":"0.0"},"metafórico":{"pos":"a","pol":"0.25","std":"0.0"},"meteórico":{"pos":"a","pol":"0.25","std":"0.354"},"metonímia":{"pos":"n","pol":"0.25","std":"0.0"},"metonímico":{"pos":"a","pol":"0.25","std":"0.0"},"metotrexato":{"pos":"n","pol":"0.25","std":"0.0"},"metrónomo":{"pos":"n","pol":"0.25","std":"0.0"},"mezuzá":{"pos":"n","pol":"0.25","std":"0.0"},"miasmático":{"pos":"a","pol":"0.25","std":"0.0"},"microfotómetro":{"pos":"n","pol":"0.25","std":"0.0"},"microscopio electrónico":{"pos":"n","pol":"0.25","std":"0.0"},"mientes":{"pos":"n","pol":"0.25","std":"0.0"},"militarización":{"pos":"n","pol":"0.25","std":"0.0"},"mimado":{"pos":"a","pol":"0.25","std":"0.0"},"mimetizar":{"pos":"v","pol":"0.25","std":"0.0"},"mina de oro":{"pos":"n","pol":"0.25","std":"0.354"},"minado":{"pos":"n","pol":"-0.25","std":"0.0"},"ministerio de asuntos exteriores":{"pos":"n","pol":"0.25","std":"0.0"},"miofibrilla":{"pos":"n","pol":"0.25","std":"0.0"},"miradita":{"pos":"n","pol":"0.25","std":"0.0"},"mirar por":{"pos":"v","pol":"0.25","std":"0.0"},"misil balístico intercontinental":{"pos":"n","pol":"0.25","std":"0.0"},"misión religiosa":{"pos":"n","pol":"0.25","std":"0.0"},"misticismo":{"pos":"n","pol":"0.25","std":"0.0"},"mistificar":{"pos":"v","pol":"0.25","std":"0.0"},"mitologista":{"pos":"n","pol":"0.25","std":"0.0"},"mitologo":{"pos":"n","pol":"0.25","std":"0.0"},"mitólogo":{"pos":"n","pol":"0.25","std":"0.0"},"modelo a escala":{"pos":"n","pol":"0.25","std":"0.0"},"modelo a imitar":{"pos":"n","pol":"0.25","std":"0.0"},"moderantismo":{"pos":"n","pol":"0.25","std":"0.0"},"moderato":{"pos":"a","pol":"0.25","std":"0.0"},"modicidad":{"pos":"n","pol":"0.25","std":"0.0"},"modorra":{"pos":"n","pol":"0.25","std":"0.0"},"mona":{"pos":"n","pol":"0.25","std":"0.0"},"monosilábico":{"pos":"a","pol":"0.25","std":"0.0"},"monosílabo":{"pos":"a","pol":"0.25","std":"0.0"},"monoteísmo":{"pos":"n","pol":"0.25","std":"0.0"},"monsenor":{"pos":"n","pol":"0.25","std":"0.0"},"monseñor":{"pos":"n","pol":"0.25","std":"0.0"},"monte de piedad":{"pos":"n","pol":"0.25","std":"0.0"},"monumento a Washington":{"pos":"n","pol":"0.25","std":"0.0"},"monumento nacional":{"pos":"n","pol":"0.25","std":"0.0"},"moral sexual":{"pos":"n","pol":"0.25","std":"0.0"},"mordacidad":{"pos":"n","pol":"0.25","std":"0.0"},"morganático":{"pos":"a","pol":"0.25","std":"0.0"},"mortinato":{"pos":"n","pol":"0.25","std":"0.0"},"mosca":{"pos":"n","pol":"0.25","std":"0.0"},"motete":{"pos":"n","pol":"0.25","std":"0.0"},"motilidad":{"pos":"n","pol":"0.25","std":"0.0"},"motivación irracional":{"pos":"n","pol":"0.25","std":"0.0"},"motricidad":{"pos":"n","pol":"0.25","std":"0.0"},"movilidad":{"pos":"n","pol":"0.25","std":"0.0"},"movilización militar":{"pos":"n","pol":"0.25","std":"0.0"},"movimiento gay":{"pos":"n","pol":"0.25","std":"0.0"},"movimiento juvenil":{"pos":"n","pol":"0.25","std":"0.0"},"movimiento libertario":{"pos":"n","pol":"0.25","std":"0.0"},"movimiento obrero":{"pos":"n","pol":"0.25","std":"0.0"},"movimiento religioso":{"pos":"n","pol":"0.25","std":"0.0"},"mozo de cuadra":{"pos":"n","pol":"0.25","std":"0.0"},"mozo de establo":{"pos":"n","pol":"0.25","std":"0.0"},"mueble de época":{"pos":"n","pol":"0.25","std":"0.0"},"muerte civil":{"pos":"n","pol":"0.25","std":"0.0"},"muestra de tela":{"pos":"n","pol":"0.25","std":"0.0"},"muestreo":{"pos":"n","pol":"0.25","std":"0.177"},"mujeril":{"pos":"a","pol":"0.25","std":"0.088"},"mullido":{"pos":"a","pol":"0.25","std":"0.0"},"multiracial":{"pos":"a","pol":"0.25","std":"0.0"},"multiuso":{"pos":"a","pol":"0.25","std":"0.0"},"mundano":{"pos":"n","pol":"0.25","std":"0.0"},"munificencia":{"pos":"n","pol":"0.25","std":"0.0"},"munificente":{"pos":"a","pol":"0.25","std":"0.0"},"munificiencia":{"pos":"n","pol":"0.25","std":"0.0"},"munífico":{"pos":"a","pol":"0.25","std":"0.0"},"museo científico":{"pos":"n","pol":"0.25","std":"0.0"},"mutable":{"pos":"a","pol":"0.25","std":"0.0"},"mutante":{"pos":"a","pol":"0.25","std":"0.0"},"máchmetro":{"pos":"n","pol":"0.25","std":"0.0"},"máquina de rayos X":{"pos":"n","pol":"0.25","std":"0.0"},"márketing":{"pos":"n","pol":"0.25","std":"0.0"},"máster en educación":{"pos":"n","pol":"0.25","std":"0.0"},"método de enseñanza":{"pos":"n","pol":"0.25","std":"0.0"},"método ecléctico":{"pos":"n","pol":"0.25","std":"0.0"},"método pedagógico":{"pos":"n","pol":"0.25","std":"0.0"},"métricamente":{"pos":"r","pol":"0.25","std":"0.0"},"míster":{"pos":"n","pol":"0.25","std":"0.0"},"místico":{"pos":"n","pol":"0.25","std":"0.0"},"módulo de mando":{"pos":"n","pol":"0.25","std":"0.0"},"naciente":{"pos":"a","pol":"0.25","std":"0.191"},"nacimiento del cabello":{"pos":"n","pol":"0.25","std":"0.0"},"nadaderas":{"pos":"n","pol":"0.25","std":"0.0"},"naltrexona":{"pos":"n","pol":"0.25","std":"0.0"},"narcisista":{"pos":"a","pol":"0.25","std":"0.0"},"narcotizado":{"pos":"a","pol":"0.25","std":"0.0"},"nasión":{"pos":"n","pol":"0.25","std":"0.0"},"naturista":{"pos":"a","pol":"0.25","std":"0.0"},"navaja automática":{"pos":"n","pol":"0.25","std":"0.0"},"nave espacial":{"pos":"n","pol":"0.25","std":"0.0"},"neanthertal":{"pos":"n","pol":"0.25","std":"0.0"},"nebrina":{"pos":"n","pol":"0.25","std":"0.0"},"necio":{"pos":"a","pol":"0.25","std":"0.0"},"negarse":{"pos":"v","pol":"0.25","std":"0.0"},"negociación comercial":{"pos":"n","pol":"0.25","std":"0.0"},"negroide":{"pos":"a","pol":"0.25","std":"0.0"},"nemotecnia":{"pos":"n","pol":"0.25","std":"0.0"},"neoclasicismo":{"pos":"n","pol":"0.25","std":"0.0"},"neostigmina":{"pos":"n","pol":"0.25","std":"0.0"},"nervio troclear":{"pos":"n","pol":"0.25","std":"0.0"},"neurobiológico":{"pos":"r","pol":"0.25","std":"0.0"},"neuroléptico":{"pos":"n","pol":"0.25","std":"0.0"},"ninfula":{"pos":"n","pol":"0.25","std":"0.0"},"niqui":{"pos":"n","pol":"0.25","std":"0.0"},"nitrificarse":{"pos":"v","pol":"0.25","std":"0.0"},"no apareado":{"pos":"a","pol":"0.25","std":"0.0"},"no comunicación":{"pos":"n","pol":"0.25","std":"0.0"},"no de primos":{"pos":"a","pol":"0.25","std":"0.0"},"no elevado":{"pos":"a","pol":"0.25","std":"0.0"},"no esclarecedor":{"pos":"a","pol":"0.25","std":"0.0"},"no iluminador":{"pos":"a","pol":"0.25","std":"0.0"},"no perecible":{"pos":"a","pol":"0.25","std":"0.0"},"no profético":{"pos":"a","pol":"0.25","std":"0.0"},"no resinoso":{"pos":"a","pol":"0.25","std":"0.0"},"nombre de fábrica":{"pos":"n","pol":"0.25","std":"0.0"},"nomia":{"pos":"n","pol":"0.25","std":"0.0"},"nominar":{"pos":"v","pol":"0.25","std":"0.125"},"nostalgia":{"pos":"n","pol":"0.25","std":"0.0"},"nota musical":{"pos":"n","pol":"0.25","std":"0.0"},"nublado":{"pos":"a","pol":"0.25","std":"0.177"},"nudista":{"pos":"a","pol":"0.25","std":"0.0"},"nuevas":{"pos":"n","pol":"0.25","std":"0.0"},"nutricionista":{"pos":"n","pol":"0.25","std":"0.0"},"nutrición autótrofa":{"pos":"n","pol":"0.25","std":"0.0"},"nutrimento":{"pos":"n","pol":"0.25","std":"0.0"},"número romano":{"pos":"n","pol":"0.25","std":"0.0"},"números rojos":{"pos":"n","pol":"0.25","std":"0.0"},"obediencia":{"pos":"n","pol":"0.25","std":"0.144"},"obelión":{"pos":"n","pol":"0.25","std":"0.0"},"objetificar":{"pos":"v","pol":"0.25","std":"0.0"},"objeto indirecto":{"pos":"n","pol":"0.25","std":"0.0"},"objetor de conciencia":{"pos":"n","pol":"0.25","std":"0.0"},"obligación noble":{"pos":"n","pol":"0.25","std":"0.0"},"obra de consulta":{"pos":"n","pol":"0.25","std":"0.0"},"obra literaria":{"pos":"n","pol":"0.25","std":"0.0"},"obstructor":{"pos":"a","pol":"0.25","std":"0.0"},"oceánico":{"pos":"a","pol":"0.25","std":"0.25"},"oclusivo":{"pos":"a","pol":"0.25","std":"0.0"},"octosilábico":{"pos":"a","pol":"0.25","std":"0.0"},"octosílabo":{"pos":"a","pol":"0.25","std":"0.0"},"ocuparse":{"pos":"v","pol":"0.25","std":"0.191"},"ocurrirse":{"pos":"v","pol":"0.25","std":"0.0"},"oferta de matrimonio":{"pos":"n","pol":"0.25","std":"0.0"},"offset":{"pos":"n","pol":"0.25","std":"0.0"},"oficial pagador":{"pos":"n","pol":"0.25","std":"0.0"},"oficiante":{"pos":"n","pol":"0.25","std":"0.177"},"oficinista":{"pos":"a","pol":"0.25","std":"0.0"},"ofrecer sexo":{"pos":"v","pol":"0.25","std":"0.0"},"ofrecimiento de matrimonio":{"pos":"n","pol":"0.25","std":"0.0"},"ofrenda":{"pos":"n","pol":"0.25","std":"0.0"},"ojiazul":{"pos":"a","pol":"0.25","std":"0.0"},"ojos":{"pos":"n","pol":"0.25","std":"0.0"},"olla para asar":{"pos":"n","pol":"0.25","std":"0.0"},"olvidable":{"pos":"a","pol":"0.25","std":"0.0"},"ombrío":{"pos":"a","pol":"0.25","std":"0.0"},"omnipresente":{"pos":"a","pol":"0.25","std":"0.0"},"omnisciencia":{"pos":"n","pol":"0.25","std":"0.0"},"omnisciente":{"pos":"a","pol":"0.25","std":"0.0"},"onda sonora":{"pos":"n","pol":"0.25","std":"0.0"},"opalino":{"pos":"a","pol":"0.25","std":"0.0"},"operacionalmente":{"pos":"r","pol":"0.25","std":"0.0"},"opistognato":{"pos":"a","pol":"0.25","std":"0.0"},"opúsculo":{"pos":"n","pol":"0.25","std":"0.0"},"oración interrogativa":{"pos":"n","pol":"0.25","std":"0.0"},"orante":{"pos":"a","pol":"0.25","std":"0.0"},"orden Scorpionida":{"pos":"n","pol":"0.25","std":"0.0"},"orden religiosa":{"pos":"n","pol":"0.25","std":"0.0"},"ordenancista":{"pos":"n","pol":"0.25","std":"0.0"},"orejero":{"pos":"n","pol":"0.25","std":"0.0"},"organización benéfica":{"pos":"n","pol":"0.25","std":"0.0"},"organizado":{"pos":"a","pol":"0.25","std":"0.0"},"orgasmo":{"pos":"n","pol":"0.25","std":"0.0"},"ornamentador":{"pos":"n","pol":"0.25","std":"0.0"},"ornamental":{"pos":"a","pol":"0.25","std":"0.0"},"ornamentalista":{"pos":"n","pol":"0.25","std":"0.0"},"orto":{"pos":"n","pol":"0.25","std":"0.0"},"osado":{"pos":"a","pol":"0.25","std":"0.19"},"oscilante":{"pos":"a","pol":"0.25","std":"0.0"},"oscilatorio":{"pos":"a","pol":"0.25","std":"0.0"},"ostensible":{"pos":"a","pol":"0.25","std":"0.125"},"osteopatía":{"pos":"n","pol":"0.25","std":"0.0"},"ostracodermos":{"pos":"n","pol":"0.25","std":"0.0"},"ovacionador":{"pos":"n","pol":"0.25","std":"0.0"},"oxifenbutazona":{"pos":"n","pol":"0.25","std":"0.0"},"paciente":{"pos":"a","pol":"0.25","std":"0.088"},"pagoda":{"pos":"n","pol":"0.25","std":"0.0"},"palabra de honor":{"pos":"n","pol":"0.25","std":"0.177"},"palabras amorosas":{"pos":"n","pol":"0.25","std":"0.0"},"paleoantropología":{"pos":"n","pol":"0.25","std":"0.0"},"paleoantropológico":{"pos":"a","pol":"0.25","std":"0.0"},"palmeador":{"pos":"n","pol":"0.25","std":"0.0"},"palo de escoba":{"pos":"n","pol":"0.25","std":"0.0"},"palpable":{"pos":"a","pol":"0.25","std":"0.088"},"pan eucarístico":{"pos":"n","pol":"0.25","std":"0.0"},"panecillo":{"pos":"n","pol":"0.25","std":"0.0"},"panzudo":{"pos":"a","pol":"0.25","std":"0.0"},"papeleta de empeño":{"pos":"n","pol":"0.25","std":"0.0"},"papelón":{"pos":"n","pol":"0.25","std":"0.265"},"paprika":{"pos":"n","pol":"0.25","std":"0.0"},"parada de camiones":{"pos":"n","pol":"0.25","std":"0.0"},"paraje":{"pos":"n","pol":"0.25","std":"0.0"},"pardo":{"pos":"a","pol":"0.25","std":"0.0"},"paripinado":{"pos":"a","pol":"0.25","std":"0.0"},"parir cerditos":{"pos":"v","pol":"0.25","std":"0.0"},"parir puercos":{"pos":"v","pol":"0.25","std":"0.0"},"parodia":{"pos":"n","pol":"0.25","std":"0.0"},"partes iguales":{"pos":"n","pol":"0.25","std":"0.0"},"participar en":{"pos":"v","pol":"0.25","std":"0.0"},"participio pasado":{"pos":"n","pol":"0.25","std":"0.0"},"partidaria":{"pos":"n","pol":"0.25","std":"0.0"},"pasar de moda":{"pos":"v","pol":"0.25","std":"0.0"},"pasar el rato":{"pos":"v","pol":"0.25","std":"0.0"},"pasar la aspiradora":{"pos":"v","pol":"0.25","std":"0.0"},"pase adelantado":{"pos":"n","pol":"0.25","std":"0.0"},"pase lateral":{"pos":"n","pol":"0.25","std":"0.0"},"paseo en barco":{"pos":"n","pol":"0.25","std":"0.0"},"paseo en yate":{"pos":"n","pol":"0.25","std":"0.0"},"paso de baile":{"pos":"n","pol":"0.25","std":"0.0"},"passeri":{"pos":"n","pol":"0.25","std":"0.0"},"paternal":{"pos":"a","pol":"0.25","std":"0.228"},"patilargo":{"pos":"a","pol":"0.25","std":"0.0"},"patito feo":{"pos":"n","pol":"0.25","std":"0.0"},"patológicamente":{"pos":"r","pol":"0.25","std":"0.0"},"patrilineal":{"pos":"a","pol":"0.25","std":"0.0"},"patrocinado":{"pos":"a","pol":"0.25","std":"0.0"},"patronal":{"pos":"n","pol":"0.25","std":"0.0"},"patrullaje":{"pos":"n","pol":"0.25","std":"0.0"},"patrullar":{"pos":"v","pol":"0.25","std":"0.0"},"paulatino":{"pos":"a","pol":"0.25","std":"0.0"},"país de los sueños":{"pos":"n","pol":"0.25","std":"0.0"},"pedante":{"pos":"a","pol":"0.25","std":"0.0"},"pedestal":{"pos":"n","pol":"0.25","std":"0.072"},"pediatra":{"pos":"n","pol":"0.25","std":"0.0"},"pedicura":{"pos":"n","pol":"0.25","std":"0.0"},"pedicuro":{"pos":"n","pol":"0.25","std":"0.0"},"peinar con estilo":{"pos":"v","pol":"0.25","std":"0.0"},"pelleja":{"pos":"n","pol":"0.25","std":"0.0"},"pelota de ping pong":{"pos":"n","pol":"0.25","std":"0.0"},"pelota de tenis":{"pos":"n","pol":"0.25","std":"0.0"},"película amateur":{"pos":"n","pol":"0.25","std":"0.0"},"penetrabilidad":{"pos":"n","pol":"0.25","std":"0.0"},"pensable":{"pos":"a","pol":"0.25","std":"0.0"},"pensamiento sintético":{"pos":"n","pol":"0.25","std":"0.0"},"pensante":{"pos":"a","pol":"0.25","std":"0.0"},"pentasilábico":{"pos":"a","pol":"0.25","std":"0.0"},"pentasílabo":{"pos":"a","pol":"0.25","std":"0.0"},"pequeña compañía de préstamo":{"pos":"n","pol":"0.25","std":"0.0"},"pequeñito":{"pos":"a","pol":"0.25","std":"0.0"},"per capita":{"pos":"a","pol":"0.25","std":"0.0"},"perceptivamente":{"pos":"r","pol":"0.25","std":"0.0"},"perceptivo":{"pos":"a","pol":"0.25","std":"0.375"},"perciformes":{"pos":"n","pol":"0.25","std":"0.0"},"perdurabilidad":{"pos":"n","pol":"0.25","std":"0.0"},"peregrinaje":{"pos":"n","pol":"0.25","std":"0.0"},"perihelio":{"pos":"n","pol":"0.25","std":"0.0"},"periodo histórico":{"pos":"n","pol":"0.25","std":"0.0"},"permeable":{"pos":"a","pol":"0.25","std":"0.177"},"permiso de salida":{"pos":"n","pol":"0.25","std":"0.0"},"persona grata":{"pos":"n","pol":"0.25","std":"0.0"},"persona mayor":{"pos":"n","pol":"0.25","std":"0.177"},"persona religiosa":{"pos":"n","pol":"0.25","std":"0.088"},"personal de tierra":{"pos":"n","pol":"0.25","std":"0.0"},"personalizado":{"pos":"a","pol":"0.25","std":"0.0"},"personalizar":{"pos":"v","pol":"0.25","std":"0.0"},"perspicacia":{"pos":"n","pol":"0.25","std":"0.0"},"persuasible":{"pos":"a","pol":"0.25","std":"0.0"},"persuasiva":{"pos":"n","pol":"0.25","std":"0.0"},"período de descanso":{"pos":"n","pol":"0.25","std":"0.0"},"período histórico":{"pos":"n","pol":"0.25","std":"0.0"},"pesadamente":{"pos":"r","pol":"0.25","std":"0.0"},"petición de mano":{"pos":"n","pol":"0.25","std":"0.0"},"petrolífero":{"pos":"a","pol":"0.25","std":"0.0"},"pezophaps":{"pos":"n","pol":"0.25","std":"0.0"},"phthirius":{"pos":"n","pol":"0.25","std":"0.0"},"phthirus":{"pos":"n","pol":"0.25","std":"0.0"},"picogordo":{"pos":"n","pol":"0.25","std":"0.0"},"pictográfico":{"pos":"a","pol":"0.25","std":"0.0"},"pila Weston":{"pos":"n","pol":"0.25","std":"0.0"},"pila de cadmio":{"pos":"n","pol":"0.25","std":"0.0"},"pilla-pilla":{"pos":"n","pol":"0.25","std":"0.0"},"pilote":{"pos":"n","pol":"0.25","std":"0.0"},"pimentón dulce":{"pos":"n","pol":"0.25","std":"0.0"},"pimiento verde":{"pos":"n","pol":"0.25","std":"0.0"},"pimpón":{"pos":"n","pol":"0.25","std":"0.0"},"pin":{"pos":"n","pol":"0.25","std":"0.0"},"ping-pong":{"pos":"n","pol":"0.25","std":"0.0"},"pinzón":{"pos":"n","pol":"0.25","std":"0.0"},"pinzón vulgar":{"pos":"n","pol":"0.25","std":"0.0"},"pipa de la paz":{"pos":"n","pol":"0.25","std":"0.0"},"pirarse":{"pos":"v","pol":"0.25","std":"0.0"},"piropos":{"pos":"n","pol":"0.25","std":"0.0"},"piroxicam":{"pos":"n","pol":"0.25","std":"0.0"},"pista de balonvolea":{"pos":"n","pol":"0.25","std":"0.0"},"pista de voleibol":{"pos":"n","pol":"0.25","std":"0.0"},"placa giratoria":{"pos":"n","pol":"0.25","std":"0.0"},"placar":{"pos":"v","pol":"0.25","std":"0.0"},"planaria":{"pos":"n","pol":"0.25","std":"0.0"},"planariidae":{"pos":"n","pol":"0.25","std":"0.0"},"plancton":{"pos":"n","pol":"0.25","std":"0.0"},"planeado":{"pos":"a","pol":"0.25","std":"0.0"},"plantarse":{"pos":"v","pol":"0.25","std":"0.0"},"platea":{"pos":"n","pol":"0.25","std":"0.0"},"plaza pública":{"pos":"n","pol":"0.25","std":"0.0"},"plebeyo":{"pos":"a","pol":"0.25","std":"0.0"},"plexo cardíaco":{"pos":"n","pol":"0.25","std":"0.0"},"poco retórico":{"pos":"a","pol":"0.25","std":"0.0"},"poder de resolución":{"pos":"n","pol":"0.25","std":"0.0"},"poderoso":{"pos":"a","pol":"0.25","std":"0.063"},"poderío":{"pos":"n","pol":"0.25","std":"0.0"},"podólogo":{"pos":"n","pol":"0.25","std":"0.0"},"poema sinfónico":{"pos":"n","pol":"0.25","std":"0.0"},"polaroid":{"pos":"n","pol":"0.25","std":"0.0"},"polisilábico":{"pos":"a","pol":"0.25","std":"0.0"},"polisílabo":{"pos":"a","pol":"0.25","std":"0.0"},"polisíndeton":{"pos":"n","pol":"0.25","std":"0.0"},"poltrona":{"pos":"n","pol":"0.25","std":"0.0"},"política de espera":{"pos":"n","pol":"0.25","std":"0.0"},"poner a punto":{"pos":"v","pol":"0.25","std":"0.088"},"poner atención":{"pos":"v","pol":"0.25","std":"0.0"},"poner en marcha":{"pos":"v","pol":"0.25","std":"0.0"},"poner ramplón":{"pos":"v","pol":"0.25","std":"0.0"},"poner terraza":{"pos":"v","pol":"0.25","std":"0.0"},"poner un burlete":{"pos":"v","pol":"0.25","std":"0.0"},"ponerse de acuerdo":{"pos":"v","pol":"0.25","std":"0.0"},"ponerse de moda":{"pos":"v","pol":"0.25","std":"0.0"},"popover":{"pos":"n","pol":"0.25","std":"0.0"},"populismo":{"pos":"n","pol":"0.25","std":"0.0"},"populista":{"pos":"n","pol":"0.25","std":"0.0"},"por cierto":{"pos":"r","pol":"0.25","std":"0.0"},"por derecho":{"pos":"r","pol":"0.25","std":"0.0"},"porcelana":{"pos":"n","pol":"0.25","std":"0.177"},"porcelana fina":{"pos":"n","pol":"0.25","std":"0.0"},"pormenor":{"pos":"n","pol":"0.25","std":"0.0"},"portento":{"pos":"n","pol":"0.25","std":"0.0"},"posible":{"pos":"a","pol":"0.25","std":"0.12"},"posición estratégica":{"pos":"n","pol":"0.25","std":"0.0"},"posición militar":{"pos":"n","pol":"0.25","std":"0.0"},"posmodernismo":{"pos":"n","pol":"0.25","std":"0.0"},"postoperatorio":{"pos":"a","pol":"0.25","std":"0.0"},"postor":{"pos":"n","pol":"0.25","std":"0.0"},"postratamiento":{"pos":"n","pol":"0.25","std":"0.0"},"pozo de gas":{"pos":"n","pol":"0.25","std":"0.0"},"pozo surtido":{"pos":"n","pol":"0.25","std":"0.0"},"practicante":{"pos":"a","pol":"0.25","std":"0.0"},"practicidad":{"pos":"n","pol":"0.25","std":"0.0"},"precinto":{"pos":"n","pol":"0.25","std":"0.0"},"precipitante":{"pos":"a","pol":"0.25","std":"0.0"},"precognición":{"pos":"n","pol":"0.25","std":"0.0"},"precoz":{"pos":"a","pol":"0.25","std":"0.265"},"predecible":{"pos":"a","pol":"0.25","std":"0.0"},"predestinado":{"pos":"a","pol":"0.25","std":"0.0"},"predeterminado":{"pos":"a","pol":"0.25","std":"0.0"},"prednisolona":{"pos":"n","pol":"0.25","std":"0.0"},"predominancia":{"pos":"n","pol":"0.25","std":"0.0"},"predominar":{"pos":"v","pol":"0.25","std":"0.0"},"preestreno":{"pos":"n","pol":"0.25","std":"0.0"},"preguerra":{"pos":"a","pol":"0.25","std":"0.0"},"prenatal":{"pos":"a","pol":"0.25","std":"0.0"},"prensil":{"pos":"a","pol":"0.25","std":"0.0"},"preordenar":{"pos":"v","pol":"0.25","std":"0.0"},"prescindencia":{"pos":"n","pol":"0.25","std":"0.0"},"prescindir de":{"pos":"v","pol":"0.25","std":"0.0"},"presentación publica":{"pos":"n","pol":"0.25","std":"0.0"},"presentar una coartada":{"pos":"v","pol":"0.25","std":"0.0"},"presente":{"pos":"a","pol":"0.25","std":"0.0"},"preservativo":{"pos":"a","pol":"0.25","std":"0.0"},"presión osmótica":{"pos":"n","pol":"0.25","std":"0.0"},"preso político":{"pos":"n","pol":"0.25","std":"0.0"},"prestar atención":{"pos":"v","pol":"0.25","std":"0.0"},"prestar oído":{"pos":"v","pol":"0.25","std":"0.0"},"prestatario":{"pos":"n","pol":"0.25","std":"0.0"},"presteza":{"pos":"n","pol":"0.25","std":"0.0"},"prestigio":{"pos":"n","pol":"0.25","std":"0.125"},"presumido":{"pos":"a","pol":"0.25","std":"0.0"},"prevenible":{"pos":"a","pol":"0.25","std":"0.0"},"preventivo":{"pos":"a","pol":"0.25","std":"0.144"},"principios":{"pos":"n","pol":"0.25","std":"0.0"},"probabilidad":{"pos":"n","pol":"0.25","std":"0.088"},"probidad":{"pos":"n","pol":"0.25","std":"0.0"},"proceso de representación":{"pos":"n","pol":"0.25","std":"0.0"},"proceso geológico":{"pos":"n","pol":"0.25","std":"0.0"},"proclamado":{"pos":"a","pol":"0.25","std":"0.177"},"procrastinar":{"pos":"v","pol":"0.25","std":"0.0"},"procreación":{"pos":"n","pol":"0.25","std":"0.0"},"productividad":{"pos":"n","pol":"0.25","std":"0.354"},"producto de belleza":{"pos":"n","pol":"0.25","std":"0.0"},"producto farmacéutico":{"pos":"n","pol":"0.25","std":"0.0"},"profesionalidad":{"pos":"n","pol":"0.25","std":"0.0"},"profesionalismo":{"pos":"n","pol":"0.25","std":"0.0"},"programa de instrucción":{"pos":"n","pol":"0.25","std":"0.0"},"programa de lectura":{"pos":"n","pol":"0.25","std":"0.0"},"programa de servicio":{"pos":"n","pol":"0.25","std":"0.0"},"programa vocacional":{"pos":"n","pol":"0.25","std":"0.0"},"progresismo":{"pos":"n","pol":"0.25","std":"0.0"},"progresividad":{"pos":"n","pol":"0.25","std":"0.0"},"progresivo":{"pos":"a","pol":"0.25","std":"0.129"},"progreso":{"pos":"n","pol":"0.25","std":"0.072"},"prolijo":{"pos":"a","pol":"0.25","std":"0.177"},"promulgado":{"pos":"a","pol":"0.25","std":"0.0"},"pronación":{"pos":"n","pol":"0.25","std":"0.0"},"propensión":{"pos":"n","pol":"0.25","std":"0.0"},"propio":{"pos":"a","pol":"0.25","std":"0.228"},"propiocepción":{"pos":"n","pol":"0.25","std":"0.0"},"proporcionable":{"pos":"a","pol":"0.25","std":"0.0"},"propuesta de matrimonio":{"pos":"n","pol":"0.25","std":"0.0"},"proselitismo":{"pos":"n","pol":"0.25","std":"0.0"},"prospectar":{"pos":"v","pol":"0.25","std":"0.0"},"prostitución":{"pos":"n","pol":"0.25","std":"0.0"},"protanopía":{"pos":"n","pol":"0.25","std":"0.0"},"protegido":{"pos":"n","pol":"0.25","std":"0.0"},"proteico":{"pos":"a","pol":"0.25","std":"0.0"},"protogeométrico":{"pos":"a","pol":"0.25","std":"0.0"},"prototipo":{"pos":"n","pol":"0.25","std":"0.0"},"proverbio":{"pos":"n","pol":"0.25","std":"0.0"},"provisto de continajes":{"pos":"a","pol":"0.25","std":"0.0"},"provisto de cortinajes":{"pos":"a","pol":"0.25","std":"0.0"},"provisto de fondos":{"pos":"a","pol":"0.25","std":"0.0"},"proxémica":{"pos":"n","pol":"0.25","std":"0.0"},"pseudohermafrodita":{"pos":"a","pol":"0.25","std":"0.0"},"psicoactivo":{"pos":"a","pol":"0.25","std":"0.0"},"psicología aplicada":{"pos":"n","pol":"0.25","std":"0.0"},"psicología industrial":{"pos":"n","pol":"0.25","std":"0.0"},"puente peatonal":{"pos":"n","pol":"0.25","std":"0.0"},"puente voladizo":{"pos":"n","pol":"0.25","std":"0.0"},"puerta abierta":{"pos":"n","pol":"0.25","std":"0.0"},"puertaventana":{"pos":"n","pol":"0.25","std":"0.0"},"puesto de primeros auxilios":{"pos":"n","pol":"0.25","std":"0.0"},"puesto de socorro":{"pos":"n","pol":"0.25","std":"0.0"},"pulidez":{"pos":"n","pol":"0.25","std":"0.0"},"pulimento":{"pos":"n","pol":"0.25","std":"0.0"},"pulverulento":{"pos":"a","pol":"0.25","std":"0.0"},"punta de alfiler":{"pos":"n","pol":"0.25","std":"0.0"},"punta del alfiler":{"pos":"n","pol":"0.25","std":"0.0"},"punteado":{"pos":"n","pol":"0.25","std":"0.0"},"punto celeste":{"pos":"n","pol":"0.25","std":"0.0"},"punto cúlmine":{"pos":"n","pol":"0.25","std":"0.0"},"punto de encuentro":{"pos":"n","pol":"0.25","std":"0.0"},"punto de intersección":{"pos":"n","pol":"0.25","std":"0.0"},"punto destacado":{"pos":"n","pol":"0.25","std":"0.0"},"punto final":{"pos":"n","pol":"0.25","std":"0.0"},"punto geográfico":{"pos":"n","pol":"0.25","std":"0.0"},"puritano":{"pos":"a","pol":"0.25","std":"0.382"},"puro talento":{"pos":"n","pol":"0.25","std":"0.0"},"puzzle":{"pos":"n","pol":"0.25","std":"0.0"},"pájaro cantor":{"pos":"n","pol":"0.25","std":"0.0"},"pájaro pelágico":{"pos":"n","pol":"0.25","std":"0.0"},"párpado":{"pos":"n","pol":"0.25","std":"0.0"},"pérdidas":{"pos":"n","pol":"0.25","std":"0.0"},"quark":{"pos":"n","pol":"0.25","std":"0.0"},"querubín":{"pos":"n","pol":"0.25","std":"0.0"},"quid":{"pos":"n","pol":"0.25","std":"0.0"},"quididad":{"pos":"n","pol":"0.25","std":"0.0"},"quinacrina":{"pos":"n","pol":"0.25","std":"0.0"},"quinceañero":{"pos":"n","pol":"0.25","std":"0.0"},"quinidina":{"pos":"n","pol":"0.25","std":"0.0"},"quitapiedras":{"pos":"n","pol":"0.25","std":"0.0"},"racimado":{"pos":"a","pol":"0.25","std":"0.0"},"racionalización":{"pos":"n","pol":"0.25","std":"0.144"},"radiactivo":{"pos":"a","pol":"0.25","std":"0.0"},"radioactivo":{"pos":"a","pol":"0.25","std":"0.0"},"ragtime":{"pos":"n","pol":"0.25","std":"0.0"},"ramoso":{"pos":"a","pol":"0.25","std":"0.0"},"rango superior":{"pos":"n","pol":"0.25","std":"0.0"},"ranura de expansión":{"pos":"n","pol":"0.25","std":"0.0"},"raqueta de badminton":{"pos":"n","pol":"0.25","std":"0.0"},"rastafarianismo":{"pos":"n","pol":"0.25","std":"0.0"},"ratificado":{"pos":"a","pol":"0.25","std":"0.0"},"ratón de biblioteca":{"pos":"n","pol":"0.25","std":"0.0"},"razonabilidad":{"pos":"n","pol":"0.25","std":"0.0"},"razonamiento":{"pos":"n","pol":"0.25","std":"0.0"},"razón social":{"pos":"n","pol":"0.25","std":"0.0"},"reaccionario":{"pos":"n","pol":"0.25","std":"0.0"},"readmisión":{"pos":"n","pol":"0.25","std":"0.0"},"reafirmación":{"pos":"n","pol":"0.25","std":"0.177"},"reajustarse":{"pos":"v","pol":"0.25","std":"0.0"},"realpolitik":{"pos":"n","pol":"0.25","std":"0.0"},"reargumentar":{"pos":"v","pol":"0.25","std":"0.0"},"reblandecerse":{"pos":"v","pol":"0.25","std":"0.0"},"rebosar":{"pos":"v","pol":"0.25","std":"0.177"},"recablear":{"pos":"v","pol":"0.25","std":"0.0"},"recalentado":{"pos":"a","pol":"0.25","std":"0.0"},"recauchutar":{"pos":"v","pol":"0.25","std":"0.0"},"recepcionar":{"pos":"v","pol":"0.25","std":"0.0"},"receptivo":{"pos":"a","pol":"0.25","std":"0.26"},"rechonchez":{"pos":"n","pol":"0.25","std":"0.0"},"reciente":{"pos":"a","pol":"0.25","std":"0.125"},"recinto ferial":{"pos":"n","pol":"0.25","std":"0.0"},"recluido":{"pos":"a","pol":"0.25","std":"0.0"},"recolección del heno":{"pos":"n","pol":"0.25","std":"0.0"},"recompensado":{"pos":"a","pol":"0.25","std":"0.0"},"recompensar":{"pos":"v","pol":"0.25","std":"0.068"},"recomponerse":{"pos":"v","pol":"0.25","std":"0.0"},"reconocimiento interescolar":{"pos":"n","pol":"0.25","std":"0.0"},"recorrer mundo":{"pos":"v","pol":"0.25","std":"0.0"},"recortado":{"pos":"a","pol":"0.25","std":"0.191"},"recursos minerales":{"pos":"n","pol":"0.25","std":"0.0"},"recusable":{"pos":"a","pol":"0.25","std":"0.0"},"recíproco":{"pos":"a","pol":"0.25","std":"0.144"},"reencarnado":{"pos":"a","pol":"0.25","std":"0.0"},"reencauchar":{"pos":"v","pol":"0.25","std":"0.0"},"reencuadernar":{"pos":"v","pol":"0.25","std":"0.0"},"reensamblar":{"pos":"v","pol":"0.25","std":"0.0"},"refacción":{"pos":"n","pol":"0.25","std":"0.0"},"reflexología":{"pos":"n","pol":"0.25","std":"0.0"},"reformación":{"pos":"n","pol":"0.25","std":"0.0"},"reformador social":{"pos":"n","pol":"0.25","std":"0.0"},"reformismo":{"pos":"n","pol":"0.25","std":"0.0"},"refractivo":{"pos":"a","pol":"0.25","std":"0.0"},"refrendar":{"pos":"v","pol":"0.25","std":"0.0"},"refringente":{"pos":"a","pol":"0.25","std":"0.0"},"refrán":{"pos":"n","pol":"0.25","std":"0.0"},"regalado":{"pos":"a","pol":"0.25","std":"0.0"},"regalarse":{"pos":"v","pol":"0.25","std":"0.0"},"regla de oro":{"pos":"n","pol":"0.25","std":"0.177"},"regularizarse":{"pos":"v","pol":"0.25","std":"0.0"},"reharmonización":{"pos":"n","pol":"0.25","std":"0.0"},"reir a carcajadas":{"pos":"v","pol":"0.25","std":"0.0"},"relacionado":{"pos":"a","pol":"0.25","std":"0.056"},"relacionarse":{"pos":"v","pol":"0.25","std":"0.0"},"relaciones sexuales":{"pos":"n","pol":"0.25","std":"0.0"},"relación ligera":{"pos":"n","pol":"0.25","std":"0.0"},"relevar":{"pos":"v","pol":"0.25","std":"0.088"},"relinchar":{"pos":"v","pol":"0.25","std":"0.0"},"reloj de cuco":{"pos":"n","pol":"0.25","std":"0.0"},"relojería":{"pos":"n","pol":"0.25","std":"0.0"},"relumbrante":{"pos":"a","pol":"0.25","std":"0.0"},"relumbrar":{"pos":"v","pol":"0.25","std":"0.177"},"remanente":{"pos":"a","pol":"0.25","std":"0.0"},"rematadora":{"pos":"n","pol":"0.25","std":"0.0"},"remediable":{"pos":"a","pol":"0.25","std":"0.0"},"reminiscencia":{"pos":"n","pol":"0.25","std":"0.0"},"remolcador":{"pos":"n","pol":"0.25","std":"0.0"},"remunerar":{"pos":"v","pol":"0.25","std":"0.0"},"renacimiento espiritual":{"pos":"n","pol":"0.25","std":"0.0"},"renovable":{"pos":"a","pol":"0.25","std":"0.0"},"rentar":{"pos":"v","pol":"0.25","std":"0.0"},"repartimiento":{"pos":"n","pol":"0.25","std":"0.0"},"repensar":{"pos":"v","pol":"0.25","std":"0.0"},"repetido":{"pos":"a","pol":"0.25","std":"0.0"},"replantearse":{"pos":"v","pol":"0.25","std":"0.0"},"reposabrazos":{"pos":"n","pol":"0.25","std":"0.0"},"representado":{"pos":"a","pol":"0.25","std":"0.177"},"representante comercial":{"pos":"n","pol":"0.25","std":"0.0"},"reps":{"pos":"n","pol":"0.25","std":"0.0"},"requisito académico":{"pos":"n","pol":"0.25","std":"0.0"},"requisitos académicos":{"pos":"n","pol":"0.25","std":"0.0"},"resbaladizo":{"pos":"a","pol":"0.25","std":"0.088"},"resbaloso":{"pos":"a","pol":"0.25","std":"0.0"},"rescindible":{"pos":"a","pol":"0.25","std":"0.0"},"reservable":{"pos":"a","pol":"0.25","std":"0.0"},"residente":{"pos":"a","pol":"0.25","std":"0.0"},"residual":{"pos":"a","pol":"0.25","std":"0.0"},"respecto":{"pos":"n","pol":"0.25","std":"0.0"},"responder de":{"pos":"v","pol":"0.25","std":"0.0"},"restallido":{"pos":"n","pol":"0.25","std":"0.0"},"restringido":{"pos":"a","pol":"0.25","std":"0.105"},"resueltamente":{"pos":"r","pol":"0.25","std":"0.0"},"retardado":{"pos":"a","pol":"0.25","std":"0.0"},"retozo":{"pos":"n","pol":"0.25","std":"0.0"},"retroactivo":{"pos":"a","pol":"0.25","std":"0.177"},"retumbante":{"pos":"a","pol":"0.25","std":"0.0"},"reverdecer":{"pos":"v","pol":"0.25","std":"0.0"},"reverencia":{"pos":"n","pol":"0.25","std":"0.209"},"reversibilidad":{"pos":"n","pol":"0.25","std":"0.0"},"revisado":{"pos":"a","pol":"0.25","std":"0.177"},"riada":{"pos":"n","pol":"0.25","std":"0.0"},"ribavirina":{"pos":"n","pol":"0.25","std":"0.0"},"ricura":{"pos":"n","pol":"0.25","std":"0.0"},"rifar":{"pos":"v","pol":"0.25","std":"0.0"},"rinoplastia":{"pos":"n","pol":"0.25","std":"0.0"},"rito":{"pos":"n","pol":"0.25","std":"0.0"},"ritual":{"pos":"a","pol":"0.25","std":"0.0"},"ritualista":{"pos":"a","pol":"0.25","std":"0.0"},"roca volcánica vítrea":{"pos":"n","pol":"0.25","std":"0.0"},"rogativa":{"pos":"n","pol":"0.25","std":"0.0"},"rojizo":{"pos":"a","pol":"0.25","std":"0.177"},"rol":{"pos":"n","pol":"0.25","std":"0.0"},"rol social":{"pos":"n","pol":"0.25","std":"0.0"},"roletear":{"pos":"v","pol":"0.25","std":"0.0"},"rompehielos":{"pos":"n","pol":"0.25","std":"0.0"},"rondalla":{"pos":"n","pol":"0.25","std":"0.0"},"ronronear":{"pos":"v","pol":"0.25","std":"0.088"},"ropa de calle":{"pos":"n","pol":"0.25","std":"0.0"},"rudimentos":{"pos":"n","pol":"0.25","std":"0.0"},"ruego":{"pos":"n","pol":"0.25","std":"0.0"},"ruidoso":{"pos":"a","pol":"0.25","std":"0.102"},"rutilar":{"pos":"v","pol":"0.25","std":"0.0"},"rutina recursiva":{"pos":"n","pol":"0.25","std":"0.0"},"récord mundial":{"pos":"n","pol":"0.25","std":"0.0"},"saber divino":{"pos":"n","pol":"0.25","std":"0.0"},"saborizar":{"pos":"v","pol":"0.25","std":"0.0"},"sabrosura":{"pos":"n","pol":"0.25","std":"0.0"},"sacramental":{"pos":"a","pol":"0.25","std":"0.442"},"sala de masajes":{"pos":"n","pol":"0.25","std":"0.0"},"salaz":{"pos":"a","pol":"0.25","std":"0.088"},"salir bien":{"pos":"v","pol":"0.25","std":"0.0"},"salir pitando":{"pos":"v","pol":"0.25","std":"0.0"},"salvación":{"pos":"n","pol":"0.25","std":"0.451"},"salón de té":{"pos":"n","pol":"0.25","std":"0.0"},"sancionado":{"pos":"a","pol":"0.25","std":"0.0"},"santa maria":{"pos":"n","pol":"0.25","std":"0.0"},"santa sede":{"pos":"n","pol":"0.25","std":"0.0"},"santidad":{"pos":"n","pol":"0.25","std":"0.161"},"santoral":{"pos":"n","pol":"0.25","std":"0.177"},"saudade":{"pos":"n","pol":"0.25","std":"0.0"},"saurios":{"pos":"n","pol":"0.25","std":"0.0"},"sazón":{"pos":"n","pol":"0.25","std":"0.0"},"schola cantorum":{"pos":"n","pol":"0.25","std":"0.0"},"sector de ocupación":{"pos":"n","pol":"0.25","std":"0.0"},"sector ocupacional":{"pos":"n","pol":"0.25","std":"0.0"},"secuencial":{"pos":"a","pol":"0.25","std":"0.0"},"secularismo":{"pos":"n","pol":"0.25","std":"0.0"},"sedativo":{"pos":"n","pol":"0.25","std":"0.0"},"seleccionador":{"pos":"n","pol":"0.25","std":"0.0"},"selectividad":{"pos":"n","pol":"0.25","std":"0.0"},"semicircular":{"pos":"a","pol":"0.25","std":"0.0"},"semicomatoso":{"pos":"a","pol":"0.25","std":"0.0"},"semiconsciente":{"pos":"a","pol":"0.25","std":"0.0"},"semicualificado":{"pos":"a","pol":"0.25","std":"0.0"},"semiempírico":{"pos":"a","pol":"0.25","std":"0.0"},"semiformal":{"pos":"a","pol":"0.25","std":"0.0"},"semioficial":{"pos":"a","pol":"0.25","std":"0.0"},"semiprocesado":{"pos":"a","pol":"0.25","std":"0.0"},"semitransparente":{"pos":"a","pol":"0.25","std":"0.0"},"sensibilizador":{"pos":"a","pol":"0.25","std":"0.0"},"sensualmente":{"pos":"r","pol":"0.25","std":"0.0"},"sentar tendencia":{"pos":"n","pol":"0.25","std":"0.0"},"sentencia del árbitro":{"pos":"n","pol":"0.25","std":"0.0"},"sentido del humor":{"pos":"n","pol":"0.25","std":"0.0"},"sentido del olfato":{"pos":"n","pol":"0.25","std":"0.0"},"sentimental":{"pos":"a","pol":"0.25","std":"0.0"},"sentirse":{"pos":"v","pol":"0.25","std":"0.088"},"ser promiscuo":{"pos":"v","pol":"0.25","std":"0.0"},"ser testigo":{"pos":"v","pol":"0.25","std":"0.0"},"serpentino":{"pos":"a","pol":"0.25","std":"0.088"},"serrado":{"pos":"a","pol":"0.25","std":"0.0"},"sertralina":{"pos":"n","pol":"0.25","std":"0.0"},"servicio de paquetes postales":{"pos":"n","pol":"0.25","std":"0.0"},"servicio militar obligatorio":{"pos":"n","pol":"0.25","std":"0.0"},"servicio militar selectivo":{"pos":"n","pol":"0.25","std":"0.0"},"servicio público":{"pos":"n","pol":"0.25","std":"0.354"},"servicio social":{"pos":"n","pol":"0.25","std":"0.0"},"servicio telefónico":{"pos":"n","pol":"0.25","std":"0.0"},"servo":{"pos":"n","pol":"0.25","std":"0.0"},"servomecanismo":{"pos":"n","pol":"0.25","std":"0.0"},"sesquipedal":{"pos":"a","pol":"0.25","std":"0.0"},"setter":{"pos":"n","pol":"0.25","std":"0.0"},"seudohermafrodita":{"pos":"a","pol":"0.25","std":"0.0"},"sex-appeal":{"pos":"n","pol":"0.25","std":"0.0"},"sexista":{"pos":"n","pol":"0.25","std":"0.0"},"sexo extramatrimonial":{"pos":"n","pol":"0.25","std":"0.0"},"sexo ilícito":{"pos":"n","pol":"0.25","std":"0.0"},"shock de Metrazol":{"pos":"n","pol":"0.25","std":"0.0"},"shock de metrazol":{"pos":"n","pol":"0.25","std":"0.0"},"shock insulínico":{"pos":"n","pol":"0.25","std":"0.0"},"signatario":{"pos":"n","pol":"0.25","std":"0.0"},"significantemente":{"pos":"r","pol":"0.25","std":"0.0"},"significatividad":{"pos":"n","pol":"0.25","std":"0.0"},"signo característico":{"pos":"n","pol":"0.25","std":"0.0"},"signo diacrítico":{"pos":"n","pol":"0.25","std":"0.0"},"simbiótico":{"pos":"a","pol":"0.25","std":"0.0"},"sin levadura":{"pos":"a","pol":"0.25","std":"0.0"},"sinclinal":{"pos":"a","pol":"0.25","std":"0.0"},"sincronismo":{"pos":"n","pol":"0.25","std":"0.0"},"sincronizado":{"pos":"a","pol":"0.25","std":"0.0"},"sincronía":{"pos":"n","pol":"0.25","std":"0.0"},"sinfonizar":{"pos":"v","pol":"0.25","std":"0.0"},"sintonización":{"pos":"n","pol":"0.25","std":"0.0"},"sinusoidal":{"pos":"a","pol":"0.25","std":"0.0"},"sirdar":{"pos":"n","pol":"0.25","std":"0.0"},"sistema de ventilación":{"pos":"n","pol":"0.25","std":"0.177"},"sistema de vigilancia":{"pos":"n","pol":"0.25","std":"0.0"},"sitcom":{"pos":"n","pol":"0.25","std":"0.0"},"situado":{"pos":"a","pol":"0.25","std":"0.0"},"soberano":{"pos":"a","pol":"0.25","std":"0.177"},"soberbia":{"pos":"n","pol":"0.25","std":"0.0"},"sobrecalentado":{"pos":"a","pol":"0.25","std":"0.0"},"sobreexposición":{"pos":"n","pol":"0.25","std":"0.0"},"sobreprotector":{"pos":"a","pol":"0.25","std":"0.0"},"sobrepuesto":{"pos":"a","pol":"0.25","std":"0.0"},"socialité":{"pos":"n","pol":"0.25","std":"0.0"},"sociobiológicamente":{"pos":"r","pol":"0.25","std":"0.0"},"sociolingüísticamente":{"pos":"r","pol":"0.25","std":"0.0"},"soldar":{"pos":"v","pol":"0.25","std":"0.177"},"soldar a tope":{"pos":"v","pol":"0.25","std":"0.0"},"soldar por puntos":{"pos":"v","pol":"0.25","std":"0.0"},"soluble":{"pos":"a","pol":"0.25","std":"0.265"},"sombreado":{"pos":"a","pol":"0.25","std":"0.0"},"sombroso":{"pos":"a","pol":"0.25","std":"0.0"},"someterse a":{"pos":"v","pol":"0.25","std":"0.0"},"somnolencia":{"pos":"n","pol":"0.25","std":"0.0"},"somnoliento":{"pos":"a","pol":"0.25","std":"0.191"},"somnífero":{"pos":"a","pol":"0.25","std":"0.0"},"sonetear":{"pos":"v","pol":"0.25","std":"0.354"},"sonido consonante":{"pos":"n","pol":"0.25","std":"0.0"},"sonido consonántico":{"pos":"n","pol":"0.25","std":"0.0"},"sopapo":{"pos":"n","pol":"0.25","std":"0.0"},"sorprendido":{"pos":"a","pol":"0.25","std":"0.0"},"sostén principal":{"pos":"n","pol":"0.25","std":"0.0"},"soñador":{"pos":"a","pol":"0.25","std":"0.0"},"soñolencia":{"pos":"n","pol":"0.25","std":"0.0"},"sprechgesang":{"pos":"n","pol":"0.25","std":"0.0"},"starets":{"pos":"n","pol":"0.25","std":"0.0"},"stent":{"pos":"n","pol":"0.25","std":"0.0"},"suavizado":{"pos":"a","pol":"0.25","std":"0.088"},"subcontinente":{"pos":"n","pol":"0.25","std":"0.0"},"subcultura":{"pos":"n","pol":"0.25","std":"0.0"},"subjetividad":{"pos":"n","pol":"0.25","std":"0.0"},"sublevado":{"pos":"a","pol":"0.25","std":"0.0"},"sublevar":{"pos":"v","pol":"0.25","std":"0.0"},"sublimidad":{"pos":"n","pol":"0.25","std":"0.0"},"suborden Lipotyphla":{"pos":"n","pol":"0.25","std":"0.0"},"subsidiar":{"pos":"v","pol":"0.25","std":"0.088"},"subvencionar":{"pos":"v","pol":"0.25","std":"0.072"},"subyugable":{"pos":"a","pol":"0.25","std":"0.0"},"sucesión ecológica":{"pos":"n","pol":"0.25","std":"0.0"},"sudismo":{"pos":"n","pol":"0.25","std":"0.0"},"sufragio":{"pos":"n","pol":"0.25","std":"0.0"},"sujetalibros":{"pos":"n","pol":"0.25","std":"0.0"},"sujetar con cabilla":{"pos":"v","pol":"0.25","std":"0.0"},"sulfamida":{"pos":"n","pol":"0.25","std":"0.0"},"suma total":{"pos":"n","pol":"0.25","std":"0.0"},"sumatorio":{"pos":"n","pol":"0.25","std":"0.0"},"suministrador":{"pos":"n","pol":"0.25","std":"0.0"},"suntuario":{"pos":"a","pol":"0.25","std":"0.0"},"superabundancia":{"pos":"n","pol":"0.25","std":"0.0"},"superdotada":{"pos":"n","pol":"0.25","std":"0.0"},"superdotado":{"pos":"n","pol":"0.25","std":"0.0"},"supergigante":{"pos":"n","pol":"0.25","std":"0.0"},"supervisor":{"pos":"a","pol":"0.25","std":"0.0"},"suplente":{"pos":"a","pol":"0.25","std":"0.0"},"supremacía":{"pos":"n","pol":"0.25","std":"0.0"},"supresivo":{"pos":"a","pol":"0.25","std":"0.0"},"suscribir":{"pos":"v","pol":"0.25","std":"0.0"},"suscripción":{"pos":"n","pol":"0.25","std":"0.0"},"suspensión cardán":{"pos":"n","pol":"0.25","std":"0.0"},"suspensión de pagos":{"pos":"n","pol":"0.25","std":"0.0"},"sustantivo":{"pos":"a","pol":"0.25","std":"0.0"},"swami":{"pos":"n","pol":"0.25","std":"0.0"},"swing":{"pos":"n","pol":"0.25","std":"0.0"},"sábana bajera":{"pos":"n","pol":"0.25","std":"0.0"},"sáfico":{"pos":"a","pol":"0.25","std":"0.0"},"sánscrito":{"pos":"n","pol":"0.25","std":"0.0"},"sépidos":{"pos":"n","pol":"0.25","std":"0.0"},"séptimo cielo":{"pos":"n","pol":"0.25","std":"0.0"},"séquito":{"pos":"n","pol":"0.25","std":"0.0"},"sínfito":{"pos":"n","pol":"0.25","std":"0.0"},"sólidamente":{"pos":"r","pol":"0.25","std":"0.0"},"súbito":{"pos":"a","pol":"0.25","std":"0.0"},"tabla de espiritismo":{"pos":"n","pol":"0.25","std":"0.0"},"tachuela":{"pos":"n","pol":"0.25","std":"0.0"},"talar":{"pos":"v","pol":"0.25","std":"0.0"},"taller de encuadernación":{"pos":"n","pol":"0.25","std":"0.0"},"tangibilidad":{"pos":"n","pol":"0.25","std":"0.0"},"tangible":{"pos":"a","pol":"0.25","std":"0.068"},"tapado":{"pos":"a","pol":"0.25","std":"0.0"},"tasajear":{"pos":"v","pol":"0.25","std":"0.0"},"taxonómicamente":{"pos":"r","pol":"0.25","std":"0.0"},"tecnóloga":{"pos":"n","pol":"0.25","std":"0.0"},"tecnólogo":{"pos":"n","pol":"0.25","std":"0.0"},"tejedura de punto":{"pos":"n","pol":"0.25","std":"0.0"},"tejemaneje":{"pos":"n","pol":"0.25","std":"0.088"},"tejido":{"pos":"a","pol":"0.25","std":"0.0"},"tejido de punto":{"pos":"n","pol":"0.25","std":"0.0"},"telecomedia":{"pos":"n","pol":"0.25","std":"0.0"},"telefonazo":{"pos":"n","pol":"0.25","std":"0.0"},"telescopio de Newton":{"pos":"n","pol":"0.25","std":"0.0"},"telescopio gregoriano":{"pos":"n","pol":"0.25","std":"0.0"},"telescopio óptico":{"pos":"n","pol":"0.25","std":"0.0"},"teletransportar":{"pos":"v","pol":"0.25","std":"0.0"},"temperamental":{"pos":"a","pol":"0.25","std":"0.0"},"temperamentalmente":{"pos":"r","pol":"0.25","std":"0.0"},"temperatura ambiente":{"pos":"n","pol":"0.25","std":"0.0"},"tendenciosidad":{"pos":"n","pol":"0.25","std":"0.0"},"tenencia de acciones":{"pos":"n","pol":"0.25","std":"0.0"},"tener suerte":{"pos":"v","pol":"0.25","std":"0.0"},"tenis de mesa":{"pos":"n","pol":"0.25","std":"0.0"},"teoría de conjuntos":{"pos":"n","pol":"0.25","std":"0.0"},"teosofismo":{"pos":"n","pol":"0.25","std":"0.0"},"terapia":{"pos":"n","pol":"0.25","std":"0.088"},"terapia ocupacional":{"pos":"n","pol":"0.25","std":"0.0"},"terazosina":{"pos":"n","pol":"0.25","std":"0.0"},"terciopelo":{"pos":"n","pol":"0.25","std":"0.0"},"terminado":{"pos":"a","pol":"0.25","std":"0.0"},"termoplástico":{"pos":"a","pol":"0.25","std":"0.0"},"territorialmente":{"pos":"r","pol":"0.25","std":"0.0"},"tesina":{"pos":"n","pol":"0.25","std":"0.0"},"tesis doctoral":{"pos":"n","pol":"0.25","std":"0.0"},"tiempo de ocio":{"pos":"n","pol":"0.25","std":"0.177"},"tiempo sincopado":{"pos":"n","pol":"0.25","std":"0.0"},"tienda especializada":{"pos":"n","pol":"0.25","std":"0.0"},"tirada":{"pos":"n","pol":"0.25","std":"0.0"},"tirado":{"pos":"a","pol":"0.25","std":"0.0"},"tocoferol":{"pos":"n","pol":"0.25","std":"0.0"},"todo":{"pos":"a","pol":"0.25","std":"0.217"},"tolazamida":{"pos":"n","pol":"0.25","std":"0.0"},"toma de control":{"pos":"n","pol":"0.25","std":"0.0"},"tomar el aire":{"pos":"v","pol":"0.25","std":"0.0"},"tomar nota":{"pos":"v","pol":"0.25","std":"0.0"},"tomar parte en":{"pos":"v","pol":"0.25","std":"0.0"},"tonificar":{"pos":"v","pol":"0.25","std":"0.088"},"tonsurado":{"pos":"a","pol":"0.25","std":"0.0"},"tope":{"pos":"a","pol":"0.25","std":"0.0"},"toque de corneta":{"pos":"n","pol":"0.25","std":"0.0"},"toque de fajina":{"pos":"n","pol":"0.25","std":"0.0"},"tortuga boba":{"pos":"n","pol":"0.25","std":"0.0"},"trabajador calificado":{"pos":"n","pol":"0.25","std":"0.0"},"trabajador cualificado":{"pos":"n","pol":"0.25","std":"0.0"},"trabajador social":{"pos":"n","pol":"0.25","std":"0.0"},"trabajadora calificada":{"pos":"n","pol":"0.25","std":"0.0"},"trabajadora cualificada":{"pos":"n","pol":"0.25","std":"0.0"},"trabajo en equipo":{"pos":"n","pol":"0.25","std":"0.0"},"tracto":{"pos":"n","pol":"0.25","std":"0.0"},"tragicomedia":{"pos":"n","pol":"0.25","std":"0.0"},"tragicómico":{"pos":"a","pol":"0.25","std":"0.331"},"tramitación":{"pos":"n","pol":"0.25","std":"0.0"},"trampantojo":{"pos":"n","pol":"0.25","std":"0.0"},"transferible":{"pos":"a","pol":"0.25","std":"0.191"},"transimisible":{"pos":"a","pol":"0.25","std":"0.0"},"transistor":{"pos":"n","pol":"0.25","std":"0.0"},"transitivizar":{"pos":"v","pol":"0.25","std":"0.0"},"transmundano":{"pos":"a","pol":"0.25","std":"0.0"},"transparente":{"pos":"a","pol":"0.25","std":"0.191"},"transplacentario":{"pos":"a","pol":"0.25","std":"0.0"},"transporte por camión":{"pos":"n","pol":"0.25","std":"0.0"},"transporte terrestre":{"pos":"n","pol":"0.25","std":"0.0"},"transvasar":{"pos":"v","pol":"0.25","std":"0.0"},"trascendencia":{"pos":"n","pol":"0.25","std":"0.177"},"trasmundano":{"pos":"a","pol":"0.25","std":"0.0"},"tratado de paz":{"pos":"n","pol":"0.25","std":"0.0"},"tratado equitativo":{"pos":"n","pol":"0.25","std":"0.0"},"tratar animales":{"pos":"v","pol":"0.25","std":"0.0"},"trato equitativo":{"pos":"n","pol":"0.25","std":"0.0"},"trato justo":{"pos":"n","pol":"0.25","std":"0.0"},"travestido":{"pos":"a","pol":"0.25","std":"0.0"},"tribunal de justicia":{"pos":"n","pol":"0.25","std":"0.0"},"triclormetiazida":{"pos":"n","pol":"0.25","std":"0.0"},"tricotado":{"pos":"n","pol":"0.25","std":"0.0"},"tridente":{"pos":"n","pol":"0.25","std":"0.0"},"tridimensional":{"pos":"a","pol":"0.25","std":"0.0"},"triforio":{"pos":"n","pol":"0.25","std":"0.0"},"trilobita":{"pos":"n","pol":"0.25","std":"0.0"},"trineo de vela":{"pos":"n","pol":"0.25","std":"0.0"},"triquion":{"pos":"n","pol":"0.25","std":"0.0"},"tritanopía":{"pos":"n","pol":"0.25","std":"0.0"},"trogon":{"pos":"n","pol":"0.25","std":"0.0"},"truco":{"pos":"n","pol":"0.25","std":"0.0"},"truco de magia":{"pos":"n","pol":"0.25","std":"0.0"},"trueque":{"pos":"n","pol":"0.25","std":"0.0"},"trust":{"pos":"n","pol":"0.25","std":"0.0"},"tríplica":{"pos":"n","pol":"0.25","std":"0.0"},"trípode":{"pos":"n","pol":"0.25","std":"0.0"},"tubo acústico":{"pos":"n","pol":"0.25","std":"0.0"},"tupé":{"pos":"n","pol":"0.25","std":"0.0"},"turno":{"pos":"n","pol":"0.25","std":"0.177"},"términos":{"pos":"n","pol":"0.25","std":"0.0"},"tímpano":{"pos":"n","pol":"0.25","std":"0.0"},"títeres":{"pos":"n","pol":"0.25","std":"0.0"},"título convertible":{"pos":"n","pol":"0.25","std":"0.0"},"título cupón cero":{"pos":"n","pol":"0.25","std":"0.0"},"título hipotecario":{"pos":"n","pol":"0.25","std":"0.0"},"ubicuo":{"pos":"a","pol":"0.25","std":"0.0"},"ultraconservador":{"pos":"n","pol":"0.25","std":"0.0"},"ultraderechista":{"pos":"n","pol":"0.25","std":"0.0"},"ultravioleta":{"pos":"a","pol":"0.25","std":"0.0"},"umbroso":{"pos":"a","pol":"0.25","std":"0.0"},"unidad de conductancia":{"pos":"n","pol":"0.25","std":"0.0"},"unir en matrimonio":{"pos":"v","pol":"0.25","std":"0.0"},"unirse en matrimonio":{"pos":"v","pol":"0.25","std":"0.0"},"universo del discurso":{"pos":"n","pol":"0.25","std":"0.0"},"unión consensual":{"pos":"n","pol":"0.25","std":"0.0"},"urraca":{"pos":"n","pol":"0.25","std":"0.0"},"usufructo":{"pos":"n","pol":"0.25","std":"0.177"},"utilizado":{"pos":"a","pol":"0.25","std":"0.063"},"utrículo":{"pos":"n","pol":"0.25","std":"0.0"},"utópico":{"pos":"a","pol":"0.25","std":"0.331"},"vagaroso":{"pos":"a","pol":"0.25","std":"0.0"},"vahear":{"pos":"v","pol":"0.25","std":"0.0"},"vaivén":{"pos":"n","pol":"0.25","std":"0.0"},"valer la pena":{"pos":"v","pol":"0.25","std":"0.0"},"valor no cotizado":{"pos":"n","pol":"0.25","std":"0.0"},"valoración crítica":{"pos":"n","pol":"0.25","std":"0.0"},"valorización crítica":{"pos":"n","pol":"0.25","std":"0.0"},"vampirismo":{"pos":"n","pol":"0.25","std":"0.0"},"vaporizable":{"pos":"a","pol":"0.25","std":"0.0"},"vecino":{"pos":"a","pol":"0.25","std":"0.0"},"velludo":{"pos":"n","pol":"0.25","std":"0.0"},"vena cardinal":{"pos":"n","pol":"0.25","std":"0.0"},"vena cava":{"pos":"n","pol":"0.25","std":"0.0"},"vena etmoidal":{"pos":"n","pol":"0.25","std":"0.0"},"vena lacrimal":{"pos":"n","pol":"0.25","std":"0.0"},"vena oftálmica":{"pos":"n","pol":"0.25","std":"0.0"},"vena oftálmica superior":{"pos":"n","pol":"0.25","std":"0.0"},"vena pancreática":{"pos":"n","pol":"0.25","std":"0.0"},"vena posterior del ventrículo izquierdo":{"pos":"n","pol":"0.25","std":"0.0"},"venas epigástricas superiores":{"pos":"n","pol":"0.25","std":"0.0"},"venas superiores epigástricas":{"pos":"n","pol":"0.25","std":"0.0"},"venial":{"pos":"a","pol":"0.25","std":"0.0"},"venta condicionada":{"pos":"n","pol":"0.25","std":"0.0"},"ventaja fiscal":{"pos":"n","pol":"0.25","std":"0.0"},"ventanilla":{"pos":"n","pol":"0.25","std":"0.0"},"ventrudo":{"pos":"a","pol":"0.25","std":"0.0"},"verboso":{"pos":"a","pol":"0.25","std":"0.0"},"verde guisante":{"pos":"a","pol":"0.25","std":"0.0"},"verde mar":{"pos":"n","pol":"0.25","std":"0.0"},"verdear":{"pos":"v","pol":"0.25","std":"0.0"},"verdecer":{"pos":"v","pol":"0.25","std":"0.0"},"verosimilitud":{"pos":"n","pol":"0.25","std":"0.177"},"verse":{"pos":"v","pol":"0.25","std":"0.0"},"vespertiliónidos":{"pos":"n","pol":"0.25","std":"0.0"},"vestido camisero":{"pos":"n","pol":"0.25","std":"0.0"},"vestirse":{"pos":"v","pol":"0.25","std":"0.0"},"vez":{"pos":"n","pol":"0.25","std":"0.0"},"viajante":{"pos":"n","pol":"0.25","std":"0.0"},"vida real":{"pos":"n","pol":"0.25","std":"0.0"},"vidrio de Murano":{"pos":"n","pol":"0.25","std":"0.0"},"vinculante":{"pos":"a","pol":"0.25","std":"0.0"},"vindicador":{"pos":"n","pol":"-0.25","std":"0.0"},"vitalista":{"pos":"n","pol":"0.25","std":"0.0"},"vitamina e":{"pos":"n","pol":"0.25","std":"0.0"},"viviente":{"pos":"a","pol":"0.25","std":"0.088"},"vocalización":{"pos":"n","pol":"0.25","std":"0.0"},"volante":{"pos":"a","pol":"0.25","std":"0.0"},"volatilizable":{"pos":"a","pol":"0.25","std":"0.0"},"volquete":{"pos":"n","pol":"0.25","std":"0.0"},"voltímetro electrónico":{"pos":"n","pol":"0.25","std":"0.0"},"voluntad incansable":{"pos":"n","pol":"0.25","std":"0.0"},"voyerismo":{"pos":"n","pol":"0.25","std":"0.0"},"voyeurismo":{"pos":"n","pol":"0.25","std":"0.0"},"vulcanizador":{"pos":"n","pol":"0.25","std":"0.0"},"vágil":{"pos":"a","pol":"0.25","std":"0.0"},"válvula semilunar":{"pos":"n","pol":"0.25","std":"0.0"},"vía ancha":{"pos":"n","pol":"0.25","std":"0.0"},"vía arterial":{"pos":"n","pol":"0.25","std":"0.0"},"vía estrecha":{"pos":"n","pol":"0.25","std":"0.0"},"vía expresa":{"pos":"n","pol":"0.25","std":"0.0"},"wellerismo":{"pos":"n","pol":"0.25","std":"0.0"},"wica":{"pos":"n","pol":"0.25","std":"0.0"},"wicca":{"pos":"n","pol":"0.25","std":"0.0"},"xerografía":{"pos":"n","pol":"0.25","std":"0.0"},"yagi":{"pos":"n","pol":"0.25","std":"0.0"},"yeti":{"pos":"n","pol":"0.25","std":"0.0"},"yodar":{"pos":"v","pol":"0.25","std":"0.088"},"yuxtapuesto":{"pos":"a","pol":"0.25","std":"0.0"},"zanquilargo":{"pos":"a","pol":"0.25","std":"0.0"},"zapatilla de deporte":{"pos":"n","pol":"0.25","std":"0.0"},"zooide":{"pos":"n","pol":"0.25","std":"0.0"},"zurdera":{"pos":"n","pol":"0.25","std":"0.0"},"zureo":{"pos":"n","pol":"0.25","std":"0.0"},"záfiro":{"pos":"n","pol":"0.25","std":"0.0"},"ácimo":{"pos":"a","pol":"0.25","std":"0.0"},"ámbito aproximado":{"pos":"n","pol":"0.25","std":"0.0"},"ánimo":{"pos":"n","pol":"0.25","std":"0.262"},"árbol motor":{"pos":"n","pol":"0.25","std":"0.0"},"área de estudio":{"pos":"n","pol":"0.25","std":"0.0"},"área temática":{"pos":"n","pol":"0.25","std":"0.0"},"ázimo":{"pos":"a","pol":"0.25","std":"0.0"},"élite":{"pos":"n","pol":"0.25","std":"0.0"},"ópera bufa":{"pos":"n","pol":"0.25","std":"0.0"},"ópera cómica":{"pos":"n","pol":"0.25","std":"0.0"},"a capella":{"pos":"r","pol":"-0.25","std":"0.0"},"a pelo":{"pos":"r","pol":"-0.25","std":"0.0"},"a un lado":{"pos":"r","pol":"-0.25","std":"0.0"},"abducir":{"pos":"v","pol":"-0.25","std":"0.0"},"aberrante":{"pos":"a","pol":"-0.25","std":"0.0"},"abierta":{"pos":"a","pol":"-0.25","std":"0.0"},"abogado del diablo":{"pos":"n","pol":"-0.25","std":"0.0"},"abogaducho":{"pos":"n","pol":"-0.25","std":"0.0"},"abono orgánico":{"pos":"n","pol":"-0.25","std":"0.0"},"abrasador":{"pos":"a","pol":"-0.25","std":"0.0"},"abrasividad":{"pos":"n","pol":"-0.25","std":"0.177"},"abrigadero":{"pos":"n","pol":"-0.25","std":"0.0"},"absolutista":{"pos":"n","pol":"-0.25","std":"0.0"},"absolver":{"pos":"v","pol":"-0.25","std":"0.063"},"abultar":{"pos":"v","pol":"-0.25","std":"0.072"},"aburrido":{"pos":"a","pol":"-0.25","std":"0.186"},"abusado":{"pos":"a","pol":"-0.25","std":"0.0"},"abyección":{"pos":"n","pol":"-0.25","std":"0.0"},"abásico":{"pos":"a","pol":"-0.25","std":"0.0"},"academia del aire":{"pos":"n","pol":"-0.25","std":"0.0"},"acalorarse":{"pos":"v","pol":"-0.25","std":"0.0"},"acatexia":{"pos":"n","pol":"-0.25","std":"0.0"},"accidente":{"pos":"n","pol":"-0.25","std":"0.072"},"accidente fatal":{"pos":"n","pol":"-0.25","std":"0.0"},"acción refleja":{"pos":"n","pol":"-0.25","std":"0.0"},"aceite":{"pos":"n","pol":"-0.25","std":"0.0"},"acero de tungsteno":{"pos":"n","pol":"-0.25","std":"0.0"},"acero de wolframio":{"pos":"n","pol":"-0.25","std":"0.0"},"acetaminofeno":{"pos":"n","pol":"-0.25","std":"0.0"},"acetato de plomo":{"pos":"n","pol":"-0.25","std":"0.0"},"aclorhidria":{"pos":"n","pol":"-0.25","std":"0.0"},"aclorhídrico":{"pos":"a","pol":"-0.25","std":"0.0"},"acobardado":{"pos":"a","pol":"-0.25","std":"0.0"},"acometer":{"pos":"v","pol":"-0.25","std":"0.0"},"acondrita":{"pos":"n","pol":"-0.25","std":"0.0"},"acondroplástico":{"pos":"a","pol":"-0.25","std":"0.0"},"acorralado":{"pos":"a","pol":"-0.25","std":"0.0"},"acortarse":{"pos":"v","pol":"-0.25","std":"0.0"},"acosado":{"pos":"a","pol":"-0.25","std":"0.0"},"acrilamida":{"pos":"n","pol":"-0.25","std":"0.0"},"acriminador":{"pos":"n","pol":"-0.25","std":"0.0"},"acroanestesia":{"pos":"n","pol":"-0.25","std":"0.0"},"acrofobia":{"pos":"n","pol":"-0.25","std":"0.0"},"acrofóbico":{"pos":"a","pol":"-0.25","std":"0.0"},"actinomicótico":{"pos":"a","pol":"-0.25","std":"0.0"},"acto de terrorismo":{"pos":"n","pol":"-0.25","std":"0.0"},"acto reflejo":{"pos":"n","pol":"-0.25","std":"0.0"},"actuar violentamente":{"pos":"v","pol":"-0.25","std":"0.0"},"acuerdo viático":{"pos":"n","pol":"-0.25","std":"0.0"},"acufeno":{"pos":"n","pol":"-0.25","std":"0.0"},"acusación":{"pos":"n","pol":"-0.25","std":"0.072"},"acusador":{"pos":"n","pol":"-0.25","std":"0.0"},"acuñador ilegal":{"pos":"n","pol":"-0.25","std":"0.0"},"adicción a la cafeína":{"pos":"n","pol":"-0.25","std":"0.0"},"adormilarse":{"pos":"v","pol":"-0.25","std":"0.0"},"adormitarse":{"pos":"v","pol":"-0.25","std":"0.0"},"adquirido":{"pos":"a","pol":"-0.25","std":"0.0"},"aeroembolismo":{"pos":"n","pol":"-0.25","std":"0.0"},"aestesis":{"pos":"n","pol":"-0.25","std":"0.0"},"aethusa":{"pos":"n","pol":"-0.25","std":"0.0"},"aferente":{"pos":"a","pol":"-0.25","std":"0.0"},"affenpinscher":{"pos":"n","pol":"-0.25","std":"0.0"},"aficionado":{"pos":"a","pol":"-0.25","std":"0.0"},"afrenta":{"pos":"n","pol":"-0.25","std":"0.0"},"afta":{"pos":"n","pol":"-0.25","std":"0.0"},"agarico":{"pos":"n","pol":"-0.25","std":"0.0"},"agente de policía":{"pos":"n","pol":"-0.25","std":"0.088"},"agitprop":{"pos":"n","pol":"-0.25","std":"0.0"},"agorafobia":{"pos":"n","pol":"-0.25","std":"0.0"},"agorafóbico":{"pos":"a","pol":"-0.25","std":"0.0"},"agreste":{"pos":"a","pol":"-0.25","std":"0.177"},"agrisado":{"pos":"a","pol":"-0.25","std":"0.0"},"agrisar":{"pos":"v","pol":"-0.25","std":"0.0"},"aguardiente de manzana":{"pos":"n","pol":"-0.25","std":"0.0"},"aguas residuales":{"pos":"n","pol":"-0.25","std":"0.0"},"aguijoneo":{"pos":"n","pol":"-0.25","std":"0.0"},"agárico":{"pos":"n","pol":"-0.25","std":"0.0"},"aherrumbrar":{"pos":"v","pol":"-0.25","std":"0.0"},"ahogadero":{"pos":"n","pol":"-0.25","std":"0.0"},"ailurofobia":{"pos":"n","pol":"-0.25","std":"0.0"},"aire cargado":{"pos":"n","pol":"-0.25","std":"0.0"},"aire viciado":{"pos":"n","pol":"-0.25","std":"0.0"},"ajusticiar":{"pos":"v","pol":"-0.25","std":"0.0"},"al contado":{"pos":"r","pol":"-0.25","std":"0.0"},"albayalde":{"pos":"n","pol":"-0.25","std":"0.0"},"albinismo":{"pos":"n","pol":"-0.25","std":"0.0"},"alborotoso":{"pos":"n","pol":"-0.25","std":"0.0"},"alcoholismo":{"pos":"n","pol":"-0.25","std":"0.0"},"aleatoriedad":{"pos":"n","pol":"-0.25","std":"0.088"},"aleatorizar":{"pos":"v","pol":"-0.25","std":"0.0"},"algodón hidrófilo":{"pos":"n","pol":"-0.25","std":"0.0"},"algolágnico":{"pos":"a","pol":"-0.25","std":"0.0"},"aligerarse":{"pos":"v","pol":"-0.25","std":"0.0"},"allium porrum":{"pos":"n","pol":"-0.25","std":"0.0"},"allium vineale":{"pos":"n","pol":"-0.25","std":"0.0"},"almendra garrapiñada":{"pos":"n","pol":"-0.25","std":"0.0"},"alopecia areata":{"pos":"n","pol":"-0.25","std":"0.0"},"alta traición":{"pos":"n","pol":"-0.25","std":"0.0"},"alteridad":{"pos":"n","pol":"-0.25","std":"0.0"},"alzaválvulas":{"pos":"n","pol":"-0.25","std":"0.0"},"amargor":{"pos":"n","pol":"-0.25","std":"0.177"},"amaurosis":{"pos":"n","pol":"-0.25","std":"0.0"},"amaurótico":{"pos":"a","pol":"-0.25","std":"0.0"},"ambientalista":{"pos":"n","pol":"-0.25","std":"0.0"},"amenazado":{"pos":"a","pol":"-0.25","std":"0.0"},"amenorreico":{"pos":"a","pol":"-0.25","std":"0.0"},"ametralladora thompson":{"pos":"n","pol":"-0.25","std":"0.0"},"amigabilidad":{"pos":"n","pol":"-0.25","std":"0.0"},"amigdalina":{"pos":"n","pol":"-0.25","std":"0.0"},"aminoración":{"pos":"n","pol":"-0.25","std":"0.0"},"amiodarona":{"pos":"n","pol":"-0.25","std":"0.0"},"amnesia":{"pos":"n","pol":"-0.25","std":"0.0"},"amnéstico":{"pos":"a","pol":"-0.25","std":"0.0"},"amonítico":{"pos":"a","pol":"-0.25","std":"0.0"},"amorfo":{"pos":"a","pol":"-0.25","std":"0.0"},"amortecimiento":{"pos":"n","pol":"-0.25","std":"0.0"},"amotinamiento":{"pos":"n","pol":"-0.25","std":"0.088"},"amétrope":{"pos":"a","pol":"-0.25","std":"0.0"},"anacantos":{"pos":"n","pol":"-0.25","std":"0.0"},"anadeo":{"pos":"n","pol":"-0.25","std":"0.0"},"anafrodisia":{"pos":"n","pol":"-0.25","std":"0.0"},"anaplasia":{"pos":"n","pol":"-0.25","std":"0.0"},"anaplásico":{"pos":"a","pol":"-0.25","std":"0.0"},"anaplástico":{"pos":"a","pol":"-0.25","std":"0.0"},"anastomus":{"pos":"n","pol":"-0.25","std":"0.0"},"anatómico":{"pos":"n","pol":"-0.25","std":"0.0"},"andrajo":{"pos":"n","pol":"-0.25","std":"0.0"},"androfobia":{"pos":"n","pol":"-0.25","std":"0.0"},"anestésico total":{"pos":"n","pol":"-0.25","std":"0.0"},"angina de pecho":{"pos":"n","pol":"-0.25","std":"0.0"},"angiopatía":{"pos":"n","pol":"-0.25","std":"0.0"},"angioplastia":{"pos":"n","pol":"-0.25","std":"0.0"},"anglófobo":{"pos":"n","pol":"-0.25","std":"0.0"},"angurria":{"pos":"n","pol":"-0.25","std":"0.0"},"anhidrosis":{"pos":"n","pol":"-0.25","std":"0.0"},"anieblarse":{"pos":"v","pol":"-0.25","std":"0.0"},"animales":{"pos":"n","pol":"-0.25","std":"0.0"},"anión":{"pos":"n","pol":"-0.25","std":"0.0"},"aniónico":{"pos":"a","pol":"-0.25","std":"0.0"},"anopía":{"pos":"n","pol":"-0.25","std":"0.0"},"anorexia":{"pos":"n","pol":"-0.25","std":"0.0"},"anosmático":{"pos":"a","pol":"-0.25","std":"0.0"},"anovulación":{"pos":"n","pol":"-0.25","std":"0.0"},"anoxemia":{"pos":"n","pol":"-0.25","std":"0.0"},"anoxia":{"pos":"n","pol":"-0.25","std":"0.0"},"anteojos":{"pos":"n","pol":"-0.25","std":"0.0"},"anthonomus":{"pos":"n","pol":"-0.25","std":"0.0"},"antideportivo":{"pos":"a","pol":"-0.25","std":"0.0"},"antihigiene":{"pos":"n","pol":"-0.25","std":"0.0"},"antimacasar":{"pos":"n","pol":"-0.25","std":"0.0"},"antipirético":{"pos":"n","pol":"-0.25","std":"0.0"},"antisemitismo":{"pos":"n","pol":"-0.25","std":"0.0"},"antisocial":{"pos":"a","pol":"-0.25","std":"0.088"},"antisubmarino":{"pos":"a","pol":"-0.25","std":"0.0"},"antracítico":{"pos":"a","pol":"-0.25","std":"0.0"},"antro":{"pos":"n","pol":"-0.25","std":"0.0"},"anuresis":{"pos":"n","pol":"-0.25","std":"0.0"},"anuria":{"pos":"n","pol":"-0.25","std":"0.0"},"anómalo":{"pos":"a","pol":"-0.25","std":"0.0"},"anóxico":{"pos":"a","pol":"-0.25","std":"0.0"},"aojar":{"pos":"v","pol":"-0.25","std":"0.0"},"aojo":{"pos":"n","pol":"-0.25","std":"0.088"},"apagado":{"pos":"a","pol":"-0.25","std":"0.121"},"apartadero":{"pos":"n","pol":"-0.25","std":"0.0"},"aparte":{"pos":"r","pol":"-0.25","std":"0.0"},"apetecido":{"pos":"a","pol":"-0.25","std":"0.0"},"apetencia":{"pos":"n","pol":"-0.25","std":"0.0"},"apetitivo":{"pos":"a","pol":"-0.25","std":"0.0"},"apogámico":{"pos":"a","pol":"-0.25","std":"0.0"},"apolar":{"pos":"a","pol":"-0.25","std":"0.0"},"apoptosis":{"pos":"n","pol":"-0.25","std":"0.0"},"aporreo":{"pos":"n","pol":"-0.25","std":"0.0"},"apostatar":{"pos":"v","pol":"-0.25","std":"0.0"},"apresamiento":{"pos":"n","pol":"-0.25","std":"0.0"},"aprisionar":{"pos":"v","pol":"-0.25","std":"0.0"},"apuro":{"pos":"n","pol":"-0.25","std":"0.105"},"aquiescencia":{"pos":"n","pol":"-0.25","std":"0.0"},"aquí y allá":{"pos":"r","pol":"-0.25","std":"0.0"},"aracnofobia":{"pos":"n","pol":"-0.25","std":"0.0"},"arador":{"pos":"n","pol":"-0.25","std":"0.0"},"arar":{"pos":"v","pol":"-0.25","std":"0.0"},"arbusto":{"pos":"n","pol":"-0.25","std":"0.0"},"archivo maestro":{"pos":"n","pol":"-0.25","std":"0.0"},"arco Tudor":{"pos":"n","pol":"-0.25","std":"0.0"},"arcoiris":{"pos":"n","pol":"-0.25","std":"0.0"},"arginina":{"pos":"n","pol":"-0.25","std":"0.0"},"aristoloquiales":{"pos":"n","pol":"-0.25","std":"0.0"},"arma de fuego portátil":{"pos":"n","pol":"-0.25","std":"0.0"},"arma nuclear":{"pos":"n","pol":"-0.25","std":"0.0"},"arma portátil":{"pos":"n","pol":"-0.25","std":"0.0"},"armerol":{"pos":"n","pol":"-0.25","std":"0.0"},"aro de nariz":{"pos":"n","pol":"-0.25","std":"0.0"},"arrapiezo":{"pos":"n","pol":"-0.25","std":"0.0"},"arrellanarse":{"pos":"v","pol":"-0.25","std":"0.0"},"arremeter":{"pos":"v","pol":"-0.25","std":"0.072"},"arrestar":{"pos":"v","pol":"-0.25","std":"0.0"},"arriana":{"pos":"n","pol":"-0.25","std":"0.0"},"arriano":{"pos":"n","pol":"-0.25","std":"0.0"},"arriar":{"pos":"v","pol":"-0.25","std":"0.0"},"arrogancia":{"pos":"n","pol":"-0.25","std":"0.265"},"arrojar la toalla":{"pos":"v","pol":"-0.25","std":"0.0"},"arteria circunfleja ilíaca":{"pos":"n","pol":"-0.25","std":"0.0"},"artería":{"pos":"n","pol":"-0.25","std":"0.354"},"artificiosa":{"pos":"a","pol":"-0.25","std":"0.0"},"artritis":{"pos":"n","pol":"-0.25","std":"0.0"},"artroscopia":{"pos":"n","pol":"-0.25","std":"0.0"},"asa fétida":{"pos":"n","pol":"-0.25","std":"0.0"},"asafétida":{"pos":"n","pol":"-0.25","std":"0.0"},"asaltador":{"pos":"n","pol":"-0.25","std":"0.072"},"asalto":{"pos":"n","pol":"-0.25","std":"0.044"},"asalto a mano armada":{"pos":"n","pol":"-0.25","std":"0.0"},"ascidias":{"pos":"n","pol":"-0.25","std":"0.0"},"ascítico":{"pos":"a","pol":"-0.25","std":"0.0"},"asedio":{"pos":"n","pol":"-0.25","std":"0.0"},"asesina":{"pos":"n","pol":"-0.25","std":"0.0"},"asesino en serie":{"pos":"n","pol":"-0.25","std":"0.0"},"asexualidad":{"pos":"n","pol":"-0.25","std":"0.0"},"asindético":{"pos":"a","pol":"-0.25","std":"0.0"},"asirse":{"pos":"v","pol":"-0.25","std":"0.0"},"asistente de hospital":{"pos":"n","pol":"-0.25","std":"0.0"},"asma":{"pos":"n","pol":"-0.25","std":"0.0"},"asno":{"pos":"n","pol":"-0.25","std":"0.0"},"asno africano":{"pos":"n","pol":"-0.25","std":"0.0"},"asno salvaje africano":{"pos":"n","pol":"-0.25","std":"0.0"},"asno salvaje asiático":{"pos":"n","pol":"-0.25","std":"0.0"},"asomar la cabeza":{"pos":"v","pol":"-0.25","std":"0.0"},"aspereza":{"pos":"n","pol":"-0.25","std":"0.12"},"asténico":{"pos":"a","pol":"-0.25","std":"0.177"},"ataque por tierra":{"pos":"n","pol":"-0.25","std":"0.0"},"atañer":{"pos":"v","pol":"-0.25","std":"0.0"},"atelectasia":{"pos":"n","pol":"-0.25","std":"0.0"},"atemperación":{"pos":"n","pol":"-0.25","std":"0.0"},"atencional":{"pos":"a","pol":"-0.25","std":"0.0"},"atesarse":{"pos":"v","pol":"-0.25","std":"0.0"},"atirantarse":{"pos":"v","pol":"-0.25","std":"0.0"},"atisbadero":{"pos":"n","pol":"-0.25","std":"0.0"},"atormentador":{"pos":"n","pol":"-0.25","std":"0.0"},"atraco a mano armada":{"pos":"n","pol":"-0.25","std":"0.0"},"atrapado":{"pos":"a","pol":"-0.25","std":"0.0"},"atreverse":{"pos":"v","pol":"-0.25","std":"0.0"},"atribulación":{"pos":"n","pol":"-0.25","std":"0.088"},"atronador":{"pos":"a","pol":"-0.25","std":"0.0"},"atropellar":{"pos":"v","pol":"-0.25","std":"0.0"},"audacia":{"pos":"n","pol":"-0.25","std":"0.0"},"ausencia de persuasión":{"pos":"n","pol":"-0.25","std":"0.0"},"ausentismo":{"pos":"n","pol":"-0.25","std":"0.0"},"ausentismo escolar":{"pos":"n","pol":"-0.25","std":"0.0"},"autismo":{"pos":"n","pol":"-0.25","std":"0.0"},"auto de comparecencia":{"pos":"n","pol":"-0.25","std":"0.0"},"autoconservación":{"pos":"n","pol":"-0.25","std":"0.0"},"autodegradación":{"pos":"n","pol":"-0.25","std":"0.0"},"autodisciplinado":{"pos":"a","pol":"-0.25","std":"0.0"},"automortificación":{"pos":"n","pol":"-0.25","std":"0.0"},"autopreservación":{"pos":"n","pol":"-0.25","std":"0.0"},"autotomía":{"pos":"n","pol":"-0.25","std":"0.0"},"autócrata":{"pos":"n","pol":"-0.25","std":"0.0"},"ave de rapiña":{"pos":"n","pol":"-0.25","std":"0.0"},"aventurismo":{"pos":"n","pol":"-0.25","std":"0.0"},"avidez de sangre":{"pos":"n","pol":"-0.25","std":"0.177"},"avitaminosis":{"pos":"n","pol":"-0.25","std":"0.0"},"azidotimidina":{"pos":"n","pol":"-0.25","std":"0.0"},"azul-púrpura":{"pos":"n","pol":"-0.25","std":"0.0"},"azul de Prusia":{"pos":"n","pol":"-0.25","std":"0.0"},"azul turquesa":{"pos":"n","pol":"-0.25","std":"0.0"},"añorar":{"pos":"v","pol":"-0.25","std":"0.0"},"aún no nacido":{"pos":"a","pol":"-0.25","std":"0.0"},"babel":{"pos":"n","pol":"-0.25","std":"0.0"},"babirusa":{"pos":"n","pol":"-0.25","std":"0.0"},"bacteriológico":{"pos":"a","pol":"-0.25","std":"0.0"},"bagel":{"pos":"n","pol":"-0.25","std":"0.0"},"bajá":{"pos":"n","pol":"-0.25","std":"0.0"},"bala de mosquete":{"pos":"n","pol":"-0.25","std":"0.0"},"bala dumdum":{"pos":"n","pol":"-0.25","std":"0.0"},"baldío":{"pos":"n","pol":"-0.25","std":"0.0"},"balístico":{"pos":"a","pol":"-0.25","std":"0.0"},"bamboleo":{"pos":"n","pol":"-0.25","std":"0.0"},"banquillo de los acusados":{"pos":"n","pol":"-0.25","std":"0.0"},"barco de guerra":{"pos":"n","pol":"-0.25","std":"0.0"},"barra de cacahuetes":{"pos":"n","pol":"-0.25","std":"0.0"},"barrillo":{"pos":"n","pol":"-0.25","std":"0.0"},"basalto":{"pos":"n","pol":"-0.25","std":"0.0"},"base":{"pos":"a","pol":"-0.25","std":"0.0"},"base de operaciones":{"pos":"n","pol":"-0.25","std":"0.0"},"bastón ligero de paseo":{"pos":"n","pol":"-0.25","std":"0.0"},"basáltico":{"pos":"a","pol":"-0.25","std":"0.0"},"bata de baño":{"pos":"n","pol":"-0.25","std":"0.0"},"batalla de Horcas Caudinas":{"pos":"n","pol":"-0.25","std":"0.0"},"batalla de Ipso":{"pos":"n","pol":"-0.25","std":"0.0"},"batalla de Ivry":{"pos":"n","pol":"-0.25","std":"0.0"},"batalla de Magenta":{"pos":"n","pol":"-0.25","std":"0.0"},"batalla de Maratón":{"pos":"n","pol":"-0.25","std":"0.0"},"batalla de Minden":{"pos":"n","pol":"-0.25","std":"0.0"},"batalla de Panipat":{"pos":"n","pol":"-0.25","std":"0.0"},"batalla de Queronea":{"pos":"n","pol":"-0.25","std":"0.0"},"batalla de Rocroi":{"pos":"n","pol":"-0.25","std":"0.0"},"batalla de las Horcas Caudinas":{"pos":"n","pol":"-0.25","std":"0.0"},"batalla del Somme":{"pos":"n","pol":"-0.25","std":"0.0"},"batiborrillo":{"pos":"n","pol":"-0.25","std":"0.0"},"batida":{"pos":"n","pol":"-0.25","std":"0.0"},"batir a golpes":{"pos":"v","pol":"-0.25","std":"0.072"},"batín":{"pos":"n","pol":"-0.25","std":"0.0"},"bauhinia":{"pos":"n","pol":"-0.25","std":"0.0"},"bañador":{"pos":"n","pol":"-0.25","std":"0.0"},"baño de sangre":{"pos":"n","pol":"-0.25","std":"0.0"},"behaviorista":{"pos":"a","pol":"-0.25","std":"0.0"},"belicosidad":{"pos":"n","pol":"-0.25","std":"0.0"},"belitre":{"pos":"n","pol":"-0.25","std":"0.0"},"bellaquería":{"pos":"n","pol":"-0.25","std":"0.0"},"berilio":{"pos":"n","pol":"-0.25","std":"0.0"},"bicoca":{"pos":"n","pol":"-0.25","std":"0.0"},"bienes relictos":{"pos":"n","pol":"-0.25","std":"0.0"},"billete de banco":{"pos":"n","pol":"-0.25","std":"0.0"},"biorremediación":{"pos":"n","pol":"-0.25","std":"0.0"},"bioterrorismo":{"pos":"n","pol":"-0.25","std":"0.0"},"biotita":{"pos":"n","pol":"-0.25","std":"0.0"},"biotítico":{"pos":"a","pol":"-0.25","std":"0.0"},"bisbiseo":{"pos":"n","pol":"-0.25","std":"0.0"},"bizquera":{"pos":"n","pol":"-0.25","std":"0.0"},"blaia zimondal":{"pos":"n","pol":"-0.25","std":"0.0"},"blandengue":{"pos":"a","pol":"-0.25","std":"0.0"},"bloc de notas":{"pos":"n","pol":"-0.25","std":"0.0"},"bloqueo mutuo":{"pos":"n","pol":"-0.25","std":"0.0"},"blusa":{"pos":"n","pol":"-0.25","std":"0.0"},"bobadas":{"pos":"n","pol":"-0.25","std":"0.072"},"boca del estómago":{"pos":"n","pol":"-0.25","std":"0.0"},"body":{"pos":"n","pol":"-0.25","std":"0.0"},"bofia":{"pos":"n","pol":"-0.25","std":"0.0"},"bogeyman":{"pos":"n","pol":"-0.25","std":"0.0"},"bola de fuego":{"pos":"n","pol":"-0.25","std":"0.0"},"bola de manteca":{"pos":"n","pol":"-0.25","std":"0.0"},"bolonio":{"pos":"n","pol":"-0.25","std":"0.0"},"bomba centrífuga":{"pos":"n","pol":"-0.25","std":"0.0"},"bomba de relojería":{"pos":"n","pol":"-0.25","std":"0.088"},"bombardeo":{"pos":"n","pol":"-0.25","std":"0.072"},"bombín":{"pos":"n","pol":"-0.25","std":"0.0"},"borrelia":{"pos":"n","pol":"-0.25","std":"0.0"},"bos":{"pos":"n","pol":"-0.25","std":"0.0"},"boscaje":{"pos":"n","pol":"-0.25","std":"0.0"},"bosta de vaca":{"pos":"n","pol":"-0.25","std":"0.0"},"botas camperas":{"pos":"n","pol":"-0.25","std":"0.0"},"botija":{"pos":"n","pol":"-0.25","std":"0.0"},"botulismo":{"pos":"n","pol":"-0.25","std":"0.0"},"boxear":{"pos":"v","pol":"-0.25","std":"0.0"},"boxeo":{"pos":"n","pol":"-0.25","std":"0.0"},"brachystegia":{"pos":"n","pol":"-0.25","std":"0.0"},"bradicardia":{"pos":"n","pol":"-0.25","std":"0.0"},"braquial":{"pos":"a","pol":"-0.25","std":"0.0"},"braquiuros":{"pos":"n","pol":"-0.25","std":"0.0"},"bravuconada":{"pos":"n","pol":"-0.25","std":"0.0"},"brea":{"pos":"n","pol":"-0.25","std":"0.0"},"bregante":{"pos":"n","pol":"-0.25","std":"0.0"},"brezo":{"pos":"n","pol":"-0.25","std":"0.0"},"breña":{"pos":"n","pol":"-0.25","std":"0.0"},"bribonería":{"pos":"n","pol":"-0.25","std":"0.0"},"brillo":{"pos":"v","pol":"-0.25","std":"0.0"},"brisa":{"pos":"n","pol":"-0.25","std":"0.0"},"broma de mal gusto":{"pos":"n","pol":"-0.25","std":"0.0"},"broma telefónica":{"pos":"n","pol":"-0.25","std":"0.0"},"bromuro de metilo":{"pos":"n","pol":"-0.25","std":"0.0"},"bronco":{"pos":"a","pol":"-0.25","std":"0.0"},"bronquedad":{"pos":"n","pol":"-0.25","std":"0.088"},"broza":{"pos":"n","pol":"-0.25","std":"0.0"},"brujería":{"pos":"n","pol":"-0.25","std":"0.0"},"bruxismo":{"pos":"n","pol":"-0.25","std":"0.0"},"bruza":{"pos":"n","pol":"-0.25","std":"0.0"},"bubónico":{"pos":"a","pol":"-0.25","std":"0.0"},"bufete":{"pos":"n","pol":"-0.25","std":"0.0"},"bulbar":{"pos":"a","pol":"-0.25","std":"0.0"},"bulbo raquídeo":{"pos":"n","pol":"-0.25","std":"0.0"},"bumerang":{"pos":"n","pol":"-0.25","std":"0.0"},"buque hundido":{"pos":"n","pol":"-0.25","std":"0.0"},"buque naufragado":{"pos":"n","pol":"-0.25","std":"0.0"},"burdo":{"pos":"a","pol":"-0.25","std":"0.0"},"burka":{"pos":"n","pol":"-0.25","std":"0.0"},"buro":{"pos":"n","pol":"-0.25","std":"0.0"},"busca y captura":{"pos":"n","pol":"-0.25","std":"0.0"},"buscapleitos":{"pos":"n","pol":"-0.25","std":"0.0"},"buscavidas":{"pos":"n","pol":"-0.25","std":"0.0"},"bustier":{"pos":"n","pol":"-0.25","std":"0.0"},"butírico":{"pos":"a","pol":"-0.25","std":"0.0"},"bálsamo del Perú":{"pos":"n","pol":"-0.25","std":"0.0"},"búmeran":{"pos":"n","pol":"-0.25","std":"0.0"},"caballo de batalla":{"pos":"n","pol":"-0.25","std":"0.0"},"cabezadilla":{"pos":"n","pol":"-0.25","std":"0.0"},"caca de palomas":{"pos":"n","pol":"-0.25","std":"0.0"},"cacharro":{"pos":"n","pol":"-0.25","std":"0.0"},"cachondearse":{"pos":"v","pol":"-0.25","std":"0.088"},"caco":{"pos":"n","pol":"-0.25","std":"0.0"},"cadáver":{"pos":"n","pol":"-0.25","std":"0.0"},"caer violentamente":{"pos":"v","pol":"-0.25","std":"0.0"},"cafeinomanía":{"pos":"n","pol":"-0.25","std":"0.0"},"cafetera exprés":{"pos":"n","pol":"-0.25","std":"0.0"},"cafeína":{"pos":"n","pol":"-0.25","std":"0.0"},"cafeínico":{"pos":"a","pol":"-0.25","std":"0.0"},"caftán":{"pos":"n","pol":"-0.25","std":"0.0"},"cajón":{"pos":"n","pol":"-0.25","std":"0.0"},"caldera volcánica":{"pos":"n","pol":"-0.25","std":"0.0"},"cale":{"pos":"n","pol":"-0.25","std":"0.0"},"calor de condensación":{"pos":"n","pol":"-0.25","std":"0.0"},"calumia":{"pos":"n","pol":"-0.25","std":"0.0"},"camandulería":{"pos":"n","pol":"-0.25","std":"0.0"},"camilla":{"pos":"n","pol":"-0.25","std":"0.0"},"camisa":{"pos":"n","pol":"-0.25","std":"0.0"},"camisa de dormir":{"pos":"n","pol":"-0.25","std":"0.0"},"camisola":{"pos":"n","pol":"-0.25","std":"0.088"},"campaña naval":{"pos":"n","pol":"-0.25","std":"0.0"},"camperas":{"pos":"n","pol":"-0.25","std":"0.0"},"campilotropo":{"pos":"a","pol":"-0.25","std":"0.0"},"campo eléctrico":{"pos":"n","pol":"-0.25","std":"0.0"},"campo gravitacional":{"pos":"n","pol":"-0.25","std":"0.0"},"campo magnético":{"pos":"n","pol":"-0.25","std":"0.0"},"canijo":{"pos":"a","pol":"-0.25","std":"0.0"},"canillera":{"pos":"n","pol":"-0.25","std":"0.265"},"canto de sirena":{"pos":"n","pol":"-0.25","std":"0.0"},"caos":{"pos":"n","pol":"-0.25","std":"0.102"},"capero":{"pos":"n","pol":"-0.25","std":"0.0"},"capital del Tíbet":{"pos":"n","pol":"-0.25","std":"0.0"},"caquético":{"pos":"a","pol":"-0.25","std":"0.0"},"cara de póker":{"pos":"n","pol":"-0.25","std":"0.0"},"carapacho":{"pos":"n","pol":"-0.25","std":"0.0"},"carbunco":{"pos":"n","pol":"-0.25","std":"0.072"},"carcelero":{"pos":"n","pol":"-0.25","std":"0.0"},"carcinoide":{"pos":"n","pol":"-0.25","std":"0.0"},"carcomer":{"pos":"v","pol":"-0.25","std":"0.0"},"cardamine":{"pos":"n","pol":"-0.25","std":"0.0"},"carencia":{"pos":"n","pol":"-0.25","std":"0.0"},"careta":{"pos":"n","pol":"-0.25","std":"0.0"},"careta antigás":{"pos":"n","pol":"-0.25","std":"0.0"},"carga negativa":{"pos":"n","pol":"-0.25","std":"0.0"},"cargo imprevisible":{"pos":"a","pol":"-0.25","std":"0.0"},"cargo irregular":{"pos":"a","pol":"-0.25","std":"0.0"},"carmelita":{"pos":"n","pol":"-0.25","std":"0.0"},"carnear":{"pos":"v","pol":"-0.25","std":"0.0"},"carnezuelo":{"pos":"n","pol":"-0.25","std":"0.0"},"carraspera":{"pos":"n","pol":"-0.25","std":"0.0"},"carretón":{"pos":"n","pol":"-0.25","std":"0.0"},"carroza":{"pos":"a","pol":"-0.25","std":"0.0"},"cartilaginoso":{"pos":"a","pol":"-0.25","std":"0.088"},"cartujo":{"pos":"a","pol":"-0.25","std":"0.0"},"carácter desagradable":{"pos":"n","pol":"-0.25","std":"0.0"},"casa de naipes":{"pos":"n","pol":"-0.25","std":"0.0"},"casa de rancho":{"pos":"n","pol":"-0.25","std":"0.0"},"casanova":{"pos":"n","pol":"-0.25","std":"0.0"},"cascar":{"pos":"v","pol":"-0.25","std":"0.072"},"casco del bateador":{"pos":"n","pol":"-0.25","std":"0.0"},"casquivano":{"pos":"a","pol":"-0.25","std":"0.177"},"cassiope":{"pos":"n","pol":"-0.25","std":"0.0"},"castigado":{"pos":"a","pol":"-0.25","std":"0.0"},"casulla":{"pos":"n","pol":"-0.25","std":"0.0"},"catacaldos":{"pos":"n","pol":"-0.25","std":"0.0"},"catetismo":{"pos":"n","pol":"-0.25","std":"0.0"},"cateto":{"pos":"n","pol":"-0.25","std":"0.0"},"causa perdida":{"pos":"n","pol":"-0.25","std":"0.0"},"caza de ratas":{"pos":"n","pol":"-0.25","std":"0.0"},"cazabombardero":{"pos":"n","pol":"-0.25","std":"0.0"},"cazar al acecho":{"pos":"v","pol":"-0.25","std":"0.0"},"cazar con halcones":{"pos":"v","pol":"-0.25","std":"0.0"},"cazar con halcón":{"pos":"v","pol":"-0.25","std":"0.0"},"cazar con hurones":{"pos":"v","pol":"-0.25","std":"0.0"},"cazar conejos":{"pos":"v","pol":"-0.25","std":"0.0"},"cazar furtivamente":{"pos":"v","pol":"-0.25","std":"0.0"},"cazatorpedero":{"pos":"n","pol":"-0.25","std":"0.0"},"caído":{"pos":"a","pol":"-0.25","std":"0.0"},"cebolla silvestre":{"pos":"n","pol":"-0.25","std":"0.0"},"ceborrincha":{"pos":"n","pol":"-0.25","std":"0.0"},"cefotaxima":{"pos":"n","pol":"-0.25","std":"0.0"},"ceftriaxona":{"pos":"n","pol":"-0.25","std":"0.0"},"ceguera objetiva":{"pos":"n","pol":"-0.25","std":"0.0"},"celinda":{"pos":"n","pol":"-0.25","std":"0.0"},"cenizas":{"pos":"n","pol":"-0.25","std":"0.0"},"censor":{"pos":"n","pol":"-0.25","std":"0.0"},"centrospermo":{"pos":"n","pol":"-0.25","std":"0.0"},"cepillo de fregar":{"pos":"n","pol":"-0.25","std":"0.0"},"cepillo de púas":{"pos":"n","pol":"-0.25","std":"0.0"},"cerapteryx":{"pos":"n","pol":"-0.25","std":"0.0"},"cerco":{"pos":"n","pol":"-0.25","std":"0.0"},"cercosporella":{"pos":"n","pol":"-0.25","std":"0.0"},"cereza Bing":{"pos":"n","pol":"-0.25","std":"0.0"},"cereza picota":{"pos":"n","pol":"-0.25","std":"0.0"},"chacota":{"pos":"n","pol":"-0.25","std":"0.0"},"chacó":{"pos":"n","pol":"-0.25","std":"0.0"},"chaladura":{"pos":"n","pol":"-0.25","std":"0.0"},"chamarasca":{"pos":"n","pol":"-0.25","std":"0.0"},"chancroso":{"pos":"a","pol":"-0.25","std":"0.0"},"changarro":{"pos":"n","pol":"-0.25","std":"0.0"},"chapa de identificación":{"pos":"n","pol":"-0.25","std":"0.0"},"chaparral":{"pos":"n","pol":"-0.25","std":"0.0"},"charlatanismo":{"pos":"n","pol":"-0.25","std":"0.0"},"cheque":{"pos":"n","pol":"-0.25","std":"0.0"},"cheviot":{"pos":"n","pol":"-0.25","std":"0.0"},"chevió":{"pos":"n","pol":"-0.25","std":"0.0"},"chichón":{"pos":"n","pol":"-0.25","std":"0.0"},"chicoria":{"pos":"n","pol":"-0.25","std":"0.0"},"chifladura":{"pos":"n","pol":"-0.25","std":"0.0"},"chilaba":{"pos":"n","pol":"-0.25","std":"0.0"},"chilindrina":{"pos":"n","pol":"-0.25","std":"0.0"},"chiste morboso":{"pos":"n","pol":"-0.25","std":"0.0"},"chiste negro":{"pos":"n","pol":"-0.25","std":"0.0"},"chiste étnico":{"pos":"n","pol":"-0.25","std":"0.0"},"chorizada":{"pos":"n","pol":"-0.25","std":"0.0"},"chorreces":{"pos":"n","pol":"-0.25","std":"0.0"},"chupóptero":{"pos":"n","pol":"-0.25","std":"0.0"},"chámara":{"pos":"n","pol":"-0.25","std":"0.0"},"cicadófitos":{"pos":"n","pol":"-0.25","std":"0.0"},"cicatería":{"pos":"n","pol":"-0.25","std":"0.0"},"ciclónico":{"pos":"a","pol":"-0.25","std":"0.0"},"ciego":{"pos":"n","pol":"-0.25","std":"0.0"},"cieno":{"pos":"n","pol":"-0.25","std":"0.0"},"cimarra":{"pos":"n","pol":"-0.25","std":"0.0"},"cimbreo":{"pos":"n","pol":"-0.25","std":"0.0"},"cinemática":{"pos":"n","pol":"-0.25","std":"0.0"},"cinturón salvavidas":{"pos":"n","pol":"-0.25","std":"0.0"},"circulativo":{"pos":"a","pol":"-0.25","std":"0.0"},"circunstante":{"pos":"n","pol":"-0.25","std":"0.0"},"cirrosis":{"pos":"n","pol":"-0.25","std":"0.0"},"cirrosis hepática":{"pos":"n","pol":"-0.25","std":"0.0"},"ciruela damascena":{"pos":"n","pol":"-0.25","std":"0.0"},"cistoplejía":{"pos":"n","pol":"-0.25","std":"0.0"},"clamoreo":{"pos":"n","pol":"-0.25","std":"0.0"},"claramente":{"pos":"r","pol":"-0.25","std":"0.0"},"clase baja":{"pos":"n","pol":"-0.25","std":"0.0"},"claustrofobia":{"pos":"n","pol":"-0.25","std":"0.0"},"cleptomanía":{"pos":"n","pol":"-0.25","std":"0.0"},"clinch":{"pos":"v","pol":"-0.25","std":"0.0"},"clinodactilia":{"pos":"n","pol":"-0.25","std":"0.0"},"cobalto":{"pos":"n","pol":"-0.25","std":"0.0"},"coccidioidomicosis":{"pos":"n","pol":"-0.25","std":"0.0"},"coccidioidosis":{"pos":"n","pol":"-0.25","std":"0.0"},"cocculus":{"pos":"n","pol":"-0.25","std":"0.0"},"cocear":{"pos":"v","pol":"-0.25","std":"0.0"},"coche deportivo":{"pos":"n","pol":"-0.25","std":"0.0"},"cocido":{"pos":"a","pol":"-0.25","std":"0.0"},"cocodrilo africano":{"pos":"n","pol":"-0.25","std":"0.0"},"cocodrilo del Nilo":{"pos":"n","pol":"-0.25","std":"0.0"},"coenzima":{"pos":"n","pol":"-0.25","std":"0.0"},"cogotazo":{"pos":"n","pol":"-0.25","std":"0.0"},"cola cortada":{"pos":"n","pol":"-0.25","std":"0.0"},"colaboracionista":{"pos":"n","pol":"-0.25","std":"0.088"},"colifato":{"pos":"n","pol":"-0.25","std":"0.0"},"colonia de conejos":{"pos":"n","pol":"-0.25","std":"0.0"},"colonización":{"pos":"n","pol":"-0.25","std":"0.0"},"color acromático":{"pos":"n","pol":"-0.25","std":"0.0"},"combarse":{"pos":"v","pol":"-0.25","std":"0.0"},"combatiente":{"pos":"a","pol":"-0.25","std":"0.0"},"combatividad":{"pos":"n","pol":"-0.25","std":"0.0"},"combustión":{"pos":"n","pol":"-0.25","std":"0.0"},"comida recalentada":{"pos":"n","pol":"-0.25","std":"0.0"},"common arrowhead":{"pos":"n","pol":"-0.25","std":"0.0"},"commutar":{"pos":"v","pol":"-0.25","std":"0.0"},"comparativo":{"pos":"a","pol":"-0.25","std":"0.0"},"competidor":{"pos":"n","pol":"-0.25","std":"0.0"},"competidora":{"pos":"n","pol":"-0.25","std":"0.0"},"comprador compulsivo":{"pos":"n","pol":"-0.25","std":"0.0"},"computar":{"pos":"v","pol":"-0.25","std":"0.0"},"con curiosidad":{"pos":"r","pol":"-0.25","std":"0.0"},"con importancia":{"pos":"r","pol":"-0.25","std":"0.0"},"con indecisión":{"pos":"r","pol":"-0.25","std":"0.0"},"con intencionalidad":{"pos":"r","pol":"-0.25","std":"0.0"},"con voz sollozante":{"pos":"r","pol":"-0.25","std":"0.0"},"concernir":{"pos":"v","pol":"-0.25","std":"0.0"},"concertina":{"pos":"n","pol":"-0.25","std":"0.0"},"concluyentemente":{"pos":"r","pol":"-0.25","std":"0.0"},"concusión":{"pos":"n","pol":"-0.25","std":"0.072"},"condenada a cadena perpétua":{"pos":"n","pol":"-0.25","std":"0.0"},"condenado a cadena perpétua":{"pos":"n","pol":"-0.25","std":"0.0"},"condicionamiento adverso":{"pos":"n","pol":"-0.25","std":"0.0"},"conejal":{"pos":"n","pol":"-0.25","std":"0.0"},"conejar":{"pos":"n","pol":"-0.25","std":"0.0"},"conflagración":{"pos":"n","pol":"-0.25","std":"0.0"},"confrontacional":{"pos":"a","pol":"-0.25","std":"0.0"},"confutación":{"pos":"n","pol":"-0.25","std":"0.0"},"congelamiento":{"pos":"n","pol":"-0.25","std":"0.0"},"conglomerado de madera":{"pos":"n","pol":"-0.25","std":"0.0"},"conjunción adversativa":{"pos":"n","pol":"-0.25","std":"0.0"},"conminatorio":{"pos":"a","pol":"-0.25","std":"0.0"},"conocerse":{"pos":"v","pol":"-0.25","std":"0.0"},"conquista normanda":{"pos":"n","pol":"-0.25","std":"0.0"},"conquistar":{"pos":"v","pol":"-0.25","std":"0.0"},"conseguir con artimañas":{"pos":"v","pol":"-0.25","std":"0.0"},"conseja":{"pos":"n","pol":"-0.25","std":"0.0"},"conservacionista":{"pos":"n","pol":"-0.25","std":"0.0"},"consolación":{"pos":"n","pol":"-0.25","std":"0.072"},"conspiración":{"pos":"n","pol":"-0.25","std":"0.0"},"contar cuentos":{"pos":"v","pol":"-0.25","std":"0.0"},"contraalmirante":{"pos":"n","pol":"-0.25","std":"0.0"},"contrabandista de licores":{"pos":"n","pol":"-0.25","std":"0.0"},"contradecir":{"pos":"v","pol":"-0.25","std":"0.094"},"contrainteligencia":{"pos":"n","pol":"-0.25","std":"0.0"},"contralmirante":{"pos":"n","pol":"-0.25","std":"0.0"},"contraproducente":{"pos":"a","pol":"-0.25","std":"0.0"},"contrincante":{"pos":"n","pol":"-0.25","std":"0.0"},"controversia":{"pos":"n","pol":"-0.25","std":"0.072"},"cookie":{"pos":"n","pol":"-0.25","std":"0.0"},"copiado":{"pos":"a","pol":"-0.25","std":"0.0"},"copo de algodón":{"pos":"n","pol":"-0.25","std":"0.0"},"coptis":{"pos":"n","pol":"-0.25","std":"0.0"},"corajoso":{"pos":"a","pol":"-0.25","std":"0.0"},"corbata":{"pos":"n","pol":"-0.25","std":"0.0"},"cordón de apertura":{"pos":"n","pol":"-0.25","std":"0.0"},"corindón":{"pos":"n","pol":"-0.25","std":"0.0"},"corona de laurel":{"pos":"n","pol":"-0.25","std":"0.0"},"corpacho":{"pos":"n","pol":"-0.25","std":"0.0"},"corromperse":{"pos":"v","pol":"-0.25","std":"0.144"},"corroído":{"pos":"a","pol":"-0.25","std":"0.0"},"cortar irregularmente":{"pos":"v","pol":"-0.25","std":"0.0"},"cortavientos":{"pos":"n","pol":"-0.25","std":"0.0"},"corteza de trigo":{"pos":"n","pol":"-0.25","std":"0.0"},"cortina rompeviento":{"pos":"n","pol":"-0.25","std":"0.0"},"cotarro":{"pos":"n","pol":"-0.25","std":"0.0"},"cresa":{"pos":"n","pol":"-0.25","std":"0.0"},"crescentia":{"pos":"n","pol":"-0.25","std":"0.0"},"cretinismo":{"pos":"n","pol":"-0.25","std":"0.0"},"crimen de guerra":{"pos":"n","pol":"-0.25","std":"0.0"},"criminal":{"pos":"n","pol":"-0.25","std":"0.0"},"criminológico":{"pos":"a","pol":"-0.25","std":"0.0"},"criofobia":{"pos":"n","pol":"-0.25","std":"0.0"},"criogenia":{"pos":"n","pol":"-0.25","std":"0.0"},"criopatía":{"pos":"n","pol":"-0.25","std":"0.0"},"criptograma":{"pos":"n","pol":"-0.25","std":"0.0"},"cromatográfico":{"pos":"a","pol":"-0.25","std":"0.0"},"cromoestesia":{"pos":"n","pol":"-0.25","std":"0.0"},"crucialidad":{"pos":"n","pol":"-0.25","std":"0.0"},"cruzar el rostro":{"pos":"v","pol":"-0.25","std":"0.0"},"crítica constante":{"pos":"n","pol":"-0.25","std":"0.0"},"crítica maliciosa":{"pos":"n","pol":"-0.25","std":"0.0"},"crítica textual":{"pos":"n","pol":"-0.25","std":"0.0"},"cuadrilátero de boxeo":{"pos":"n","pol":"-0.25","std":"0.0"},"cuarcita":{"pos":"n","pol":"-0.25","std":"0.0"},"cuartazos":{"pos":"n","pol":"-0.25","std":"0.0"},"cuartearse":{"pos":"v","pol":"-0.25","std":"0.0"},"cucharada sopera":{"pos":"n","pol":"-0.25","std":"0.0"},"cuchichear":{"pos":"v","pol":"-0.25","std":"0.0"},"cuelgacapas":{"pos":"n","pol":"-0.25","std":"0.0"},"culí":{"pos":"n","pol":"-0.25","std":"0.0"},"curiosamente":{"pos":"r","pol":"-0.25","std":"0.0"},"currar":{"pos":"v","pol":"-0.25","std":"0.0"},"curruscar":{"pos":"v","pol":"-0.25","std":"0.0"},"custodiar":{"pos":"v","pol":"-0.25","std":"0.088"},"cámara de tortura":{"pos":"n","pol":"-0.25","std":"0.0"},"céfiro":{"pos":"n","pol":"-0.25","std":"0.0"},"célula adiposa":{"pos":"n","pol":"-0.25","std":"0.0"},"célula de Golgi":{"pos":"n","pol":"-0.25","std":"0.0"},"cólico":{"pos":"n","pol":"-0.25","std":"0.0"},"dar alivio":{"pos":"v","pol":"-0.25","std":"0.0"},"dar bastonazos":{"pos":"v","pol":"-0.25","std":"0.0"},"dar garrotazos":{"pos":"v","pol":"-0.25","std":"0.0"},"dar la tabarra":{"pos":"v","pol":"-0.25","std":"0.088"},"dar oropel":{"pos":"v","pol":"-0.25","std":"0.0"},"dar una patada":{"pos":"v","pol":"-0.25","std":"0.0"},"dar vueltas a":{"pos":"v","pol":"-0.25","std":"0.0"},"dar órdenes":{"pos":"v","pol":"-0.25","std":"0.0"},"de Sísifo":{"pos":"a","pol":"-0.25","std":"0.0"},"de forma genérica":{"pos":"r","pol":"-0.25","std":"0.0"},"de forma inclinada":{"pos":"r","pol":"-0.25","std":"0.0"},"de forma penetrante":{"pos":"r","pol":"-0.25","std":"0.0"},"de la nada":{"pos":"r","pol":"-0.25","std":"0.0"},"de mala gana":{"pos":"r","pol":"-0.25","std":"0.0"},"de moneras":{"pos":"a","pol":"-0.25","std":"0.0"},"de poca fiabilidad":{"pos":"n","pol":"-0.25","std":"0.0"},"decaer":{"pos":"v","pol":"-0.25","std":"0.163"},"decepción":{"pos":"n","pol":"-0.25","std":"0.265"},"deceso":{"pos":"n","pol":"-0.25","std":"0.0"},"decir entre dientes":{"pos":"v","pol":"-0.25","std":"0.0"},"decir verbalmente":{"pos":"v","pol":"-0.25","std":"0.0"},"declaración incorrecta":{"pos":"n","pol":"-0.25","std":"0.0"},"defecto visual":{"pos":"n","pol":"-0.25","std":"0.0"},"defector":{"pos":"n","pol":"-0.25","std":"0.0"},"defender":{"pos":"n","pol":"-0.25","std":"0.0"},"defensa comercial":{"pos":"n","pol":"-0.25","std":"0.0"},"defervescente":{"pos":"a","pol":"-0.25","std":"0.0"},"deficiencia auditiva":{"pos":"n","pol":"-0.25","std":"0.0"},"deficiencia visual":{"pos":"n","pol":"-0.25","std":"0.0"},"deforme":{"pos":"a","pol":"-0.25","std":"0.0"},"degollador":{"pos":"n","pol":"-0.25","std":"0.0"},"dejado":{"pos":"n","pol":"-0.25","std":"0.0"},"dejar suelto":{"pos":"r","pol":"-0.25","std":"0.0"},"del dictioptero":{"pos":"a","pol":"-0.25","std":"0.0"},"del mecóptero":{"pos":"a","pol":"-0.25","std":"0.0"},"delgadamente":{"pos":"r","pol":"-0.25","std":"0.0"},"delincuente habitual":{"pos":"n","pol":"-0.25","std":"0.0"},"delito informático":{"pos":"n","pol":"-0.25","std":"0.0"},"demonio":{"pos":"n","pol":"-0.25","std":"0.164"},"demonio necrófano":{"pos":"n","pol":"-0.25","std":"0.0"},"demérito":{"pos":"n","pol":"-0.25","std":"0.191"},"dendrita":{"pos":"n","pol":"-0.25","std":"0.0"},"dendroctonus":{"pos":"n","pol":"-0.25","std":"0.0"},"denunciador":{"pos":"n","pol":"-0.25","std":"0.0"},"denunciante":{"pos":"n","pol":"-0.25","std":"0.0"},"denunciatorio":{"pos":"a","pol":"-0.25","std":"0.0"},"departamento de química":{"pos":"n","pol":"-0.25","std":"0.0"},"deportivo":{"pos":"n","pol":"-0.25","std":"0.0"},"deprecar":{"pos":"v","pol":"-0.25","std":"0.0"},"depresión distímica":{"pos":"n","pol":"-0.25","std":"0.0"},"derecho del mar":{"pos":"n","pol":"-0.25","std":"0.0"},"derecho marítimo":{"pos":"n","pol":"-0.25","std":"0.0"},"dermatitis atópica":{"pos":"n","pol":"-0.25","std":"0.0"},"dermatofitosis":{"pos":"n","pol":"-0.25","std":"0.0"},"dermatomiositis":{"pos":"n","pol":"-0.25","std":"0.0"},"derrochador":{"pos":"a","pol":"-0.25","std":"0.102"},"derroche de energía":{"pos":"n","pol":"-0.25","std":"0.0"},"derrotamiento":{"pos":"n","pol":"-0.25","std":"0.0"},"derruir":{"pos":"v","pol":"-0.25","std":"0.0"},"derruirse":{"pos":"v","pol":"-0.25","std":"0.0"},"derrumbar":{"pos":"v","pol":"-0.25","std":"0.0"},"desaborido":{"pos":"a","pol":"-0.25","std":"0.088"},"desabotonado":{"pos":"a","pol":"-0.25","std":"0.0"},"desabrimiento":{"pos":"n","pol":"-0.25","std":"0.177"},"desacorde":{"pos":"a","pol":"-0.25","std":"0.0"},"desafecto":{"pos":"a","pol":"-0.25","std":"0.0"},"desafiante":{"pos":"a","pol":"-0.25","std":"0.0"},"desaforado":{"pos":"a","pol":"-0.25","std":"0.0"},"desahucio":{"pos":"n","pol":"-0.25","std":"0.0"},"desaliñado":{"pos":"a","pol":"-0.25","std":"0.056"},"desalmado":{"pos":"a","pol":"-0.25","std":"0.0"},"desamparado":{"pos":"a","pol":"-0.25","std":"0.0"},"desangrarse":{"pos":"v","pol":"-0.25","std":"0.0"},"desarreglado":{"pos":"a","pol":"-0.25","std":"0.0"},"desatinado":{"pos":"n","pol":"-0.25","std":"0.0"},"desbocado":{"pos":"a","pol":"-0.25","std":"0.0"},"desbridamiento":{"pos":"n","pol":"-0.25","std":"0.0"},"descabellado":{"pos":"a","pol":"-0.25","std":"0.177"},"descalificar":{"pos":"v","pol":"-0.25","std":"0.265"},"descalzo":{"pos":"r","pol":"-0.25","std":"0.0"},"descansadamente":{"pos":"r","pol":"-0.25","std":"0.0"},"descararse":{"pos":"v","pol":"-0.25","std":"0.072"},"descaro":{"pos":"n","pol":"-0.25","std":"0.127"},"descendente":{"pos":"n","pol":"-0.25","std":"0.0"},"descerebrar":{"pos":"v","pol":"-0.25","std":"0.0"},"descerrajar":{"pos":"v","pol":"-0.25","std":"0.0"},"descoco":{"pos":"n","pol":"-0.25","std":"0.0"},"descolado":{"pos":"a","pol":"-0.25","std":"0.0"},"descolorarse":{"pos":"v","pol":"-0.25","std":"0.0"},"desconfiar":{"pos":"v","pol":"-0.25","std":"0.0"},"desconsoladamente":{"pos":"r","pol":"-0.25","std":"0.0"},"descontrolar":{"pos":"v","pol":"-0.25","std":"0.0"},"descordar":{"pos":"v","pol":"-0.25","std":"0.0"},"descruzado":{"pos":"a","pol":"-0.25","std":"0.0"},"desenredado":{"pos":"a","pol":"-0.25","std":"0.088"},"desenvueltamente":{"pos":"r","pol":"-0.25","std":"0.0"},"deseo sexual inhibido":{"pos":"n","pol":"-0.25","std":"0.0"},"desequilibrio mental":{"pos":"n","pol":"-0.25","std":"0.0"},"desescalada":{"pos":"n","pol":"-0.25","std":"0.0"},"desfallecer":{"pos":"v","pol":"-0.25","std":"0.088"},"desgajar":{"pos":"v","pol":"-0.25","std":"0.0"},"desgastarse":{"pos":"v","pol":"-0.25","std":"0.072"},"desgrapar":{"pos":"v","pol":"-0.25","std":"0.0"},"desgreñado":{"pos":"a","pol":"-0.25","std":"0.0"},"deshaucio":{"pos":"n","pol":"-0.25","std":"0.0"},"desiderátum":{"pos":"n","pol":"-0.25","std":"0.0"},"deslustrar":{"pos":"v","pol":"-0.25","std":"0.0"},"desmaño":{"pos":"n","pol":"-0.25","std":"0.0"},"desmejora":{"pos":"n","pol":"-0.25","std":"0.0"},"desmelenado":{"pos":"a","pol":"-0.25","std":"0.0"},"desmemoriado":{"pos":"a","pol":"-0.25","std":"0.0"},"desmentir":{"pos":"v","pol":"-0.25","std":"0.088"},"desmerecimiento":{"pos":"n","pol":"-0.25","std":"0.0"},"desmotivado":{"pos":"a","pol":"-0.25","std":"0.0"},"desodorante":{"pos":"n","pol":"-0.25","std":"0.0"},"desoladamente":{"pos":"r","pol":"-0.25","std":"0.0"},"desorden gastrointestinal":{"pos":"n","pol":"-0.25","std":"0.0"},"despeinado":{"pos":"a","pol":"-0.25","std":"0.0"},"despeinar":{"pos":"v","pol":"-0.25","std":"0.0"},"despellejarse":{"pos":"v","pol":"-0.25","std":"0.072"},"desperdicio de energía":{"pos":"n","pol":"-0.25","std":"0.0"},"desperdicio de material":{"pos":"n","pol":"-0.25","std":"0.0"},"despojaron":{"pos":"v","pol":"-0.25","std":"0.0"},"despojarse":{"pos":"v","pol":"-0.25","std":"0.0"},"despojo":{"pos":"n","pol":"-0.25","std":"0.072"},"desproporción":{"pos":"n","pol":"-0.25","std":"0.0"},"desprotegido":{"pos":"a","pol":"-0.25","std":"0.265"},"destapar":{"pos":"v","pol":"-0.25","std":"0.0"},"destructivamente":{"pos":"r","pol":"-0.25","std":"0.0"},"destruído":{"pos":"a","pol":"-0.25","std":"0.0"},"desvalorizar":{"pos":"v","pol":"-0.25","std":"0.088"},"desventurado":{"pos":"n","pol":"-0.25","std":"0.0"},"desvergüenza":{"pos":"n","pol":"-0.25","std":"0.112"},"desvitalizar":{"pos":"v","pol":"-0.25","std":"0.0"},"deteriorarse":{"pos":"v","pol":"-0.25","std":"0.217"},"deus ex machina":{"pos":"n","pol":"-0.25","std":"0.0"},"dhoti":{"pos":"n","pol":"-0.25","std":"0.0"},"diablillo":{"pos":"n","pol":"-0.25","std":"0.144"},"diagnóstico médico":{"pos":"n","pol":"-0.25","std":"0.0"},"diarrea":{"pos":"n","pol":"-0.25","std":"0.0"},"dicranales":{"pos":"n","pol":"-0.25","std":"0.0"},"difracción":{"pos":"n","pol":"-0.25","std":"0.0"},"digitaria ischaemum":{"pos":"n","pol":"-0.25","std":"0.0"},"diltiazem":{"pos":"n","pol":"-0.25","std":"0.0"},"diluído":{"pos":"r","pol":"-0.25","std":"0.0"},"dinamitar":{"pos":"v","pol":"-0.25","std":"0.0"},"dingo":{"pos":"n","pol":"-0.25","std":"0.0"},"dipsnea":{"pos":"n","pol":"-0.25","std":"0.0"},"dipsomanía":{"pos":"n","pol":"-0.25","std":"0.0"},"dipsosaurus":{"pos":"n","pol":"-0.25","std":"0.0"},"discapacitar":{"pos":"v","pol":"-0.25","std":"0.0"},"disconforme":{"pos":"a","pol":"-0.25","std":"0.0"},"disentería":{"pos":"n","pol":"-0.25","std":"0.0"},"disfemismo":{"pos":"n","pol":"-0.25","std":"0.0"},"disfuerzo":{"pos":"n","pol":"-0.25","std":"0.0"},"dislocación":{"pos":"n","pol":"-0.25","std":"0.0"},"disléxico":{"pos":"a","pol":"-0.25","std":"0.088"},"disnea":{"pos":"n","pol":"-0.25","std":"0.0"},"disolutamente":{"pos":"r","pol":"-0.25","std":"0.0"},"disparar un cañon":{"pos":"v","pol":"-0.25","std":"0.0"},"dispepsia":{"pos":"n","pol":"-0.25","std":"0.0"},"displasia":{"pos":"n","pol":"-0.25","std":"0.0"},"dispnea":{"pos":"n","pol":"-0.25","std":"0.0"},"distendido":{"pos":"a","pol":"-0.25","std":"0.0"},"distimia":{"pos":"n","pol":"-0.25","std":"0.0"},"distorsionado":{"pos":"a","pol":"-0.25","std":"0.0"},"distrito policial":{"pos":"n","pol":"-0.25","std":"0.0"},"disturbio racial":{"pos":"n","pol":"-0.25","std":"0.0"},"diverticulitis":{"pos":"n","pol":"-0.25","std":"0.0"},"dióxido de nitrógeno":{"pos":"n","pol":"-0.25","std":"0.0"},"domador":{"pos":"n","pol":"-0.25","std":"0.0"},"dormán":{"pos":"n","pol":"-0.25","std":"0.0"},"driblar":{"pos":"v","pol":"-0.25","std":"0.0"},"dubitativo":{"pos":"a","pol":"-0.25","std":"0.0"},"délfico":{"pos":"a","pol":"-0.25","std":"0.088"},"día y noche":{"pos":"r","pol":"-0.25","std":"0.0"},"ebonita":{"pos":"n","pol":"-0.25","std":"0.0"},"eccema atópico":{"pos":"n","pol":"-0.25","std":"0.0"},"echar a perder":{"pos":"v","pol":"-0.25","std":"0.0"},"echar abajo":{"pos":"v","pol":"-0.25","std":"0.0"},"ecologista":{"pos":"n","pol":"-0.25","std":"0.0"},"ectrodactilia":{"pos":"n","pol":"-0.25","std":"0.0"},"edentados":{"pos":"n","pol":"-0.25","std":"0.0"},"efectismo":{"pos":"n","pol":"-0.25","std":"0.0"},"electrocutar":{"pos":"v","pol":"-0.25","std":"0.0"},"elefantiasis neuromatosa":{"pos":"n","pol":"-0.25","std":"0.0"},"elemento no metálico":{"pos":"n","pol":"-0.25","std":"0.0"},"elisio":{"pos":"a","pol":"-0.25","std":"0.0"},"elísio":{"pos":"a","pol":"-0.25","std":"0.0"},"embargo de nómina":{"pos":"n","pol":"-0.25","std":"0.0"},"emboscar":{"pos":"v","pol":"-0.25","std":"0.0"},"embotado":{"pos":"a","pol":"-0.25","std":"0.0"},"embólico":{"pos":"a","pol":"-0.25","std":"0.0"},"emitir un chillido":{"pos":"v","pol":"-0.25","std":"0.0"},"empacho":{"pos":"n","pol":"-0.25","std":"0.0"},"empeorado":{"pos":"a","pol":"-0.25","std":"0.0"},"en cualquier instante":{"pos":"r","pol":"-0.25","std":"0.0"},"en cualquier momento":{"pos":"r","pol":"-0.25","std":"0.0"},"en círculos":{"pos":"r","pol":"-0.25","std":"0.0"},"en el acto":{"pos":"r","pol":"-0.25","std":"0.0"},"en general":{"pos":"r","pol":"-0.25","std":"0.0"},"en poco tiempo":{"pos":"r","pol":"-0.25","std":"0.0"},"en un instante":{"pos":"r","pol":"-0.25","std":"0.088"},"enajenación mental":{"pos":"n","pol":"-0.25","std":"0.0"},"enanismo":{"pos":"n","pol":"-0.25","std":"0.0"},"encamisar":{"pos":"v","pol":"-0.25","std":"0.0"},"encamisarse":{"pos":"v","pol":"-0.25","std":"0.0"},"encanecer":{"pos":"v","pol":"-0.25","std":"0.0"},"encefalitis letárgica":{"pos":"n","pol":"-0.25","std":"0.0"},"encender(se)":{"pos":"v","pol":"-0.25","std":"0.0"},"enchaquetar":{"pos":"v","pol":"-0.25","std":"0.0"},"enchaquetarse":{"pos":"v","pol":"-0.25","std":"0.0"},"encontrado":{"pos":"a","pol":"-0.25","std":"0.0"},"encopresis infantil":{"pos":"n","pol":"-0.25","std":"0.0"},"encostrarse":{"pos":"v","pol":"-0.25","std":"0.0"},"endeblez":{"pos":"n","pol":"-0.25","std":"0.088"},"endemoniado":{"pos":"a","pol":"-0.25","std":"0.0"},"endiosamiento":{"pos":"n","pol":"-0.25","std":"0.265"},"endocarpio":{"pos":"n","pol":"-0.25","std":"0.0"},"endocarpo":{"pos":"n","pol":"-0.25","std":"0.0"},"energía cinética":{"pos":"n","pol":"-0.25","std":"0.0"},"energía eólica":{"pos":"n","pol":"-0.25","std":"0.0"},"energía radiante":{"pos":"n","pol":"-0.25","std":"0.0"},"enervador":{"pos":"a","pol":"-0.25","std":"0.0"},"enfermedad cardiovascular":{"pos":"n","pol":"-0.25","std":"0.0"},"enfermedad del sudor":{"pos":"n","pol":"-0.25","std":"0.0"},"enfermo":{"pos":"n","pol":"-0.25","std":"0.0"},"enfermo incurable":{"pos":"n","pol":"-0.25","std":"0.0"},"enfrentarse a":{"pos":"v","pol":"-0.25","std":"0.0"},"engatusamiento":{"pos":"n","pol":"-0.25","std":"0.0"},"engomar":{"pos":"v","pol":"-0.25","std":"0.0"},"engrisecer":{"pos":"v","pol":"-0.25","std":"0.0"},"enhollinar":{"pos":"v","pol":"-0.25","std":"0.0"},"enojadizo":{"pos":"a","pol":"-0.25","std":"0.354"},"enrevesar":{"pos":"v","pol":"-0.25","std":"0.0"},"enronquecimiento":{"pos":"n","pol":"-0.25","std":"0.0"},"enseguida":{"pos":"r","pol":"-0.25","std":"0.0"},"ensordecedor":{"pos":"a","pol":"-0.25","std":"0.0"},"ensordecido":{"pos":"a","pol":"-0.25","std":"0.0"},"enterizo":{"pos":"a","pol":"-0.25","std":"0.0"},"enterramiento":{"pos":"n","pol":"-0.25","std":"0.0"},"entoloma":{"pos":"n","pol":"-0.25","std":"0.0"},"entomofobia":{"pos":"n","pol":"-0.25","std":"0.0"},"entrecot":{"pos":"n","pol":"-0.25","std":"0.0"},"entrecó":{"pos":"n","pol":"-0.25","std":"0.0"},"entregar mal":{"pos":"v","pol":"-0.25","std":"0.0"},"entremetido":{"pos":"n","pol":"-0.25","std":"0.0"},"enturbiado":{"pos":"a","pol":"-0.25","std":"0.0"},"enturbiarse":{"pos":"v","pol":"-0.25","std":"0.0"},"envalentonado":{"pos":"a","pol":"-0.25","std":"0.0"},"envenenamiento":{"pos":"n","pol":"-0.25","std":"0.0"},"enviar un drive":{"pos":"v","pol":"-0.25","std":"0.0"},"envilecedor":{"pos":"a","pol":"-0.25","std":"0.0"},"envilecer":{"pos":"v","pol":"-0.25","std":"0.265"},"eosinofilia":{"pos":"n","pol":"-0.25","std":"0.0"},"epidemiología":{"pos":"n","pol":"-0.25","std":"0.0"},"epidemiológico":{"pos":"a","pol":"-0.25","std":"0.0"},"epilepsia postraumática":{"pos":"n","pol":"-0.25","std":"0.0"},"epiléptico":{"pos":"n","pol":"-0.25","std":"0.0"},"equipo de rescate":{"pos":"n","pol":"-0.25","std":"0.0"},"equus hemionus":{"pos":"n","pol":"-0.25","std":"0.0"},"equus hemionus kiang":{"pos":"n","pol":"-0.25","std":"0.0"},"erosión costera":{"pos":"n","pol":"-0.25","std":"0.0"},"error de interpretación":{"pos":"n","pol":"-0.25","std":"0.0"},"error informático":{"pos":"n","pol":"-0.25","std":"0.0"},"erupción volcánica":{"pos":"n","pol":"-0.25","std":"0.0"},"escabrosidad":{"pos":"n","pol":"-0.25","std":"0.177"},"escafandra":{"pos":"n","pol":"-0.25","std":"0.0"},"escalar":{"pos":"n","pol":"-0.25","std":"0.0"},"escalofrío":{"pos":"n","pol":"-0.25","std":"0.0"},"escandalizar":{"pos":"v","pol":"-0.25","std":"0.088"},"escaparsse":{"pos":"v","pol":"-0.25","std":"0.0"},"escapismo":{"pos":"n","pol":"-0.25","std":"0.0"},"escapulario":{"pos":"n","pol":"-0.25","std":"0.0"},"escarabajo":{"pos":"n","pol":"-0.25","std":"0.0"},"escaramuzar":{"pos":"v","pol":"-0.25","std":"0.0"},"escarnecer":{"pos":"v","pol":"-0.25","std":"0.0"},"escatología":{"pos":"n","pol":"-0.25","std":"0.072"},"escaño trasero":{"pos":"n","pol":"-0.25","std":"0.0"},"escoria":{"pos":"n","pol":"-0.25","std":"0.072"},"escorial":{"pos":"n","pol":"-0.25","std":"0.0"},"escuadrón":{"pos":"n","pol":"-0.25","std":"0.0"},"escuchar a escondidas":{"pos":"v","pol":"-0.25","std":"0.0"},"escudar":{"pos":"v","pol":"-0.25","std":"0.0"},"escándalo":{"pos":"n","pol":"-0.25","std":"0.065"},"esferocarpales":{"pos":"n","pol":"-0.25","std":"0.0"},"esmeril":{"pos":"n","pol":"-0.25","std":"0.0"},"esnob":{"pos":"n","pol":"-0.25","std":"0.0"},"esnobismo":{"pos":"n","pol":"-0.25","std":"0.0"},"espada de Damocles":{"pos":"n","pol":"-0.25","std":"0.0"},"espaldarón":{"pos":"n","pol":"-0.25","std":"0.0"},"esparadrapo":{"pos":"n","pol":"-0.25","std":"0.0"},"especie humana":{"pos":"n","pol":"-0.25","std":"0.0"},"espeluzno":{"pos":"n","pol":"-0.25","std":"0.0"},"espinillera":{"pos":"n","pol":"-0.25","std":"0.0"},"espirar":{"pos":"v","pol":"-0.25","std":"0.0"},"espiritismo":{"pos":"n","pol":"-0.25","std":"0.0"},"espiritista":{"pos":"n","pol":"-0.25","std":"0.0"},"espiritualista":{"pos":"a","pol":"-0.25","std":"0.0"},"espontaneidad":{"pos":"n","pol":"-0.25","std":"0.0"},"esprue":{"pos":"n","pol":"-0.25","std":"0.0"},"espíritu necrófago":{"pos":"n","pol":"-0.25","std":"0.0"},"esquibob":{"pos":"n","pol":"-0.25","std":"0.0"},"esquirol":{"pos":"n","pol":"-0.25","std":"0.0"},"esquirolaje":{"pos":"n","pol":"-0.25","std":"0.0"},"esquivez":{"pos":"n","pol":"-0.25","std":"0.0"},"esquizoide":{"pos":"a","pol":"-0.25","std":"0.088"},"estacionario":{"pos":"a","pol":"-0.25","std":"0.177"},"estafilococo":{"pos":"n","pol":"-0.25","std":"0.0"},"estar abatido":{"pos":"v","pol":"-0.25","std":"0.0"},"estar al mando":{"pos":"v","pol":"-0.25","std":"0.0"},"estar deprimido":{"pos":"v","pol":"-0.25","std":"0.0"},"estar en la higuera":{"pos":"v","pol":"-0.25","std":"0.0"},"estar mal visto":{"pos":"v","pol":"-0.25","std":"0.0"},"estigmatizar":{"pos":"v","pol":"-0.25","std":"0.0"},"estola":{"pos":"n","pol":"-0.25","std":"0.0"},"estornudo":{"pos":"n","pol":"-0.25","std":"0.0"},"estrabismo":{"pos":"n","pol":"-0.25","std":"0.0"},"estregar":{"pos":"v","pol":"-0.25","std":"0.0"},"estreñimiento":{"pos":"n","pol":"-0.25","std":"0.0"},"estridente":{"pos":"a","pol":"-0.25","std":"0.205"},"estrucioniformes":{"pos":"n","pol":"-0.25","std":"0.0"},"estructura defensiva":{"pos":"n","pol":"-0.25","std":"0.0"},"estupideces":{"pos":"n","pol":"-0.25","std":"0.0"},"estupidez":{"pos":"n","pol":"-0.25","std":"0.141"},"eurylaimidae":{"pos":"n","pol":"-0.25","std":"0.0"},"eutanasia":{"pos":"n","pol":"-0.25","std":"0.0"},"eutrofización":{"pos":"n","pol":"-0.25","std":"0.0"},"evacuación":{"pos":"n","pol":"-0.25","std":"0.0"},"evacuado":{"pos":"n","pol":"-0.25","std":"0.0"},"evasionismo":{"pos":"n","pol":"-0.25","std":"0.0"},"evidentemente":{"pos":"r","pol":"-0.25","std":"0.0"},"exagerado elogio":{"pos":"n","pol":"-0.25","std":"0.0"},"exantema":{"pos":"n","pol":"-0.25","std":"0.0"},"exculpatorio":{"pos":"a","pol":"-0.25","std":"0.0"},"exhorto":{"pos":"n","pol":"-0.25","std":"0.0"},"exorcismo":{"pos":"n","pol":"-0.25","std":"0.0"},"expandirse":{"pos":"v","pol":"-0.25","std":"0.088"},"expediente termporal":{"pos":"n","pol":"-0.25","std":"0.0"},"experiencia sensorial":{"pos":"n","pol":"-0.25","std":"0.0"},"expiatorio":{"pos":"a","pol":"-0.25","std":"0.0"},"exploración geográfica":{"pos":"n","pol":"-0.25","std":"0.0"},"exterminable":{"pos":"a","pol":"-0.25","std":"0.0"},"extralingüístico":{"pos":"a","pol":"-0.25","std":"0.0"},"extrañar":{"pos":"v","pol":"-0.25","std":"0.0"},"extremismo":{"pos":"n","pol":"-0.25","std":"0.0"},"facilidad":{"pos":"n","pol":"-0.25","std":"0.0"},"facineroso":{"pos":"n","pol":"-0.25","std":"0.0"},"facochero":{"pos":"n","pol":"-0.25","std":"0.0"},"fado":{"pos":"n","pol":"-0.25","std":"0.0"},"falacia":{"pos":"n","pol":"-0.25","std":"0.072"},"falco rusticolus":{"pos":"n","pol":"-0.25","std":"0.0"},"falconiforme":{"pos":"n","pol":"-0.25","std":"0.0"},"fallecimiento":{"pos":"n","pol":"-0.25","std":"0.0"},"falsa":{"pos":"a","pol":"-0.25","std":"0.0"},"falsar":{"pos":"v","pol":"-0.25","std":"0.0"},"falta de consideración":{"pos":"n","pol":"-0.25","std":"0.0"},"falta de educación":{"pos":"n","pol":"-0.25","std":"0.0"},"falta de equivalencia":{"pos":"n","pol":"-0.25","std":"0.0"},"falta de forma":{"pos":"n","pol":"-0.25","std":"0.0"},"familia Haemulidae":{"pos":"n","pol":"-0.25","std":"0.0"},"familia Myrmecophagidae":{"pos":"n","pol":"-0.25","std":"0.0"},"familia melampsoráceas":{"pos":"n","pol":"-0.25","std":"0.0"},"fantasmada":{"pos":"n","pol":"-0.25","std":"0.0"},"fantasmagórico":{"pos":"a","pol":"-0.25","std":"0.0"},"farsante":{"pos":"a","pol":"-0.25","std":"0.0"},"fatigar":{"pos":"v","pol":"-0.25","std":"0.088"},"febrífugo":{"pos":"n","pol":"-0.25","std":"0.0"},"felis silvestris":{"pos":"n","pol":"-0.25","std":"0.0"},"fenestral":{"pos":"a","pol":"-0.25","std":"0.0"},"ferula assafoetida":{"pos":"n","pol":"-0.25","std":"0.0"},"fervientemente":{"pos":"r","pol":"-0.25","std":"0.0"},"fibrinólisis":{"pos":"n","pol":"-0.25","std":"0.0"},"fiebre de Texas":{"pos":"n","pol":"-0.25","std":"0.0"},"fiebre del ganado":{"pos":"n","pol":"-0.25","std":"0.0"},"fiebre paratifoidea":{"pos":"n","pol":"-0.25","std":"0.0"},"fiebre recurrente":{"pos":"n","pol":"-0.25","std":"0.0"},"fiebre tifoidea":{"pos":"n","pol":"-0.25","std":"0.0"},"fieramente":{"pos":"r","pol":"-0.25","std":"0.0"},"fiero":{"pos":"a","pol":"-0.25","std":"0.265"},"figura retórica":{"pos":"n","pol":"-0.25","std":"0.0"},"fijarse":{"pos":"v","pol":"-0.25","std":"0.0"},"filicidio":{"pos":"n","pol":"-0.25","std":"0.0"},"fimosis":{"pos":"n","pol":"-0.25","std":"0.0"},"final de copa":{"pos":"n","pol":"-0.25","std":"0.0"},"fiscal general":{"pos":"n","pol":"-0.25","std":"0.0"},"fisgón":{"pos":"a","pol":"-0.25","std":"0.0"},"fisicalismo":{"pos":"n","pol":"-0.25","std":"0.0"},"fisostigma":{"pos":"n","pol":"-0.25","std":"0.0"},"fisura del paladar":{"pos":"n","pol":"-0.25","std":"0.0"},"flecar":{"pos":"v","pol":"-0.25","std":"0.0"},"flojear":{"pos":"v","pol":"-0.25","std":"0.0"},"flojedad":{"pos":"n","pol":"-0.25","std":"0.088"},"flora":{"pos":"n","pol":"-0.25","std":"0.0"},"floresta":{"pos":"n","pol":"-0.25","std":"0.0"},"fluctuante":{"pos":"a","pol":"-0.25","std":"0.0"},"folclor":{"pos":"n","pol":"-0.25","std":"0.0"},"folclore":{"pos":"n","pol":"-0.25","std":"0.0"},"folklore":{"pos":"n","pol":"-0.25","std":"0.0"},"follonero":{"pos":"n","pol":"-0.25","std":"0.0"},"fosforo":{"pos":"n","pol":"-0.25","std":"0.0"},"fox-trot":{"pos":"n","pol":"-0.25","std":"0.0"},"foxtrot":{"pos":"n","pol":"-0.25","std":"0.0"},"franciscano":{"pos":"n","pol":"-0.25","std":"0.0"},"frangollar":{"pos":"v","pol":"-0.25","std":"0.0"},"frangollón":{"pos":"n","pol":"-0.25","std":"0.0"},"franja":{"pos":"n","pol":"-0.25","std":"0.0"},"franja de vuelo":{"pos":"n","pol":"-0.25","std":"0.0"},"frase pegadiza":{"pos":"n","pol":"-0.25","std":"0.0"},"fraude fiscal":{"pos":"n","pol":"-0.25","std":"0.0"},"frenesí":{"pos":"n","pol":"-0.25","std":"0.0"},"frescor":{"pos":"n","pol":"-0.25","std":"0.0"},"frigorífico":{"pos":"n","pol":"-0.25","std":"0.0"},"fringillidae":{"pos":"n","pol":"-0.25","std":"0.0"},"frivolidad":{"pos":"n","pol":"-0.25","std":"0.102"},"frufrú":{"pos":"n","pol":"-0.25","std":"0.0"},"frígido":{"pos":"a","pol":"-0.25","std":"0.0"},"fuego antiaéreo":{"pos":"n","pol":"-0.25","std":"0.0"},"fuego preparado":{"pos":"n","pol":"-0.25","std":"0.0"},"fuegos artificiales":{"pos":"n","pol":"-0.25","std":"0.0"},"fuegos de artificio":{"pos":"n","pol":"-0.25","std":"0.0"},"fuera":{"pos":"n","pol":"-0.25","std":"0.0"},"fuerza centrífuga":{"pos":"n","pol":"-0.25","std":"0.0"},"fugacidad":{"pos":"n","pol":"-0.25","std":"0.0"},"fulminante":{"pos":"a","pol":"-0.25","std":"0.0"},"funcionario de prisiones":{"pos":"n","pol":"-0.25","std":"0.0"},"funeral":{"pos":"n","pol":"-0.25","std":"0.0"},"funerario":{"pos":"a","pol":"-0.25","std":"0.0"},"futilidad":{"pos":"n","pol":"-0.25","std":"0.137"},"fábrica de armamento":{"pos":"n","pol":"-0.25","std":"0.0"},"fárrago":{"pos":"n","pol":"-0.25","std":"0.0"},"físicoterapeuta":{"pos":"n","pol":"-0.25","std":"0.0"},"fútil":{"pos":"a","pol":"-0.25","std":"0.088"},"gafar":{"pos":"v","pol":"-0.25","std":"0.0"},"gafas":{"pos":"n","pol":"-0.25","std":"0.0"},"gafas protectoras":{"pos":"n","pol":"-0.25","std":"0.0"},"galactosemia":{"pos":"n","pol":"-0.25","std":"0.0"},"galleta para perros":{"pos":"n","pol":"-0.25","std":"0.0"},"gallinería":{"pos":"n","pol":"-0.25","std":"0.0"},"gallumbos":{"pos":"n","pol":"-0.25","std":"0.177"},"galvanización":{"pos":"n","pol":"-0.25","std":"0.0"},"gamberrismo":{"pos":"n","pol":"-0.25","std":"0.0"},"gammaglobulina":{"pos":"n","pol":"-0.25","std":"0.0"},"ganar prosélitos":{"pos":"v","pol":"-0.25","std":"0.0"},"gandul":{"pos":"a","pol":"-0.25","std":"0.0"},"gangrena del tallo":{"pos":"n","pol":"-0.25","std":"0.0"},"gangrenarse":{"pos":"v","pol":"-0.25","std":"0.0"},"gangsterismo":{"pos":"n","pol":"-0.25","std":"0.0"},"ganzúa":{"pos":"n","pol":"-0.25","std":"0.0"},"garabato":{"pos":"n","pol":"-0.25","std":"0.068"},"garantía del cumplimiento":{"pos":"n","pol":"-0.25","std":"0.0"},"garranchuelo":{"pos":"n","pol":"-0.25","std":"0.0"},"gas nervioso":{"pos":"n","pol":"-0.25","std":"0.0"},"gastar una broma":{"pos":"v","pol":"-0.25","std":"0.0"},"gastritis":{"pos":"n","pol":"-0.25","std":"0.0"},"gastritis crónica":{"pos":"n","pol":"-0.25","std":"0.0"},"gato del desierto":{"pos":"n","pol":"-0.25","std":"0.0"},"gato maltés":{"pos":"n","pol":"-0.25","std":"0.0"},"gato salvaje":{"pos":"n","pol":"-0.25","std":"0.0"},"gato siamés":{"pos":"n","pol":"-0.25","std":"0.0"},"gaviota":{"pos":"n","pol":"-0.25","std":"0.0"},"gavión":{"pos":"n","pol":"-0.25","std":"0.0"},"gaznápiro":{"pos":"n","pol":"-0.25","std":"0.088"},"gañido":{"pos":"n","pol":"-0.25","std":"0.0"},"gegenschein":{"pos":"n","pol":"-0.25","std":"0.0"},"gemelo":{"pos":"a","pol":"-0.25","std":"0.0"},"gemir":{"pos":"v","pol":"-0.25","std":"0.072"},"generalmente":{"pos":"r","pol":"-0.25","std":"0.0"},"genus aethusa":{"pos":"n","pol":"-0.25","std":"0.0"},"genus amsinckia":{"pos":"n","pol":"-0.25","std":"0.0"},"genus anastomus":{"pos":"n","pol":"-0.25","std":"0.0"},"genus anchusa":{"pos":"n","pol":"-0.25","std":"0.0"},"genus anthonomus":{"pos":"n","pol":"-0.25","std":"0.0"},"genus antilope":{"pos":"n","pol":"-0.25","std":"0.0"},"genus bauhinia":{"pos":"n","pol":"-0.25","std":"0.0"},"genus bos":{"pos":"n","pol":"-0.25","std":"0.0"},"genus brachystegia":{"pos":"n","pol":"-0.25","std":"0.0"},"genus cardamine":{"pos":"n","pol":"-0.25","std":"0.0"},"genus cassiope":{"pos":"n","pol":"-0.25","std":"0.0"},"genus cerapteryx":{"pos":"n","pol":"-0.25","std":"0.0"},"genus cercosporella":{"pos":"n","pol":"-0.25","std":"0.0"},"genus cocculus":{"pos":"n","pol":"-0.25","std":"0.0"},"genus coptis":{"pos":"n","pol":"-0.25","std":"0.0"},"genus crescentia":{"pos":"n","pol":"-0.25","std":"0.0"},"genus dendroctonus":{"pos":"n","pol":"-0.25","std":"0.0"},"genus dipsosaurus":{"pos":"n","pol":"-0.25","std":"0.0"},"genus empetrum":{"pos":"n","pol":"-0.25","std":"0.0"},"genus entoloma":{"pos":"n","pol":"-0.25","std":"0.0"},"genus lepiota":{"pos":"n","pol":"-0.25","std":"0.0"},"genus limenitis":{"pos":"n","pol":"-0.25","std":"0.0"},"genus monarda":{"pos":"n","pol":"-0.25","std":"0.0"},"genus ozonium":{"pos":"n","pol":"-0.25","std":"0.0"},"genus physostigma":{"pos":"n","pol":"-0.25","std":"0.0"},"genus phytophthora":{"pos":"n","pol":"-0.25","std":"0.0"},"genus pythium":{"pos":"n","pol":"-0.25","std":"0.0"},"genus reticulitermes":{"pos":"n","pol":"-0.25","std":"0.0"},"genus rosellinia":{"pos":"n","pol":"-0.25","std":"0.0"},"genus scleroderma":{"pos":"n","pol":"-0.25","std":"0.0"},"genus serrasalmus":{"pos":"n","pol":"-0.25","std":"0.0"},"genus streptopelia":{"pos":"n","pol":"-0.25","std":"0.0"},"genus syringa":{"pos":"n","pol":"-0.25","std":"0.0"},"genus tussilago":{"pos":"n","pol":"-0.25","std":"0.0"},"genus veratrum":{"pos":"n","pol":"-0.25","std":"0.0"},"genéricamente":{"pos":"r","pol":"-0.25","std":"0.0"},"gilbert":{"pos":"n","pol":"-0.25","std":"0.0"},"glitch":{"pos":"n","pol":"-0.25","std":"0.0"},"glándula submaxilar":{"pos":"n","pol":"-0.25","std":"0.0"},"glíptica":{"pos":"n","pol":"-0.25","std":"0.0"},"gobierno en el exilio":{"pos":"n","pol":"-0.25","std":"0.0"},"gobierno títere":{"pos":"n","pol":"-0.25","std":"0.0"},"gola":{"pos":"n","pol":"-0.25","std":"0.0"},"golfante":{"pos":"n","pol":"-0.25","std":"0.0"},"golpear duramente":{"pos":"v","pol":"-0.25","std":"0.0"},"golpearse contra":{"pos":"v","pol":"-0.25","std":"0.0"},"gonorrea":{"pos":"n","pol":"-0.25","std":"0.0"},"gordiano":{"pos":"a","pol":"-0.25","std":"0.0"},"gordinflón":{"pos":"n","pol":"-0.25","std":"0.0"},"gordito":{"pos":"n","pol":"-0.25","std":"0.0"},"gorguera":{"pos":"n","pol":"-0.25","std":"0.0"},"gorjal":{"pos":"n","pol":"-0.25","std":"0.0"},"gorra de marinero":{"pos":"n","pol":"-0.25","std":"0.0"},"gorro de dormir":{"pos":"n","pol":"-0.25","std":"0.0"},"gorro de ducha":{"pos":"n","pol":"-0.25","std":"0.0"},"gran angular":{"pos":"a","pol":"-0.25","std":"0.0"},"gran vida":{"pos":"n","pol":"-0.25","std":"0.0"},"granulomatosis crónica":{"pos":"n","pol":"-0.25","std":"0.0"},"grasa poliinsaturada":{"pos":"n","pol":"-0.25","std":"0.0"},"gratis":{"pos":"a","pol":"-0.25","std":"0.0"},"grimorio":{"pos":"n","pol":"-0.25","std":"0.0"},"gris-pizarra":{"pos":"a","pol":"-0.25","std":"0.0"},"grisear":{"pos":"v","pol":"-0.25","std":"0.0"},"grisoso":{"pos":"a","pol":"-0.25","std":"0.0"},"grisáceo":{"pos":"a","pol":"-0.25","std":"0.0"},"grocería":{"pos":"n","pol":"-0.25","std":"0.0"},"grullo":{"pos":"n","pol":"-0.25","std":"0.0"},"grunge":{"pos":"n","pol":"-0.25","std":"0.0"},"guante de boxeo":{"pos":"n","pol":"-0.25","std":"0.0"},"guardafrenos":{"pos":"n","pol":"-0.25","std":"0.0"},"guardarse":{"pos":"v","pol":"-0.25","std":"0.088"},"guardia de prisión":{"pos":"n","pol":"-0.25","std":"0.0"},"guasábara":{"pos":"n","pol":"-0.25","std":"0.0"},"guerra bacteriológica":{"pos":"n","pol":"-0.25","std":"0.0"},"guili":{"pos":"n","pol":"-0.25","std":"0.0"},"guilladura":{"pos":"n","pol":"-0.25","std":"0.0"},"guindo":{"pos":"n","pol":"-0.25","std":"0.0"},"guiñapo":{"pos":"n","pol":"-0.25","std":"0.0"},"guripa":{"pos":"n","pol":"-0.25","std":"0.0"},"gustativo":{"pos":"a","pol":"-0.25","std":"0.0"},"gustatorio":{"pos":"a","pol":"-0.25","std":"0.0"},"gálbano":{"pos":"n","pol":"-0.25","std":"0.0"},"gángster":{"pos":"n","pol":"-0.25","std":"0.0"},"gánster":{"pos":"n","pol":"-0.25","std":"0.0"},"género Anastomus":{"pos":"n","pol":"-0.25","std":"0.0"},"género Anthonomus":{"pos":"n","pol":"-0.25","std":"0.0"},"género Antilope":{"pos":"n","pol":"-0.25","std":"0.0"},"género Cerapteryx":{"pos":"n","pol":"-0.25","std":"0.0"},"género Dipsosaurus":{"pos":"n","pol":"-0.25","std":"0.0"},"género Latrodectus":{"pos":"n","pol":"-0.25","std":"0.0"},"género Serrasalmus":{"pos":"n","pol":"-0.25","std":"0.0"},"género Streptopelia":{"pos":"n","pol":"-0.25","std":"0.0"},"género aethusa":{"pos":"n","pol":"-0.25","std":"0.0"},"género bauhínia":{"pos":"n","pol":"-0.25","std":"0.0"},"género cardamine":{"pos":"n","pol":"-0.25","std":"0.0"},"género empetrum":{"pos":"n","pol":"-0.25","std":"0.0"},"género fisostigma":{"pos":"n","pol":"-0.25","std":"0.0"},"género humano":{"pos":"n","pol":"-0.25","std":"0.0"},"género monarda":{"pos":"n","pol":"-0.25","std":"0.0"},"género ozonium":{"pos":"n","pol":"-0.25","std":"0.0"},"hacer añicos":{"pos":"v","pol":"-0.25","std":"0.0"},"hacer baronet":{"pos":"v","pol":"-0.25","std":"0.0"},"hacer caer":{"pos":"v","pol":"-0.25","std":"0.0"},"hacer desaparecer":{"pos":"v","pol":"-0.25","std":"0.0"},"hacer falta":{"pos":"v","pol":"-0.25","std":"0.0"},"hacer gris":{"pos":"v","pol":"-0.25","std":"0.0"},"hacer prosélitos":{"pos":"v","pol":"-0.25","std":"0.0"},"hacer responsable":{"pos":"v","pol":"-0.25","std":"0.0"},"hacer tongo":{"pos":"v","pol":"-0.25","std":"0.0"},"hacer trizas":{"pos":"v","pol":"-0.25","std":"0.0"},"hacer una apuesta":{"pos":"v","pol":"-0.25","std":"0.0"},"hacerse con":{"pos":"v","pol":"-0.25","std":"0.088"},"hacerse humo":{"pos":"v","pol":"-0.25","std":"0.0"},"haiku":{"pos":"n","pol":"-0.25","std":"0.0"},"halcón gerifalte":{"pos":"n","pol":"-0.25","std":"0.0"},"hallar":{"pos":"v","pol":"-0.25","std":"0.0"},"hamartia":{"pos":"n","pol":"-0.25","std":"0.0"},"harapo":{"pos":"n","pol":"-0.25","std":"0.0"},"harpía":{"pos":"n","pol":"-0.25","std":"0.072"},"hauberk":{"pos":"n","pol":"-0.25","std":"0.0"},"hebefrenia":{"pos":"n","pol":"-0.25","std":"0.0"},"hebefrénico":{"pos":"a","pol":"-0.25","std":"0.0"},"hecho polvo":{"pos":"a","pol":"-0.25","std":"0.0"},"hematuria":{"pos":"n","pol":"-0.25","std":"0.088"},"hemiplejia":{"pos":"n","pol":"-0.25","std":"0.0"},"hemiplejía":{"pos":"n","pol":"-0.25","std":"0.0"},"hemión":{"pos":"n","pol":"-0.25","std":"0.0"},"hemoptisis":{"pos":"n","pol":"-0.25","std":"0.0"},"heredero":{"pos":"n","pol":"-0.25","std":"0.0"},"herida":{"pos":"n","pol":"-0.25","std":"0.105"},"herida de guerra":{"pos":"n","pol":"-0.25","std":"0.0"},"herido":{"pos":"a","pol":"-0.25","std":"0.0"},"herradero":{"pos":"n","pol":"-0.25","std":"0.0"},"herrumbrar":{"pos":"v","pol":"-0.25","std":"0.0"},"hibris":{"pos":"n","pol":"-0.25","std":"0.0"},"hidrocefalia":{"pos":"n","pol":"-0.25","std":"0.0"},"hidrocele":{"pos":"n","pol":"-0.25","std":"0.0"},"hidrofóbico":{"pos":"a","pol":"-0.25","std":"0.0"},"hidroxicina":{"pos":"n","pol":"-0.25","std":"0.0"},"hierro cinco":{"pos":"n","pol":"-0.25","std":"0.0"},"himenomicetes":{"pos":"n","pol":"-0.25","std":"0.0"},"hiperacusia":{"pos":"n","pol":"-0.25","std":"0.0"},"hiperinsulinismo":{"pos":"n","pol":"-0.25","std":"0.0"},"hiperón":{"pos":"n","pol":"-0.25","std":"0.0"},"hipogammaglobulinemia":{"pos":"n","pol":"-0.25","std":"0.0"},"hipogonadismo":{"pos":"n","pol":"-0.25","std":"0.0"},"hipopotasemia":{"pos":"n","pol":"-0.25","std":"0.0"},"historia heroica":{"pos":"n","pol":"-0.25","std":"0.0"},"historiador del arte":{"pos":"n","pol":"-0.25","std":"0.0"},"hiyab":{"pos":"n","pol":"-0.25","std":"0.0"},"hoja trifoliada":{"pos":"n","pol":"-0.25","std":"0.0"},"holgado":{"pos":"a","pol":"-0.25","std":"0.088"},"holgazán":{"pos":"a","pol":"-0.25","std":"0.0"},"hollín":{"pos":"n","pol":"-0.25","std":"0.0"},"hombre del tiempo":{"pos":"n","pol":"-0.25","std":"0.0"},"hombre lobo":{"pos":"n","pol":"-0.25","std":"0.0"},"homicidio involuntario":{"pos":"n","pol":"-0.25","std":"0.0"},"homicidio sin premeditación":{"pos":"n","pol":"-0.25","std":"0.0"},"hongo carbón":{"pos":"n","pol":"-0.25","std":"0.0"},"hongo del marchitamiento":{"pos":"n","pol":"-0.25","std":"0.0"},"horas":{"pos":"n","pol":"-0.25","std":"0.0"},"horririzar":{"pos":"v","pol":"-0.25","std":"0.0"},"hortícola":{"pos":"a","pol":"-0.25","std":"0.0"},"hospital de campaña":{"pos":"n","pol":"-0.25","std":"0.0"},"hostigamiento":{"pos":"n","pol":"-0.25","std":"0.177"},"huelga":{"pos":"n","pol":"-0.25","std":"0.0"},"hurañía":{"pos":"n","pol":"-0.25","std":"0.0"},"husmeador":{"pos":"a","pol":"-0.25","std":"0.0"},"hábeas corpus":{"pos":"n","pol":"-0.25","std":"0.0"},"ictal":{"pos":"a","pol":"-0.25","std":"0.0"},"ignífugo":{"pos":"a","pol":"-0.25","std":"0.0"},"ilegibilidad":{"pos":"n","pol":"-0.25","std":"0.0"},"ilimitadamente":{"pos":"r","pol":"-0.25","std":"0.0"},"immunizar":{"pos":"v","pol":"-0.25","std":"0.0"},"impactar":{"pos":"v","pol":"-0.25","std":"0.088"},"impedimento olfativo":{"pos":"n","pol":"-0.25","std":"0.0"},"impenetrabilidad":{"pos":"n","pol":"-0.25","std":"0.265"},"imperativo":{"pos":"n","pol":"-0.25","std":"0.0"},"imperceptible":{"pos":"a","pol":"-0.25","std":"0.072"},"impertinencia":{"pos":"n","pol":"-0.25","std":"0.105"},"impetuosamente":{"pos":"r","pol":"-0.25","std":"0.0"},"imponibilidad":{"pos":"n","pol":"-0.25","std":"0.0"},"impopular":{"pos":"a","pol":"-0.25","std":"0.0"},"importunar":{"pos":"v","pol":"-0.25","std":"0.088"},"imposible":{"pos":"n","pol":"-0.25","std":"0.0"},"impostor":{"pos":"n","pol":"-0.25","std":"0.0"},"impracticable":{"pos":"a","pol":"-0.25","std":"0.0"},"impresentable":{"pos":"a","pol":"-0.25","std":"0.0"},"impresión sensorial":{"pos":"n","pol":"-0.25","std":"0.0"},"imprevisto":{"pos":"n","pol":"-0.25","std":"0.0"},"improductividad":{"pos":"n","pol":"-0.25","std":"0.088"},"impudencia":{"pos":"n","pol":"-0.25","std":"0.0"},"impuesto de exportación":{"pos":"n","pol":"-0.25","std":"0.0"},"impuesto de protección":{"pos":"n","pol":"-0.25","std":"0.0"},"impulsivamente":{"pos":"r","pol":"-0.25","std":"0.0"},"imágenes prediseñadas":{"pos":"n","pol":"-0.25","std":"0.0"},"in flagrante":{"pos":"n","pol":"-0.25","std":"0.0"},"inabordable":{"pos":"a","pol":"-0.25","std":"0.0"},"inaccesibilidad":{"pos":"n","pol":"-0.25","std":"0.0"},"inadmisibilidad":{"pos":"n","pol":"-0.25","std":"0.0"},"inaplicable":{"pos":"a","pol":"-0.25","std":"0.0"},"inasistencia escolar":{"pos":"n","pol":"-0.25","std":"0.0"},"incansablemente":{"pos":"r","pol":"-0.25","std":"0.0"},"incapacitador":{"pos":"a","pol":"-0.25","std":"0.0"},"incauta":{"pos":"n","pol":"-0.25","std":"0.0"},"incendiar":{"pos":"v","pol":"-0.25","std":"0.0"},"incendiarismo":{"pos":"n","pol":"-0.25","std":"0.0"},"incendio":{"pos":"n","pol":"-0.25","std":"0.0"},"incendio provocado":{"pos":"n","pol":"-0.25","std":"0.0"},"incertitud":{"pos":"n","pol":"-0.25","std":"0.0"},"incoherencia":{"pos":"n","pol":"-0.25","std":"0.088"},"incompetentemente":{"pos":"r","pol":"-0.25","std":"0.0"},"incomprendido":{"pos":"a","pol":"-0.25","std":"0.0"},"inconcreción":{"pos":"n","pol":"-0.25","std":"0.177"},"inconscientemente":{"pos":"r","pol":"-0.25","std":"0.072"},"incontrolable":{"pos":"a","pol":"-0.25","std":"0.188"},"incuria":{"pos":"n","pol":"-0.25","std":"0.177"},"incursionar":{"pos":"v","pol":"-0.25","std":"0.0"},"indeciso":{"pos":"n","pol":"-0.25","std":"0.0"},"indefensable":{"pos":"a","pol":"-0.25","std":"0.0"},"indefensible":{"pos":"a","pol":"-0.25","std":"0.0"},"indefinición":{"pos":"n","pol":"-0.25","std":"0.0"},"indelimitable":{"pos":"a","pol":"-0.25","std":"0.0"},"indetectable":{"pos":"a","pol":"-0.25","std":"0.088"},"indeterminable":{"pos":"a","pol":"-0.25","std":"0.088"},"indigestión":{"pos":"n","pol":"-0.25","std":"0.0"},"indiscutible":{"pos":"a","pol":"-0.25","std":"0.246"},"indomabilidad":{"pos":"n","pol":"-0.25","std":"0.0"},"indoméstico":{"pos":"a","pol":"-0.25","std":"0.0"},"indumento":{"pos":"n","pol":"-0.25","std":"0.0"},"indómito":{"pos":"a","pol":"-0.25","std":"0.088"},"inelegibilidad":{"pos":"n","pol":"-0.25","std":"0.0"},"inerme":{"pos":"a","pol":"-0.25","std":"0.0"},"inestabilidad":{"pos":"n","pol":"-0.25","std":"0.21"},"inexpresable":{"pos":"a","pol":"-0.25","std":"0.191"},"inextinguible":{"pos":"a","pol":"-0.25","std":"0.0"},"inextirpable":{"pos":"a","pol":"-0.25","std":"0.0"},"infamador":{"pos":"n","pol":"-0.25","std":"0.0"},"infame":{"pos":"a","pol":"-0.25","std":"0.12"},"infanticidio":{"pos":"n","pol":"-0.25","std":"0.0"},"infinitamente":{"pos":"r","pol":"-0.25","std":"0.0"},"inflado":{"pos":"a","pol":"-0.25","std":"0.0"},"inflamación":{"pos":"n","pol":"-0.25","std":"0.088"},"inflamarse":{"pos":"v","pol":"-0.25","std":"0.072"},"informalmente":{"pos":"r","pol":"-0.25","std":"0.0"},"informe":{"pos":"a","pol":"-0.25","std":"0.072"},"infravivienda":{"pos":"n","pol":"-0.25","std":"0.0"},"infundado":{"pos":"a","pol":"-0.25","std":"0.0"},"inharmónico":{"pos":"a","pol":"-0.25","std":"0.0"},"inhibirse":{"pos":"v","pol":"-0.25","std":"0.0"},"inhumación":{"pos":"n","pol":"-0.25","std":"0.0"},"injerto de piel":{"pos":"n","pol":"-0.25","std":"0.0"},"injustamente":{"pos":"r","pol":"-0.25","std":"0.0"},"injustificado":{"pos":"a","pol":"-0.25","std":"0.0"},"inmanejable":{"pos":"a","pol":"-0.25","std":"0.0"},"inmarcesible":{"pos":"a","pol":"-0.25","std":"0.0"},"inmigrado":{"pos":"n","pol":"-0.25","std":"0.0"},"inmigrante":{"pos":"n","pol":"-0.25","std":"0.0"},"inmoderado":{"pos":"a","pol":"-0.25","std":"0.227"},"inmoral":{"pos":"a","pol":"-0.25","std":"0.125"},"inmudable":{"pos":"a","pol":"-0.25","std":"0.0"},"inmundicia":{"pos":"n","pol":"-0.25","std":"0.129"},"inmunitario":{"pos":"a","pol":"-0.25","std":"0.0"},"inocentón":{"pos":"n","pol":"-0.25","std":"0.0"},"inoculación":{"pos":"n","pol":"-0.25","std":"0.088"},"inodoro":{"pos":"a","pol":"-0.25","std":"0.0"},"inositol":{"pos":"n","pol":"-0.25","std":"0.0"},"inpalpable":{"pos":"a","pol":"-0.25","std":"0.0"},"inprocedencia":{"pos":"n","pol":"-0.25","std":"0.0"},"inquisición":{"pos":"n","pol":"-0.25","std":"0.0"},"inquisitivamente":{"pos":"r","pol":"-0.25","std":"0.0"},"insalubridad":{"pos":"n","pol":"-0.25","std":"0.0"},"insania":{"pos":"n","pol":"-0.25","std":"0.0"},"insatisfactorio":{"pos":"a","pol":"-0.25","std":"0.0"},"insecticida":{"pos":"n","pol":"-0.25","std":"0.0"},"inservible":{"pos":"a","pol":"-0.25","std":"0.177"},"insidioso":{"pos":"a","pol":"-0.25","std":"0.072"},"insignias":{"pos":"n","pol":"-0.25","std":"0.0"},"insincera":{"pos":"a","pol":"-0.25","std":"0.0"},"inspector general":{"pos":"n","pol":"-0.25","std":"0.0"},"instantáneamente":{"pos":"r","pol":"-0.25","std":"0.0"},"instigador de odio":{"pos":"n","pol":"-0.25","std":"0.0"},"instrumento de tortura":{"pos":"n","pol":"-0.25","std":"0.0"},"insuficiencia renal":{"pos":"n","pol":"-0.25","std":"0.0"},"insultos":{"pos":"n","pol":"-0.25","std":"0.0"},"insurgente":{"pos":"a","pol":"-0.25","std":"0.0"},"insípido":{"pos":"a","pol":"-0.25","std":"0.063"},"insólito":{"pos":"a","pol":"-0.25","std":"0.125"},"inteligencia táctica":{"pos":"n","pol":"-0.25","std":"0.0"},"intensamente":{"pos":"r","pol":"-0.25","std":"0.0"},"intento de estafa":{"pos":"n","pol":"-0.25","std":"0.0"},"interdicto permanente":{"pos":"n","pol":"-0.25","std":"0.0"},"interferencia":{"pos":"n","pol":"-0.25","std":"0.0"},"interinidad":{"pos":"n","pol":"-0.25","std":"0.0"},"interino":{"pos":"a","pol":"-0.25","std":"0.0"},"interuniversitario":{"pos":"a","pol":"-0.25","std":"0.0"},"intoxicación":{"pos":"n","pol":"-0.25","std":"0.0"},"intraducible":{"pos":"a","pol":"-0.25","std":"0.0"},"intranquilizador":{"pos":"a","pol":"-0.25","std":"0.0"},"intranquilizar":{"pos":"v","pol":"-0.25","std":"0.0"},"invencibilidad":{"pos":"n","pol":"-0.25","std":"0.0"},"inviabilidad":{"pos":"n","pol":"-0.25","std":"0.0"},"inviable":{"pos":"a","pol":"-0.25","std":"0.0"},"invisibilidad":{"pos":"n","pol":"-0.25","std":"0.0"},"inédito":{"pos":"a","pol":"-0.25","std":"0.0"},"ir a dormir":{"pos":"v","pol":"-0.25","std":"0.0"},"ir a rebufo":{"pos":"v","pol":"-0.25","std":"0.0"},"ir en yate":{"pos":"v","pol":"-0.25","std":"0.0"},"iron número cinco":{"pos":"n","pol":"-0.25","std":"0.0"},"irrealizable":{"pos":"a","pol":"-0.25","std":"0.0"},"irredimible":{"pos":"a","pol":"-0.25","std":"0.0"},"irreligioso":{"pos":"a","pol":"-0.25","std":"0.0"},"irreprimido":{"pos":"a","pol":"-0.25","std":"0.0"},"irresoluble":{"pos":"a","pol":"-0.25","std":"0.0"},"irresoluto":{"pos":"n","pol":"-0.25","std":"0.0"},"irreversibilidad":{"pos":"n","pol":"-0.25","std":"0.0"},"irse a pique":{"pos":"v","pol":"-0.25","std":"0.0"},"irse al catre":{"pos":"v","pol":"-0.25","std":"0.0"},"itraconazol":{"pos":"n","pol":"-0.25","std":"0.0"},"jacaranda":{"pos":"n","pol":"-0.25","std":"0.0"},"jacarandá":{"pos":"n","pol":"-0.25","std":"0.0"},"jaqueca":{"pos":"n","pol":"-0.25","std":"0.088"},"jarrete":{"pos":"n","pol":"-0.25","std":"0.0"},"jeans":{"pos":"n","pol":"-0.25","std":"0.0"},"jihadi":{"pos":"a","pol":"-0.25","std":"0.0"},"jorguinería":{"pos":"n","pol":"-0.25","std":"0.0"},"jubón":{"pos":"n","pol":"-0.25","std":"0.0"},"judío errante":{"pos":"n","pol":"-0.25","std":"0.0"},"jumentoso":{"pos":"a","pol":"-0.25","std":"0.0"},"juncoso":{"pos":"a","pol":"-0.25","std":"0.0"},"juntamente":{"pos":"r","pol":"-0.25","std":"0.0"},"justiciero":{"pos":"n","pol":"-0.25","std":"0.0"},"justillo":{"pos":"n","pol":"-0.25","std":"0.0"},"kaon":{"pos":"n","pol":"-0.25","std":"0.0"},"kart":{"pos":"n","pol":"-0.25","std":"0.0"},"kaón":{"pos":"n","pol":"-0.25","std":"0.0"},"kiang":{"pos":"n","pol":"-0.25","std":"0.0"},"kimono":{"pos":"n","pol":"-0.25","std":"0.0"},"kleenex":{"pos":"n","pol":"-0.25","std":"0.0"},"laceración":{"pos":"n","pol":"-0.25","std":"0.088"},"lactante":{"pos":"a","pol":"-0.25","std":"0.0"},"ladrón":{"pos":"a","pol":"-0.25","std":"0.0"},"ladrón de carretera":{"pos":"n","pol":"-0.25","std":"0.0"},"lama glama":{"pos":"n","pol":"-0.25","std":"0.0"},"lambdacismo":{"pos":"n","pol":"-0.25","std":"0.0"},"lamentable caso":{"pos":"n","pol":"-0.25","std":"0.0"},"lamentable ejemplo":{"pos":"n","pol":"-0.25","std":"0.0"},"lamentar":{"pos":"v","pol":"-0.25","std":"0.191"},"lapidación":{"pos":"n","pol":"-0.25","std":"0.0"},"lapidar":{"pos":"v","pol":"-0.25","std":"0.0"},"laringitis espasmódica":{"pos":"n","pol":"-0.25","std":"0.0"},"larvicida":{"pos":"n","pol":"-0.25","std":"0.0"},"las 24 horas":{"pos":"r","pol":"-0.25","std":"0.0"},"laterita":{"pos":"n","pol":"-0.25","std":"0.0"},"latitud":{"pos":"n","pol":"-0.25","std":"0.0"},"latitud lunar":{"pos":"n","pol":"-0.25","std":"0.0"},"latrodectus":{"pos":"n","pol":"-0.25","std":"0.0"},"lauréola":{"pos":"n","pol":"-0.25","std":"0.0"},"lavarse las manos":{"pos":"v","pol":"-0.25","std":"0.0"},"leche pasteurizada":{"pos":"n","pol":"-0.25","std":"0.0"},"lecho de enfermo":{"pos":"n","pol":"-0.25","std":"0.0"},"lederhosen":{"pos":"n","pol":"-0.25","std":"0.0"},"leer la cartilla":{"pos":"n","pol":"-0.25","std":"0.0"},"legionella":{"pos":"n","pol":"-0.25","std":"0.0"},"lengua afilada":{"pos":"n","pol":"-0.25","std":"0.0"},"lengua cosmopolita":{"pos":"n","pol":"-0.25","std":"0.0"},"lengua mordaz":{"pos":"n","pol":"-0.25","std":"0.0"},"lente de electrones":{"pos":"n","pol":"-0.25","std":"0.0"},"lente granangular":{"pos":"n","pol":"-0.25","std":"0.0"},"lentes":{"pos":"n","pol":"-0.25","std":"0.0"},"leontina":{"pos":"n","pol":"-0.25","std":"0.0"},"leptospira":{"pos":"n","pol":"-0.25","std":"0.0"},"lesa majestad":{"pos":"n","pol":"-0.25","std":"0.0"},"lesión":{"pos":"n","pol":"-0.25","std":"0.12"},"letalidad":{"pos":"n","pol":"-0.25","std":"0.0"},"leucemia":{"pos":"n","pol":"-0.25","std":"0.0"},"leucoencefalitis":{"pos":"n","pol":"-0.25","std":"0.0"},"levantar barricadas":{"pos":"v","pol":"-0.25","std":"0.0"},"ley estatutaria":{"pos":"n","pol":"-0.25","std":"0.0"},"ley musulmana":{"pos":"n","pol":"-0.25","std":"0.0"},"leyenda fantástica":{"pos":"n","pol":"-0.25","std":"0.0"},"liarse a puñetazos":{"pos":"v","pol":"-0.25","std":"0.0"},"libertinismo":{"pos":"n","pol":"-0.25","std":"0.0"},"libertino":{"pos":"a","pol":"-0.25","std":"0.088"},"libre":{"pos":"r","pol":"-0.25","std":"0.0"},"licántropo":{"pos":"n","pol":"-0.25","std":"0.0"},"lid":{"pos":"n","pol":"-0.25","std":"0.0"},"lidiar":{"pos":"v","pol":"-0.25","std":"0.0"},"ligarse":{"pos":"v","pol":"-0.25","std":"0.0"},"ligeros":{"pos":"r","pol":"-0.25","std":"0.0"},"lignificado":{"pos":"a","pol":"-0.25","std":"0.0"},"liguero":{"pos":"n","pol":"-0.25","std":"0.0"},"ligón":{"pos":"n","pol":"-0.25","std":"0.0"},"limenitis":{"pos":"n","pol":"-0.25","std":"0.0"},"limo":{"pos":"n","pol":"-0.25","std":"0.0"},"linfadenoma":{"pos":"n","pol":"-0.25","std":"0.0"},"linfogranuloma":{"pos":"n","pol":"-0.25","std":"0.0"},"lingualumina":{"pos":"n","pol":"-0.25","std":"0.0"},"lisiar":{"pos":"v","pol":"-0.25","std":"0.088"},"lisis":{"pos":"n","pol":"-0.25","std":"0.088"},"listeriosis":{"pos":"n","pol":"-0.25","std":"0.0"},"llamamiento":{"pos":"n","pol":"-0.25","std":"0.088"},"llevadero":{"pos":"a","pol":"-0.25","std":"0.0"},"llorica":{"pos":"n","pol":"-0.25","std":"0.0"},"lobreguez":{"pos":"n","pol":"-0.25","std":"0.0"},"locato":{"pos":"n","pol":"-0.25","std":"0.0"},"locuelo":{"pos":"n","pol":"-0.25","std":"0.0"},"locura":{"pos":"n","pol":"-0.25","std":"0.102"},"lodazal":{"pos":"n","pol":"-0.25","std":"0.0"},"loza de barro":{"pos":"n","pol":"-0.25","std":"0.0"},"lucha libre":{"pos":"n","pol":"-0.25","std":"0.0"},"luchador":{"pos":"a","pol":"-0.25","std":"0.0"},"luchar a puñetazos":{"pos":"v","pol":"-0.25","std":"0.0"},"ludibrio":{"pos":"n","pol":"-0.25","std":"0.125"},"luminiscencia":{"pos":"n","pol":"-0.25","std":"0.0"},"lumpemproletariado":{"pos":"n","pol":"-0.25","std":"0.0"},"luna de cosecha":{"pos":"n","pol":"-0.25","std":"0.0"},"luz roja":{"pos":"n","pol":"-0.25","std":"0.088"},"lycopodiales":{"pos":"n","pol":"-0.25","std":"0.0"},"lámpara de neón":{"pos":"n","pol":"-0.25","std":"0.0"},"lástima":{"pos":"n","pol":"-0.25","std":"0.0"},"lúpulo":{"pos":"n","pol":"-0.25","std":"0.0"},"machado":{"pos":"n","pol":"-0.25","std":"0.0"},"madera de arce":{"pos":"n","pol":"-0.25","std":"0.0"},"madera de sicomoro":{"pos":"n","pol":"-0.25","std":"0.0"},"madera de sicómoro":{"pos":"n","pol":"-0.25","std":"0.0"},"mafioso":{"pos":"n","pol":"-0.25","std":"0.0"},"magia negra":{"pos":"n","pol":"-0.25","std":"0.0"},"magisterial":{"pos":"a","pol":"-0.25","std":"0.0"},"magistratura":{"pos":"n","pol":"-0.25","std":"0.0"},"magullar":{"pos":"v","pol":"-0.25","std":"0.0"},"mal ejemplo":{"pos":"n","pol":"-0.25","std":"0.0"},"mal emparejado":{"pos":"a","pol":"-0.25","std":"0.0"},"mal entendido":{"pos":"n","pol":"-0.25","std":"0.0"},"mal viaje":{"pos":"n","pol":"-0.25","std":"0.0"},"mala administración":{"pos":"n","pol":"-0.25","std":"0.0"},"mala fama":{"pos":"n","pol":"-0.25","std":"0.0"},"mala pata":{"pos":"n","pol":"-0.25","std":"0.088"},"malandrín":{"pos":"n","pol":"-0.25","std":"0.0"},"malapropismo":{"pos":"n","pol":"-0.25","std":"0.0"},"malaria":{"pos":"n","pol":"-0.25","std":"0.0"},"malcriador":{"pos":"n","pol":"-0.25","std":"0.0"},"maldecido":{"pos":"a","pol":"-0.25","std":"0.0"},"maldiciente":{"pos":"n","pol":"-0.25","std":"0.0"},"maleante":{"pos":"n","pol":"-0.25","std":"0.0"},"malformado":{"pos":"a","pol":"-0.25","std":"0.0"},"malnutrición":{"pos":"n","pol":"-0.25","std":"0.0"},"malogro":{"pos":"n","pol":"-0.25","std":"0.125"},"malos modales":{"pos":"n","pol":"-0.25","std":"0.0"},"malos tratos":{"pos":"n","pol":"-0.25","std":"0.0"},"maltratar":{"pos":"v","pol":"-0.25","std":"0.0"},"malus sylvestris":{"pos":"n","pol":"-0.25","std":"0.0"},"malvadamente":{"pos":"r","pol":"-0.25","std":"0.0"},"malversar":{"pos":"v","pol":"-0.25","std":"0.0"},"malware":{"pos":"n","pol":"-0.25","std":"0.0"},"mamotreto":{"pos":"n","pol":"-0.25","std":"0.0"},"mamporro":{"pos":"n","pol":"-0.25","std":"0.088"},"mancha de aceite":{"pos":"n","pol":"-0.25","std":"0.0"},"mancha de barro":{"pos":"n","pol":"-0.25","std":"0.0"},"mancha de lodo":{"pos":"n","pol":"-0.25","std":"0.0"},"mancha de nacimiento":{"pos":"n","pol":"-0.25","std":"0.0"},"mancha de óxido":{"pos":"n","pol":"-0.25","std":"0.0"},"mancillado":{"pos":"a","pol":"-0.25","std":"0.0"},"mandante":{"pos":"n","pol":"-0.25","std":"0.0"},"mando hidráulico":{"pos":"n","pol":"-0.25","std":"0.0"},"manga raglán":{"pos":"n","pol":"-0.25","std":"0.0"},"manganeso":{"pos":"n","pol":"-0.25","std":"0.0"},"mangueo":{"pos":"n","pol":"-0.25","std":"0.0"},"mangui":{"pos":"n","pol":"-0.25","std":"0.0"},"manotada":{"pos":"n","pol":"-0.25","std":"0.0"},"manotazo":{"pos":"n","pol":"-0.25","std":"0.0"},"mantequilla de cacao":{"pos":"n","pol":"-0.25","std":"0.0"},"mantilla":{"pos":"n","pol":"-0.25","std":"0.0"},"mantón":{"pos":"n","pol":"-0.25","std":"0.0"},"manzano silvestre":{"pos":"n","pol":"-0.25","std":"0.0"},"marattiales":{"pos":"n","pol":"-0.25","std":"0.0"},"marcado":{"pos":"n","pol":"-0.25","std":"0.0"},"marinero polémico":{"pos":"n","pol":"-0.25","std":"0.0"},"marsala":{"pos":"n","pol":"-0.25","std":"0.0"},"masacrar":{"pos":"v","pol":"-0.25","std":"0.0"},"masacre":{"pos":"n","pol":"-0.25","std":"0.0"},"mascara":{"pos":"n","pol":"-0.25","std":"0.0"},"mascarada":{"pos":"n","pol":"-0.25","std":"0.088"},"mascullar":{"pos":"v","pol":"-0.25","std":"0.0"},"masticador ruidoso":{"pos":"n","pol":"-0.25","std":"0.0"},"masticar ruidosamente":{"pos":"v","pol":"-0.25","std":"0.0"},"mata":{"pos":"n","pol":"-0.25","std":"0.0"},"mataperros":{"pos":"n","pol":"-0.25","std":"0.0"},"matarratas":{"pos":"n","pol":"-0.25","std":"0.0"},"material aislante":{"pos":"n","pol":"-0.25","std":"0.0"},"material bélico":{"pos":"n","pol":"-0.25","std":"0.0"},"maton":{"pos":"n","pol":"-0.25","std":"0.0"},"maula":{"pos":"n","pol":"-0.25","std":"0.0"},"mazmorra":{"pos":"n","pol":"-0.25","std":"0.0"},"mecanografiado":{"pos":"n","pol":"-0.25","std":"0.0"},"medio de comunicación escrito":{"pos":"n","pol":"-0.25","std":"0.0"},"medioambientalista":{"pos":"n","pol":"-0.25","std":"0.0"},"medula oblonga":{"pos":"n","pol":"-0.25","std":"0.0"},"melanismo":{"pos":"n","pol":"-0.25","std":"0.0"},"melanosis":{"pos":"n","pol":"-0.25","std":"0.0"},"melindre":{"pos":"n","pol":"-0.25","std":"0.0"},"melopsittacus undulatus":{"pos":"n","pol":"-0.25","std":"0.0"},"memoria a largo plazo":{"pos":"n","pol":"-0.25","std":"0.0"},"memoria no volátil":{"pos":"n","pol":"-0.25","std":"0.0"},"mendaz":{"pos":"a","pol":"-0.25","std":"0.088"},"mendigo":{"pos":"n","pol":"-0.25","std":"0.0"},"meningismo":{"pos":"n","pol":"-0.25","std":"0.0"},"meningitis":{"pos":"n","pol":"-0.25","std":"0.0"},"mercadillo":{"pos":"n","pol":"-0.25","std":"0.0"},"mesa de despacho":{"pos":"n","pol":"-0.25","std":"0.0"},"mesita de café":{"pos":"n","pol":"-0.25","std":"0.0"},"mesías":{"pos":"n","pol":"-0.25","std":"0.0"},"metalepsis":{"pos":"n","pol":"-0.25","std":"0.0"},"metano":{"pos":"n","pol":"-0.25","std":"0.0"},"metanol":{"pos":"n","pol":"-0.25","std":"0.0"},"metijón":{"pos":"n","pol":"-0.25","std":"0.0"},"meyótico":{"pos":"a","pol":"-0.25","std":"0.0"},"mezquinamente":{"pos":"r","pol":"-0.25","std":"0.0"},"miastenia":{"pos":"n","pol":"-0.25","std":"0.0"},"micronutriente":{"pos":"n","pol":"-0.25","std":"0.0"},"microonda":{"pos":"n","pol":"-0.25","std":"0.0"},"mielatelia":{"pos":"n","pol":"-0.25","std":"0.0"},"migraña":{"pos":"n","pol":"-0.25","std":"0.088"},"milano negro":{"pos":"n","pol":"-0.25","std":"0.0"},"militancia":{"pos":"n","pol":"-0.25","std":"0.0"},"militantismo":{"pos":"n","pol":"-0.25","std":"0.0"},"millettia":{"pos":"n","pol":"-0.25","std":"0.0"},"mineral de plomo":{"pos":"n","pol":"-0.25","std":"0.0"},"mini":{"pos":"a","pol":"-0.25","std":"0.0"},"minimoto":{"pos":"n","pol":"-0.25","std":"0.0"},"minyán":{"pos":"n","pol":"-0.25","std":"0.0"},"mirar a las musarañas":{"pos":"v","pol":"-0.25","std":"0.0"},"mirlo":{"pos":"n","pol":"-0.25","std":"0.0"},"mirmecófagos":{"pos":"n","pol":"-0.25","std":"0.0"},"mixomatosis":{"pos":"n","pol":"-0.25","std":"0.0"},"moblaje":{"pos":"n","pol":"-0.25","std":"0.0"},"moca":{"pos":"n","pol":"-0.25","std":"0.056"},"mod":{"pos":"n","pol":"-0.25","std":"0.0"},"mofa":{"pos":"n","pol":"-0.25","std":"0.063"},"mofarse":{"pos":"v","pol":"-0.25","std":"0.065"},"monario":{"pos":"n","pol":"-0.25","std":"0.0"},"monarquía":{"pos":"n","pol":"-0.25","std":"0.0"},"mongolismo":{"pos":"n","pol":"-0.25","std":"0.0"},"mongoloide":{"pos":"a","pol":"-0.25","std":"0.0"},"monoaural":{"pos":"a","pol":"-0.25","std":"0.0"},"montecillo":{"pos":"n","pol":"-0.25","std":"0.0"},"monóxido de carbono":{"pos":"n","pol":"-0.25","std":"0.0"},"mordida de perro":{"pos":"n","pol":"-0.25","std":"0.0"},"mordisco de perro":{"pos":"n","pol":"-0.25","std":"0.0"},"moronidad":{"pos":"n","pol":"-0.25","std":"0.0"},"mortificador":{"pos":"a","pol":"-0.25","std":"0.0"},"mortuorio":{"pos":"a","pol":"-0.25","std":"0.0"},"moto":{"pos":"n","pol":"-0.25","std":"0.0"},"motín":{"pos":"n","pol":"-0.25","std":"0.088"},"movido":{"pos":"a","pol":"-0.25","std":"0.0"},"moño":{"pos":"n","pol":"-0.25","std":"0.0"},"mucosidad":{"pos":"n","pol":"-0.25","std":"0.0"},"mucus":{"pos":"n","pol":"-0.25","std":"0.0"},"mudez":{"pos":"n","pol":"-0.25","std":"0.072"},"mueblaje":{"pos":"n","pol":"-0.25","std":"0.0"},"mugre":{"pos":"n","pol":"-0.25","std":"0.0"},"mugriento":{"pos":"n","pol":"-0.25","std":"0.0"},"mujeriego":{"pos":"n","pol":"-0.25","std":"0.0"},"mundo de fantasía":{"pos":"n","pol":"-0.25","std":"0.0"},"mural":{"pos":"a","pol":"-0.25","std":"0.0"},"murmullo":{"pos":"n","pol":"-0.25","std":"0.068"},"murriña":{"pos":"n","pol":"-0.25","std":"0.0"},"musitar":{"pos":"v","pol":"-0.25","std":"0.0"},"muslera":{"pos":"n","pol":"-0.25","std":"0.0"},"mustiar":{"pos":"v","pol":"-0.25","std":"0.0"},"mustiarse":{"pos":"v","pol":"-0.25","std":"0.0"},"mártir":{"pos":"n","pol":"-0.25","std":"0.0"},"médico de cabecera":{"pos":"n","pol":"-0.25","std":"0.0"},"médico generalista":{"pos":"n","pol":"-0.25","std":"0.0"},"médula oblonga":{"pos":"n","pol":"-0.25","std":"0.0"},"nada crítico":{"pos":"a","pol":"-0.25","std":"0.0"},"nada polémico":{"pos":"a","pol":"-0.25","std":"0.0"},"narco":{"pos":"n","pol":"-0.25","std":"0.0"},"narcolepsia":{"pos":"n","pol":"-0.25","std":"0.0"},"narcoleptico":{"pos":"a","pol":"-0.25","std":"0.0"},"narcotraficante":{"pos":"n","pol":"-0.25","std":"0.0"},"narcotráfico":{"pos":"n","pol":"-0.25","std":"0.0"},"necrofilia":{"pos":"n","pol":"-0.25","std":"0.0"},"necromancia":{"pos":"n","pol":"-0.25","std":"0.0"},"necromanía":{"pos":"n","pol":"-0.25","std":"0.0"},"necrosis":{"pos":"n","pol":"-0.25","std":"0.0"},"necrótico":{"pos":"a","pol":"-0.25","std":"0.0"},"negado":{"pos":"n","pol":"-0.25","std":"0.0"},"negligé":{"pos":"n","pol":"-0.25","std":"0.0"},"negruzco":{"pos":"a","pol":"-0.25","std":"0.0"},"neolengua":{"pos":"n","pol":"-0.25","std":"0.0"},"nerita":{"pos":"n","pol":"-0.25","std":"0.0"},"neurastenia":{"pos":"n","pol":"-0.25","std":"0.0"},"neurofibromatosis":{"pos":"n","pol":"-0.25","std":"0.0"},"neurotóxico":{"pos":"a","pol":"-0.25","std":"0.0"},"neurálgico":{"pos":"a","pol":"-0.25","std":"0.0"},"neutral":{"pos":"n","pol":"-0.25","std":"0.0"},"neutralidad":{"pos":"n","pol":"-0.25","std":"0.072"},"nevera":{"pos":"n","pol":"-0.25","std":"0.0"},"nevus":{"pos":"n","pol":"-0.25","std":"0.0"},"nick":{"pos":"n","pol":"-0.25","std":"0.0"},"nicturia":{"pos":"n","pol":"-0.25","std":"0.0"},"nido de ardilla":{"pos":"n","pol":"-0.25","std":"0.0"},"nigromancia":{"pos":"n","pol":"-0.25","std":"0.088"},"nigromántico":{"pos":"a","pol":"-0.25","std":"0.0"},"nihilismo":{"pos":"a","pol":"-0.25","std":"0.0"},"nihilista":{"pos":"a","pol":"-0.25","std":"0.0"},"nirvana":{"pos":"n","pol":"-0.25","std":"0.0"},"nitrobenceno":{"pos":"n","pol":"-0.25","std":"0.0"},"no alistado":{"pos":"a","pol":"-0.25","std":"0.0"},"no astringente":{"pos":"a","pol":"-0.25","std":"0.0"},"no catalogado":{"pos":"a","pol":"-0.25","std":"0.0"},"no causativo":{"pos":"a","pol":"-0.25","std":"0.0"},"no cercada":{"pos":"a","pol":"-0.25","std":"0.0"},"no cercado":{"pos":"a","pol":"-0.25","std":"0.0"},"no constreñido":{"pos":"a","pol":"-0.25","std":"0.0"},"no coronado":{"pos":"a","pol":"-0.25","std":"0.0"},"no deducible":{"pos":"a","pol":"-0.25","std":"0.0"},"no delineado":{"pos":"a","pol":"-0.25","std":"0.0"},"no explosivo":{"pos":"a","pol":"-0.25","std":"0.0"},"no extensible":{"pos":"a","pol":"-0.25","std":"0.0"},"no ficticio":{"pos":"a","pol":"-0.25","std":"0.0"},"no fisible":{"pos":"a","pol":"-0.25","std":"0.0"},"no investigador":{"pos":"a","pol":"-0.25","std":"0.0"},"no ionizado":{"pos":"a","pol":"-0.25","std":"0.0"},"no iónico":{"pos":"a","pol":"-0.25","std":"0.0"},"no lavable":{"pos":"a","pol":"-0.25","std":"0.0"},"no metal":{"pos":"n","pol":"-0.25","std":"0.0"},"no metálico":{"pos":"a","pol":"-0.25","std":"0.0"},"no portátil":{"pos":"a","pol":"-0.25","std":"0.0"},"no recíproco":{"pos":"a","pol":"-0.25","std":"0.0"},"no regenerado":{"pos":"a","pol":"-0.25","std":"0.0"},"no registrado":{"pos":"a","pol":"-0.25","std":"0.0"},"no retractil":{"pos":"a","pol":"-0.25","std":"0.0"},"no seleccionado":{"pos":"a","pol":"-0.25","std":"0.0"},"no sindicalista":{"pos":"a","pol":"-0.25","std":"0.0"},"no vendido":{"pos":"a","pol":"-0.25","std":"0.0"},"noble vitalicio":{"pos":"n","pol":"-0.25","std":"0.0"},"nocturnamente":{"pos":"r","pol":"-0.25","std":"0.0"},"nonato":{"pos":"a","pol":"-0.25","std":"0.0"},"nosología":{"pos":"n","pol":"-0.25","std":"0.0"},"noticiario cinematográfico":{"pos":"n","pol":"-0.25","std":"0.0"},"novela corta":{"pos":"n","pol":"-0.25","std":"0.0"},"novela de aventuras":{"pos":"n","pol":"-0.25","std":"0.0"},"novelar":{"pos":"v","pol":"-0.25","std":"0.0"},"novial":{"pos":"n","pol":"-0.25","std":"0.0"},"nube corneal":{"pos":"n","pol":"-0.25","std":"0.0"},"nubloso":{"pos":"a","pol":"-0.25","std":"0.0"},"nuez":{"pos":"n","pol":"-0.25","std":"0.0"},"nuez de cola":{"pos":"n","pol":"-0.25","std":"0.0"},"nuez moscada":{"pos":"n","pol":"-0.25","std":"0.0"},"nuez muescada":{"pos":"n","pol":"-0.25","std":"0.0"},"número atómico 22":{"pos":"n","pol":"-0.25","std":"0.0"},"número atómico 24":{"pos":"n","pol":"-0.25","std":"0.0"},"número atómico 25":{"pos":"n","pol":"-0.25","std":"0.0"},"número atómico 27":{"pos":"n","pol":"-0.25","std":"0.0"},"número atómico 34":{"pos":"n","pol":"-0.25","std":"0.0"},"número atómico 4":{"pos":"n","pol":"-0.25","std":"0.0"},"número atómico 73":{"pos":"n","pol":"-0.25","std":"0.0"},"obeso":{"pos":"a","pol":"-0.25","std":"0.0"},"objetor":{"pos":"a","pol":"-0.25","std":"0.0"},"oboe de amore":{"pos":"n","pol":"-0.25","std":"0.0"},"obscurantista":{"pos":"n","pol":"-0.25","std":"0.0"},"obsesivo":{"pos":"a","pol":"-0.25","std":"0.088"},"obstaculización":{"pos":"n","pol":"-0.25","std":"0.0"},"obstinarse":{"pos":"v","pol":"-0.25","std":"0.0"},"obviamente":{"pos":"r","pol":"-0.25","std":"0.0"},"octópodo":{"pos":"n","pol":"-0.25","std":"0.0"},"oda":{"pos":"n","pol":"-0.25","std":"0.0"},"ofensiva":{"pos":"n","pol":"-0.25","std":"0.0"},"oficial de la ley":{"pos":"n","pol":"-0.25","std":"0.0"},"ojeroso":{"pos":"a","pol":"-0.25","std":"0.0"},"ojo de pez":{"pos":"a","pol":"-0.25","std":"0.0"},"ola de protestas":{"pos":"n","pol":"-0.25","std":"0.0"},"olla de barro":{"pos":"n","pol":"-0.25","std":"0.0"},"olor corporal":{"pos":"n","pol":"-0.25","std":"0.0"},"olvido":{"pos":"n","pol":"-0.25","std":"0.102"},"olvido total":{"pos":"n","pol":"-0.25","std":"0.0"},"omatidio":{"pos":"n","pol":"-0.25","std":"0.0"},"onagro":{"pos":"n","pol":"-0.25","std":"0.0"},"oncogén":{"pos":"n","pol":"-0.25","std":"0.0"},"ondeo":{"pos":"n","pol":"-0.25","std":"0.0"},"opaco":{"pos":"a","pol":"-0.25","std":"0.0"},"operación de inteligencia":{"pos":"n","pol":"-0.25","std":"0.0"},"optez":{"pos":"n","pol":"-0.25","std":"0.0"},"orden de bacterias":{"pos":"n","pol":"-0.25","std":"0.0"},"orden de detención":{"pos":"n","pol":"-0.25","std":"0.0"},"orden del día":{"pos":"n","pol":"-0.25","std":"0.0"},"order phallales":{"pos":"n","pol":"-0.25","std":"0.0"},"orfandad":{"pos":"n","pol":"-0.25","std":"0.0"},"organizativo":{"pos":"a","pol":"-0.25","std":"0.0"},"orquidales":{"pos":"n","pol":"-0.25","std":"0.0"},"ortopnea":{"pos":"n","pol":"-0.25","std":"0.0"},"osar":{"pos":"v","pol":"-0.25","std":"0.0"},"oscurantista":{"pos":"n","pol":"-0.25","std":"0.0"},"osmosis":{"pos":"n","pol":"-0.25","std":"0.0"},"osqueocele":{"pos":"n","pol":"-0.25","std":"0.0"},"osteítis":{"pos":"n","pol":"-0.25","std":"0.0"},"otitis":{"pos":"n","pol":"-0.25","std":"0.0"},"otredad":{"pos":"n","pol":"-0.25","std":"0.0"},"out":{"pos":"n","pol":"-0.25","std":"0.0"},"oveja negra":{"pos":"n","pol":"-0.25","std":"0.088"},"oxímoron":{"pos":"n","pol":"-0.25","std":"0.0"},"ozonium":{"pos":"n","pol":"-0.25","std":"0.0"},"oído interno":{"pos":"n","pol":"-0.25","std":"0.0"},"pachá":{"pos":"n","pol":"-0.25","std":"0.0"},"palabras":{"pos":"n","pol":"-0.25","std":"0.0"},"palabras de despedida":{"pos":"n","pol":"-0.25","std":"0.0"},"palanquista":{"pos":"n","pol":"-0.25","std":"0.0"},"palatalizado":{"pos":"a","pol":"-0.25","std":"0.0"},"palatosquisis":{"pos":"n","pol":"-0.25","std":"0.0"},"paleopatología":{"pos":"n","pol":"-0.25","std":"0.0"},"paliación":{"pos":"n","pol":"-0.25","std":"0.0"},"paliativo":{"pos":"n","pol":"-0.25","std":"0.0"},"palmarla":{"pos":"v","pol":"-0.25","std":"0.0"},"paludismo":{"pos":"n","pol":"-0.25","std":"0.0"},"pan negro":{"pos":"n","pol":"-0.25","std":"0.0"},"pancreatitis":{"pos":"n","pol":"-0.25","std":"0.0"},"panecillo de viena":{"pos":"n","pol":"-0.25","std":"0.0"},"pantalones de montar":{"pos":"n","pol":"-0.25","std":"0.0"},"panzazo":{"pos":"n","pol":"-0.25","std":"0.0"},"papel carbón":{"pos":"n","pol":"-0.25","std":"0.0"},"papel de carta":{"pos":"n","pol":"-0.25","std":"0.088"},"paperas":{"pos":"n","pol":"-0.25","std":"0.0"},"paracetamol":{"pos":"n","pol":"-0.25","std":"0.0"},"paralelo":{"pos":"n","pol":"-0.25","std":"0.0"},"paranoia":{"pos":"n","pol":"-0.25","std":"0.0"},"paraquat":{"pos":"n","pol":"-0.25","std":"0.0"},"parecido mutuo":{"pos":"n","pol":"-0.25","std":"0.0"},"parecido mútuo":{"pos":"n","pol":"-0.25","std":"0.0"},"pareo":{"pos":"n","pol":"-0.25","std":"0.0"},"parque zoológico":{"pos":"n","pol":"-0.25","std":"0.0"},"parricidio":{"pos":"n","pol":"-0.25","std":"0.0"},"parte demandante":{"pos":"n","pol":"-0.25","std":"0.0"},"partido político":{"pos":"n","pol":"-0.25","std":"0.0"},"partícula beta":{"pos":"n","pol":"-0.25","std":"0.0"},"partícula elemental":{"pos":"n","pol":"-0.25","std":"0.0"},"parálisis cerebral":{"pos":"n","pol":"-0.25","std":"0.0"},"parésico":{"pos":"n","pol":"-0.25","std":"0.0"},"pasajero":{"pos":"a","pol":"-0.25","std":"0.0"},"pasamano":{"pos":"n","pol":"-0.25","std":"0.0"},"pasar por encima":{"pos":"v","pol":"-0.25","std":"0.0"},"pasar revista":{"pos":"v","pol":"-0.25","std":"0.0"},"pasma":{"pos":"n","pol":"-0.25","std":"0.0"},"paso lento":{"pos":"n","pol":"-0.25","std":"0.0"},"pastelito relleno":{"pos":"n","pol":"-0.25","std":"0.0"},"pasterización":{"pos":"n","pol":"-0.25","std":"0.0"},"pasteurelosis":{"pos":"n","pol":"-0.25","std":"0.0"},"pasteurización":{"pos":"n","pol":"-0.25","std":"0.0"},"patentemente":{"pos":"r","pol":"-0.25","std":"0.0"},"patología animal":{"pos":"n","pol":"-0.25","std":"0.0"},"patología vegetal":{"pos":"n","pol":"-0.25","std":"0.0"},"patoso":{"pos":"n","pol":"-0.25","std":"0.0"},"país de hadas":{"pos":"n","pol":"-0.25","std":"0.0"},"pañuelo de cabeza":{"pos":"n","pol":"-0.25","std":"0.0"},"pañuelo de cuello":{"pos":"n","pol":"-0.25","std":"0.0"},"pañuelo de papel":{"pos":"n","pol":"-0.25","std":"0.0"},"pañuelo del cuello":{"pos":"n","pol":"-0.25","std":"0.0"},"pecable":{"pos":"a","pol":"-0.25","std":"0.0"},"pediculosis":{"pos":"n","pol":"-0.25","std":"0.0"},"pedrisco":{"pos":"n","pol":"-0.25","std":"0.0"},"pelagra":{"pos":"n","pol":"-0.25","std":"0.0"},"pelea con cuchillos":{"pos":"n","pol":"-0.25","std":"0.0"},"pelear":{"pos":"v","pol":"-0.25","std":"0.072"},"pelear a puñetazos":{"pos":"v","pol":"-0.25","std":"0.0"},"peleón":{"pos":"n","pol":"-0.25","std":"0.0"},"peligro sanitario":{"pos":"n","pol":"-0.25","std":"0.0"},"pelota de golf":{"pos":"n","pol":"-0.25","std":"0.0"},"peluca gris":{"pos":"n","pol":"-0.25","std":"0.0"},"penetrantemente":{"pos":"r","pol":"-0.25","std":"0.0"},"pensión de mala muerte":{"pos":"n","pol":"-0.25","std":"0.0"},"peoría":{"pos":"n","pol":"-0.25","std":"0.0"},"peplo":{"pos":"n","pol":"-0.25","std":"0.0"},"perder intensidad":{"pos":"v","pol":"-0.25","std":"0.0"},"peridotita":{"pos":"n","pol":"-0.25","std":"0.0"},"perifrástico":{"pos":"a","pol":"-0.25","std":"0.0"},"perilla":{"pos":"n","pol":"-0.25","std":"0.0"},"periodontitis":{"pos":"n","pol":"-0.25","std":"0.0"},"periquito australiano":{"pos":"n","pol":"-0.25","std":"0.0"},"perjudicar":{"pos":"v","pol":"-0.25","std":"0.068"},"perlino":{"pos":"a","pol":"-0.25","std":"0.0"},"permanganato de potasa":{"pos":"n","pol":"-0.25","std":"0.0"},"permitir fluctuar":{"pos":"v","pol":"-0.25","std":"0.0"},"permitir la fluctuación":{"pos":"v","pol":"-0.25","std":"0.0"},"perniciosamente":{"pos":"r","pol":"-0.25","std":"0.0"},"perpetración":{"pos":"n","pol":"-0.25","std":"0.0"},"perplejidad":{"pos":"n","pol":"-0.25","std":"0.0"},"persona malhumorada":{"pos":"n","pol":"-0.25","std":"0.0"},"persona odiada":{"pos":"n","pol":"-0.25","std":"0.0"},"personalidad psicopática":{"pos":"n","pol":"-0.25","std":"0.0"},"perturbación mental":{"pos":"n","pol":"-0.25","std":"0.0"},"pertussis":{"pos":"n","pol":"-0.25","std":"0.0"},"pestañada":{"pos":"n","pol":"-0.25","std":"0.0"},"peste septicémica":{"pos":"n","pol":"-0.25","std":"0.0"},"pesticida":{"pos":"n","pol":"-0.25","std":"0.0"},"pezizales":{"pos":"n","pol":"-0.25","std":"0.0"},"phallales":{"pos":"n","pol":"-0.25","std":"0.0"},"philadelphus coronarius":{"pos":"n","pol":"-0.25","std":"0.0"},"physostigma":{"pos":"n","pol":"-0.25","std":"0.0"},"phytophthora":{"pos":"n","pol":"-0.25","std":"0.0"},"piada":{"pos":"n","pol":"-0.25","std":"0.0"},"piantado":{"pos":"n","pol":"-0.25","std":"0.0"},"picada":{"pos":"n","pol":"-0.25","std":"0.0"},"picada de abeja":{"pos":"n","pol":"-0.25","std":"0.0"},"picada de mosquito":{"pos":"n","pol":"-0.25","std":"0.0"},"picadura de abeja":{"pos":"n","pol":"-0.25","std":"0.0"},"picadura de mosquito":{"pos":"n","pol":"-0.25","std":"0.0"},"picardías":{"pos":"n","pol":"-0.25","std":"0.0"},"pickelhaube":{"pos":"n","pol":"-0.25","std":"0.0"},"picor":{"pos":"n","pol":"-0.25","std":"0.0"},"piel de gallina":{"pos":"n","pol":"-0.25","std":"0.0"},"pieza del ajedrez":{"pos":"n","pol":"-0.25","std":"0.0"},"pigargo":{"pos":"n","pol":"-0.25","std":"0.0"},"pila galvánica":{"pos":"n","pol":"-0.25","std":"0.0"},"pillo":{"pos":"n","pol":"-0.25","std":"0.12"},"pintamonas":{"pos":"n","pol":"-0.25","std":"0.0"},"pinza de corbata":{"pos":"n","pol":"-0.25","std":"0.0"},"piperacilina":{"pos":"n","pol":"-0.25","std":"0.0"},"pirata informático":{"pos":"n","pol":"-0.25","std":"0.088"},"piridina":{"pos":"n","pol":"-0.25","std":"0.0"},"pirómetro óptico":{"pos":"n","pol":"-0.25","std":"0.0"},"pitufo":{"pos":"n","pol":"-0.25","std":"0.0"},"piuria":{"pos":"n","pol":"-0.25","std":"0.0"},"plaguicida":{"pos":"n","pol":"-0.25","std":"0.0"},"planchar con máquina":{"pos":"v","pol":"-0.25","std":"0.0"},"planchazo":{"pos":"n","pol":"-0.25","std":"0.0"},"plantador":{"pos":"n","pol":"-0.25","std":"0.0"},"planímetro":{"pos":"n","pol":"-0.25","std":"0.0"},"plañidero":{"pos":"n","pol":"-0.25","std":"0.0"},"pleitista":{"pos":"n","pol":"-0.25","std":"0.088"},"pluma blanca":{"pos":"n","pol":"-0.25","std":"0.0"},"plumbemia":{"pos":"n","pol":"-0.25","std":"0.0"},"plutócrata":{"pos":"n","pol":"-0.25","std":"0.0"},"pobretón":{"pos":"n","pol":"-0.25","std":"0.0"},"pobreza extrema":{"pos":"n","pol":"-0.25","std":"0.0"},"poca fiabilidad":{"pos":"n","pol":"-0.25","std":"0.0"},"poco convencido":{"pos":"a","pol":"-0.25","std":"0.0"},"poco convincente":{"pos":"a","pol":"-0.25","std":"0.0"},"poli":{"pos":"n","pol":"-0.25","std":"0.0"},"policia montado":{"pos":"n","pol":"-0.25","std":"0.0"},"policía montada de Canadá":{"pos":"n","pol":"-0.25","std":"0.0"},"polizonte":{"pos":"n","pol":"-0.25","std":"0.0"},"polémica":{"pos":"n","pol":"-0.25","std":"0.088"},"política arriesgada":{"pos":"n","pol":"-0.25","std":"0.0"},"política de agresión":{"pos":"n","pol":"-0.25","std":"0.0"},"política de la cuerda floja":{"pos":"n","pol":"-0.25","std":"0.0"},"política del borde del abismo":{"pos":"n","pol":"-0.25","std":"0.0"},"político estafador":{"pos":"n","pol":"-0.25","std":"0.0"},"pompón":{"pos":"n","pol":"-0.25","std":"0.0"},"poner en peligro":{"pos":"v","pol":"-0.25","std":"0.265"},"poner en tela de juicio":{"pos":"v","pol":"-0.25","std":"0.0"},"popularismo":{"pos":"n","pol":"-0.25","std":"0.0"},"portaligas":{"pos":"n","pol":"-0.25","std":"0.0"},"portentoso":{"pos":"a","pol":"-0.25","std":"0.0"},"poseso":{"pos":"a","pol":"-0.25","std":"0.0"},"poseído":{"pos":"a","pol":"-0.25","std":"0.0"},"postillón":{"pos":"n","pol":"-0.25","std":"0.0"},"postrado":{"pos":"a","pol":"-0.25","std":"0.0"},"postulación":{"pos":"n","pol":"-0.25","std":"0.0"},"practicamente":{"pos":"r","pol":"-0.25","std":"0.0"},"practicar esgrima":{"pos":"v","pol":"-0.25","std":"0.0"},"preaviso":{"pos":"n","pol":"-0.25","std":"0.0"},"precautorio":{"pos":"a","pol":"-0.25","std":"0.0"},"preeclampsia":{"pos":"n","pol":"-0.25","std":"0.0"},"pregunta difícil":{"pos":"n","pol":"-0.25","std":"0.0"},"prejuzgar":{"pos":"v","pol":"-0.25","std":"0.177"},"prenda de vestir":{"pos":"n","pol":"-0.25","std":"0.0"},"prenderse":{"pos":"v","pol":"-0.25","std":"0.0"},"prendimiento":{"pos":"n","pol":"-0.25","std":"0.0"},"preocupante":{"pos":"a","pol":"-0.25","std":"0.177"},"prerrequisito":{"pos":"n","pol":"-0.25","std":"0.0"},"presbicia":{"pos":"n","pol":"-0.25","std":"0.0"},"primogénito":{"pos":"n","pol":"-0.25","std":"0.0"},"problema difícil":{"pos":"n","pol":"-0.25","std":"0.0"},"problemas de oído":{"pos":"n","pol":"-0.25","std":"0.0"},"problemas de visión":{"pos":"n","pol":"-0.25","std":"0.0"},"procurarse":{"pos":"v","pol":"-0.25","std":"0.0"},"prodigar":{"pos":"v","pol":"-0.25","std":"0.0"},"producir una conmoción cerebral":{"pos":"v","pol":"-0.25","std":"0.0"},"producto perecedero":{"pos":"n","pol":"-0.25","std":"0.0"},"proferir":{"pos":"v","pol":"-0.25","std":"0.0"},"prolijidad":{"pos":"n","pol":"-0.25","std":"0.0"},"propiciatorio":{"pos":"a","pol":"-0.25","std":"0.0"},"prostatitis":{"pos":"n","pol":"-0.25","std":"0.0"},"protector del brazo":{"pos":"n","pol":"-0.25","std":"0.0"},"protector del cuello":{"pos":"n","pol":"-0.25","std":"0.0"},"protestación":{"pos":"n","pol":"-0.25","std":"0.0"},"prueba de Schick":{"pos":"n","pol":"-0.25","std":"0.0"},"prueba de fuego":{"pos":"n","pol":"-0.25","std":"0.0"},"prueba de schick":{"pos":"n","pol":"-0.25","std":"0.0"},"prueba decisiva":{"pos":"n","pol":"-0.25","std":"0.0"},"pseudoalucinación":{"pos":"n","pol":"-0.25","std":"0.0"},"pseudofloema":{"pos":"n","pol":"-0.25","std":"0.0"},"psicología clínica":{"pos":"n","pol":"-0.25","std":"0.0"},"psicosis de angustia":{"pos":"n","pol":"-0.25","std":"0.0"},"psicoterapeuta":{"pos":"n","pol":"-0.25","std":"0.0"},"psilotáceas":{"pos":"n","pol":"-0.25","std":"0.0"},"psiquiatría":{"pos":"n","pol":"-0.25","std":"0.088"},"psitacosis":{"pos":"n","pol":"-0.25","std":"0.0"},"psocópteros":{"pos":"n","pol":"-0.25","std":"0.0"},"pteridosperma":{"pos":"n","pol":"-0.25","std":"0.0"},"ptosis":{"pos":"n","pol":"-0.25","std":"0.0"},"pudibundez":{"pos":"n","pol":"-0.25","std":"0.0"},"puerto de montaña":{"pos":"n","pol":"-0.25","std":"0.0"},"pugilismo":{"pos":"n","pol":"-0.25","std":"0.0"},"pulmotor":{"pos":"n","pol":"-0.25","std":"0.0"},"pulmón de acero":{"pos":"n","pol":"-0.25","std":"0.0"},"pulsar":{"pos":"v","pol":"-0.25","std":"0.0"},"punchar":{"pos":"v","pol":"-0.25","std":"0.0"},"punto de golpe":{"pos":"n","pol":"-0.25","std":"0.0"},"punto muerto":{"pos":"n","pol":"-0.25","std":"0.0"},"puro cuento":{"pos":"n","pol":"-0.25","std":"0.0"},"putrescencia":{"pos":"n","pol":"-0.25","std":"0.0"},"putrescina":{"pos":"n","pol":"-0.25","std":"0.0"},"pythium debaryanum":{"pos":"n","pol":"-0.25","std":"0.0"},"pélvico":{"pos":"a","pol":"-0.25","std":"0.0"},"pérdida de memoria":{"pos":"n","pol":"-0.25","std":"0.0"},"pérdida del conocimiento":{"pos":"n","pol":"-0.25","std":"0.0"},"pérfido":{"pos":"a","pol":"-0.25","std":"0.0"},"póliza abierta":{"pos":"n","pol":"-0.25","std":"0.0"},"póliza flotante":{"pos":"n","pol":"-0.25","std":"0.0"},"quedarse en blanco":{"pos":"v","pol":"-0.25","std":"0.0"},"queratocono":{"pos":"n","pol":"-0.25","std":"0.0"},"queso suizo":{"pos":"n","pol":"-0.25","std":"0.0"},"quijote":{"pos":"n","pol":"-0.25","std":"0.0"},"quijotería":{"pos":"n","pol":"-0.25","std":"0.0"},"quijotismo":{"pos":"n","pol":"-0.25","std":"0.0"},"quimono":{"pos":"n","pol":"-0.25","std":"0.0"},"quinina":{"pos":"n","pol":"-0.25","std":"0.0"},"quinquefoliado":{"pos":"a","pol":"-0.25","std":"0.0"},"quinqui":{"pos":"n","pol":"-0.25","std":"0.0"},"quitarse de encima":{"pos":"v","pol":"-0.25","std":"0.0"},"rabicorto":{"pos":"a","pol":"-0.25","std":"0.0"},"rabona":{"pos":"n","pol":"-0.25","std":"0.0"},"racaneo":{"pos":"n","pol":"-0.25","std":"0.0"},"racanería":{"pos":"n","pol":"-0.25","std":"0.0"},"randa":{"pos":"n","pol":"-0.25","std":"0.0"},"ranger":{"pos":"n","pol":"-0.25","std":"0.0"},"rapaz":{"pos":"n","pol":"-0.25","std":"0.0"},"rasguño":{"pos":"n","pol":"-0.25","std":"0.072"},"ratero":{"pos":"n","pol":"-0.25","std":"0.0"},"rayo beta":{"pos":"n","pol":"-0.25","std":"0.0"},"raza humana":{"pos":"n","pol":"-0.25","std":"0.0"},"raíz rosada":{"pos":"n","pol":"-0.25","std":"0.0"},"reacción fisiológica":{"pos":"n","pol":"-0.25","std":"0.0"},"reaparecer":{"pos":"v","pol":"-0.25","std":"0.0"},"recelar":{"pos":"v","pol":"-0.25","std":"0.0"},"receloso":{"pos":"n","pol":"-0.25","std":"0.0"},"rechazado":{"pos":"a","pol":"-0.25","std":"0.0"},"recondenar":{"pos":"v","pol":"-0.25","std":"0.0"},"reconditez":{"pos":"n","pol":"-0.25","std":"0.0"},"reconfortar":{"pos":"v","pol":"-0.25","std":"0.0"},"reconquistar":{"pos":"v","pol":"-0.25","std":"0.0"},"recriminar":{"pos":"v","pol":"-0.25","std":"0.0"},"recriminatorio":{"pos":"a","pol":"-0.25","std":"0.0"},"recuperador":{"pos":"n","pol":"-0.25","std":"0.088"},"recursos humanos":{"pos":"n","pol":"-0.25","std":"0.0"},"recursos laborales":{"pos":"n","pol":"-0.25","std":"0.0"},"recusante":{"pos":"a","pol":"-0.25","std":"0.265"},"redistribuir":{"pos":"v","pol":"-0.25","std":"0.0"},"reelección":{"pos":"n","pol":"-0.25","std":"0.0"},"reencender":{"pos":"v","pol":"-0.25","std":"0.0"},"referencia anatómica":{"pos":"n","pol":"-0.25","std":"0.0"},"reflejo":{"pos":"a","pol":"-0.25","std":"0.0"},"reflejo incondicionado":{"pos":"n","pol":"-0.25","std":"0.0"},"reflejo innato":{"pos":"n","pol":"-0.25","std":"0.0"},"reflejo instintivo":{"pos":"n","pol":"-0.25","std":"0.0"},"refrigerador":{"pos":"n","pol":"-0.25","std":"0.0"},"refutable":{"pos":"a","pol":"-0.25","std":"0.0"},"regicidio":{"pos":"n","pol":"-0.25","std":"0.0"},"reglamentar":{"pos":"v","pol":"-0.25","std":"0.0"},"regordete":{"pos":"n","pol":"-0.25","std":"0.0"},"rehabilitación correccional":{"pos":"n","pol":"-0.25","std":"0.0"},"reintegrarse":{"pos":"v","pol":"-0.25","std":"0.0"},"relación señal/ruido":{"pos":"n","pol":"-0.25","std":"0.0"},"relamerse":{"pos":"v","pol":"-0.25","std":"0.0"},"relato de aventuras":{"pos":"n","pol":"-0.25","std":"0.0"},"relieve terrestre":{"pos":"n","pol":"-0.25","std":"0.0"},"remilgo":{"pos":"n","pol":"-0.25","std":"0.0"},"reología":{"pos":"n","pol":"-0.25","std":"0.0"},"reológico":{"pos":"a","pol":"-0.25","std":"0.0"},"repartir mal":{"pos":"v","pol":"-0.25","std":"0.0"},"repetidamente":{"pos":"r","pol":"-0.25","std":"0.0"},"repolludo":{"pos":"n","pol":"-0.25","std":"0.0"},"reposo":{"pos":"n","pol":"-0.25","std":"0.0"},"requemarse":{"pos":"v","pol":"-0.25","std":"0.0"},"requisito previo":{"pos":"n","pol":"-0.25","std":"0.0"},"requisitoria":{"pos":"n","pol":"-0.25","std":"0.0"},"res adjudicata":{"pos":"n","pol":"-0.25","std":"0.0"},"residuo tóxico":{"pos":"n","pol":"-0.25","std":"0.0"},"residuos":{"pos":"n","pol":"-0.25","std":"0.088"},"resonancia nuclear":{"pos":"n","pol":"-0.25","std":"0.0"},"respectar":{"pos":"v","pol":"-0.25","std":"0.0"},"respuesta evasiva":{"pos":"n","pol":"-0.25","std":"0.0"},"respuesta refleja":{"pos":"n","pol":"-0.25","std":"0.0"},"restos mortales":{"pos":"n","pol":"-0.25","std":"0.0"},"resurgir":{"pos":"v","pol":"-0.25","std":"0.0"},"retaliar":{"pos":"v","pol":"-0.25","std":"0.0"},"reticulitermes":{"pos":"n","pol":"-0.25","std":"0.0"},"retorcerse":{"pos":"v","pol":"-0.25","std":"0.0"},"retraerse":{"pos":"v","pol":"-0.25","std":"0.0"},"revoloteo":{"pos":"n","pol":"-0.25","std":"0.088"},"rezongar":{"pos":"v","pol":"-0.25","std":"0.0"},"rickettsia":{"pos":"n","pol":"-0.25","std":"0.0"},"rickettsiosis":{"pos":"n","pol":"-0.25","std":"0.0"},"rigatoni":{"pos":"n","pol":"-0.25","std":"0.0"},"rijo":{"pos":"n","pol":"-0.25","std":"0.0"},"rijosidad":{"pos":"n","pol":"-0.25","std":"0.0"},"rima visual":{"pos":"n","pol":"-0.25","std":"0.0"},"ring de boxeo":{"pos":"n","pol":"-0.25","std":"0.0"},"rinoceronte negro":{"pos":"n","pol":"-0.25","std":"0.0"},"rival":{"pos":"n","pol":"-0.25","std":"0.0"},"robar":{"pos":"v","pol":"-0.25","std":"0.042"},"robo armado":{"pos":"n","pol":"-0.25","std":"0.0"},"rodillera":{"pos":"n","pol":"-0.25","std":"0.0"},"rodillero":{"pos":"n","pol":"-0.25","std":"0.0"},"romanal":{"pos":"n","pol":"-0.25","std":"0.0"},"rompehuelgas":{"pos":"n","pol":"-0.25","std":"0.0"},"romper la crisma":{"pos":"v","pol":"-0.25","std":"0.0"},"ronchar":{"pos":"v","pol":"-0.25","std":"0.0"},"ronco":{"pos":"a","pol":"-0.25","std":"0.0"},"rondador":{"pos":"n","pol":"-0.25","std":"0.0"},"ronquedad":{"pos":"n","pol":"-0.25","std":"0.0"},"ronquera":{"pos":"n","pol":"-0.25","std":"0.0"},"ronzar":{"pos":"v","pol":"-0.25","std":"0.0"},"ropa de playa":{"pos":"n","pol":"-0.25","std":"0.0"},"ropa de trabajo":{"pos":"n","pol":"-0.25","std":"0.0"},"ropa interior":{"pos":"n","pol":"-0.25","std":"0.177"},"ropón":{"pos":"n","pol":"-0.25","std":"0.0"},"rosal silvestre":{"pos":"n","pol":"-0.25","std":"0.0"},"rosellinia":{"pos":"n","pol":"-0.25","std":"0.0"},"roseta":{"pos":"n","pol":"-0.25","std":"0.0"},"rotenona":{"pos":"n","pol":"-0.25","std":"0.0"},"roux":{"pos":"n","pol":"-0.25","std":"0.0"},"roñería":{"pos":"n","pol":"-0.25","std":"0.0"},"roñosería":{"pos":"n","pol":"-0.25","std":"0.0"},"rubeola":{"pos":"n","pol":"-0.25","std":"0.0"},"rubiales":{"pos":"n","pol":"-0.25","std":"0.0"},"ruborizado":{"pos":"a","pol":"-0.25","std":"0.0"},"rubéola":{"pos":"n","pol":"-0.25","std":"0.0"},"ruego indirecto":{"pos":"n","pol":"-0.25","std":"0.0"},"rufianería":{"pos":"n","pol":"-0.25","std":"0.0"},"rufianismo":{"pos":"n","pol":"-0.25","std":"0.0"},"ruido sordo":{"pos":"n","pol":"-0.25","std":"0.0"},"ruina":{"pos":"n","pol":"-0.25","std":"0.139"},"ruinas":{"pos":"n","pol":"-0.25","std":"0.0"},"rynchopidae":{"pos":"n","pol":"-0.25","std":"0.0"},"régimen títere":{"pos":"n","pol":"-0.25","std":"0.0"},"réquiem":{"pos":"n","pol":"-0.25","std":"0.072"},"río Somme":{"pos":"n","pol":"-0.25","std":"0.0"},"s/n":{"pos":"n","pol":"-0.25","std":"0.0"},"sableador":{"pos":"n","pol":"-0.25","std":"0.0"},"sablista":{"pos":"n","pol":"-0.25","std":"0.0"},"sacudirse algo":{"pos":"v","pol":"-0.25","std":"0.0"},"salacot":{"pos":"n","pol":"-0.25","std":"0.0"},"salicilato de metilo":{"pos":"n","pol":"-0.25","std":"0.0"},"salirse":{"pos":"v","pol":"-0.25","std":"0.0"},"salol":{"pos":"n","pol":"-0.25","std":"0.0"},"salteado":{"pos":"a","pol":"-0.25","std":"0.0"},"sanción pragmática":{"pos":"n","pol":"-0.25","std":"0.0"},"sangre espesa":{"pos":"n","pol":"-0.25","std":"0.0"},"saprobio":{"pos":"n","pol":"-0.25","std":"0.0"},"saqueador":{"pos":"n","pol":"-0.25","std":"0.0"},"sarampión alemán":{"pos":"n","pol":"-0.25","std":"0.0"},"sarcoma":{"pos":"n","pol":"-0.25","std":"0.0"},"sardónico":{"pos":"a","pol":"-0.25","std":"0.177"},"sarong":{"pos":"n","pol":"-0.25","std":"0.0"},"sarong malayo":{"pos":"n","pol":"-0.25","std":"0.0"},"satanista":{"pos":"n","pol":"-0.25","std":"0.0"},"satiriasis":{"pos":"n","pol":"-0.25","std":"0.0"},"saturnismo":{"pos":"n","pol":"-0.25","std":"0.0"},"scam":{"pos":"n","pol":"-0.25","std":"0.0"},"scat":{"pos":"n","pol":"-0.25","std":"0.0"},"sciarida":{"pos":"n","pol":"-0.25","std":"0.0"},"scleroderma":{"pos":"n","pol":"-0.25","std":"0.0"},"scotland yard":{"pos":"n","pol":"-0.25","std":"0.0"},"seboso":{"pos":"a","pol":"-0.25","std":"0.0"},"seca":{"pos":"n","pol":"-0.25","std":"0.0"},"secano":{"pos":"n","pol":"-0.25","std":"0.0"},"seclusión":{"pos":"n","pol":"-0.25","std":"0.0"},"secobarbital":{"pos":"n","pol":"-0.25","std":"0.0"},"secuestrar":{"pos":"v","pol":"-0.25","std":"0.056"},"sed de sangre":{"pos":"n","pol":"-0.25","std":"0.144"},"seguir en":{"pos":"v","pol":"-0.25","std":"0.0"},"seguro automotriz":{"pos":"n","pol":"-0.25","std":"0.0"},"seguro de incendios":{"pos":"n","pol":"-0.25","std":"0.0"},"seguro del coche":{"pos":"n","pol":"-0.25","std":"0.0"},"selenio":{"pos":"n","pol":"-0.25","std":"0.0"},"semianalfabeto":{"pos":"a","pol":"-0.25","std":"0.0"},"sensación de presión":{"pos":"n","pol":"-0.25","std":"0.0"},"sense datum":{"pos":"n","pol":"-0.25","std":"0.0"},"sentido de la orientación":{"pos":"n","pol":"-0.25","std":"0.0"},"sentido de la responsabilidad":{"pos":"n","pol":"-0.25","std":"0.0"},"sepelio":{"pos":"n","pol":"-0.25","std":"0.0"},"septicemia":{"pos":"n","pol":"-0.25","std":"0.0"},"sepultura":{"pos":"n","pol":"-0.25","std":"0.0"},"ser mítico":{"pos":"n","pol":"-0.25","std":"0.0"},"sermoneo":{"pos":"n","pol":"-0.25","std":"0.0"},"serológico":{"pos":"a","pol":"-0.25","std":"0.0"},"serpenteante":{"pos":"a","pol":"-0.25","std":"0.0"},"serrasalmus":{"pos":"n","pol":"-0.25","std":"0.0"},"seudoalucinación":{"pos":"n","pol":"-0.25","std":"0.0"},"seudoefedrina":{"pos":"n","pol":"-0.25","std":"0.0"},"señal/ruido":{"pos":"n","pol":"-0.25","std":"0.0"},"sharia":{"pos":"n","pol":"-0.25","std":"0.0"},"sharía":{"pos":"n","pol":"-0.25","std":"0.0"},"shigelosis":{"pos":"n","pol":"-0.25","std":"0.0"},"shock anafiláctico":{"pos":"n","pol":"-0.25","std":"0.0"},"sicario":{"pos":"n","pol":"-0.25","std":"0.072"},"sicoterapeuta":{"pos":"n","pol":"-0.25","std":"0.0"},"siesta liviana":{"pos":"n","pol":"-0.25","std":"0.0"},"sifilítico":{"pos":"a","pol":"-0.25","std":"0.0"},"signo dólar":{"pos":"n","pol":"-0.25","std":"0.0"},"similor":{"pos":"n","pol":"-0.25","std":"0.0"},"simplista":{"pos":"a","pol":"-0.25","std":"0.0"},"simplon":{"pos":"n","pol":"-0.25","std":"0.0"},"sin alfombrar":{"pos":"a","pol":"-0.25","std":"0.0"},"sin controversia":{"pos":"a","pol":"-0.25","std":"0.0"},"sin corona":{"pos":"a","pol":"-0.25","std":"0.0"},"sin cristales":{"pos":"a","pol":"-0.25","std":"0.0"},"sin derretir":{"pos":"a","pol":"-0.25","std":"0.0"},"sin diferencias":{"pos":"a","pol":"-0.25","std":"0.0"},"sin dilación":{"pos":"r","pol":"-0.25","std":"0.0"},"sin dirección escrita":{"pos":"a","pol":"-0.25","std":"0.0"},"sin explotar":{"pos":"a","pol":"-0.25","std":"0.0"},"sin guión":{"pos":"a","pol":"-0.25","std":"0.0"},"sin motivo":{"pos":"a","pol":"-0.25","std":"0.0"},"sin ocupar":{"pos":"a","pol":"-0.25","std":"0.0"},"sin papeles":{"pos":"a","pol":"-0.25","std":"0.0"},"sin polarizar":{"pos":"a","pol":"-0.25","std":"0.0"},"sin recortar":{"pos":"a","pol":"-0.25","std":"0.0"},"sin regenerar":{"pos":"a","pol":"-0.25","std":"0.0"},"sin registrar":{"pos":"a","pol":"-0.25","std":"0.0"},"sin resistencia":{"pos":"a","pol":"-0.25","std":"0.0"},"sin techo":{"pos":"n","pol":"-0.25","std":"0.0"},"sin tejer":{"pos":"a","pol":"-0.25","std":"0.0"},"sin vender":{"pos":"a","pol":"-0.25","std":"0.0"},"sin ventilar":{"pos":"a","pol":"-0.25","std":"0.0"},"sinestésico":{"pos":"a","pol":"-0.25","std":"0.0"},"sinrazón":{"pos":"n","pol":"-0.25","std":"0.0"},"sinverguenza":{"pos":"n","pol":"-0.25","std":"0.0"},"siquiatría":{"pos":"n","pol":"-0.25","std":"0.088"},"sirla":{"pos":"n","pol":"-0.25","std":"0.0"},"sirte":{"pos":"n","pol":"-0.25","std":"0.0"},"sistema auditivo":{"pos":"n","pol":"-0.25","std":"0.0"},"sistema de pesos y medidas":{"pos":"n","pol":"-0.25","std":"0.0"},"sistema de propulsión":{"pos":"n","pol":"-0.25","std":"0.0"},"skibob":{"pos":"n","pol":"-0.25","std":"0.0"},"slang":{"pos":"n","pol":"-0.25","std":"0.0"},"snobismo":{"pos":"n","pol":"-0.25","std":"0.0"},"sobrefalda":{"pos":"n","pol":"-0.25","std":"0.0"},"sobrenatural":{"pos":"a","pol":"-0.25","std":"0.0"},"sobrenaturalidad":{"pos":"n","pol":"-0.25","std":"0.0"},"sobrenaturalista":{"pos":"a","pol":"-0.25","std":"0.0"},"sobrenaturalístico":{"pos":"a","pol":"-0.25","std":"0.0"},"sobreveste":{"pos":"n","pol":"-0.25","std":"0.0"},"socavón":{"pos":"n","pol":"-0.25","std":"0.0"},"socio del apostador":{"pos":"n","pol":"-0.25","std":"0.0"},"socio del estafador":{"pos":"n","pol":"-0.25","std":"0.0"},"soga":{"pos":"n","pol":"-0.25","std":"0.0"},"sojuzgador":{"pos":"n","pol":"-0.25","std":"0.0"},"solaz":{"pos":"n","pol":"-0.25","std":"0.063"},"soldados hostiles":{"pos":"n","pol":"-0.25","std":"0.0"},"solresol":{"pos":"n","pol":"-0.25","std":"0.0"},"somatosensorial":{"pos":"a","pol":"-0.25","std":"0.0"},"sombrero de ala ancha":{"pos":"n","pol":"-0.25","std":"0.0"},"sombrero de cowboy":{"pos":"n","pol":"-0.25","std":"0.0"},"sombrero hongo":{"pos":"n","pol":"-0.25","std":"0.0"},"somnifobia":{"pos":"n","pol":"-0.25","std":"0.0"},"sonar a metal":{"pos":"v","pol":"-0.25","std":"0.0"},"sonsonete":{"pos":"n","pol":"-0.25","std":"0.0"},"soplo sistólico":{"pos":"n","pol":"-0.25","std":"0.0"},"soplon":{"pos":"n","pol":"-0.25","std":"0.0"},"soportable":{"pos":"a","pol":"-0.25","std":"0.0"},"sorprender":{"pos":"v","pol":"-0.25","std":"0.068"},"sosegador":{"pos":"a","pol":"-0.25","std":"0.0"},"sospecha":{"pos":"n","pol":"-0.25","std":"0.088"},"sospechosamente":{"pos":"r","pol":"-0.25","std":"0.0"},"sospechoso":{"pos":"n","pol":"-0.25","std":"0.0"},"sospechoso de asesinato":{"pos":"n","pol":"-0.25","std":"0.0"},"sospechoso de robo":{"pos":"n","pol":"-0.25","std":"0.0"},"sotana":{"pos":"n","pol":"-0.25","std":"0.0"},"spang":{"pos":"v","pol":"-0.25","std":"0.0"},"staphylococcus":{"pos":"n","pol":"-0.25","std":"0.0"},"status asmaticus":{"pos":"n","pol":"-0.25","std":"0.0"},"stout":{"pos":"n","pol":"-0.25","std":"0.0"},"streptopelia":{"pos":"n","pol":"-0.25","std":"0.0"},"streptopelia turtur":{"pos":"n","pol":"-0.25","std":"0.0"},"subnormalidad":{"pos":"n","pol":"-0.25","std":"0.0"},"subrayado":{"pos":"n","pol":"-0.25","std":"0.0"},"subsidio de enfermedad":{"pos":"n","pol":"-0.25","std":"0.0"},"subversivo":{"pos":"a","pol":"-0.25","std":"0.0"},"subwoofer":{"pos":"n","pol":"-0.25","std":"0.0"},"subyugador":{"pos":"n","pol":"-0.25","std":"0.0"},"succionar":{"pos":"v","pol":"-0.25","std":"0.0"},"sudor frío":{"pos":"n","pol":"-0.25","std":"0.0"},"suelta":{"pos":"r","pol":"-0.25","std":"0.0"},"sueño del opio":{"pos":"n","pol":"-0.25","std":"0.0"},"sueño fantástico":{"pos":"n","pol":"-0.25","std":"0.0"},"sufridor":{"pos":"n","pol":"-0.25","std":"0.0"},"superar en estrategia":{"pos":"v","pol":"-0.25","std":"0.0"},"supernaturalista":{"pos":"a","pol":"-0.25","std":"0.0"},"superrealista":{"pos":"a","pol":"-0.25","std":"0.0"},"surrealista":{"pos":"a","pol":"-0.25","std":"0.177"},"sustancia viscosa":{"pos":"n","pol":"-0.25","std":"0.0"},"sutilidad":{"pos":"n","pol":"-0.25","std":"0.0"},"syringa":{"pos":"n","pol":"-0.25","std":"0.0"},"sí":{"pos":"n","pol":"-0.25","std":"0.0"},"síndrome":{"pos":"n","pol":"-0.25","std":"0.0"},"síndrome de down":{"pos":"n","pol":"-0.25","std":"0.0"},"síndrome meníngeo":{"pos":"n","pol":"-0.25","std":"0.0"},"síntoma":{"pos":"n","pol":"-0.25","std":"0.072"},"tabardillo":{"pos":"n","pol":"-0.25","std":"0.0"},"tacañería":{"pos":"n","pol":"-0.25","std":"0.0"},"taciturno":{"pos":"a","pol":"-0.25","std":"0.125"},"taladro mecánico":{"pos":"n","pol":"-0.25","std":"0.0"},"talidomida":{"pos":"n","pol":"-0.25","std":"0.0"},"tanatología":{"pos":"n","pol":"-0.25","std":"0.0"},"tantalio":{"pos":"n","pol":"-0.25","std":"0.0"},"tantarantán":{"pos":"n","pol":"-0.25","std":"0.0"},"tantarán":{"pos":"n","pol":"-0.25","std":"0.0"},"tapping":{"pos":"n","pol":"-0.25","std":"0.0"},"taqué":{"pos":"n","pol":"-0.25","std":"0.0"},"tarasca":{"pos":"n","pol":"-0.25","std":"0.0"},"tarifas de exportación":{"pos":"n","pol":"-0.25","std":"0.0"},"tarjar":{"pos":"v","pol":"-0.25","std":"0.0"},"tarántula":{"pos":"n","pol":"-0.25","std":"0.0"},"tatuar":{"pos":"v","pol":"-0.25","std":"0.0"},"taxabilidad":{"pos":"n","pol":"-0.25","std":"0.0"},"tedioso":{"pos":"a","pol":"-0.25","std":"0.265"},"tejanos":{"pos":"n","pol":"-0.25","std":"0.0"},"temperatura baja":{"pos":"n","pol":"-0.25","std":"0.0"},"tenebrosidad":{"pos":"n","pol":"-0.25","std":"0.0"},"teratología":{"pos":"n","pol":"-0.25","std":"0.0"},"terrorización":{"pos":"n","pol":"-0.25","std":"0.0"},"terópodos":{"pos":"n","pol":"-0.25","std":"0.0"},"tesarse":{"pos":"v","pol":"-0.25","std":"0.0"},"testamentaría":{"pos":"n","pol":"-0.25","std":"0.0"},"tez morena":{"pos":"n","pol":"-0.25","std":"0.0"},"tez tostada":{"pos":"n","pol":"-0.25","std":"0.0"},"thriller":{"pos":"n","pol":"-0.25","std":"0.0"},"tie-break":{"pos":"n","pol":"-0.25","std":"0.0"},"tiesura":{"pos":"n","pol":"-0.25","std":"0.0"},"tifoidea":{"pos":"n","pol":"-0.25","std":"0.0"},"tifus recurrente":{"pos":"n","pol":"-0.25","std":"0.0"},"tirar la toalla":{"pos":"v","pol":"-0.25","std":"0.0"},"tirar violentamente":{"pos":"v","pol":"-0.25","std":"0.0"},"tirita":{"pos":"n","pol":"-0.25","std":"0.0"},"tiritón":{"pos":"n","pol":"-0.25","std":"0.0"},"titanio":{"pos":"n","pol":"-0.25","std":"0.0"},"tiznadura":{"pos":"n","pol":"-0.25","std":"0.0"},"tiñoso":{"pos":"a","pol":"-0.25","std":"0.0"},"toc!":{"pos":"n","pol":"-0.25","std":"0.0"},"toc toc":{"pos":"n","pol":"-0.25","std":"0.0"},"tocar a":{"pos":"v","pol":"-0.25","std":"0.0"},"tocar a difuntos":{"pos":"v","pol":"-0.25","std":"0.0"},"tocar el clarín":{"pos":"v","pol":"-0.25","std":"0.0"},"tocar suavemente":{"pos":"v","pol":"-0.25","std":"0.0"},"tocón":{"pos":"n","pol":"-0.25","std":"0.0"},"tomarse cinco minutos":{"pos":"v","pol":"-0.25","std":"0.0"},"tombac":{"pos":"n","pol":"-0.25","std":"0.0"},"topero":{"pos":"n","pol":"-0.25","std":"0.0"},"topista":{"pos":"n","pol":"-0.25","std":"0.0"},"toque de bocina":{"pos":"n","pol":"-0.25","std":"0.0"},"tories":{"pos":"n","pol":"-0.25","std":"0.0"},"torpeza":{"pos":"n","pol":"-0.25","std":"0.125"},"tortuosidad":{"pos":"n","pol":"-0.25","std":"0.125"},"tos":{"pos":"n","pol":"-0.25","std":"0.0"},"tos ferina":{"pos":"n","pol":"-0.25","std":"0.0"},"toser":{"pos":"v","pol":"-0.25","std":"0.0"},"tozudo":{"pos":"a","pol":"-0.25","std":"0.105"},"trabajo duro":{"pos":"n","pol":"-0.25","std":"0.0"},"traficante":{"pos":"n","pol":"-0.25","std":"0.0"},"traficante de armas":{"pos":"n","pol":"-0.25","std":"0.0"},"traidor":{"pos":"a","pol":"-0.25","std":"0.088"},"traje de baño":{"pos":"n","pol":"-0.25","std":"0.0"},"traje de buceo":{"pos":"n","pol":"-0.25","std":"0.0"},"traje de cuartel":{"pos":"n","pol":"-0.25","std":"0.0"},"traje de faena":{"pos":"n","pol":"-0.25","std":"0.0"},"traje de vuelo":{"pos":"n","pol":"-0.25","std":"0.0"},"traje espacial":{"pos":"n","pol":"-0.25","std":"0.0"},"trampa para ratas":{"pos":"n","pol":"-0.25","std":"0.0"},"trance religioso":{"pos":"n","pol":"-0.25","std":"0.0"},"tranquilamente":{"pos":"r","pol":"-0.25","std":"0.0"},"tranquilidad de espíritu":{"pos":"n","pol":"-0.25","std":"0.0"},"transgredir":{"pos":"v","pol":"-0.25","std":"0.0"},"trasponer":{"pos":"v","pol":"-0.25","std":"0.0"},"trastorno auditivo":{"pos":"n","pol":"-0.25","std":"0.0"},"trastorno mental":{"pos":"n","pol":"-0.25","std":"0.0"},"trastorno visual":{"pos":"n","pol":"-0.25","std":"0.0"},"tratamiento paliativo":{"pos":"n","pol":"-0.25","std":"0.0"},"tratante de caballos":{"pos":"n","pol":"-0.25","std":"0.0"},"tratarse":{"pos":"v","pol":"-0.25","std":"0.0"},"traumatofobia":{"pos":"n","pol":"-0.25","std":"0.0"},"trepidación":{"pos":"n","pol":"-0.25","std":"0.0"},"tributabilidad":{"pos":"n","pol":"-0.25","std":"0.0"},"trickster":{"pos":"n","pol":"-0.25","std":"0.0"},"tricloroetileno":{"pos":"n","pol":"-0.25","std":"0.0"},"tricomoniasis":{"pos":"n","pol":"-0.25","std":"0.0"},"trifoliado":{"pos":"a","pol":"-0.25","std":"0.0"},"triscaidecafobia":{"pos":"n","pol":"-0.25","std":"0.0"},"triunvirato":{"pos":"n","pol":"-0.25","std":"0.0"},"triunviro":{"pos":"n","pol":"-0.25","std":"0.0"},"troglodytidae":{"pos":"n","pol":"-0.25","std":"0.0"},"trompeadura":{"pos":"n","pol":"-0.25","std":"0.0"},"tropezar":{"pos":"v","pol":"-0.25","std":"0.072"},"tropo":{"pos":"n","pol":"-0.25","std":"0.0"},"trucar":{"pos":"v","pol":"-0.25","std":"0.0"},"tsunami":{"pos":"n","pol":"-0.25","std":"0.0"},"tubercular":{"pos":"a","pol":"-0.25","std":"0.0"},"tuberculós":{"pos":"a","pol":"-0.25","std":"0.0"},"tugurio":{"pos":"n","pol":"-0.25","std":"0.0"},"tularemia":{"pos":"n","pol":"-0.25","std":"0.0"},"tumbarse":{"pos":"v","pol":"-0.25","std":"0.0"},"tumbona":{"pos":"n","pol":"-0.25","std":"0.0"},"tumescente":{"pos":"a","pol":"-0.25","std":"0.0"},"tumor benigno":{"pos":"n","pol":"-0.25","std":"0.0"},"turboembrague":{"pos":"n","pol":"-0.25","std":"0.0"},"turbonada":{"pos":"n","pol":"-0.25","std":"0.0"},"tussilago":{"pos":"n","pol":"-0.25","std":"0.0"},"táctico":{"pos":"a","pol":"-0.25","std":"0.0"},"tártaro emético":{"pos":"n","pol":"-0.25","std":"0.0"},"ténue":{"pos":"a","pol":"-0.25","std":"0.0"},"ufanía":{"pos":"n","pol":"-0.25","std":"0.265"},"ulcerado":{"pos":"a","pol":"-0.25","std":"0.0"},"ulceroso":{"pos":"a","pol":"-0.25","std":"0.0"},"ultramicroscopio":{"pos":"n","pol":"-0.25","std":"0.0"},"ultramontanismo":{"pos":"n","pol":"-0.25","std":"0.0"},"uniformidad":{"pos":"n","pol":"-0.25","std":"0.088"},"unilateralismo":{"pos":"n","pol":"-0.25","std":"0.0"},"universalmente":{"pos":"r","pol":"-0.25","std":"0.0"},"uso indebido":{"pos":"n","pol":"-0.25","std":"0.0"},"uxoricidio":{"pos":"n","pol":"-0.25","std":"0.0"},"vaccinia virus":{"pos":"n","pol":"-0.25","std":"0.0"},"vacilante":{"pos":"n","pol":"-0.25","std":"0.0"},"vacuna":{"pos":"n","pol":"-0.25","std":"0.072"},"vacunación":{"pos":"n","pol":"-0.25","std":"0.088"},"vaginismo":{"pos":"n","pol":"-0.25","std":"0.0"},"vaqueros":{"pos":"n","pol":"-0.25","std":"0.0"},"variabilidad":{"pos":"n","pol":"-0.25","std":"0.088"},"varicela":{"pos":"n","pol":"-0.25","std":"0.0"},"vena ilíaca primitiva":{"pos":"n","pol":"-0.25","std":"0.0"},"vengador":{"pos":"n","pol":"-0.25","std":"0.0"},"vengar":{"pos":"v","pol":"-0.25","std":"0.0"},"vengarse":{"pos":"v","pol":"-0.25","std":"0.088"},"venirse abajo":{"pos":"v","pol":"-0.25","std":"0.072"},"ventoso":{"pos":"n","pol":"-0.25","std":"0.0"},"ventriloquia":{"pos":"n","pol":"-0.25","std":"0.0"},"veratrum":{"pos":"n","pol":"-0.25","std":"0.0"},"verdugado":{"pos":"n","pol":"-0.25","std":"0.0"},"versículo":{"pos":"n","pol":"-0.25","std":"0.0"},"vesania":{"pos":"n","pol":"-0.25","std":"0.0"},"vesanía":{"pos":"n","pol":"-0.25","std":"0.0"},"vestido de novia":{"pos":"n","pol":"-0.25","std":"0.0"},"vestidura":{"pos":"n","pol":"-0.25","std":"0.0"},"vestigial":{"pos":"a","pol":"-0.25","std":"0.0"},"veto de bolsillo":{"pos":"n","pol":"-0.25","std":"0.0"},"viaje en diligencia":{"pos":"n","pol":"-0.25","std":"0.0"},"viaje pesado":{"pos":"n","pol":"-0.25","std":"0.0"},"vicealmirante":{"pos":"n","pol":"-0.25","std":"0.0"},"vieja":{"pos":"n","pol":"-0.25","std":"0.0"},"vieja gruñona":{"pos":"n","pol":"-0.25","std":"0.0"},"viejo chocho":{"pos":"n","pol":"-0.25","std":"0.0"},"viento del nordeste":{"pos":"n","pol":"-0.25","std":"0.0"},"viento del noreste":{"pos":"n","pol":"-0.25","std":"0.0"},"villana":{"pos":"n","pol":"-0.25","std":"0.0"},"virtud cardinal":{"pos":"n","pol":"-0.25","std":"0.0"},"viruela ovina":{"pos":"n","pol":"-0.25","std":"0.0"},"vislumbre":{"pos":"n","pol":"-0.25","std":"0.088"},"viuda":{"pos":"n","pol":"-0.25","std":"0.0"},"viudo":{"pos":"n","pol":"-0.25","std":"0.0"},"volver a condenar":{"pos":"v","pol":"-0.25","std":"0.0"},"volver a encender":{"pos":"v","pol":"-0.25","std":"0.0"},"volver a fotografiar":{"pos":"v","pol":"-0.25","std":"0.0"},"vulcanita":{"pos":"n","pol":"-0.25","std":"0.0"},"vulnerabilidad":{"pos":"n","pol":"-0.25","std":"0.0"},"vía muerta":{"pos":"n","pol":"-0.25","std":"0.0"},"vía secundaria":{"pos":"n","pol":"-0.25","std":"0.0"},"vía subsidiaria":{"pos":"n","pol":"-0.25","std":"0.0"},"víctima":{"pos":"n","pol":"-0.25","std":"0.0"},"whodunit":{"pos":"n","pol":"-0.25","std":"0.0"},"xenofobia":{"pos":"n","pol":"-0.25","std":"0.0"},"xenolito":{"pos":"n","pol":"-0.25","std":"0.0"},"zangarriana":{"pos":"n","pol":"-0.25","std":"0.088"},"zidovudina":{"pos":"n","pol":"-0.25","std":"0.0"},"ziti":{"pos":"n","pol":"-0.25","std":"0.0"},"zoo":{"pos":"n","pol":"-0.25","std":"0.0"},"zoofobia":{"pos":"n","pol":"-0.25","std":"0.0"},"zoológico":{"pos":"n","pol":"-0.25","std":"0.0"},"zoonosis":{"pos":"n","pol":"-0.25","std":"0.0"},"zorro":{"pos":"n","pol":"-0.25","std":"0.0"},"zurcido":{"pos":"n","pol":"-0.25","std":"0.0"},"ácido brómico":{"pos":"n","pol":"-0.25","std":"0.0"},"ácido crómico":{"pos":"n","pol":"-0.25","std":"0.0"},"ácido fumárico":{"pos":"n","pol":"-0.25","std":"0.0"},"ácido hipocloroso":{"pos":"n","pol":"-0.25","std":"0.0"},"ácido maleico":{"pos":"n","pol":"-0.25","std":"0.0"},"ácido permangánico":{"pos":"n","pol":"-0.25","std":"0.0"},"ázoe":{"pos":"n","pol":"-0.25","std":"0.0"},"óbito":{"pos":"n","pol":"-0.25","std":"0.0"},"ópalo negro":{"pos":"n","pol":"-0.25","std":"0.0"},"ósmosis":{"pos":"n","pol":"-0.25","std":"0.0"},"ótico":{"pos":"a","pol":"-0.25","std":"0.0"}}
},{}],12:[function(require,module,exports){
'use strict';

const fs = require('fs');
const stemmer = require('./src/stemmer.js');
const syllabler = require('./src/syllabler.js');
const sentimenter = require('./src/sentimenter.js');

var lorca = function(input)
{
    var wrapper = new Lorca();

    return wrapper.normalize(input);
}

class Lorca
{
    constructor()
    {
        this.input = '';
        this.text = '';
        this.out = '';
    }

    in()
    {
        return this.input;
    }

    get()
    {
        return this.out;
    }

    normalize(input)
    {
        if(input){
            this.input = input;
        } else {
            this.input = 'Texto de ejemplo. Añade tu texto en el método lorca(string)';
        }

        var fullStopTags = ['li', 'p', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'dd'];

        fullStopTags.forEach(function (tag) {
            input = input.replace("</" + tag + ">", ".");
        });

        this.out = input
            .replace(/<[^>]+>/g, "")				    // Strip tags
            .replace(/[,:;()\/&+]|\-\-/g, " ")          // Replace commas, hyphens etc (count them as spaces)
            .replace(/[\.!?]/g, ".")					// Unify terminators
            .replace(/^\s+/, "")						// Strip leading whitespace
            .replace(/[\.]?(\w+)[\.]?(\w+)@(\w+)[\.](\w+)[\.]?/g, "$1$2@$3$4")	// strip periods in email addresses (so they remain counted as one word)
            .replace(/[ ]*(\n|\r\n|\r)[ ]*/g, ".")	    // Replace new lines with periods
            .replace(/([\.])[\.]+/g, ".")			    // Check for duplicated terminators
            .replace(/[ ]*([\.])/g, ". ")				// Pad sentence terminators
            .replace(/\s+/g, " ")						// Remove multiple spaces
            .replace(/\s+$/, "")					    // Strip trailing whitespace
            .replace(/ nbsp/, "");

        if (this.out.slice(-1) != '.') {
            this.out += "."; // Add final terminator, just in case it's missing.
        }

        this.text = this.out;
     
        return this;
    }

    load()
    {
        this.out = this.text;

        return this;
    }

    sentences()
    {
        this.out = this.trimSentences(this.text);

        return this;
    }

    trimSentences(string)
    {
        return string.trim().match( /[^\.!\?]+[\.!\?]+/g );
    }

    trimWords(string)
    {
        return string.replace(/[#!¡¿?\-@\."”“’‘»«*'—%\[\]\|]/g, '').replace(/=/g, ' ').replace(/[0-9]+/g, '').trim().toLowerCase().split(/\s+/);
    }

    words()
    {
        if(this.out instanceof Array && !(this.out[0] instanceof Array)){
            for(var i = 0; i < this.out.length; i++){
                this.out[i] = this.trimWords(this.out[i]);
            }
        } else {
            this.out = this.trimWords(this.text);
        }
       
       return this;
    }

    uniqueWords()
    {
        var concordance = this.concordance().get();

        this.out = [];

        for(var token in concordance){
            this.out.push(token);
        }

        return this;
    }

    onceWords(){
        var concordance = this.concordance().get();

        this.out = [];

        for(var token in concordance){
            if(concordance[token] === 1){
                this.out.push(token);
            }
        }

        return this;
    }

    percentage()
    {
        var totalWords = this.trimWords(this.text).length;
        var outputWords = this.out.length;
        var sentences = this.trimSentences(this.text);

        for(var i = 0; i < this.out.length; i++){
            if(this.out[i] instanceof Array){
               this.out[i] = this.out[i].length/this.trimWords(sentences[i]).length;
            } else {
                this.out = outputWords/totalWords;
            }
        }

        return this;
    }

    syllables()
    {      
        if(this.out instanceof Array){
            for(var i = 0; i < this.out.length; i++){ 
                if(this.out[i] instanceof Array){
                    for(var j = 0; j < this.out[i].length; j++){
                        this.out[i][j] = this.trimSyllables(this.out[i][j]);
                    }
                } else {
                    this.out[i] = this.trimSyllables(this.out[i]);                
                }
            }
        } else {
            this.out = this.trimSyllables(this.out);
        }

       return this;
    }

    trimSyllables(word)
    {
        return syllabler(word);
    } 

    concordance(mode)
    {
        var tokens = this.words().get();
        var concordance = {};

        for(var i = 0; i < tokens.length; i++){
            if(concordance.hasOwnProperty(tokens[i])){
                concordance[tokens[i]] += 1; 
            } else {
                concordance[tokens[i]] = 1;
            }
        }

        if(mode == 'relative'){
            for(var token in concordance){
                concordance[token] = concordance[token]/Object.keys(tokens).length;
            }
        }
        
        this.out = concordance;

        return this;
    }

    sort(listMaxLength)
    {
        var sorted = {};
        var keys = Object.keys(this.out);
        var arr = this.out;
       
        keys.sort(function(a, b) {
            return arr[b] - arr[a];
        });

        if(listMaxLength == undefined || listMaxLength > keys.length){
            listMaxLength = keys.length;
        }

        for(var i = 0; i < listMaxLength; i++){
            sorted[keys[i]] = this.out[keys[i]];
        }
        
        this.out = sorted;

        return this;
    }

    wordsPerSentence()
    {
        var sentences = this.trimSentences(this.text).length;
        var words = this.trimWords(this.text).length;
        
        this.out = words/sentences;
        
        return this;
    }

    syllablesPerWord()
    {
        var syllables = this.trimSyllables(this.text).length;
        var words = this.trimWords(this.text).length;

        this.out = syllables/words;

        return this;
    }

    syllablesPerSentence()
    {
        this.out = this.wordsPerSentence().get()*this.syllablesPerWord().get();

        return this;
    }

    prepositions()
    {
        var prepositionRegex = /( |\b)(a|ante|bajo|cabe|con|contra|de|desde|en|entre|hacia|hasta|para|por|según|sin|so|sobre|tras)( |\b)/gi;

        // TODO add locuciones prepositivas
        var prepositionLocRegex = /( |\b)(acerca de|al lado de|alrededor de|antes de|a pesar de|cerca de|con arreglo a|con objeto de|debajo de|delante de|dentro de|después de|detrás de|encima de|en cuanto a|enfrente de|en virtud de|frente a|fuera de|gracias a|junto a|lejos de|por culpa de)( |\b)/gi;

        if(this.out instanceof Array) {
            for(var i = 0; i < this.out.length; i++){
                this.out[i] = this.out[i].match(prepositionRegex) || [];
            }
        } else {
            this.out = this.out.match(prepositionRegex) || [];
        }

        for(var n = 0; n < this.out.length; n++){
            if(this.out[n] instanceof Array){
                for(var k = 0; k < this.out[n].length; k++){
                    this.out[n][k] = this.out[n][k].toLowerCase().replace(/ /g, '');
                }
            } else {
                this.out[n] = this.out[n].toLowerCase().replace(/ /g, '');
            }
        }

        return this;
    }

    pronouns()
    {
        //TODO palabra con acento como míote ará match con mío, el acento no va bien
        //TODO add other pronouns
        var tonicRegex = /(yo|tú|vos|usted|él|ella|ello|nosotros|nosotras|ustedes|ellos|ellas|mí|conmigo|ti|contigo|consigo)/gi;
        var posesiveRegex = /( |\b)(mío|mía|míos|mías|tuyo|tuya|tuyos|tuyas|suyo|suya|suyos|suyas|nuestro|nuestra|nuestros|nuestras|vuestro|vuestra|vuestros|vuestras|suyo|suya|suyos|suyas)( |\b)/gi;
        var demostrativeRegex = /( |\b)(esta|este|esto|estos|estas|ese|esa|eso|esos|esas|aquel|aquella|aquello|aquellos|aquellas)( |\b)/gi;
        var indefiniteRegex = /( |\b)(uno|una|unos|unas|alguno|alguna|algo|algunos|algunas|ninguno|ninguna|nada|ningunos|ningunas|poco|poca|pocos|pocas|escaso|escasa|escasos|escasas|mucho|mucha|muchos|muchas|demasiado|demasiada|demasiados|demasiadas|todo|toda|todos|todas|varios|varias|otro|otra|otros|otras|mismo|misma|mismos|mismas|tan|tanto|tanta|tantos|tantas|alguien|nadie|cualquiera|quienquiera|demás|cualesquiera|quienesquiera)( |\b)/gi;

        if(this.out instanceof Array) {
            for(var i = 0; i < this.out.length; i++){
                this.out[i] = this.out[i].match(tonicRegex) || [];
            }
        } else {
            this.out = this.out.match(tonicRegex) || [];
        }

        for(var n = 0; n < this.out.length; n++){
            if(this.out[n] instanceof Array){
                for(var k = 0; k < this.out[n].length; k++){
                    this.out[n][k] = this.out[n][k].toLowerCase().replace(/ /g, '');
                }
            } else {
                this.out[n] = this.out[n].toLowerCase().replace(/ /g, '');
            }
        }

        return this;
    }

    adverbs()
    {
        var adverbRegex = /[a-zA-Z0-9áéíóúàèìòùñç]+mente\b/gi;

        if(this.out instanceof Array) {
            for(var i = 0; i < this.out.length; i++){
                this.out[i] = this.out[i].match(adverbRegex) || [];
            }
        } else {
            this.out = this.out.match(adverbRegex) || [];
        }

        for(var n = 0; n < this.out.length; n++){
            if(this.out[n] instanceof Array){
                for(var k = 0; k < this.out[n].length; k++){
                    this.out[n][k] = this.out[n][k].toLowerCase().replace(/ /g, '');
                }
            } else {
                this.out[n] = this.out[n].toLowerCase().replace(/ /g, '');
            }
        }

        return this;
    }

    isPassive()
    {
        var passiveRegex = /\b(es|son|está|están|eran|era|estaba|estaban|fue|fueron|estuvo|estuvieron|ha sido|han sido|ha estado|han estado|había sido|habían sido|había estado|habían estado|será|serán|estará|estarán|habrá sido|habrán sido|habrá estado|habrán estado|sería|serían|estaría|estarían|habría sido|habrían sido|habría estado|habrían estado) ([a-z]+ |)[a-z]+(ado|ados|ido|idos)\b/;

        if(this.out instanceof Array) {
            for(var i = 0; i < this.out.length; i++){
                this.out[i] = passiveRegex.test(this.out[i]) || false;
            }
        } else {
            this.out = passiveRegex.test(this.out) || false;
        }

        return this;
    }

    ifsz()
    {
        var syllablesPerWord = this.syllablesPerWord().get();
        var wordsPerSentence = this.wordsPerSentence().get();

        this.out = Math.round(Math.abs(206.835 - 62.3*syllablesPerWord - wordsPerSentence));

        return this;
    }

    grade()
    {
        if(this.out > 0 && this.out < 40){
            this.out = "Muy difícil";
            //this.infz.grade = "Universitario, Científico";
        } else if (this.out > 40 && this.out < 55){
            this.out = "Algo difícil";
            //this.infz.grade = "Bachillerato, Divulgación científica, Prensa especializada";
        } else if (this.out > 55 && this.out < 65){
            this.out = "Normal";
            //this.infz.grade = "E.S.O., Prensa general, Prensa deportiva";
        } else if (this.out > 65 && this.out < 80){
            this.out = "Bastante fácil";
            //this.infz.grade = "Educación primaria, Prensa del corazón, Novelas de éxito";
        } else if (this.out > 80){
            this.out = "Muy fácil";
            //this.infz.grade = "Educación primaria, Tebeos, Cómic";
        }

        return this;
    }

    find(word)
    {
        var regex = new RegExp(word, 'gi');

        if(this.out instanceof Array) {
            for(var i = 0; i < this.out.length; i++){
                this.out[i] = this.out[i].match(regex) || [];
            }
        } else {
            this.out = this.out.match(regex) || [];
        }

        for(var n = 0; n < this.out.length; n++){
            if(this.out[n] instanceof Array){
                for(var k = 0; k < this.out[n].length; k++){
                    this.out[n][k] = this.out[n][k].toLowerCase().replace(/ /g, '');
                }
            } else {
                this.out[n] = this.out[n].toLowerCase().replace(/ /g, '');
            }
        }

        return this.out;
    }

    readingTime(readingSpeed)
    {
        var speed = readingSpeed || 220;

        return 60*this.words().get().length/speed;
    }

    sentiment(type)
    {    
        type = type || 'afinn';

        if(this.out instanceof Array){
            for(var i = 0; i < this.out.length; i++){
                if(this.out[i] instanceof Array){
                    for(var j = 0; j < this.out[i].length; j++){                        
                        this.out[i][j] = sentimenter.getSentiment(this.trimWords(this.out[i][j]), type);
                    }
                } else {
                    // Sentence calculation
                    this.out[i] = sentimenter.getSentiment(this.trimWords(this.out[i]), type);
                }
            }
        } else {
            var sentences = this.sentences().get();
            var sentenceSentiments = this.sentiment(type);
            
            var add = (a, b) => {
                return a + b
            };

            this.out = sentenceSentiments.reduce(add)/sentenceSentiments.length;
        }
        
        return this.out;
    }

    stem(word)
    {
        if(word){
            return stemmer.stem(word);
        } else {
            if(this.out instanceof Array){
                for(var i = 0; i < this.out.length; i++){
                    if(this.out[i] instanceof Array){
                        for(var j = 0; j < this.out[i].length; j++){
                            this.out[i][j] = stemmer.stem(this.out[i][j]);
                        }
                    } else {
                        this.out[i] = stemmer.stem(this.out[i]);
                    }
                }
                return this;
            }
        }
    }

    corpusFrequency(token)
    {
        var list = JSON.parse(fs.readFileSync('./dictionaries/frequencyListRAE50000.json', 'utf8'));

        if(token){            
            return list[token];
        } else {
            if(!(this.out instanceof Array)){
                this.words().get();        
            }

            for(var i = 0; i < this.out.length; i++){
                if(this.out[i] instanceof Array){
                    for(var j = 0; j < this.out[i].length; j++){
                        if(list[this.out[i][j]] != undefined){
                            this.out[i][j] = list[this.out[i][j]];                                
                        } else {
                            this.out[i][j] = 0;                       
                        }
                    }
                } else {
                    if(list[this.out[i]] != undefined){
                        this.out[i]= list[this.out[i]];                                
                    } else {
                        this.out[i] = 0;                       
                    }
                }
            }
        }

        return this;
    }

    tfidf()
    {
        if(!(this.out instanceof Array)){
            var frequencies = this.words().concordance('relative').get();        
        }

        var idf = {};
        for (var token in frequencies){
            this.out[token] = -frequencies[token]/0.0001*Math.log(this.corpusFrequency(token)/0.001);
        }

        return this;
    }

}

module.exports = lorca;

},{"./src/sentimenter.js":13,"./src/stemmer.js":14,"./src/syllabler.js":15,"fs":1}],13:[function(require,module,exports){
'use strict';

const stemmer = require('./stemmer.js');

class Sentimenter 
{
    constructor()
    {
        this.afinnList = require('../dictionaries/afinnShortSortedSpanish');
        this.senticonList = require('../dictionaries/senticon.json');
        this.list = {};
        this.afinnStem = {};
        this.senticonStem = {}
        
        for(var token in this.afinnList){
            this.afinnStem[stemmer.stem(token)] = this.afinnList[token];
        }

        for(var token in this.senticonList){
            this.senticonStem[stemmer.stem(token)] = this.senticonList[token].pol;
        }
    }

    getSentiment(array, type)
    {      
        if(type === 'afinn'){
            return this.afinn(array);
        } else if (type == 'senticon') {
            return this.senticon(array);
        }
    }

    afinn(array)
    {
        var words = array;
        var score = 0;
        var negator = 1;

        words.forEach((token) => {
            if(this.afinnStem[stemmer.stem(token)] != undefined){
                score += negator*this.afinnStem[stemmer.stem(token)];   
                // TODO jamás, ni. 
                if(token == 'no' || token == 'nunca'){
                    negator = -1;
                }
            }
        });
        
        score = score/words.length;                     

        return score;
    }

    senticon(array)
    {
        var words = array;
        var score = 0;
        var negator = 1;

        words.forEach((token) => {
            if(this.senticonStem[stemmer.stem(token)] != undefined){
                score += negator*this.senticonStem[stemmer.stem(token)];   
                // TODO jamás, ni. 
                if(token == 'no' || token == 'nunca'){
                    negator = -1;
                }
            }
        });
        
        score = score/words.length;                     

        return score;
    }

    // Beta
    train(sentence, flag)
    {
        var tokens = this.trimWords(sentence);

        for(var i = 0; i < tokens.length; i++){
            if(this.list.hasOwnProperty(tokens[i])){
                if(flag === true){
                    this.list[tokens[i]].score += 1;
                } else {
                    this.list[tokens[i]].score -= 1;
                }
                this.list[tokens[i]].frequency += 1;                      
            } else {
                if(flag === true){
                    this.list[tokens[i]] = {score: 1, frequency: 1};
                } else {
                    this.list[tokens[i]] = {score: -1, frequency: 1};                    
                }
            }
        }

        this.output = {};

        for(var token in this.list){
            this.output[token] = this.list[token].score/this.list[token].frequency; 
        }
   
        return this.output;
    }

    // Beta
    guess(string)
    {
        var words = this.trimWords(string);
        var score = 0;
        
        words.forEach((item) => {
            if(this.output[item] != undefined){
                score += this.output[item];
            }
        });

        return score;
    }

}

module.exports = new Sentimenter;
},{"../dictionaries/afinnShortSortedSpanish":10,"../dictionaries/senticon.json":11,"./stemmer.js":14}],14:[function(require,module,exports){
'use strict';

class Stemmer
{
    constructor(){
        
    }

    isVowel(c)
    {
        var regex = /[aeiouáéíóú]/gi;

        return regex.test(c);
    }

    nextVowelPosition(word, start = 0)
    {
        var length = word.length;

        for(var position = start; position < length; position++){
            if(this.isVowel(word[position])){
                return position;
            }            
        }

        return length;
    }

    nextConsonantPosition(word, start = 0)
    {
        var length = word.length;

        for(var position = start; position < length; position++){
            if(!this.isVowel(word[position])){
                return position;
            }            
        }

        return length;
    }

    endsIn(word, suffix)
    {
        if(word.length < suffix.length){
            return false;
        }

        return (word.slice(-suffix.length) === suffix);
    }

    endsInArr(word, suffixes)
    {
        var matches = [];
        for(var i in suffixes) {
            if(this.endsIn(word, suffixes[i])){
                matches.push(suffixes[i]);
            }
        }
        var longest = matches.sort(function (a, b) {
            return b.length - a.length;
        })[0];

        if(longest){
            return longest
        } else {
            return '';
        }
    }

    removeAccent(word)
    {
        var accentedVowels = ['á', 'é', 'í', 'ó', 'ú'];
        var vowels = ['a', 'e', 'i', 'o', 'u'];

        for(var i in accentedVowels){
            word = word.replace(accentedVowels[i], vowels[i]);
        }

        return word;
    }

    stem(word)
    {
        var length = word.length;

        word.toLowerCase();

        if(length < 2){
            return this.removeAccent(word);
        }

        var r1, r2, rv;
        r1 = length;
        r2 = length;
        rv = length;
        
        // R1 is the region after the first non-vowel following a vowel, or is the null region 
        // at the end of the word if there is no such non-vowel.
        for(var i = 0; i < (length - 1) && r1 == length; i++){
            if(this.isVowel(word[i]) && !this.isVowel(word[i + 1])){
                r1 = i + 2;
            }
        }

        // R2 is the region after the first non-vowel following a vowel in R1, 
        // or is the null region at the end of the word if there is no such non-vowel. 
        for(var i = r1; i < (length - 1) && r2 == length; i++){
            if(this.isVowel(word[i]) && !this.isVowel(word[i + 1])){
                r2 = i + 2;
            }
        }

        if(length > 3){
            if(!this.isVowel(word[1])){
                rv = this.nextVowelPosition(word, 2) + 1;
            } else if(this.isVowel(word[0]) && this.isVowel(word[1])){
                rv = this.nextConsonantPosition(word, 2) + 1;
            } else {
                rv = 3;
            }
        }

        var r1Text = word.slice(r1);
        var r2Text = word.slice(r2);
        var rvText = word.slice(rv);
        var originalWord = word;

        // Step 0: Attached pronoun
        var pronounSuffix = ['me', 'se', 'sela', 'selo', 'selas', 'selos', 'la', 'le', 'lo', 'las', 'les', 'los', 'nos'];
        var pronounSuffixPre1 = ['iéndo', 'ándo', 'ár', 'ér', 'ír'];
        var pronounSuffixPre2 = ['iendo', 'ando', 'ar', 'er', 'ir'];

        var suffix = this.endsInArr(word, pronounSuffix);

        if(suffix != ''){
            var preSuffix = this.endsInArr(rvText.slice(0, -suffix.length), pronounSuffixPre1);

            if(preSuffix != ''){
                word = this.removeAccent(word.slice(0, -suffix.length));
            } else {
                preSuffix = this.endsInArr(rvText.slice(0, -suffix.length), pronounSuffixPre2);

                if(preSuffix != '' || (this.endsIn(word.slice(0, -suffix.length), 'uyendo'))){

                    word = word.slice(0, -suffix.length);
                }
            }
        }

        if(word != originalWord){
            r1Text = word.slice(r1);
            r2Text = word.slice(r2);
            rvText = word.slice(rv);
        }

        var wordAfter0 = word;

        if(( suf = this.endsInArr(r2Text, ['anza', 'anzas', 'ico', 'ica', 'icos', 'icas', 'ismo', 'ismos',
                                            'able', 'ables', 'ible', 'ibles', 'ista', 'istas', 'oso', 'osa',
                                            'osos', 'osas', 'amiento', 'amientos', 'imiento', 'imientos'])) != '')
        {
            word = word.slice(0, -suf.length);
		} 
        else if((suf = this.endsInArr(r2Text, ['icadora', 'icador', 'icación', 'icadoras', 'icadores', 'icaciones',
                                            'icante', 'icantes', 'icancia', 'icancias', 'adora', 'ador', 'ación',
                                            'adoras', 'adores', 'aciones', 'ante', 'antes', 'ancia', 'ancias'])) != '')
        {
            word = word.slice(0, -suf.length);
		} 
        else if((suf = this.endsInArr(r2Text, ['logía', 'logías'])) != ''){
            word = word.slice(0, -suf.length) + 'log';
		} 
        else if((suf = this.endsInArr(r2Text, ['ución', 'uciones'])) != ''){
            word = word.slice(0, -suf.length) + 'u';
		} 
        else if((suf = this.endsInArr(r2Text, ['encia', 'encias'])) != ''){
            word = word.slice(0, -suf.length) + 'ente';
		} 
        else if((suf = this.endsInArr(r2Text, ['ativamente', 'ivamente', 'osamente', 'icamente', 'adamente'])) != ''){
            word = word.slice(0, -suf.length);
		}
        else if((suf = this.endsInArr(r1Text, ['amente'])) != ''){
			word = word.slice(0, -suf.length);
		}
        else if((suf = this.endsInArr(r2Text, ['antemente', 'ablemente', 'iblemente', 'mente'])) != ''){
			word = word.slice(0, -suf.length);
		} 
        else if((suf = this.endsInArr(r2Text, ['abilidad', 'abilidades', 'icidad', 'icidades', 'ividad', 'ividades', 'idad', 'idades'])) != ''){
			word = word.slice(0, -suf.length);
		}
        else if((suf = this.endsInArr(r2Text, ['ativa', 'ativo', 'ativas', 'ativos', 'iva', 'ivo', 'ivas', 'ivos'])) != ''){
            word = word.slice(0, -suf.length);
		}

        if(word != wordAfter0){
            r1Text = word.slice(r1);
            r2Text = word.slice(r2);
            rvText = word.slice(rv);
        }
        var wordAfter1 = word;

        if(wordAfter0 === wordAfter1){

            // Do step 2a if no ending was removed by step 1. 
            var suf = this.endsInArr(rvText, ['ya', 'ye', 'yan', 'yen', 'yeron', 'yendo', 'yo', 'yó', 'yas', 'yes', 'yais', 'yamos']);

			if(suf != '' && (word.slice(-suf.length - 1, -suf.length) == 'u')){
                word = word.slice(0, -suf.length);
			}

            if(word != wordAfter1){
				r1Text = word.slice(r1); 
                r2Text = word.slice(r2); 
                rvText = word.slice(rv);
            }

			var wordAfter2a = word;
            // Do Step 2b if step 2a was done, but failed to remove a suffix.
            if (wordAfter2a == wordAfter1) {
                if((suf = this.endsInArr(rvText, ['arían', 'arías', 'arán', 'arás', 'aríais', 'aría', 'aréis',
                                                    'aríamos', 'aremos', 'ará', 'aré', 'erían', 'erías', 'erán',
                                                    'erás', 'eríais', 'ería', 'eréis', 'eríamos', 'eremos', 'erá',
                                                    'eré', 'irían', 'irías', 'irán', 'irás', 'iríais', 'iría', 'iréis',
                                                    'iríamos', 'iremos', 'irá', 'iré', 'aba', 'ada', 'ida', 'ía', 'ara',
                                                    'iera', 'ad', 'ed', 'id', 'ase', 'iese', 'aste', 'iste', 'an',
                                                    'aban', 'ían', 'aran', 'ieran', 'asen', 'iesen', 'aron', 'ieron',
                                                    'ado', 'ido', 'ando', 'iendo', 'ió', 'ar', 'er', 'ir', 'as', 'abas',
                                                    'adas', 'idas', 'ías', 'aras', 'ieras', 'ases', 'ieses', 'ís', 'áis',
                                                    'abais', 'íais', 'arais', 'ierais', '  aseis', 'ieseis', 'asteis',
                                                    'isteis', 'ados', 'idos', 'amos', 'ábamos', 'íamos', 'imos', 'áramos',
                                                    'iéramos', 'iésemos', 'ásemos'])) != '')
                {
                    word = word.slice(0, -suf.length);
                }else if((suf = this.endsInArr(rvText, ['en', 'es', 'éis', 'emos'])) != '') {
					word = word.slice(0, -suf.length);
                    if(this.endsIn(word, 'gu')){
                        word = word.slice(0, -1);
					}
				}
            }
        }

        r1Text = word.slice(r1); 
        r2Text = word.slice(r2); 
        rvText = word.slice(rv);

        if ((suf = this.endsInArr(rvText, ['os', 'a', 'o', 'á', 'í', 'ó'])) != '') {
			word = word.slice(0, -suf.length);
		} else if ((this.endsInArr(rvText , ['e','é'])) != '') {
			word = word.slice(0, -1);
			rvText = word.slice(rv);
			if (this.endsIn(rvText, 'u') && this.endsIn(word, 'gu')) {
				word = word.slice(0, -1);
			}
		}
		
		return this.removeAccent(word);
    }

}

module.exports = new Stemmer;
},{}],15:[function(require,module,exports){
/** Syllabler gets a word and outputs and array containing its syllables.
 *  This code belongs to https://github.com/vic/silabas.js
 */

const syllabler = function(word)
{
     var stressedFound = false;
        var stressed = 0;
        var letterAccent = -1;

        var wordLength = word.length;
        var positions = [];
        var word = word;

        function process () {
            var numSyl = 0;

            // Look for syllables in the word
            for (var i = 0; i < wordLength;) {
                positions[numSyl++] = i;

                i = onset(i);
                i = nucleus(i);
                i = coda(i);

                if (stressedFound && stressed == 0) {
                    stressed = numSyl; // it marks the stressed syllable
                }
            }

            // If the word has not written accent, the stressed syllable is determined
            // according to the stress rules
            if (!stressedFound) {
                if (numSyl < 2) stressed = numSyl;  // Monosyllables
                else {                              // Polysyllables
                    var endLetter  = toLower(wordLength - 1);

                    if ((!isConsonant(wordLength - 1) || (endLetter == 'y')) ||
                        (((endLetter == 'n') || (endLetter == 's') && !isConsonant(wordLength - 2))))
                        stressed = numSyl - 1;  // Stressed penultimate syllable
                    else
                        stressed = numSyl;      // Stressed last syllable
                }
            }
        }

        function onset(pos) {
            var lastConsonant = 'a';

            while( pos < wordLength && (isConsonant(pos) && toLower(pos) != 'y') ) {
                lastConsonant = toLower(pos);
                pos ++;
            }

            // (q | g) + u (example: queso, gueto)
            if (pos < wordLength - 1) {
                if (toLower(pos) == 'u') {
                    if (lastConsonant == 'q') {
                        pos++;
                    } else if (lastConsonant == 'g') {
                        var letter = toLower(pos + 1);
                        if (letter == 'e' || letter == 'é' ||  letter == 'i' || letter == 'í') {
                            pos++;
                        }
                    }
                } else if ( toLower(pos) == 'ü' && lastConsonant == 'g')  {
                    // The 'u' with diaeresis is added to the consonant
                    pos++;
                }
            }

            return pos;
        }

        function nucleus(pos) {
            // Saves the type of previous vowel when two vowels together exists
            var previous = 0;
            // 0 = open
            // 1 = close with written accent
            // 2 = close

            if (pos >= wordLength) return pos; // ¡¿Doesn't it have nucleus?!

            // Jumps a letter 'y' to the starting of nucleus, it is as consonant
            if (toLower(pos) == 'y') pos++;

            // First vowel
            if (pos < wordLength) {
                switch (toLower(pos)) {
                    // Open-vowel or close-vowel with written accent
                    case 'á': case 'à':
                    case 'é': case 'è':
                    case 'ó': case 'ò':
                    letterAccent = pos;
                    stressedFound   = true;
                    // Open-vowel
                    case 'a': case 'e': case 'o':
                    previous = 0;
                    pos++;
                    break;
                    // Close-vowel with written accent breaks some possible diphthong
                    case 'í': case 'ì':
                    case 'ú': case 'ù': case 'ü':
                    letterAccent = pos;
                    pos++;
                    stressedFound = true;
                    return pos;
                    // Close-vowel
                    case 'i': case 'I':
                    case 'u': case 'U':
                    previous = 2;
                    pos++;
                    break;
                }
            }

            // If 'h' has been inserted in the nucleus then it doesn't determine diphthong neither hiatus
            var aitch = false;
            if (pos < wordLength) {
                if (toLower(pos) == 'h') {
                    pos++;
                    aitch = true;
                }
            }

            // Second vowel
            if (pos < wordLength) {
                switch (toLower(pos)) {
                    // Open-vowel with written accent
                    case 'á': case 'à':
                    case 'é': case 'è':
                    case 'ó': case 'ò':
                    letterAccent = pos;
                    if (previous != 0) {
                        stressedFound    = true;
                    }
                    // Open-vowel
                    case 'a':
                    case 'e':
                    case 'o':
                        if (previous == 0) {    // Two open-vowels don't form syllable
                            if (aitch) pos--;
                            return pos;
                        } else {
                            pos++;
                        }

                        break;

                    // Close-vowel with written accent, can't be a triphthong, but would be a diphthong
                    case 'í': case 'ì':
                    case 'ú': case 'ù':
                    letterAccent = pos;

                    if (previous != 0) {  // Diphthong
                        stressedFound    = true;
                        pos++;
                    }
                    else if (aitch) pos--;

                    return pos;
                    // Close-vowel
                    case 'i':
                    case 'u': case 'ü':
                    if (pos < wordLength - 1) { // ¿Is there a third vowel?
                        if (!isConsonant(pos + 1)) {
                            if (toLower(pos - 1) == 'h') pos--;
                            return pos;
                        }
                    }

                    // Two equals close-vowels don't form diphthong
                    if (toLower(pos) != toLower(pos - 1)) pos++;

                    return pos;  // It is a descendent diphthong
                }
            }

            // Third vowel?
            if (pos < wordLength) {
                if ((toLower(pos) == 'i') || (toLower(pos) == 'u')) { // Close-vowel
                    pos++;
                    return pos;  // It is a triphthong
                }
            }

            return pos;
        }

        function coda(pos) {

            if (pos >= wordLength || !isConsonant(pos)) {
                return pos; // Syllable hasn't coda
            } else if (pos == wordLength - 1)  { // End of word
                pos++;
                return pos;
            }

            // If there is only a consonant between vowels, it belongs to the following syllable
            if (!isConsonant(pos + 1)) return pos;

            var c1 = toLower(pos);
            var c2 = toLower(pos + 1);

            // Has the syllable a third consecutive consonant?
            if (pos < wordLength - 2) {
                var c3 = toLower(pos + 2);

                if (!isConsonant(pos + 2)) { // There isn't third consonant
                    // The groups ll, ch and rr begin a syllable

                    if ((c1 == 'l') && (c2 == 'l')) return pos;
                    if ((c1 == 'c') && (c2 == 'h')) return pos;
                    if ((c1 == 'r') && (c2 == 'r')) return pos;

                    // A consonant + 'h' begins a syllable, except for groups sh and rh
                    if ((c1 != 's') && (c1 != 'r') &&
                        (c2 == 'h'))
                        return pos;

                    // If the letter 'y' is preceded by the some
                    // letter 's', 'l', 'r', 'n' or 'c' then
                    // a new syllable begins in the previous consonant
                    // else it begins in the letter 'y'
                    if ((c2 == 'y')) {
                        if ((c1 == 's') || (c1 == 'l') || (c1 == 'r') || (c1 == 'n') || (c1 == 'c')) {
                            return pos;
                        }
                        pos++;

                        return pos;
                    }

                    // groups: gl - kl - bl - vl - pl - fl - tl
                    if ((((c1 == 'b')||(c1 == 'v')||(c1 == 'c')||(c1 == 'k')||(c1 == 'f')||(c1 == 'g')||(c1 == 'p')||(c1 == 't'))&&(c2 == 'l'))) {
                        return pos;
                    }

                    // groups: gr - kr - dr - tr - br - vr - pr - fr
                    if ((((c1 == 'b')||(c1 == 'v')||(c1 == 'c')||(c1 == 'd')||(c1 == 'k')||(c1 == 'f')||(c1 == 'g')||(c1 == 'p')||(c1 == 't'))&&(c2 == 'r'))) {
                        return pos;
                    }

                    pos++;

                    return pos;

                } else { // There is a third consonant
                    if ((pos + 3) == wordLength) { // Three consonants to the end, foreign words?
                        if ((c2 == 'y')) {  // 'y' as vowel
                            if ((c1 == 's') || (c1 == 'l') || (c1 == 'r') || (c1 == 'n') || (c1 == 'c')) {
                                return pos;
                            }
                        }

                        if (c3 == 'y') { // 'y' at the end as vowel with c2
                            pos++;
                        }
                        else {  // Three consonants to the end, foreign words?
                            pos += 3;
                        }
                        return pos;
                    }

                    if ((c2 == 'y')) { // 'y' as vowel
                        if ((c1 == 's') || (c1 == 'l') || (c1 == 'r') || (c1 == 'n') || (c1 == 'c'))
                            return pos;

                        pos++;
                        return pos;
                    }

                    // The groups pt, ct, cn, ps, mn, gn, ft, pn, cz, tz and ts begin a syllable
                    // when preceded by other consonant

                    if ((c2 == 'p') && (c3 == 't') ||
                        (c2 == 'c') && (c3 == 't') ||
                        (c2 == 'c') && (c3 == 'n') ||
                        (c2 == 'p') && (c3 == 's') ||
                        (c2 == 'm') && (c3 == 'n') ||
                        (c2 == 'g') && (c3 == 'n') ||
                        (c2 == 'f') && (c3 == 't') ||
                        (c2 == 'p') && (c3 == 'n') ||
                        (c2 == 'c') && (c3 == 'z') ||
                        (c2 == 't') && (c3 == 's') ||
                        (c2 == 't') && (c3 == 's'))
                    {
                        pos++;
                        return pos;
                    }

                    if ((c3 == 'l') || (c3 == 'r') ||    // The consonantal groups formed by a consonant
                        // following the letter 'l' or 'r' cann't be
                        // separated and they always begin syllable
                        ((c2 == 'c') && (c3 == 'h')) ||  // 'ch'
                        (c3 == 'y')) {                   // 'y' as vowel
                        pos++;  // Following syllable begins in c2
                    }
                    else
                        pos += 2; // c3 begins the following syllable
                }
            }
            else {
                if ((c2 == 'y')) return pos;

                pos +=2; // The word ends with two consonants
            }

            return pos;
        }

        function toLower(pos) {
            return word[pos].toLowerCase();
        }

        function isConsonant(pos)
        {
            return !/[aeiouáéíóúàèìòùüAEIOUÁÉÍÓÚÀÈÌÒÙÜ]/.test(word[pos]);
        }

        process();

        //this.positions = function () {
         //   return positions;
        //};

        var syllables = [];

        for (var i = 0; i < positions.length; i++) {
            var start = positions[i];
            var end = wordLength;
            if (positions.length > i+1) {
                end = positions[i + 1];
            }
            var seq = word.slice(start, end).replace(/ /, '').toLowerCase();
            syllables.push(seq);
        }

        return syllables;
}

module.exports = syllabler;

},{}],16:[function(require,module,exports){
"use strict";

console.log("Extension loading...");
const jQuery = require("jquery");
const $ = jQuery;
const GmailFactory = require("gmail-js");
const lorca = require('lorca-nlp');
const LanguageDetect = require('languagedetect');
const gmail = new GmailFactory.Gmail($);
var sw = [];
var modelo_entrenado = "";
window.gmail = gmail;
const lngDetector = new LanguageDetect();



const danger = "<div class='row' id='alert-id'>\
                <div class='col s6 m6'>\
                    <div id='card-alert' class='card red'>\
                      <div class='card-content white-text'>\
                          <span class='card-title white-text darken-1'>\
                            <i class='material-icons left'>warning</i>\
                            PHISHING\
                          </span>\
                        <p>\
                        Este correo electrónico parece tener intensiones de phishing\
                        </p>\
                      </div>\
                      <div class='card-action red darken-2'>\
                        <a id='close_row' class='btn-small waves-effect light-blue white-text'><i class='material-icons left'>check</i> Parece seguro</a>\
                      </div>\
                    </div>\
                </div>\
                </div>";
               
const relax = "<div class='row' id='alert-id'>\
                <div class='col s6 m6'>\
                <div id='card-alert' class='card green'>\
                      <div class='card-content white-text'>\
                        <span class='card-title white-text darken-1'>\
                            <i class='material-icons left'>wb_sunny</i>\
                            NO PHISHING\
                          </span>\
                        <p>\
                        Este correo electrónico parece NO tener intensiones de phishing\
                        </p>\
                      </div>\
                      <div class='card-action green darken-2'>\
                        <a id='close_row' class='btn-small waves-effect light-blue white-text'><i class='material-icons left'>check</i> Ok</a>\
                        \
                      </div>\
                    </div>\
                </div>\
                </div>";

const noSpanish = "<div class='row' id='alert-id'>\
                <div class='col s6 m6'>\
                <div id='card-alert' class='card blue'>\
                      <div class='card-content white-text'>\
                        <span class='card-title white-text darken-1'>\
                            <i class='material-icons left'>language</i>\
                            Parece que este correo no está en español\
                      </div>\
                      <div class='card-action blue darken-2'>\
                        <a id='close_row' class='btn-small waves-effect light-green white-text'><i class='material-icons left'>check</i> Ok</a>\
                      </div>\
                    </div>\
                </div>\
                </div>";





function removeTags(str) {
      if ((str===null) || (str===''))
      return false;
      else
      str = str.toString();
      return str.replace( /(<([^>]+)>)/ig, '');
   }


document.addEventListener('yourCustomEvent', function (e)
{
    var url=e.detail;
    console.log("received "+url);
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, true);
    xhr.onreadystatechange = function()
{
    if(xhr.readyState == XMLHttpRequest.DONE && xhr.status == 200)
    {
        var stopwords = xhr.responseText.split('\n');
        var cleaned = cleanStopWords(stopwords);
        sw = cleaned; //leemos stopwords y elimnina ultimo caracter basura

    }
};
xhr.send();
});

document.addEventListener('getModelo_url', function (e)
{
    var url=e.detail;
    console.log("received "+url);
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, true);
    xhr.onreadystatechange = function()
{
    if(xhr.readyState == XMLHttpRequest.DONE && xhr.status == 200)
    {
        var modelo_json = xhr.responseText;
        //console.log(modelo_json);
        modelo_entrenado = JSON.parse(modelo_json)
    }
};
xhr.send();
});


function removeStopWords(tokens){
  var tokens_sin_stopwords = []

  for(var i = 0; i < tokens.length ; i++){
    if(sw.includes(tokens[i]) == false){
      tokens_sin_stopwords.push(tokens[i]);
    }
    else{
      console.log(tokens[i]);
    }
  }
  return tokens_sin_stopwords;
}

function cleanStopWords(stopwords){
  var cleaned = []
    for(var i= 0; i < stopwords.length ; i++){
      var aux = stopwords[i].substring(0,stopwords[i].length-1);
      //console.log(stopwords[i].length,aux.length);
        cleaned.push(aux);
    }
    return cleaned;

}



function cleanTokens(tokens){
  var cleaned = [];
  var format = /[ !@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]/;
  for(var i = 0 ; i < tokens.length ; i++){
    if(tokens[i].length <= 2 || format.test(tokens[i])){
      //console.log(tokens[i]);
    }
    else{
      cleaned.push(tokens[i]);
    }
  }

  return cleaned
}



function test(tokens){
  var p_p = modelo_entrenado.prior_phishing;
  var p_h = modelo_entrenado.prior_ham;
  //console.log(p_p);
  //console.log(p_h);

  var conditional_probability_phishing = 1;
    var conditional_probability_ham = 1;

  for(var i = 0; i < tokens.length ; i++){
    var probability = modelo_entrenado.p_phishing[tokens[i]]
    var probability_h = modelo_entrenado.p_ham[tokens[i]]
    if(probability != null){
      console.log("phishing",tokens[i],probability);
      conditional_probability_phishing *= probability;
    }
        else{
            var x = (modelo_entrenado.lambdaSmoothing) / (modelo_entrenado.totalOfPhishing + modelo_entrenado.totalOfFeatures*modelo_entrenado.lambdaSmoothing);
            console.log("NO ESTA EN PHISHING",tokens[i],x);
            conditional_probability_phishing *= x;
        }
    if(probability_h != null){
      conditional_probability_ham *= probability_h;
      console.log("ham",tokens[i],probability_h)
    }
        else{
            
            var x = (modelo_entrenado.lambdaSmoothing) / (modelo_entrenado.totalOfHam + modelo_entrenado.totalOfFeatures*modelo_entrenado.lambdaSmoothing);
            console.log("NO ESTA EN HAM",tokens[i],x);
            conditional_probability_ham*= x;
        }
  }
  
    var result_phishing = p_p*conditional_probability_phishing
    var result_ham = p_h*conditional_probability_ham
    console.log("conditional_probability_phishing",conditional_probability_phishing)
    console.log("conditional_probability_ham",conditional_probability_ham)
    console.log("R phishing ",result_phishing)
    console.log("R ham ", result_ham)
    console.log("suma: " ,result_phishing + result_ham)

    if(result_phishing > result_ham)
        return "phishing";
    else
        return "ham";
}

function testLog(tokens){
  var p_p = modelo_entrenado.prior_phishing;
  var p_h = modelo_entrenado.prior_ham;
  //console.log(p_p);
  //console.log(p_h);

  var conditional_probability_phishing = 0;
    var conditional_probability_ham = 0;

  for(var i = 0; i < tokens.length ; i++){
    var probability = modelo_entrenado.p_phishing[tokens[i]]
    var probability_h = modelo_entrenado.p_ham[tokens[i]]
    if(probability != null){
      console.log("phishing",tokens[i],probability);
      conditional_probability_phishing += Math.log(probability);
    }
        else{
            var x = (modelo_entrenado.lambdaSmoothing) / (modelo_entrenado.totalOfPhishing + modelo_entrenado.totalOfFeatures*modelo_entrenado.lambdaSmoothing);
            console.log("NO ESTA EN PHISHING",tokens[i],x);
            conditional_probability_phishing += Math.log(x);
        }
    if(probability_h != null){
      conditional_probability_ham += Math.log(probability_h);
      console.log("ham",tokens[i],probability_h)
    }
        else{
            
            var x = (modelo_entrenado.lambdaSmoothing) / (modelo_entrenado.totalOfHam + modelo_entrenado.totalOfFeatures*modelo_entrenado.lambdaSmoothing);
            console.log("NO ESTA EN HAM",tokens[i],x);
            conditional_probability_ham += Math.log(x);
        }
  }
  
    var result_phishing = Math.log(p_p) + conditional_probability_phishing
    var result_ham = Math.log(p_h) + conditional_probability_ham
    console.log("conditional_probability_phishing",conditional_probability_phishing)
    console.log("conditional_probability_ham",conditional_probability_ham)
    console.log("R phishing ",result_phishing)
    console.log("R ham ", result_ham)
    console.log("suma: " ,result_phishing + result_ham)

    if(result_phishing > result_ham)
        return "phishing";
    else
        return "ham";
}


gmail.observe.on("load", () => {
    const userEmail = gmail.get.user_email();
    console.log("Hello, " + userEmail + ". This is your extension talking!");

    gmail.observe.on("view_email", (domEmail) => {
        console.log("Looking at email:", domEmail);
        var email_id = gmail.get.thread_id() //get email id
      var email_dom = new gmail.dom.email(email_id); // get dom
    var body = email_dom.body();
        var body_without_tags = removeTags(body)//elimina etiquetas html
        var doc = lorca(body_without_tags);
        console.log(doc)
        var languajes = lngDetector.detect(body_without_tags,2);
  
        if(languajes[0][0] == "spanish" || languajes[0][1] == "spanish"){
            //var tokens = doc.uniqueWords().get(); //obtiene tokens unicos
            var tokens_stemmed = doc.words().stem().get() //obtiene tokens ya con stemming
            var tokens_sin_stopwords =  removeStopWords(tokens_stemmed); //quita stopwords
            var cleaned_tokens = cleanTokens(tokens_sin_stopwords); //elimina tokens con caracteres especiales y con tamaño menor de 2
            //console.log(tokens); //imprime tokens
            console.log(tokens_stemmed);
            console.log(tokens_sin_stopwords);
            console.log(cleaned_tokens);
            var set = new Set(cleaned_tokens);
            console.log(Array.from(set));
            if(testLog(Array.from(set))=="phishing"){

                email_dom.body(danger + body);
                document.getElementById("close_row").addEventListener("click", function cierra() {
                    document.getElementById("alert-id").style.display = "none";
                });
            }
            else{
                email_dom.body( relax + body);
                 document.getElementById("close_row").addEventListener("click", function cierra() {
                    document.getElementById("alert-id").style.display = "none";
                });
            }
        }
        else{
            email_dom.body(noSpanish + body);
            document.getElementById("close_row").addEventListener("click", function cierra() {
                    document.getElementById("alert-id").style.display = "none";
                });

        }
             

    });
});
},{"gmail-js":2,"jquery":3,"languagedetect":6,"lorca-nlp":12}]},{},[16]);
